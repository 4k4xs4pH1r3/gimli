function BestInPlaceEditor(e) {
  "use strict";
  (this.element = e),
    this.initOptions(),
    this.bindForm(),
    this.initPlaceHolder(),
    jQuery(this.activator).bind("click", { editor: this }, this.clickHandler);
}
function drawChart(e) {
  e = google.visualization.arrayToDataTable(e);
  const t = {
    width: 360,
    height: 120,
    greenFrom: 90,
    greenTo: 100,
    yellowFrom: 75,
    yellowTo: 90,
    minorTicks: 5,
  };
  new google.visualization.Gauge(document.getElementById("gauges")).draw(e, t);
}
!(function (e, t) {
  typeof module === "object" && typeof module.exports === "object"
    ? (module.exports = e.document
        ? t(e, !0)
        : function (e) {
            if (!e.document) {
              throw new Error("jQuery requires a window with a document");
            }
            return t(e);
          })
    : t(e);
})(typeof window !== "undefined" ? window : this, function (C, e) {
  function a(e) {
    const t = !!e && "length" in e && e.length;
    const n = pe.type(e);
    return (
      n !== "function" &&
      !pe.isWindow(e) &&
      (n === "array" ||
        t === 0 ||
        (typeof t === "number" && t > 0 && t - 1 in e))
    );
  }
  function t(e, n, i) {
    if (pe.isFunction(n)) {
      return pe.grep(e, function (e, t) {
        return !!n.call(e, t, e) !== i;
      });
    }
    if (n.nodeType) {
      return pe.grep(e, function (e) {
        return (e === n) !== i;
      });
    }
    if (typeof n === "string") {
      if (Ce.test(n)) return pe.filter(n, e, i);
      n = pe.filter(n, e);
    }
    return pe.grep(e, function (e) {
      return pe.inArray(e, n) > -1 !== i;
    });
  }
  function n(e, t) {
    for (; (e = e[t]) && e.nodeType !== 1; );
    return e;
  }
  function u(e) {
    const n = {};
    return (
      pe.each(e.match(Ee) || [], function (e, t) {
        n[t] = !0;
      }),
      n
    );
  }
  function r() {
    ie.addEventListener
      ? (ie.removeEventListener("DOMContentLoaded", o),
        C.removeEventListener("load", o))
      : (ie.detachEvent("onreadystatechange", o), C.detachEvent("onload", o));
  }
  function o() {
    (ie.addEventListener ||
      C.event.type === "load" ||
      ie.readyState === "complete") &&
      (r(), pe.ready());
  }
  function l(e, t, n) {
    if (n === undefined && e.nodeType === 1) {
      const i = "data-" + t.replace(Oe, "-$1").toLowerCase();
      if (typeof (n = e.getAttribute(i)) === "string") {
        try {
          n =
            n === "true" ||
            (n !== "false" &&
              (n === "null"
                ? null
                : +n + "" === n
                  ? +n
                  : Me.test(n)
                    ? pe.parseJSON(n)
                    : n));
        } catch (r) {}
        pe.data(e, t, n);
      } else n = undefined;
    }
    return n;
  }
  function c(e) {
    let t;
    for (t in e) {
      if ((t !== "data" || !pe.isEmptyObject(e[t])) && t !== "toJSON") {
        return !1;
      }
    }
    return !0;
  }
  function i(e, t, n, i) {
    if (Ae(e)) {
      let r;
      let o;
      const s = pe.expando;
      const a = e.nodeType;
      const l = a ? pe.cache : e;
      let c = a ? e[s] : e[s] && s;
      if (
        (c && l[c] && (i || l[c].data)) ||
        n !== undefined ||
        typeof t !== "string"
      ) {
        return (
          c || (c = a ? (e[s] = ne.pop() || pe.guid++) : s),
          l[c] || (l[c] = a ? {} : { toJSON: pe.noop }),
          (typeof t !== "object" && typeof t !== "function") ||
            (i
              ? (l[c] = pe.extend(l[c], t))
              : (l[c].data = pe.extend(l[c].data, t))),
          (o = l[c]),
          i || (o.data || (o.data = {}), (o = o.data)),
          n !== undefined && (o[pe.camelCase(t)] = n),
          typeof t === "string"
            ? (r = o[t]) == null && (r = o[pe.camelCase(t)])
            : (r = o),
          r
        );
      }
    }
  }
  function s(e, t, n) {
    if (Ae(e)) {
      let i;
      let r;
      const o = e.nodeType;
      const s = o ? pe.cache : e;
      const a = o ? e[pe.expando] : pe.expando;
      if (s[a]) {
        if (t && (i = n ? s[a] : s[a].data)) {
          r = (t = pe.isArray(t)
            ? t.concat(pe.map(t, pe.camelCase))
            : t in i
              ? [t]
              : (t = pe.camelCase(t)) in i
                ? [t]
                : t.split(" ")).length;
          for (; r--; ) delete i[t[r]];
          if (n ? !c(i) : !pe.isEmptyObject(i)) return;
        }
        (n || (delete s[a].data, c(s[a]))) &&
          (o
            ? pe.cleanData([e], !0)
            : de.deleteExpando || s != s.window
              ? delete s[a]
              : (s[a] = undefined));
      }
    }
  }
  function d(e, t, n, i) {
    let r;
    let o = 1;
    let s = 20;
    const a = i
      ? function () {
          return i.cur();
        }
      : function () {
          return pe.css(e, t, "");
        };
    const l = a();
    let c = (n && n[3]) || (pe.cssNumber[t] ? "" : "px");
    let u = (pe.cssNumber[t] || (c !== "px" && +l)) && Re.exec(pe.css(e, t));
    if (u && u[3] !== c) {
      for (
        c = c || u[3], n = n || [], u = +l || 1;
        (u /= o = o || ".5"),
          pe.style(e, t, u + c),
          o !== (o = a() / l) && o !== 1 && --s;

      );
    }
    return (
      n &&
        ((u = +u || +l || 0),
        (r = n[1] ? u + (n[1] + 1) * n[2] : +n[2]),
        i && ((i.unit = c), (i.start = u), (i.end = r))),
      r
    );
  }
  function m(e) {
    const t = Ke.split("|");
    const n = e.createDocumentFragment();
    if (n.createElement) for (; t.length; ) n.createElement(t.pop());
    return n;
  }
  function v(e, t) {
    let n;
    let i;
    let r = 0;
    let o =
      typeof e.getElementsByTagName !== "undefined"
        ? e.getElementsByTagName(t || "*")
        : typeof e.querySelectorAll !== "undefined"
          ? e.querySelectorAll(t || "*")
          : undefined;
    if (!o) {
      for (o = [], n = e.childNodes || e; (i = n[r]) != null; r++) {
        !t || pe.nodeName(i, t) ? o.push(i) : pe.merge(o, v(i, t));
      }
    }
    return t === undefined || (t && pe.nodeName(e, t)) ? pe.merge([e], o) : o;
  }
  function y(e, t) {
    for (var n, i = 0; (n = e[i]) != null; i++) {
      pe._data(n, "globalEval", !t || pe._data(t[i], "globalEval"));
    }
  }
  function b(e) {
    We.test(e.type) && (e.defaultChecked = e.checked);
  }
  function g(e, t, n, i, r) {
    for (
      var o, s, a, l, c, u, d, h = e.length, p = m(t), f = [], g = 0;
      g < h;
      g++
    ) {
      if ((s = e[g]) || s === 0) {
        if (pe.type(s) === "object") pe.merge(f, s.nodeType ? [s] : s);
        else if (Xe.test(s)) {
          for (
            l = l || p.appendChild(t.createElement("div")),
              c = (Be.exec(s) || ["", ""])[1].toLowerCase(),
              d = Ye[c] || Ye._default,
              l.innerHTML = d[1] + pe.htmlPrefilter(s) + d[2],
              o = d[0];
            o--;

          ) {
            l = l.lastChild;
          }
          if (
            (!de.leadingWhitespace &&
              Ve.test(s) &&
              f.push(t.createTextNode(Ve.exec(s)[0])),
            !de.tbody)
          ) {
            for (
              o =
                (s =
                  c !== "table" || Ge.test(s)
                    ? d[1] !== "<table>" || Ge.test(s)
                      ? 0
                      : l
                    : l.firstChild) && s.childNodes.length;
              o--;

            ) {
              pe.nodeName((u = s.childNodes[o]), "tbody") &&
                !u.childNodes.length &&
                s.removeChild(u);
            }
          }
          for (pe.merge(f, l.childNodes), l.textContent = ""; l.firstChild; ) {
            l.removeChild(l.firstChild);
          }
          l = p.lastChild;
        } else f.push(t.createTextNode(s));
      }
    }
    for (
      l && p.removeChild(l),
        de.appendChecked || pe.grep(v(f, "input"), b),
        g = 0;
      (s = f[g++]);

    ) {
      if (i && pe.inArray(s, i) > -1) r && r.push(s);
      else if (
        ((a = pe.contains(s.ownerDocument, s)),
        (l = v(p.appendChild(s), "script")),
        a && y(l),
        n)
      ) {
        for (o = 0; (s = l[o++]); ) Ue.test(s.type || "") && n.push(s);
      }
    }
    return (l = null), p;
  }
  function h() {
    return !0;
  }
  function p() {
    return !1;
  }
  function f() {
    try {
      return ie.activeElement;
    } catch (e) {}
  }
  function _(e, t, n, i, r, o) {
    let s, a;
    if (typeof t === "object") {
      for (a in (typeof n !== "string" && ((i = i || n), (n = undefined)), t)) {
        _(e, a, n, i, t[a], o);
      }
      return e;
    }
    if (
      (i == null && r == null
        ? ((r = n), (i = n = undefined))
        : r == null &&
          (typeof n === "string"
            ? ((r = i), (i = undefined))
            : ((r = i), (i = n), (n = undefined))),
      !1 === r)
    ) {
      r = p;
    } else if (!r) return e;
    return (
      o === 1 &&
        ((s = r),
        ((r = function (e) {
          return pe().off(e), s.apply(this, arguments);
        }).guid = s.guid || (s.guid = pe.guid++))),
      e.each(function () {
        pe.event.add(this, t, r, i, n);
      })
    );
  }
  function x(e, t) {
    return pe.nodeName(e, "table") &&
      pe.nodeName(t.nodeType !== 11 ? t : t.firstChild, "tr")
      ? e.getElementsByTagName("tbody")[0] ||
          e.appendChild(e.ownerDocument.createElement("tbody"))
      : e;
  }
  function w(e) {
    return (e.type = (pe.find.attr(e, "type") !== null) + "/" + e.type), e;
  }
  function k(e) {
    const t = at.exec(e.type);
    return t ? (e.type = t[1]) : e.removeAttribute("type"), e;
  }
  function S(e, t) {
    if (t.nodeType === 1 && pe.hasData(e)) {
      let n;
      let i;
      let r;
      const o = pe._data(e);
      const s = pe._data(t, o);
      const a = o.events;
      if (a) {
        for (n in (delete s.handle, (s.events = {}), a)) {
          for (i = 0, r = a[n].length; i < r; i++) pe.event.add(t, n, a[n][i]);
        }
      }
      s.data && (s.data = pe.extend({}, s.data));
    }
  }
  function T(e, t) {
    let n, i, r;
    if (t.nodeType === 1) {
      if (((n = t.nodeName.toLowerCase()), !de.noCloneEvent && t[pe.expando])) {
        for (i in (r = pe._data(t)).events) pe.removeEvent(t, i, r.handle);
        t.removeAttribute(pe.expando);
      }
      n === "script" && t.text !== e.text
        ? ((w(t).text = e.text), k(t))
        : n === "object"
          ? (t.parentNode && (t.outerHTML = e.outerHTML),
            de.html5Clone &&
              e.innerHTML &&
              !pe.trim(t.innerHTML) &&
              (t.innerHTML = e.innerHTML))
          : n === "input" && We.test(e.type)
            ? ((t.defaultChecked = t.checked = e.checked),
              t.value !== e.value && (t.value = e.value))
            : n === "option"
              ? (t.defaultSelected = t.selected = e.defaultSelected)
              : (n !== "input" && n !== "textarea") ||
                (t.defaultValue = e.defaultValue);
    }
  }
  function D(n, i, r, o) {
    i = oe.apply([], i);
    let e;
    let t;
    let s;
    let a;
    let l;
    let c;
    let u = 0;
    const d = n.length;
    const h = d - 1;
    const p = i[0];
    const f = pe.isFunction(p);
    if (f || (d > 1 && typeof p === "string" && !de.checkClone && st.test(p))) {
      return n.each(function (e) {
        const t = n.eq(e);
        f && (i[0] = p.call(this, e, t.html())), D(t, i, r, o);
      });
    }
    if (
      d &&
      ((e = (c = g(i, n[0].ownerDocument, !1, n, o)).firstChild),
      c.childNodes.length === 1 && (c = e),
      e || o)
    ) {
      for (s = (a = pe.map(v(c, "script"), w)).length; u < d; u++) {
        (t = c),
          u !== h &&
            ((t = pe.clone(t, !0, !0)), s && pe.merge(a, v(t, "script"))),
          r.call(n[u], t, u);
      }
      if (s) {
        for (
          l = a[a.length - 1].ownerDocument, pe.map(a, k), u = 0;
          u < s;
          u++
        ) {
          (t = a[u]),
            Ue.test(t.type || "") &&
              !pe._data(t, "globalEval") &&
              pe.contains(l, t) &&
              (t.src
                ? pe._evalUrl && pe._evalUrl(t.src)
                : pe.globalEval(
                    (t.text || t.textContent || t.innerHTML || "").replace(
                      lt,
                      "",
                    ),
                  ));
        }
      }
      c = e = null;
    }
    return n;
  }
  function j(e, t, n) {
    for (var i, r = t ? pe.filter(t, e) : e, o = 0; (i = r[o]) != null; o++) {
      n || i.nodeType !== 1 || pe.cleanData(v(i)),
        i.parentNode &&
          (n && pe.contains(i.ownerDocument, i) && y(v(i, "script")),
          i.parentNode.removeChild(i));
    }
    return e;
  }
  function N(e, t) {
    const n = pe(t.createElement(e)).appendTo(t.body);
    const i = pe.css(n[0], "display");
    return n.detach(), i;
  }
  function E(e) {
    let t = ie;
    let n = dt[e];
    return (
      n ||
        (((n = N(e, t)) !== "none" && n) ||
          ((t = (
            (ut = (
              ut || pe("<iframe frameborder='0' width='0' height='0'/>")
            ).appendTo(t.documentElement))[0].contentWindow ||
            ut[0].contentDocument
          ).document).write(),
          t.close(),
          (n = N(e, t)),
          ut.detach()),
        (dt[e] = n)),
      n
    );
  }
  function I(e, t) {
    return {
      get: function () {
        if (!e()) return (this.get = t).apply(this, arguments);
        delete this.get;
      },
    };
  }
  function A(e) {
    if (e in Tt) return e;
    for (let t = e.charAt(0).toUpperCase() + e.slice(1), n = St.length; n--; ) {
      if ((e = St[n] + t) in Tt) return e;
    }
  }
  function M(e, t) {
    for (var n, i, r, o = [], s = 0, a = e.length; s < a; s++) {
      (i = e[s]).style &&
        ((o[s] = pe._data(i, "olddisplay")),
        (n = i.style.display),
        t
          ? (o[s] || n !== "none" || (i.style.display = ""),
            i.style.display === "" &&
              qe(i) &&
              (o[s] = pe._data(i, "olddisplay", E(i.nodeName))))
          : ((r = qe(i)),
            ((n && n !== "none") || !r) &&
              pe._data(i, "olddisplay", r ? n : pe.css(i, "display"))));
    }
    for (s = 0; s < a; s++) {
      (i = e[s]).style &&
        ((t && i.style.display !== "none" && i.style.display !== "") ||
          (i.style.display = t ? o[s] || "" : "none"));
    }
    return e;
  }
  function O(e, t, n) {
    const i = wt.exec(t);
    return i ? Math.max(0, i[1] - (n || 0)) + (i[2] || "px") : t;
  }
  function P(e, t, n, i, r) {
    for (
      var o = n === (i ? "border" : "content") ? 4 : t === "width" ? 1 : 0,
        s = 0;
      o < 4;
      o += 2
    ) {
      n === "margin" && (s += pe.css(e, n + $e[o], !0, r)),
        i
          ? (n === "content" && (s -= pe.css(e, "padding" + $e[o], !0, r)),
            n !== "margin" &&
              (s -= pe.css(e, "border" + $e[o] + "Width", !0, r)))
          : ((s += pe.css(e, "padding" + $e[o], !0, r)),
            n !== "padding" &&
              (s += pe.css(e, "border" + $e[o] + "Width", !0, r)));
    }
    return s;
  }
  function F(e, t, n) {
    let i = !0;
    let r = t === "width" ? e.offsetWidth : e.offsetHeight;
    const o = mt(e);
    const s = de.boxSizing && pe.css(e, "boxSizing", !1, o) === "border-box";
    if (r <= 0 || r == null) {
      if (
        (((r = vt(e, t, o)) < 0 || r == null) && (r = e.style[t]), pt.test(r))
      ) {
        return r;
      }
      (i = s && (de.boxSizingReliable() || r === e.style[t])),
        (r = parseFloat(r) || 0);
    }
    return r + P(e, t, n || (s ? "border" : "content"), i, o) + "px";
  }
  function L(e, t, n, i, r) {
    return new L.prototype.init(e, t, n, i, r);
  }
  function H() {
    return (
      C.setTimeout(function () {
        Dt = undefined;
      }),
      (Dt = pe.now())
    );
  }
  function R(e, t) {
    let n;
    const i = { height: e };
    let r = 0;
    for (t = t ? 1 : 0; r < 4; r += 2 - t) {
      i["margin" + (n = $e[r])] = i["padding" + n] = e;
    }
    return t && (i.opacity = i.width = e), i;
  }
  function $(e, t, n) {
    for (
      var i,
        r = (W.tweeners[t] || []).concat(W.tweeners["*"]),
        o = 0,
        s = r.length;
      o < s;
      o++
    ) {
      if ((i = r[o].call(n, t, e))) return i;
    }
  }
  function q(t, e, n) {
    let i;
    let r;
    let o;
    let s;
    let a;
    let l;
    let c;
    const u = this;
    const d = {};
    const h = t.style;
    let p = t.nodeType && qe(t);
    let f = pe._data(t, "fxshow");
    for (i in (n.queue ||
      ((a = pe._queueHooks(t, "fx")).unqueued == null &&
        ((a.unqueued = 0),
        (l = a.empty.fire),
        (a.empty.fire = function () {
          a.unqueued || l();
        })),
      a.unqueued++,
      u.always(function () {
        u.always(function () {
          a.unqueued--, pe.queue(t, "fx").length || a.empty.fire();
        });
      })),
    t.nodeType === 1 &&
      ("height" in e || "width" in e) &&
      ((n.overflow = [h.overflow, h.overflowX, h.overflowY]),
      ((c = pe.css(t, "display")) === "none"
        ? pe._data(t, "olddisplay") || E(t.nodeName)
        : c) === "inline" &&
        pe.css(t, "float") === "none" &&
        (de.inlineBlockNeedsLayout && E(t.nodeName) !== "inline"
          ? (h.zoom = 1)
          : (h.display = "inline-block"))),
    n.overflow &&
      ((h.overflow = "hidden"),
      de.shrinkWrapBlocks() ||
        u.always(function () {
          (h.overflow = n.overflow[0]),
            (h.overflowX = n.overflow[1]),
            (h.overflowY = n.overflow[2]);
        })),
    e)) {
      if (((r = e[i]), Ot.exec(r))) {
        if (
          (delete e[i], (o = o || r === "toggle"), r === (p ? "hide" : "show"))
        ) {
          if (r !== "show" || !f || f[i] === undefined) continue;
          p = !0;
        }
        d[i] = (f && f[i]) || pe.style(t, i);
      } else c = undefined;
    }
    if (pe.isEmptyObject(d)) {
      (c === "none" ? E(t.nodeName) : c) === "inline" && (h.display = c);
    } else {
      for (i in (f
        ? "hidden" in f && (p = f.hidden)
        : (f = pe._data(t, "fxshow", {})),
      o && (f.hidden = !p),
      p
        ? pe(t).show()
        : u.done(function () {
            pe(t).hide();
          }),
      u.done(function () {
        let e;
        for (e in (pe._removeData(t, "fxshow"), d)) pe.style(t, e, d[e]);
      }),
      d)) {
        (s = $(p ? f[i] : 0, i, u)),
          i in f ||
            ((f[i] = s.start),
            p &&
              ((s.end = s.start),
              (s.start = i === "width" || i === "height" ? 1 : 0)));
      }
    }
  }
  function z(e, t) {
    let n, i, r, o, s;
    for (n in e) {
      if (
        ((r = t[(i = pe.camelCase(n))]),
        (o = e[n]),
        pe.isArray(o) && ((r = o[1]), (o = e[n] = o[0])),
        n !== i && ((e[i] = o), delete e[n]),
        (s = pe.cssHooks[i]) && "expand" in s)
      ) {
        for (n in ((o = s.expand(o)), delete e[i], o)) {
          n in e || ((e[n] = o[n]), (t[n] = r));
        }
      } else t[i] = r;
    }
  }
  function W(o, e, t) {
    let n;
    let s;
    let i = 0;
    const r = W.prefilters.length;
    const a = pe.Deferred().always(function () {
      delete l.elem;
    });
    var l = function () {
      if (s) return !1;
      for (
        var e = Dt || H(),
          t = Math.max(0, c.startTime + c.duration - e),
          n = 1 - (t / c.duration || 0),
          i = 0,
          r = c.tweens.length;
        i < r;
        i++
      ) {
        c.tweens[i].run(n);
      }
      return (
        a.notifyWith(o, [c, n, t]), n < 1 && r ? t : (a.resolveWith(o, [c]), !1)
      );
    };
    var c = a.promise({
      elem: o,
      props: pe.extend({}, e),
      opts: pe.extend(!0, { specialEasing: {}, easing: pe.easing._default }, t),
      originalProperties: e,
      originalOptions: t,
      startTime: Dt || H(),
      duration: t.duration,
      tweens: [],
      createTween: function (e, t) {
        const n = pe.Tween(
          o,
          c.opts,
          e,
          t,
          c.opts.specialEasing[e] || c.opts.easing,
        );
        return c.tweens.push(n), n;
      },
      stop: function (e) {
        let t = 0;
        const n = e ? c.tweens.length : 0;
        if (s) return this;
        for (s = !0; t < n; t++) c.tweens[t].run(1);
        return (
          e
            ? (a.notifyWith(o, [c, 1, 0]), a.resolveWith(o, [c, e]))
            : a.rejectWith(o, [c, e]),
          this
        );
      },
    });
    const u = c.props;
    for (z(u, c.opts.specialEasing); i < r; i++) {
      if ((n = W.prefilters[i].call(c, o, u, c.opts))) {
        return (
          pe.isFunction(n.stop) &&
            (pe._queueHooks(c.elem, c.opts.queue).stop = pe.proxy(n.stop, n)),
          n
        );
      }
    }
    return (
      pe.map(u, $, c),
      pe.isFunction(c.opts.start) && c.opts.start.call(o, c),
      pe.fx.timer(pe.extend(l, { elem: o, anim: c, queue: c.opts.queue })),
      c
        .progress(c.opts.progress)
        .done(c.opts.done, c.opts.complete)
        .fail(c.opts.fail)
        .always(c.opts.always)
    );
  }
  function B(e) {
    return pe.attr(e, "class") || "";
  }
  function U(o) {
    return function (e, t) {
      typeof e !== "string" && ((t = e), (e = "*"));
      let n;
      let i = 0;
      const r = e.toLowerCase().match(Ee) || [];
      if (pe.isFunction(t)) {
        for (; (n = r[i++]); ) {
          n.charAt(0) === "+"
            ? ((n = n.slice(1) || "*"), (o[n] = o[n] || []).unshift(t))
            : (o[n] = o[n] || []).push(t);
        }
      }
    };
  }
  function V(t, r, o, s) {
    function a(e) {
      let i;
      return (
        (l[e] = !0),
        pe.each(t[e] || [], function (e, t) {
          const n = t(r, o, s);
          return typeof n !== "string" || c || l[n]
            ? c
              ? !(i = n)
              : void 0
            : (r.dataTypes.unshift(n), a(n), !1);
        }),
        i
      );
    }
    var l = {};
    var c = t === sn;
    return a(r.dataTypes[0]) || (!l["*"] && a("*"));
  }
  function K(e, t) {
    let n;
    let i;
    const r = pe.ajaxSettings.flatOptions || {};
    for (i in t) t[i] !== undefined && ((r[i] ? e : n || (n = {}))[i] = t[i]);
    return n && pe.extend(!0, e, n), e;
  }
  function Y(e, t, n) {
    for (var i, r, o, s, a = e.contents, l = e.dataTypes; l[0] === "*"; ) {
      l.shift(),
        r === undefined &&
          (r = e.mimeType || t.getResponseHeader("Content-Type"));
    }
    if (r) {
      for (s in a) {
        if (a[s] && a[s].test(r)) {
          l.unshift(s);
          break;
        }
      }
    }
    if (l[0] in n) o = l[0];
    else {
      for (s in n) {
        if (!l[0] || e.converters[s + " " + l[0]]) {
          o = s;
          break;
        }
        i || (i = s);
      }
      o = o || i;
    }
    if (o) return o !== l[0] && l.unshift(o), n[o];
  }
  function X(e, t, n, i) {
    let r;
    let o;
    let s;
    let a;
    let l;
    const c = {};
    const u = e.dataTypes.slice();
    if (u[1]) for (s in e.converters) c[s.toLowerCase()] = e.converters[s];
    for (o = u.shift(); o; ) {
      if (
        (e.responseFields[o] && (n[e.responseFields[o]] = t),
        !l && i && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
        (l = o),
        (o = u.shift()))
      ) {
        if (o === "*") o = l;
        else if (l !== "*" && l !== o) {
          if (!(s = c[l + " " + o] || c["* " + o])) {
            for (r in c) {
              if (
                (a = r.split(" "))[1] === o &&
                (s = c[l + " " + a[0]] || c["* " + a[0]])
              ) {
                !0 === s
                  ? (s = c[r])
                  : !0 !== c[r] && ((o = a[0]), u.unshift(a[1]));
                break;
              }
            }
          }
          if (!0 !== s) {
            if (s && e.throws) t = s(t);
            else {
              try {
                t = s(t);
              } catch (d) {
                return {
                  state: "parsererror",
                  error: s ? d : "No conversion from " + l + " to " + o,
                };
              }
            }
          }
        }
      }
    }
    return { state: "success", data: t };
  }
  function G(e) {
    return (e.style && e.style.display) || pe.css(e, "display");
  }
  function Q(e) {
    if (!pe.contains(e.ownerDocument || ie, e)) return !0;
    for (; e && e.nodeType === 1; ) {
      if (G(e) === "none" || e.type === "hidden") return !0;
      e = e.parentNode;
    }
    return !1;
  }
  function J(n, e, i, r) {
    let t;
    if (pe.isArray(e)) {
      pe.each(e, function (e, t) {
        i || dn.test(n)
          ? r(n, t)
          : J(
              n + "[" + (typeof t === "object" && t != null ? e : "") + "]",
              t,
              i,
              r,
            );
      });
    } else if (i || pe.type(e) !== "object") r(n, e);
    else for (t in e) J(n + "[" + t + "]", e[t], i, r);
  }
  function Z() {
    try {
      return new C.XMLHttpRequest();
    } catch (e) {}
  }
  function ee() {
    try {
      return new C.ActiveXObject("Microsoft.XMLHTTP");
    } catch (e) {}
  }
  function te(e) {
    return pe.isWindow(e)
      ? e
      : e.nodeType === 9 && (e.defaultView || e.parentWindow);
  }
  var ne = [];
  var ie = C.document;
  const re = ne.slice;
  var oe = ne.concat;
  const se = ne.push;
  const ae = ne.indexOf;
  const le = {};
  const ce = le.toString;
  const ue = le.hasOwnProperty;
  var de = {};
  const he = "1.12.4";
  var pe = function (e, t) {
    return new pe.fn.init(e, t);
  };
  const fe = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
  const ge = /^-ms-/;
  const me = /-([\da-z])/gi;
  const ve = function (e, t) {
    return t.toUpperCase();
  };
  (pe.fn = pe.prototype =
    {
      jquery: he,
      constructor: pe,
      selector: "",
      length: 0,
      toArray: function () {
        return re.call(this);
      },
      get: function (e) {
        return e != null
          ? e < 0
            ? this[e + this.length]
            : this[e]
          : re.call(this);
      },
      pushStack: function (e) {
        const t = pe.merge(this.constructor(), e);
        return (t.prevObject = this), (t.context = this.context), t;
      },
      each: function (e) {
        return pe.each(this, e);
      },
      map: function (n) {
        return this.pushStack(
          pe.map(this, function (e, t) {
            return n.call(e, t, e);
          }),
        );
      },
      slice: function () {
        return this.pushStack(re.apply(this, arguments));
      },
      first: function () {
        return this.eq(0);
      },
      last: function () {
        return this.eq(-1);
      },
      eq: function (e) {
        const t = this.length;
        const n = +e + (e < 0 ? t : 0);
        return this.pushStack(n >= 0 && n < t ? [this[n]] : []);
      },
      end: function () {
        return this.prevObject || this.constructor();
      },
      push: se,
      sort: ne.sort,
      splice: ne.splice,
    }),
    (pe.extend = pe.fn.extend =
      function (e) {
        let t;
        let n;
        let i;
        let r;
        let o;
        let s;
        let a = e || {};
        let l = 1;
        const c = arguments.length;
        let u = !1;
        for (
          typeof a === "boolean" && ((u = a), (a = arguments[l] || {}), l++),
            typeof a === "object" || pe.isFunction(a) || (a = {}),
            l === c && ((a = this), l--);
          l < c;
          l++
        ) {
          if ((o = arguments[l]) != null) {
            for (r in o) {
              (t = a[r]),
                a !== (i = o[r]) &&
                  (u && i && (pe.isPlainObject(i) || (n = pe.isArray(i)))
                    ? (n
                        ? ((n = !1), (s = t && pe.isArray(t) ? t : []))
                        : (s = t && pe.isPlainObject(t) ? t : {}),
                      (a[r] = pe.extend(u, s, i)))
                    : i !== undefined && (a[r] = i));
            }
          }
        }
        return a;
      }),
    pe.extend({
      expando: "jQuery" + (he + Math.random()).replace(/\D/g, ""),
      isReady: !0,
      error: function (e) {
        throw new Error(e);
      },
      noop: function () {},
      isFunction: function (e) {
        return pe.type(e) === "function";
      },
      isArray:
        Array.isArray ||
        function (e) {
          return pe.type(e) === "array";
        },
      isWindow: function (e) {
        return e != null && e == e.window;
      },
      isNumeric: function (e) {
        const t = e && e.toString();
        return !pe.isArray(e) && t - parseFloat(t) + 1 >= 0;
      },
      isEmptyObject: function (e) {
        let t;
        for (t in e) return !1;
        return !0;
      },
      isPlainObject: function (e) {
        let t;
        if (!e || pe.type(e) !== "object" || e.nodeType || pe.isWindow(e)) {
          return !1;
        }
        try {
          if (
            e.constructor &&
            !ue.call(e, "constructor") &&
            !ue.call(e.constructor.prototype, "isPrototypeOf")
          ) {
            return !1;
          }
        } catch (n) {
          return !1;
        }
        if (!de.ownFirst) for (t in e) return ue.call(e, t);
        for (t in e);
        return t === undefined || ue.call(e, t);
      },
      type: function (e) {
        return e == null
          ? e + ""
          : typeof e === "object" || typeof e === "function"
            ? le[ce.call(e)] || "object"
            : typeof e;
      },
      globalEval: function (e) {
        e &&
          pe.trim(e) &&
          (
            C.execScript ||
            function (e) {
              C.eval.call(C, e);
            }
          )(e);
      },
      camelCase: function (e) {
        return e.replace(ge, "ms-").replace(me, ve);
      },
      nodeName: function (e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
      },
      each: function (e, t) {
        let n;
        let i = 0;
        if (a(e)) {
          for (n = e.length; i < n && !1 !== t.call(e[i], i, e[i]); i++);
        } else for (i in e) if (!1 === t.call(e[i], i, e[i])) break;
        return e;
      },
      trim: function (e) {
        return e == null ? "" : (e + "").replace(fe, "");
      },
      makeArray: function (e, t) {
        const n = t || [];
        return (
          e != null &&
            (a(Object(e))
              ? pe.merge(n, typeof e === "string" ? [e] : e)
              : se.call(n, e)),
          n
        );
      },
      inArray: function (e, t, n) {
        let i;
        if (t) {
          if (ae) return ae.call(t, e, n);
          for (
            i = t.length, n = n ? (n < 0 ? Math.max(0, i + n) : n) : 0;
            n < i;
            n++
          ) {
            if (n in t && t[n] === e) return n;
          }
        }
        return -1;
      },
      merge: function (e, t) {
        for (var n = +t.length, i = 0, r = e.length; i < n; ) e[r++] = t[i++];
        if (n != n) for (; t[i] !== undefined; ) e[r++] = t[i++];
        return (e.length = r), e;
      },
      grep: function (e, t, n) {
        for (var i = [], r = 0, o = e.length, s = !n; r < o; r++) {
          !t(e[r], r) !== s && i.push(e[r]);
        }
        return i;
      },
      map: function (e, t, n) {
        let i;
        let r;
        let o = 0;
        const s = [];
        if (a(e)) {
          for (i = e.length; o < i; o++) {
            (r = t(e[o], o, n)) != null && s.push(r);
          }
        } else for (o in e) (r = t(e[o], o, n)) != null && s.push(r);
        return oe.apply([], s);
      },
      guid: 1,
      proxy: function (e, t) {
        let n, i, r;
        return (
          typeof t === "string" && ((r = e[t]), (t = e), (e = r)),
          pe.isFunction(e)
            ? ((n = re.call(arguments, 2)),
              ((i = function () {
                return e.apply(t || this, n.concat(re.call(arguments)));
              }).guid = e.guid =
                e.guid || pe.guid++),
              i)
            : undefined
        );
      },
      now: function () {
        return +new Date();
      },
      support: de,
    }),
    typeof Symbol === "function" &&
      (pe.fn[Symbol.iterator] = ne[Symbol.iterator]),
    pe.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " ",
      ),
      function (e, t) {
        le["[object " + t + "]"] = t.toLowerCase();
      },
    );
  const ye = (function (n) {
    function _(e, t, n, i) {
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d;
      let h = t && t.ownerDocument;
      const p = t ? t.nodeType : 9;
      if (
        ((n = n || []),
        typeof e !== "string" || !e || (p !== 1 && p !== 9 && p !== 11))
      ) {
        return n;
      }
      if (
        !i &&
        ((t ? t.ownerDocument || t : $) !== A && I(t), (t = t || A), O)
      ) {
        if (p !== 11 && (c = ve.exec(e))) {
          if ((r = c[1])) {
            if (p === 9) {
              if (!(s = t.getElementById(r))) return n;
              if (s.id === r) return n.push(s), n;
            } else if (
              h &&
              (s = h.getElementById(r)) &&
              H(t, s) &&
              s.id === r
            ) {
              return n.push(s), n;
            }
          } else {
            if (c[2]) return J.apply(n, t.getElementsByTagName(e)), n;
            if (
              (r = c[3]) &&
              v.getElementsByClassName &&
              t.getElementsByClassName
            ) {
              return J.apply(n, t.getElementsByClassName(r)), n;
            }
          }
        }
        if (v.qsa && !U[e + " "] && (!P || !P.test(e))) {
          if (p !== 1) (h = t), (d = e);
          else if (t.nodeName.toLowerCase() !== "object") {
            for (
              (a = t.getAttribute("id"))
                ? (a = a.replace(be, "\\$&"))
                : t.setAttribute("id", (a = R)),
                o = (u = S(e)).length,
                l = he.test(a) ? "#" + a : "[id='" + a + "']";
              o--;

            ) {
              u[o] = l + " " + m(u[o]);
            }
            (d = u.join(",")), (h = (ye.test(e) && g(t.parentNode)) || t);
          }
          if (d) {
            try {
              return J.apply(n, h.querySelectorAll(d)), n;
            } catch (f) {
            } finally {
              a === R && t.removeAttribute("id");
            }
          }
        }
      }
      return D(e.replace(ae, "$1"), t, n, i);
    }
    function e() {
      function n(e, t) {
        return (
          i.push(e + " ") > w.cacheLength && delete n[i.shift()],
          (n[e + " "] = t)
        );
      }
      var i = [];
      return n;
    }
    function l(e) {
      return (e[R] = !0), e;
    }
    function r(e) {
      let t = A.createElement("div");
      try {
        return !!e(t);
      } catch (n) {
        return !1;
      } finally {
        t.parentNode && t.parentNode.removeChild(t), (t = null);
      }
    }
    function t(e, t) {
      for (let n = e.split("|"), i = n.length; i--; ) w.attrHandle[n[i]] = t;
    }
    function c(e, t) {
      let n = t && e;
      const i =
        n &&
        e.nodeType === 1 &&
        t.nodeType === 1 &&
        (~t.sourceIndex || K) - (~e.sourceIndex || K);
      if (i) return i;
      if (n) for (; (n = n.nextSibling); ) if (n === t) return -1;
      return e ? 1 : -1;
    }
    function i(t) {
      return function (e) {
        return e.nodeName.toLowerCase() === "input" && e.type === t;
      };
    }
    function o(n) {
      return function (e) {
        const t = e.nodeName.toLowerCase();
        return (t === "input" || t === "button") && e.type === n;
      };
    }
    function s(s) {
      return l(function (o) {
        return (
          (o = +o),
          l(function (e, t) {
            for (var n, i = s([], e.length, o), r = i.length; r--; ) {
              e[(n = i[r])] && (e[n] = !(t[n] = e[n]));
            }
          })
        );
      });
    }
    function g(e) {
      return e && typeof e.getElementsByTagName !== "undefined" && e;
    }
    function a() {}
    function m(e) {
      for (var t = 0, n = e.length, i = ""; t < n; t++) i += e[t].value;
      return i;
    }
    function d(a, e, t) {
      const l = e.dir;
      const c = t && l === "parentNode";
      const u = z++;
      return e.first
        ? function (e, t, n) {
            for (; (e = e[l]); ) if (e.nodeType === 1 || c) return a(e, t, n);
          }
        : function (e, t, n) {
            let i;
            let r;
            let o;
            const s = [q, u];
            if (n) {
              for (; (e = e[l]); ) {
                if ((e.nodeType === 1 || c) && a(e, t, n)) return !0;
              }
            } else {
              for (; (e = e[l]); ) {
                if (e.nodeType === 1 || c) {
                  if (
                    (i = (r =
                      (o = e[R] || (e[R] = {}))[e.uniqueID] ||
                      (o[e.uniqueID] = {}))[l]) &&
                    i[0] === q &&
                    i[1] === u
                  ) {
                    return (s[2] = i[2]);
                  }
                  if (((r[l] = s)[2] = a(e, t, n))) return !0;
                }
              }
            }
          };
    }
    function h(r) {
      return r.length > 1
        ? function (e, t, n) {
            for (let i = r.length; i--; ) if (!r[i](e, t, n)) return !1;
            return !0;
          }
        : r[0];
    }
    function y(e, t, n) {
      for (let i = 0, r = t.length; i < r; i++) _(e, t[i], n);
      return n;
    }
    function x(e, t, n, i, r) {
      for (var o, s = [], a = 0, l = e.length, c = t != null; a < l; a++) {
        (o = e[a]) && ((n && !n(o, i, r)) || (s.push(o), c && t.push(a)));
      }
      return s;
    }
    function b(p, f, g, m, v, e) {
      return (
        m && !m[R] && (m = b(m)),
        v && !v[R] && (v = b(v, e)),
        l(function (e, t, n, i) {
          let r;
          let o;
          let s;
          const a = [];
          const l = [];
          const c = t.length;
          const u = e || y(f || "*", n.nodeType ? [n] : n, []);
          const d = !p || (!e && f) ? u : x(u, a, p, n, i);
          let h = g ? (v || (e ? p : c || m) ? [] : t) : d;
          if ((g && g(d, h, n, i), m)) {
            for (r = x(h, l), m(r, [], n, i), o = r.length; o--; ) {
              (s = r[o]) && (h[l[o]] = !(d[l[o]] = s));
            }
          }
          if (e) {
            if (v || p) {
              if (v) {
                for (r = [], o = h.length; o--; ) {
                  (s = h[o]) && r.push((d[o] = s));
                }
                v(null, (h = []), r, i);
              }
              for (o = h.length; o--; ) {
                (s = h[o]) &&
                  (r = v ? ee(e, s) : a[o]) > -1 &&
                  (e[r] = !(t[r] = s));
              }
            }
          } else {
            (h = x(h === t ? h.splice(c, h.length) : h)),
              v ? v(null, t, h, i) : J.apply(t, h);
          }
        })
      );
    }
    function p(e) {
      for (
        var r,
          t,
          n,
          i = e.length,
          o = w.relative[e[0].type],
          s = o || w.relative[" "],
          a = o ? 1 : 0,
          l = d(
            function (e) {
              return e === r;
            },
            s,
            !0,
          ),
          c = d(
            function (e) {
              return ee(r, e) > -1;
            },
            s,
            !0,
          ),
          u = [
            function (e, t, n) {
              const i =
                (!o && (n || t !== j)) ||
                ((r = t).nodeType ? l(e, t, n) : c(e, t, n));
              return (r = null), i;
            },
          ];
        a < i;
        a++
      ) {
        if ((t = w.relative[e[a].type])) u = [d(h(u), t)];
        else {
          if ((t = w.filter[e[a].type].apply(null, e[a].matches))[R]) {
            for (n = ++a; n < i && !w.relative[e[n].type]; n++);
            return b(
              a > 1 && h(u),
              a > 1 &&
                m(
                  e
                    .slice(0, a - 1)
                    .concat({ value: e[a - 2].type === " " ? "*" : "" }),
                ).replace(ae, "$1"),
              t,
              a < n && p(e.slice(a, n)),
              n < i && p((e = e.slice(n))),
              n < i && m(e),
            );
          }
          u.push(t);
        }
      }
      return h(u);
    }
    function u(m, v) {
      const y = v.length > 0;
      const b = m.length > 0;
      const e = function (e, t, n, i, r) {
        let o;
        let s;
        let a;
        let l = 0;
        let c = "0";
        const u = e && [];
        let d = [];
        const h = j;
        const p = e || (b && w.find.TAG("*", r));
        const f = (q += h == null ? 1 : Math.random() || 0.1);
        const g = p.length;
        for (r && (j = t === A || t || r); c !== g && (o = p[c]) != null; c++) {
          if (b && o) {
            for (
              s = 0, t || o.ownerDocument === A || (I(o), (n = !O));
              (a = m[s++]);

            ) {
              if (a(o, t || A, n)) {
                i.push(o);
                break;
              }
            }
            r && (q = f);
          }
          y && ((o = !a && o) && l--, e && u.push(o));
        }
        if (((l += c), y && c !== l)) {
          for (s = 0; (a = v[s++]); ) a(u, d, t, n);
          if (e) {
            if (l > 0) for (; c--; ) u[c] || d[c] || (d[c] = G.call(i));
            d = x(d);
          }
          J.apply(i, d),
            r && !e && d.length > 0 && l + v.length > 1 && _.uniqueSort(i);
        }
        return r && ((q = f), (j = h)), u;
      };
      return y ? l(e) : e;
    }
    let f;
    let v;
    let w;
    let C;
    let k;
    let S;
    let T;
    let D;
    let j;
    let N;
    let E;
    let I;
    let A;
    let M;
    let O;
    let P;
    let F;
    let L;
    let H;
    var R = "sizzle" + 1 * new Date();
    var $ = n.document;
    var q = 0;
    var z = 0;
    const W = e();
    const B = e();
    var U = e();
    let V = function (e, t) {
      return e === t && (E = !0), 0;
    };
    var K = 1 << 31;
    const Y = {}.hasOwnProperty;
    let X = [];
    var G = X.pop;
    const Q = X.push;
    var J = X.push;
    const Z = X.slice;
    var ee = function (e, t) {
      for (let n = 0, i = e.length; n < i; n++) if (e[n] === t) return n;
      return -1;
    };
    const te =
      "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped";
    const ne = "[\\x20\\t\\r\\n\\f]";
    const ie = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+";
    const re =
      "\\[" +
      ne +
      "*(" +
      ie +
      ")(?:" +
      ne +
      "*([*^$|!~]?=)" +
      ne +
      "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
      ie +
      "))|)" +
      ne +
      "*\\]";
    const oe =
      ":(" +
      ie +
      ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
      re +
      ")*)|.*)\\)|)";
    const se = new RegExp(ne + "+", "g");
    var ae = new RegExp(
      "^" + ne + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ne + "+$",
      "g",
    );
    const le = new RegExp("^" + ne + "*," + ne + "*");
    const ce = new RegExp("^" + ne + "*([>+~]|" + ne + ")" + ne + "*");
    const ue = new RegExp("=" + ne + "*([^\\]'\"]*?)" + ne + "*\\]", "g");
    const de = new RegExp(oe);
    var he = new RegExp("^" + ie + "$");
    const pe = {
      ID: new RegExp("^#(" + ie + ")"),
      CLASS: new RegExp("^\\.(" + ie + ")"),
      TAG: new RegExp("^(" + ie + "|[*])"),
      ATTR: new RegExp("^" + re),
      PSEUDO: new RegExp("^" + oe),
      CHILD: new RegExp(
        "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
          ne +
          "*(even|odd|(([+-]|)(\\d*)n|)" +
          ne +
          "*(?:([+-]|)" +
          ne +
          "*(\\d+)|))" +
          ne +
          "*\\)|)",
        "i",
      ),
      bool: new RegExp("^(?:" + te + ")$", "i"),
      needsContext: new RegExp(
        "^" +
          ne +
          "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
          ne +
          "*((?:-\\d)?\\d*)" +
          ne +
          "*\\)|)(?=[^-]|$)",
        "i",
      ),
    };
    const fe = /^(?:input|select|textarea|button)$/i;
    const ge = /^h\d$/i;
    const me = /^[^{]+\{\s*\[native \w/;
    var ve = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/;
    var ye = /[+~]/;
    var be = /'|\\/g;
    const _e = new RegExp(
      "\\\\([\\da-f]{1,6}" + ne + "?|(" + ne + ")|.)",
      "ig",
    );
    const xe = function (e, t, n) {
      const i = "0x" + t - 65536;
      return i != i || n
        ? t
        : i < 0
          ? String.fromCharCode(i + 65536)
          : String.fromCharCode((i >> 10) | 55296, (1023 & i) | 56320);
    };
    const we = function () {
      I();
    };
    try {
      J.apply((X = Z.call($.childNodes)), $.childNodes),
        X[$.childNodes.length].nodeType;
    } catch (Ce) {
      J = {
        apply: X.length
          ? function (e, t) {
              Q.apply(e, Z.call(t));
            }
          : function (e, t) {
              for (var n = e.length, i = 0; (e[n++] = t[i++]); );
              e.length = n - 1;
            },
      };
    }
    for (f in ((v = _.support = {}),
    (k = _.isXML =
      function (e) {
        const t = e && (e.ownerDocument || e).documentElement;
        return !!t && t.nodeName !== "HTML";
      }),
    (I = _.setDocument =
      function (e) {
        let t;
        let n;
        const i = e ? e.ownerDocument || e : $;
        return (
          i !== A &&
            i.nodeType === 9 &&
            i.documentElement &&
            ((M = (A = i).documentElement),
            (O = !k(A)),
            (n = A.defaultView) &&
              n.top !== n &&
              (n.addEventListener
                ? n.addEventListener("unload", we, !1)
                : n.attachEvent && n.attachEvent("onunload", we)),
            (v.attributes = r(function (e) {
              return (e.className = "i"), !e.getAttribute("className");
            })),
            (v.getElementsByTagName = r(function (e) {
              return (
                e.appendChild(A.createComment("")),
                !e.getElementsByTagName("*").length
              );
            })),
            (v.getElementsByClassName = me.test(A.getElementsByClassName)),
            (v.getById = r(function (e) {
              return (
                (M.appendChild(e).id = R),
                !A.getElementsByName || !A.getElementsByName(R).length
              );
            })),
            v.getById
              ? ((w.find.ID = function (e, t) {
                  if (typeof t.getElementById !== "undefined" && O) {
                    const n = t.getElementById(e);
                    return n ? [n] : [];
                  }
                }),
                (w.filter.ID = function (e) {
                  const t = e.replace(_e, xe);
                  return function (e) {
                    return e.getAttribute("id") === t;
                  };
                }))
              : (delete w.find.ID,
                (w.filter.ID = function (e) {
                  const n = e.replace(_e, xe);
                  return function (e) {
                    const t =
                      typeof e.getAttributeNode !== "undefined" &&
                      e.getAttributeNode("id");
                    return t && t.value === n;
                  };
                })),
            (w.find.TAG = v.getElementsByTagName
              ? function (e, t) {
                  return typeof t.getElementsByTagName !== "undefined"
                    ? t.getElementsByTagName(e)
                    : v.qsa
                      ? t.querySelectorAll(e)
                      : void 0;
                }
              : function (e, t) {
                  let n;
                  const i = [];
                  let r = 0;
                  const o = t.getElementsByTagName(e);
                  if (e !== "*") return o;
                  for (; (n = o[r++]); ) n.nodeType === 1 && i.push(n);
                  return i;
                }),
            (w.find.CLASS =
              v.getElementsByClassName &&
              function (e, t) {
                if (typeof t.getElementsByClassName !== "undefined" && O) {
                  return t.getElementsByClassName(e);
                }
              }),
            (F = []),
            (P = []),
            (v.qsa = me.test(A.querySelectorAll)) &&
              (r(function (e) {
                (M.appendChild(e).innerHTML =
                  "<a id='" +
                  R +
                  "'></a><select id='" +
                  R +
                  "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                  e.querySelectorAll("[msallowcapture^='']").length &&
                    P.push("[*^$]=" + ne + "*(?:''|\"\")"),
                  e.querySelectorAll("[selected]").length ||
                    P.push("\\[" + ne + "*(?:value|" + te + ")"),
                  e.querySelectorAll("[id~=" + R + "-]").length || P.push("~="),
                  e.querySelectorAll(":checked").length || P.push(":checked"),
                  e.querySelectorAll("a#" + R + "+*").length ||
                    P.push(".#.+[+~]");
              }),
              r(function (e) {
                const t = A.createElement("input");
                t.setAttribute("type", "hidden"),
                  e.appendChild(t).setAttribute("name", "D"),
                  e.querySelectorAll("[name=d]").length &&
                    P.push("name" + ne + "*[*^$|!~]?="),
                  e.querySelectorAll(":enabled").length ||
                    P.push(":enabled", ":disabled"),
                  e.querySelectorAll("*,:x"),
                  P.push(",.*:");
              })),
            (v.matchesSelector = me.test(
              (L =
                M.matches ||
                M.webkitMatchesSelector ||
                M.mozMatchesSelector ||
                M.oMatchesSelector ||
                M.msMatchesSelector),
            )) &&
              r(function (e) {
                (v.disconnectedMatch = L.call(e, "div")),
                  L.call(e, "[s!='']:x"),
                  F.push("!=", oe);
              }),
            (P = P.length && new RegExp(P.join("|"))),
            (F = F.length && new RegExp(F.join("|"))),
            (t = me.test(M.compareDocumentPosition)),
            (H =
              t || me.test(M.contains)
                ? function (e, t) {
                    const n = e.nodeType === 9 ? e.documentElement : e;
                    const i = t && t.parentNode;
                    return (
                      e === i ||
                      !(
                        !i ||
                        i.nodeType !== 1 ||
                        !(n.contains
                          ? n.contains(i)
                          : e.compareDocumentPosition &&
                            16 & e.compareDocumentPosition(i))
                      )
                    );
                  }
                : function (e, t) {
                    if (t) for (; (t = t.parentNode); ) if (t === e) return !0;
                    return !1;
                  }),
            (V = t
              ? function (e, t) {
                  if (e === t) return (E = !0), 0;
                  let n =
                    !e.compareDocumentPosition - !t.compareDocumentPosition;
                  return (
                    n ||
                    (1 &
                      (n =
                        (e.ownerDocument || e) === (t.ownerDocument || t)
                          ? e.compareDocumentPosition(t)
                          : 1) ||
                    (!v.sortDetached && t.compareDocumentPosition(e) === n)
                      ? e === A || (e.ownerDocument === $ && H($, e))
                        ? -1
                        : t === A || (t.ownerDocument === $ && H($, t))
                          ? 1
                          : N
                            ? ee(N, e) - ee(N, t)
                            : 0
                      : 4 & n
                        ? -1
                        : 1)
                  );
                }
              : function (e, t) {
                  if (e === t) return (E = !0), 0;
                  let n;
                  let i = 0;
                  const r = e.parentNode;
                  const o = t.parentNode;
                  const s = [e];
                  const a = [t];
                  if (!r || !o) {
                    return e === A
                      ? -1
                      : t === A
                        ? 1
                        : r
                          ? -1
                          : o
                            ? 1
                            : N
                              ? ee(N, e) - ee(N, t)
                              : 0;
                  }
                  if (r === o) return c(e, t);
                  for (n = e; (n = n.parentNode); ) s.unshift(n);
                  for (n = t; (n = n.parentNode); ) a.unshift(n);
                  for (; s[i] === a[i]; ) i++;
                  return i
                    ? c(s[i], a[i])
                    : s[i] === $
                      ? -1
                      : a[i] === $
                        ? 1
                        : 0;
                })),
          A
        );
      }),
    (_.matches = function (e, t) {
      return _(e, null, null, t);
    }),
    (_.matchesSelector = function (e, t) {
      if (
        ((e.ownerDocument || e) !== A && I(e),
        (t = t.replace(ue, "='$1']")),
        v.matchesSelector &&
          O &&
          !U[t + " "] &&
          (!F || !F.test(t)) &&
          (!P || !P.test(t)))
      ) {
        try {
          const n = L.call(e, t);
          if (
            n ||
            v.disconnectedMatch ||
            (e.document && e.document.nodeType !== 11)
          ) {
            return n;
          }
        } catch (Ce) {}
      }
      return _(t, A, null, [e]).length > 0;
    }),
    (_.contains = function (e, t) {
      return (e.ownerDocument || e) !== A && I(e), H(e, t);
    }),
    (_.attr = function (e, t) {
      (e.ownerDocument || e) !== A && I(e);
      const n = w.attrHandle[t.toLowerCase()];
      let i =
        n && Y.call(w.attrHandle, t.toLowerCase()) ? n(e, t, !O) : undefined;
      return i !== undefined
        ? i
        : v.attributes || !O
          ? e.getAttribute(t)
          : (i = e.getAttributeNode(t)) && i.specified
            ? i.value
            : null;
    }),
    (_.error = function (e) {
      throw new Error("Syntax error, unrecognized expression: " + e);
    }),
    (_.uniqueSort = function (e) {
      let t;
      const n = [];
      let i = 0;
      let r = 0;
      if (
        ((E = !v.detectDuplicates),
        (N = !v.sortStable && e.slice(0)),
        e.sort(V),
        E)
      ) {
        for (; (t = e[r++]); ) t === e[r] && (i = n.push(r));
        for (; i--; ) e.splice(n[i], 1);
      }
      return (N = null), e;
    }),
    (C = _.getText =
      function (e) {
        let t;
        let n = "";
        let i = 0;
        const r = e.nodeType;
        if (r) {
          if (r === 1 || r === 9 || r === 11) {
            if (typeof e.textContent === "string") return e.textContent;
            for (e = e.firstChild; e; e = e.nextSibling) n += C(e);
          } else if (r === 3 || r === 4) return e.nodeValue;
        } else for (; (t = e[i++]); ) n += C(t);
        return n;
      }),
    ((w = _.selectors =
      {
        cacheLength: 50,
        createPseudo: l,
        match: pe,
        attrHandle: {},
        find: {},
        relative: {
          ">": { dir: "parentNode", first: !0 },
          " ": { dir: "parentNode" },
          "+": { dir: "previousSibling", first: !0 },
          "~": { dir: "previousSibling" },
        },
        preFilter: {
          ATTR: function (e) {
            return (
              (e[1] = e[1].replace(_e, xe)),
              (e[3] = (e[3] || e[4] || e[5] || "").replace(_e, xe)),
              e[2] === "~=" && (e[3] = " " + e[3] + " "),
              e.slice(0, 4)
            );
          },
          CHILD: function (e) {
            return (
              (e[1] = e[1].toLowerCase()),
              e[1].slice(0, 3) === "nth"
                ? (e[3] || _.error(e[0]),
                  (e[4] = +(e[4]
                    ? e[5] + (e[6] || 1)
                    : 2 * (e[3] === "even" || e[3] === "odd"))),
                  (e[5] = +(e[7] + e[8] || e[3] === "odd")))
                : e[3] && _.error(e[0]),
              e
            );
          },
          PSEUDO: function (e) {
            let t;
            const n = !e[6] && e[2];
            return pe.CHILD.test(e[0])
              ? null
              : (e[3]
                  ? (e[2] = e[4] || e[5] || "")
                  : n &&
                    de.test(n) &&
                    (t = S(n, !0)) &&
                    (t = n.indexOf(")", n.length - t) - n.length) &&
                    ((e[0] = e[0].slice(0, t)), (e[2] = n.slice(0, t))),
                e.slice(0, 3));
          },
        },
        filter: {
          TAG: function (e) {
            const t = e.replace(_e, xe).toLowerCase();
            return e === "*"
              ? function () {
                  return !0;
                }
              : function (e) {
                  return e.nodeName && e.nodeName.toLowerCase() === t;
                };
          },
          CLASS: function (e) {
            let t = W[e + " "];
            return (
              t ||
              ((t = new RegExp("(^|" + ne + ")" + e + "(" + ne + "|$)")) &&
                W(e, function (e) {
                  return t.test(
                    (typeof e.className === "string" && e.className) ||
                      (typeof e.getAttribute !== "undefined" &&
                        e.getAttribute("class")) ||
                      "",
                  );
                }))
            );
          },
          ATTR: function (n, i, r) {
            return function (e) {
              let t = _.attr(e, n);
              return t == null
                ? i === "!="
                : !i ||
                    ((t += ""),
                    i === "="
                      ? t === r
                      : i === "!="
                        ? t !== r
                        : i === "^="
                          ? r && t.indexOf(r) === 0
                          : i === "*="
                            ? r && t.indexOf(r) > -1
                            : i === "$="
                              ? r && t.slice(-r.length) === r
                              : i === "~="
                                ? (" " + t.replace(se, " ") + " ").indexOf(r) >
                                  -1
                                : i === "|=" &&
                                  (t === r ||
                                    t.slice(0, r.length + 1) === r + "-"));
            };
          },
          CHILD: function (f, e, t, g, m) {
            const v = f.slice(0, 3) !== "nth";
            const y = f.slice(-4) !== "last";
            const b = e === "of-type";
            return g === 1 && m === 0
              ? function (e) {
                  return !!e.parentNode;
                }
              : function (e, t, n) {
                  let i;
                  let r;
                  let o;
                  let s;
                  let a;
                  let l;
                  let c = v !== y ? "nextSibling" : "previousSibling";
                  const u = e.parentNode;
                  const d = b && e.nodeName.toLowerCase();
                  const h = !n && !b;
                  let p = !1;
                  if (u) {
                    if (v) {
                      for (; c; ) {
                        for (s = e; (s = s[c]); ) {
                          if (
                            b
                              ? s.nodeName.toLowerCase() === d
                              : s.nodeType === 1
                          ) {
                            return !1;
                          }
                        }
                        l = c = f === "only" && !l && "nextSibling";
                      }
                      return !0;
                    }
                    if (((l = [y ? u.firstChild : u.lastChild]), y && h)) {
                      for (
                        p =
                          (a =
                            (i =
                              (r =
                                (o = (s = u)[R] || (s[R] = {}))[s.uniqueID] ||
                                (o[s.uniqueID] = {}))[f] || [])[0] === q &&
                            i[1]) && i[2],
                          s = a && u.childNodes[a];
                        (s = (++a && s && s[c]) || (p = a = 0) || l.pop());

                      ) {
                        if (s.nodeType === 1 && ++p && s === e) {
                          r[f] = [q, a, p];
                          break;
                        }
                      }
                    } else if (
                      (h &&
                        (p = a =
                          (i =
                            (r =
                              (o = (s = e)[R] || (s[R] = {}))[s.uniqueID] ||
                              (o[s.uniqueID] = {}))[f] || [])[0] === q && i[1]),
                      !1 === p)
                    ) {
                      for (
                        ;
                        (s = (++a && s && s[c]) || (p = a = 0) || l.pop()) &&
                        ((b
                          ? s.nodeName.toLowerCase() !== d
                          : s.nodeType !== 1) ||
                          !++p ||
                          (h &&
                            ((r =
                              (o = s[R] || (s[R] = {}))[s.uniqueID] ||
                              (o[s.uniqueID] = {}))[f] = [q, p]),
                          s !== e));

                      );
                    }
                    return (p -= m) === g || (p % g == 0 && p / g >= 0);
                  }
                };
          },
          PSEUDO: function (e, o) {
            let t;
            const s =
              w.pseudos[e] ||
              w.setFilters[e.toLowerCase()] ||
              _.error("unsupported pseudo: " + e);
            return s[R]
              ? s(o)
              : s.length > 1
                ? ((t = [e, e, "", o]),
                  w.setFilters.hasOwnProperty(e.toLowerCase())
                    ? l(function (e, t) {
                        for (var n, i = s(e, o), r = i.length; r--; ) {
                          e[(n = ee(e, i[r]))] = !(t[n] = i[r]);
                        }
                      })
                    : function (e) {
                        return s(e, 0, t);
                      })
                : s;
          },
        },
        pseudos: {
          not: l(function (e) {
            const i = [];
            const r = [];
            const a = T(e.replace(ae, "$1"));
            return a[R]
              ? l(function (e, t, n, i) {
                  for (var r, o = a(e, null, i, []), s = e.length; s--; ) {
                    (r = o[s]) && (e[s] = !(t[s] = r));
                  }
                })
              : function (e, t, n) {
                  return (i[0] = e), a(i, null, n, r), (i[0] = null), !r.pop();
                };
          }),
          has: l(function (t) {
            return function (e) {
              return _(t, e).length > 0;
            };
          }),
          contains: l(function (t) {
            return (
              (t = t.replace(_e, xe)),
              function (e) {
                return (e.textContent || e.innerText || C(e)).indexOf(t) > -1;
              }
            );
          }),
          lang: l(function (n) {
            return (
              he.test(n || "") || _.error("unsupported lang: " + n),
              (n = n.replace(_e, xe).toLowerCase()),
              function (e) {
                let t;
                do {
                  if (
                    (t = O
                      ? e.lang
                      : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                  ) {
                    return (
                      (t = t.toLowerCase()) === n || t.indexOf(n + "-") === 0
                    );
                  }
                } while ((e = e.parentNode) && e.nodeType === 1);
                return !1;
              }
            );
          }),
          target: function (e) {
            const t = n.location && n.location.hash;
            return t && t.slice(1) === e.id;
          },
          root: function (e) {
            return e === M;
          },
          focus: function (e) {
            return (
              e === A.activeElement &&
              (!A.hasFocus || A.hasFocus()) &&
              !!(e.type || e.href || ~e.tabIndex)
            );
          },
          enabled: function (e) {
            return !1 === e.disabled;
          },
          disabled: function (e) {
            return !0 === e.disabled;
          },
          checked: function (e) {
            const t = e.nodeName.toLowerCase();
            return (
              (t === "input" && !!e.checked) || (t === "option" && !!e.selected)
            );
          },
          selected: function (e) {
            return (
              e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
            );
          },
          empty: function (e) {
            for (e = e.firstChild; e; e = e.nextSibling) {
              if (e.nodeType < 6) return !1;
            }
            return !0;
          },
          parent: function (e) {
            return !w.pseudos.empty(e);
          },
          header: function (e) {
            return ge.test(e.nodeName);
          },
          input: function (e) {
            return fe.test(e.nodeName);
          },
          button: function (e) {
            const t = e.nodeName.toLowerCase();
            return (t === "input" && e.type === "button") || t === "button";
          },
          text: function (e) {
            let t;
            return (
              e.nodeName.toLowerCase() === "input" &&
              e.type === "text" &&
              ((t = e.getAttribute("type")) == null ||
                t.toLowerCase() === "text")
            );
          },
          first: s(function () {
            return [0];
          }),
          last: s(function (e, t) {
            return [t - 1];
          }),
          eq: s(function (e, t, n) {
            return [n < 0 ? n + t : n];
          }),
          even: s(function (e, t) {
            for (let n = 0; n < t; n += 2) e.push(n);
            return e;
          }),
          odd: s(function (e, t) {
            for (let n = 1; n < t; n += 2) e.push(n);
            return e;
          }),
          lt: s(function (e, t, n) {
            for (let i = n < 0 ? n + t : n; --i >= 0; ) e.push(i);
            return e;
          }),
          gt: s(function (e, t, n) {
            for (let i = n < 0 ? n + t : n; ++i < t; ) e.push(i);
            return e;
          }),
        },
      }).pseudos.nth = w.pseudos.eq),
    { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })) {
      w.pseudos[f] = i(f);
    }
    for (f in { submit: !0, reset: !0 }) w.pseudos[f] = o(f);
    return (
      (a.prototype = w.filters = w.pseudos),
      (w.setFilters = new a()),
      (S = _.tokenize =
        function (e, t) {
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          const c = B[e + " "];
          if (c) return t ? 0 : c.slice(0);
          for (s = e, a = [], l = w.preFilter; s; ) {
            for (o in ((n && !(i = le.exec(s))) ||
              (i && (s = s.slice(i[0].length) || s), a.push((r = []))),
            (n = !1),
            (i = ce.exec(s)) &&
              ((n = i.shift()),
              r.push({ value: n, type: i[0].replace(ae, " ") }),
              (s = s.slice(n.length))),
            w.filter)) {
              !(i = pe[o].exec(s)) ||
                (l[o] && !(i = l[o](i))) ||
                ((n = i.shift()),
                r.push({ value: n, type: o, matches: i }),
                (s = s.slice(n.length)));
            }
            if (!n) break;
          }
          return t ? s.length : s ? _.error(e) : B(e, a).slice(0);
        }),
      (T = _.compile =
        function (e, t) {
          let n;
          const i = [];
          const r = [];
          let o = U[e + " "];
          if (!o) {
            for (t || (t = S(e)), n = t.length; n--; ) {
              (o = p(t[n]))[R] ? i.push(o) : r.push(o);
            }
            (o = U(e, u(r, i))).selector = e;
          }
          return o;
        }),
      (D = _.select =
        function (e, t, n, i) {
          let r;
          let o;
          let s;
          let a;
          let l;
          const c = typeof e === "function" && e;
          const u = !i && S((e = c.selector || e));
          if (((n = n || []), u.length === 1)) {
            if (
              (o = u[0] = u[0].slice(0)).length > 2 &&
              (s = o[0]).type === "ID" &&
              v.getById &&
              t.nodeType === 9 &&
              O &&
              w.relative[o[1].type]
            ) {
              if (
                !(t = (w.find.ID(s.matches[0].replace(_e, xe), t) || [])[0])
              ) {
                return n;
              }
              c && (t = t.parentNode), (e = e.slice(o.shift().value.length));
            }
            for (
              r = pe.needsContext.test(e) ? 0 : o.length;
              r-- && ((s = o[r]), !w.relative[(a = s.type)]);

            ) {
              if (
                (l = w.find[a]) &&
                (i = l(
                  s.matches[0].replace(_e, xe),
                  (ye.test(o[0].type) && g(t.parentNode)) || t,
                ))
              ) {
                if ((o.splice(r, 1), !(e = i.length && m(o)))) {
                  return J.apply(n, i), n;
                }
                break;
              }
            }
          }
          return (
            (c || T(e, u))(
              i,
              t,
              !O,
              n,
              !t || (ye.test(e) && g(t.parentNode)) || t,
            ),
            n
          );
        }),
      (v.sortStable = R.split("").sort(V).join("") === R),
      (v.detectDuplicates = !!E),
      I(),
      (v.sortDetached = r(function (e) {
        return 1 & e.compareDocumentPosition(A.createElement("div"));
      })),
      r(function (e) {
        return (
          (e.innerHTML = "<a href='#'></a>"),
          e.firstChild.getAttribute("href") === "#"
        );
      }) ||
        t("type|href|height|width", function (e, t, n) {
          if (!n) return e.getAttribute(t, t.toLowerCase() === "type" ? 1 : 2);
        }),
      (v.attributes &&
        r(function (e) {
          return (
            (e.innerHTML = "<input/>"),
            e.firstChild.setAttribute("value", ""),
            e.firstChild.getAttribute("value") === ""
          );
        })) ||
        t("value", function (e, t, n) {
          if (!n && e.nodeName.toLowerCase() === "input") return e.defaultValue;
        }),
      r(function (e) {
        return e.getAttribute("disabled") == null;
      }) ||
        t(te, function (e, t, n) {
          let i;
          if (!n) {
            return !0 === e[t]
              ? t.toLowerCase()
              : (i = e.getAttributeNode(t)) && i.specified
                ? i.value
                : null;
          }
        }),
      _
    );
  })(C);
  (pe.find = ye),
    (pe.expr = ye.selectors),
    (pe.expr[":"] = pe.expr.pseudos),
    (pe.uniqueSort = pe.unique = ye.uniqueSort),
    (pe.text = ye.getText),
    (pe.isXMLDoc = ye.isXML),
    (pe.contains = ye.contains);
  const be = function (e, t, n) {
    for (var i = [], r = n !== undefined; (e = e[t]) && e.nodeType !== 9; ) {
      if (e.nodeType === 1) {
        if (r && pe(e).is(n)) break;
        i.push(e);
      }
    }
    return i;
  };
  const _e = function (e, t) {
    for (var n = []; e; e = e.nextSibling) {
      e.nodeType === 1 && e !== t && n.push(e);
    }
    return n;
  };
  const xe = pe.expr.match.needsContext;
  const we = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
  var Ce = /^.[^:#\[\.,]*$/;
  (pe.filter = function (e, t, n) {
    const i = t[0];
    return (
      n && (e = ":not(" + e + ")"),
      t.length === 1 && i.nodeType === 1
        ? pe.find.matchesSelector(i, e)
          ? [i]
          : []
        : pe.find.matches(
            e,
            pe.grep(t, function (e) {
              return e.nodeType === 1;
            }),
          )
    );
  }),
    pe.fn.extend({
      find: function (e) {
        let t;
        let n = [];
        const i = this;
        const r = i.length;
        if (typeof e !== "string") {
          return this.pushStack(
            pe(e).filter(function () {
              for (t = 0; t < r; t++) if (pe.contains(i[t], this)) return !0;
            }),
          );
        }
        for (t = 0; t < r; t++) pe.find(e, i[t], n);
        return (
          ((n = this.pushStack(r > 1 ? pe.unique(n) : n)).selector = this
            .selector
            ? this.selector + " " + e
            : e),
          n
        );
      },
      filter: function (e) {
        return this.pushStack(t(this, e || [], !1));
      },
      not: function (e) {
        return this.pushStack(t(this, e || [], !0));
      },
      is: function (e) {
        return !!t(
          this,
          typeof e === "string" && xe.test(e) ? pe(e) : e || [],
          !1,
        ).length;
      },
    });
  let ke;
  const Se = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
  ((pe.fn.init = function (e, t, n) {
    let i, r;
    if (!e) return this;
    if (((n = n || ke), typeof e !== "string")) {
      return e.nodeType
        ? ((this.context = this[0] = e), (this.length = 1), this)
        : pe.isFunction(e)
          ? typeof n.ready !== "undefined"
            ? n.ready(e)
            : e(pe)
          : (e.selector !== undefined &&
              ((this.selector = e.selector), (this.context = e.context)),
            pe.makeArray(e, this));
    }
    if (
      !(i =
        e.charAt(0) === "<" && e.charAt(e.length - 1) === ">" && e.length >= 3
          ? [null, e, null]
          : Se.exec(e)) ||
      (!i[1] && t)
    ) {
      return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
    }
    if (i[1]) {
      if (
        ((t = t instanceof pe ? t[0] : t),
        pe.merge(
          this,
          pe.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : ie, !0),
        ),
        we.test(i[1]) && pe.isPlainObject(t))
      ) {
        for (i in t) {
          pe.isFunction(this[i]) ? this[i](t[i]) : this.attr(i, t[i]);
        }
      }
      return this;
    }
    if ((r = ie.getElementById(i[2])) && r.parentNode) {
      if (r.id !== i[2]) return ke.find(e);
      (this.length = 1), (this[0] = r);
    }
    return (this.context = ie), (this.selector = e), this;
  }).prototype = pe.fn),
    (ke = pe(ie));
  const Te = /^(?:parents|prev(?:Until|All))/;
  const De = { children: !0, contents: !0, next: !0, prev: !0 };
  pe.fn.extend({
    has: function (e) {
      let t;
      const n = pe(e, this);
      const i = n.length;
      return this.filter(function () {
        for (t = 0; t < i; t++) if (pe.contains(this, n[t])) return !0;
      });
    },
    closest: function (e, t) {
      for (
        var n,
          i = 0,
          r = this.length,
          o = [],
          s =
            xe.test(e) || typeof e !== "string" ? pe(e, t || this.context) : 0;
        i < r;
        i++
      ) {
        for (n = this[i]; n && n !== t; n = n.parentNode) {
          if (
            n.nodeType < 11 &&
            (s
              ? s.index(n) > -1
              : n.nodeType === 1 && pe.find.matchesSelector(n, e))
          ) {
            o.push(n);
            break;
          }
        }
      }
      return this.pushStack(o.length > 1 ? pe.uniqueSort(o) : o);
    },
    index: function (e) {
      return e
        ? typeof e === "string"
          ? pe.inArray(this[0], pe(e))
          : pe.inArray(e.jquery ? e[0] : e, this)
        : this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
    },
    add: function (e, t) {
      return this.pushStack(pe.uniqueSort(pe.merge(this.get(), pe(e, t))));
    },
    addBack: function (e) {
      return this.add(e == null ? this.prevObject : this.prevObject.filter(e));
    },
  }),
    pe.each(
      {
        parent: function (e) {
          const t = e.parentNode;
          return t && t.nodeType !== 11 ? t : null;
        },
        parents: function (e) {
          return be(e, "parentNode");
        },
        parentsUntil: function (e, t, n) {
          return be(e, "parentNode", n);
        },
        next: function (e) {
          return n(e, "nextSibling");
        },
        prev: function (e) {
          return n(e, "previousSibling");
        },
        nextAll: function (e) {
          return be(e, "nextSibling");
        },
        prevAll: function (e) {
          return be(e, "previousSibling");
        },
        nextUntil: function (e, t, n) {
          return be(e, "nextSibling", n);
        },
        prevUntil: function (e, t, n) {
          return be(e, "previousSibling", n);
        },
        siblings: function (e) {
          return _e((e.parentNode || {}).firstChild, e);
        },
        children: function (e) {
          return _e(e.firstChild);
        },
        contents: function (e) {
          return pe.nodeName(e, "iframe")
            ? e.contentDocument || e.contentWindow.document
            : pe.merge([], e.childNodes);
        },
      },
      function (i, r) {
        pe.fn[i] = function (e, t) {
          let n = pe.map(this, r, e);
          return (
            i.slice(-5) !== "Until" && (t = e),
            t && typeof t === "string" && (n = pe.filter(t, n)),
            this.length > 1 &&
              (De[i] || (n = pe.uniqueSort(n)),
              Te.test(i) && (n = n.reverse())),
            this.pushStack(n)
          );
        };
      },
    );
  let je;
  let Ne;
  var Ee = /\S+/g;
  for (Ne in ((pe.Callbacks = function (i) {
    i = typeof i === "string" ? u(i) : pe.extend({}, i);
    let r;
    let e;
    let t;
    let n;
    let o = [];
    let s = [];
    let a = -1;
    const l = function () {
      for (n = i.once, t = r = !0; s.length; a = -1) {
        for (e = s.shift(); ++a < o.length; ) {
          !1 === o[a].apply(e[0], e[1]) &&
            i.stopOnFalse &&
            ((a = o.length), (e = !1));
        }
      }
      i.memory || (e = !1), (r = !1), n && (o = e ? [] : "");
    };
    var c = {
      add: function () {
        return (
          o &&
            (e && !r && ((a = o.length - 1), s.push(e)),
            (function n(e) {
              pe.each(e, function (e, t) {
                pe.isFunction(t)
                  ? (i.unique && c.has(t)) || o.push(t)
                  : t && t.length && pe.type(t) !== "string" && n(t);
              });
            })(arguments),
            e && !r && l()),
          this
        );
      },
      remove: function () {
        return (
          pe.each(arguments, function (e, t) {
            for (var n; (n = pe.inArray(t, o, n)) > -1; ) {
              o.splice(n, 1), n <= a && a--;
            }
          }),
          this
        );
      },
      has: function (e) {
        return e ? pe.inArray(e, o) > -1 : o.length > 0;
      },
      empty: function () {
        return o && (o = []), this;
      },
      disable: function () {
        return (n = s = []), (o = e = ""), this;
      },
      disabled: function () {
        return !o;
      },
      lock: function () {
        return (n = !0), e || c.disable(), this;
      },
      locked: function () {
        return !!n;
      },
      fireWith: function (e, t) {
        return (
          n ||
            ((t = [e, (t = t || []).slice ? t.slice() : t]),
            s.push(t),
            r || l()),
          this
        );
      },
      fire: function () {
        return c.fireWith(this, arguments), this;
      },
      fired: function () {
        return !!t;
      },
    };
    return c;
  }),
  pe.extend({
    Deferred: function (e) {
      const o = [
        ["resolve", "done", pe.Callbacks("once memory"), "resolved"],
        ["reject", "fail", pe.Callbacks("once memory"), "rejected"],
        ["notify", "progress", pe.Callbacks("memory")],
      ];
      let r = "pending";
      var s = {
        state: function () {
          return r;
        },
        always: function () {
          return a.done(arguments).fail(arguments), this;
        },
        then: function () {
          let r = arguments;
          return pe
            .Deferred(function (i) {
              pe.each(o, function (e, t) {
                const n = pe.isFunction(r[e]) && r[e];
                a[t[1]](function () {
                  const e = n && n.apply(this, arguments);
                  e && pe.isFunction(e.promise)
                    ? e
                        .promise()
                        .progress(i.notify)
                        .done(i.resolve)
                        .fail(i.reject)
                    : i[t[0] + "With"](
                        this === s ? i.promise() : this,
                        n ? [e] : arguments,
                      );
                });
              }),
                (r = null);
            })
            .promise();
        },
        promise: function (e) {
          return e != null ? pe.extend(e, s) : s;
        },
      };
      var a = {};
      return (
        (s.pipe = s.then),
        pe.each(o, function (e, t) {
          const n = t[2];
          const i = t[3];
          (s[t[1]] = n.add),
            i &&
              n.add(
                function () {
                  r = i;
                },
                o[1 ^ e][2].disable,
                o[2][2].lock,
              ),
            (a[t[0]] = function () {
              return a[t[0] + "With"](this === a ? s : this, arguments), this;
            }),
            (a[t[0] + "With"] = n.fireWith);
        }),
        s.promise(a),
        e && e.call(a, a),
        a
      );
    },
    when: function (e) {
      let r;
      let t;
      let n;
      let i = 0;
      const o = re.call(arguments);
      const s = o.length;
      let a = s !== 1 || (e && pe.isFunction(e.promise)) ? s : 0;
      const l = a === 1 ? e : pe.Deferred();
      const c = function (t, n, i) {
        return function (e) {
          (n[t] = this),
            (i[t] = arguments.length > 1 ? re.call(arguments) : e),
            i === r ? l.notifyWith(n, i) : --a || l.resolveWith(n, i);
        };
      };
      if (s > 1) {
        for (r = new Array(s), t = new Array(s), n = new Array(s); i < s; i++) {
          o[i] && pe.isFunction(o[i].promise)
            ? o[i]
                .promise()
                .progress(c(i, t, r))
                .done(c(i, n, o))
                .fail(l.reject)
            : --a;
        }
      }
      return a || l.resolveWith(n, o), l.promise();
    },
  }),
  (pe.fn.ready = function (e) {
    return pe.ready.promise().done(e), this;
  }),
  pe.extend({
    isReady: !1,
    readyWait: 1,
    holdReady: function (e) {
      e ? pe.readyWait++ : pe.ready(!0);
    },
    ready: function (e) {
      (!0 === e ? --pe.readyWait : pe.isReady) ||
        ((pe.isReady = !0) !== e && --pe.readyWait > 0) ||
        (je.resolveWith(ie, [pe]),
        pe.fn.triggerHandler &&
          (pe(ie).triggerHandler("ready"), pe(ie).off("ready")));
    },
  }),
  (pe.ready.promise = function (e) {
    if (!je) {
      if (
        ((je = pe.Deferred()),
        ie.readyState === "complete" ||
          (ie.readyState !== "loading" && !ie.documentElement.doScroll))
      ) {
        C.setTimeout(pe.ready);
      } else if (ie.addEventListener) {
        ie.addEventListener("DOMContentLoaded", o),
          C.addEventListener("load", o);
      } else {
        ie.attachEvent("onreadystatechange", o), C.attachEvent("onload", o);
        let t = !1;
        try {
          t = C.frameElement == null && ie.documentElement;
        } catch (n) {}
        t &&
          t.doScroll &&
          (function i() {
            if (!pe.isReady) {
              try {
                t.doScroll("left");
              } catch (n) {
                return C.setTimeout(i, 50);
              }
              r(), pe.ready();
            }
          })();
      }
    }
    return je.promise(e);
  }),
  pe.ready.promise(),
  pe(de))) {
    break;
  }
  (de.ownFirst = Ne === "0"),
    (de.inlineBlockNeedsLayout = !1),
    pe(function () {
      let e, t, n, i;
      (n = ie.getElementsByTagName("body")[0]) &&
        n.style &&
        ((t = ie.createElement("div")),
        ((i = ie.createElement("div")).style.cssText =
          "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
        n.appendChild(i).appendChild(t),
        typeof t.style.zoom !== "undefined" &&
          ((t.style.cssText =
            "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1"),
          (de.inlineBlockNeedsLayout = e = t.offsetWidth === 3),
          e && (n.style.zoom = 1)),
        n.removeChild(i));
    }),
    (function () {
      let e = ie.createElement("div");
      de.deleteExpando = !0;
      try {
        delete e.test;
      } catch (t) {
        de.deleteExpando = !1;
      }
      e = null;
    })();
  let Ie;
  var Ae = function (e) {
    const t = pe.noData[(e.nodeName + " ").toLowerCase()];
    const n = +e.nodeType || 1;
    return (
      (n === 1 || n === 9) &&
      (!t || (!0 !== t && e.getAttribute("classid") === t))
    );
  };
  var Me = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
  var Oe = /([A-Z])/g;
  pe.extend({
    cache: {},
    noData: {
      "applet ": !0,
      "embed ": !0,
      "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
    },
    hasData: function (e) {
      return (
        !!(e = e.nodeType ? pe.cache[e[pe.expando]] : e[pe.expando]) && !c(e)
      );
    },
    data: function (e, t, n) {
      return i(e, t, n);
    },
    removeData: function (e, t) {
      return s(e, t);
    },
    _data: function (e, t, n) {
      return i(e, t, n, !0);
    },
    _removeData: function (e, t) {
      return s(e, t, !0);
    },
  }),
    pe.fn.extend({
      data: function (e, t) {
        let n;
        let i;
        let r;
        const o = this[0];
        const s = o && o.attributes;
        if (e !== undefined) {
          return typeof e === "object"
            ? this.each(function () {
                pe.data(this, e);
              })
            : arguments.length > 1
              ? this.each(function () {
                  pe.data(this, e, t);
                })
              : o
                ? l(o, e, pe.data(o, e))
                : undefined;
        }
        if (
          this.length &&
          ((r = pe.data(o)), o.nodeType === 1 && !pe._data(o, "parsedAttrs"))
        ) {
          for (n = s.length; n--; ) {
            s[n] &&
              (i = s[n].name).indexOf("data-") === 0 &&
              l(o, (i = pe.camelCase(i.slice(5))), r[i]);
          }
          pe._data(o, "parsedAttrs", !0);
        }
        return r;
      },
      removeData: function (e) {
        return this.each(function () {
          pe.removeData(this, e);
        });
      },
    }),
    pe.extend({
      queue: function (e, t, n) {
        let i;
        if (e) {
          return (
            (t = (t || "fx") + "queue"),
            (i = pe._data(e, t)),
            n &&
              (!i || pe.isArray(n)
                ? (i = pe._data(e, t, pe.makeArray(n)))
                : i.push(n)),
            i || []
          );
        }
      },
      dequeue: function (e, t) {
        t = t || "fx";
        const n = pe.queue(e, t);
        let i = n.length;
        let r = n.shift();
        const o = pe._queueHooks(e, t);
        const s = function () {
          pe.dequeue(e, t);
        };
        r === "inprogress" && ((r = n.shift()), i--),
          r &&
            (t === "fx" && n.unshift("inprogress"),
            delete o.stop,
            r.call(e, s, o)),
          !i && o && o.empty.fire();
      },
      _queueHooks: function (e, t) {
        const n = t + "queueHooks";
        return (
          pe._data(e, n) ||
          pe._data(e, n, {
            empty: pe.Callbacks("once memory").add(function () {
              pe._removeData(e, t + "queue"), pe._removeData(e, n);
            }),
          })
        );
      },
    }),
    pe.fn.extend({
      queue: function (t, n) {
        let e = 2;
        return (
          typeof t !== "string" && ((n = t), (t = "fx"), e--),
          arguments.length < e
            ? pe.queue(this[0], t)
            : n === undefined
              ? this
              : this.each(function () {
                  const e = pe.queue(this, t, n);
                  pe._queueHooks(this, t),
                    t === "fx" && e[0] !== "inprogress" && pe.dequeue(this, t);
                })
        );
      },
      dequeue: function (e) {
        return this.each(function () {
          pe.dequeue(this, e);
        });
      },
      clearQueue: function (e) {
        return this.queue(e || "fx", []);
      },
      promise: function (e, t) {
        let n;
        let i = 1;
        const r = pe.Deferred();
        const o = this;
        let s = this.length;
        const a = function () {
          --i || r.resolveWith(o, [o]);
        };
        for (
          typeof e !== "string" && ((t = e), (e = undefined)), e = e || "fx";
          s--;

        ) {
          (n = pe._data(o[s], e + "queueHooks")) &&
            n.empty &&
            (i++, n.empty.add(a));
        }
        return a(), r.promise(t);
      },
    }),
    (de.shrinkWrapBlocks = function () {
      return Ie != null
        ? Ie
        : ((Ie = !1),
          (t = ie.getElementsByTagName("body")[0]) && t.style
            ? ((e = ie.createElement("div")),
              ((n = ie.createElement("div")).style.cssText =
                "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
              t.appendChild(n).appendChild(e),
              typeof e.style.zoom !== "undefined" &&
                ((e.style.cssText =
                  "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1"),
                (e.appendChild(ie.createElement("div")).style.width = "5px"),
                (Ie = e.offsetWidth !== 3)),
              t.removeChild(n),
              Ie)
            : void 0);
      let e, t, n;
    });
  let Pe;
  let Fe;
  let Le;
  const He = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
  var Re = new RegExp("^(?:([+-])=|)(" + He + ")([a-z%]*)$", "i");
  var $e = ["Top", "Right", "Bottom", "Left"];
  var qe = function (e, t) {
    return (
      (e = t || e),
      pe.css(e, "display") === "none" || !pe.contains(e.ownerDocument, e)
    );
  };
  const ze = function (e, t, n, i, r, o, s) {
    let a = 0;
    const l = e.length;
    let c = n == null;
    if (pe.type(n) === "object") {
      for (a in ((r = !0), n)) ze(e, t, a, n[a], !0, o, s);
    } else if (
      i !== undefined &&
      ((r = !0),
      pe.isFunction(i) || (s = !0),
      c &&
        (s
          ? (t.call(e, i), (t = null))
          : ((c = t),
            (t = function (e, t, n) {
              return c.call(pe(e), n);
            }))),
      t)
    ) {
      for (; a < l; a++) t(e[a], n, s ? i : i.call(e[a], a, t(e[a], n)));
    }
    return r ? e : c ? t.call(e) : l ? t(e[0], n) : o;
  };
  var We = /^(?:checkbox|radio)$/i;
  var Be = /<([\w:-]+)/;
  var Ue = /^$|\/(?:java|ecma)script/i;
  var Ve = /^\s+/;
  var Ke =
    "abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";
  (Pe = ie.createElement("div")),
    (Fe = ie.createDocumentFragment()),
    (Le = ie.createElement("input")),
    (Pe.innerHTML =
      "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
    (de.leadingWhitespace = Pe.firstChild.nodeType === 3),
    (de.tbody = !Pe.getElementsByTagName("tbody").length),
    (de.htmlSerialize = !!Pe.getElementsByTagName("link").length),
    (de.html5Clone =
      ie.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>"),
    (Le.type = "checkbox"),
    (Le.checked = !0),
    Fe.appendChild(Le),
    (de.appendChecked = Le.checked),
    (Pe.innerHTML = "<textarea>x</textarea>"),
    (de.noCloneChecked = !!Pe.cloneNode(!0).lastChild.defaultValue),
    Fe.appendChild(Pe),
    (Le = ie.createElement("input")).setAttribute("type", "radio"),
    Le.setAttribute("checked", "checked"),
    Le.setAttribute("name", "t"),
    Pe.appendChild(Le),
    (de.checkClone = Pe.cloneNode(!0).cloneNode(!0).lastChild.checked),
    (de.noCloneEvent = !!Pe.addEventListener),
    (Pe[pe.expando] = 1),
    (de.attributes = !Pe.getAttribute(pe.expando));
  var Ye = {
    option: [1, "<select multiple='multiple'>", "</select>"],
    legend: [1, "<fieldset>", "</fieldset>"],
    area: [1, "<map>", "</map>"],
    param: [1, "<object>", "</object>"],
    thead: [1, "<table>", "</table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: de.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"],
  };
  (Ye.optgroup = Ye.option),
    (Ye.tbody = Ye.tfoot = Ye.colgroup = Ye.caption = Ye.thead),
    (Ye.th = Ye.td);
  var Xe = /<|&#?\w+;/;
  var Ge = /<tbody/i;
  !(function () {
    let e;
    let t;
    let n = ie.createElement("div");
    for (e in { submit: !0, change: !0, focusin: !0 }) {
      (t = "on" + e),
        (de[e] = t in C) ||
          (n.setAttribute(t, "t"), (de[e] = !1 === n.attributes[t].expando));
    }
    n = null;
  })();
  const Qe = /^(?:input|select|textarea)$/i;
  const Je = /^key/;
  const Ze = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;
  const et = /^(?:focusinfocus|focusoutblur)$/;
  const tt = /^([^.]*)(?:\.(.+)|)/;
  (pe.event = {
    global: {},
    add: function (e, t, n, i, r) {
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d;
      let h;
      let p;
      let f;
      let g;
      const m = pe._data(e);
      if (m) {
        for (
          n.handler && ((n = (l = n).handler), (r = l.selector)),
            n.guid || (n.guid = pe.guid++),
            (s = m.events) || (s = m.events = {}),
            (u = m.handle) ||
              ((u = m.handle =
                function (e) {
                  return void 0 === pe || (e && pe.event.triggered === e.type)
                    ? undefined
                    : pe.event.dispatch.apply(u.elem, arguments);
                }).elem = e),
            a = (t = (t || "").match(Ee) || [""]).length;
          a--;

        ) {
          (p = g = (o = tt.exec(t[a]) || [])[1]),
            (f = (o[2] || "").split(".").sort()),
            p &&
              ((c = pe.event.special[p] || {}),
              (p = (r ? c.delegateType : c.bindType) || p),
              (c = pe.event.special[p] || {}),
              (d = pe.extend(
                {
                  type: p,
                  origType: g,
                  data: i,
                  handler: n,
                  guid: n.guid,
                  selector: r,
                  needsContext: r && pe.expr.match.needsContext.test(r),
                  namespace: f.join("."),
                },
                l,
              )),
              (h = s[p]) ||
                (((h = s[p] = []).delegateCount = 0),
                (c.setup && !1 !== c.setup.call(e, i, f, u)) ||
                  (e.addEventListener
                    ? e.addEventListener(p, u, !1)
                    : e.attachEvent && e.attachEvent("on" + p, u))),
              c.add &&
                (c.add.call(e, d), d.handler.guid || (d.handler.guid = n.guid)),
              r ? h.splice(h.delegateCount++, 0, d) : h.push(d),
              (pe.event.global[p] = !0));
        }
        e = null;
      }
    },
    remove: function (e, t, n, i, r) {
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d;
      let h;
      let p;
      let f;
      let g;
      const m = pe.hasData(e) && pe._data(e);
      if (m && (u = m.events)) {
        for (c = (t = (t || "").match(Ee) || [""]).length; c--; ) {
          if (
            ((p = g = (a = tt.exec(t[c]) || [])[1]),
            (f = (a[2] || "").split(".").sort()),
            p)
          ) {
            for (
              d = pe.event.special[p] || {},
                h = u[(p = (i ? d.delegateType : d.bindType) || p)] || [],
                a =
                  a[2] &&
                  new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                l = o = h.length;
              o--;

            ) {
              (s = h[o]),
                (!r && g !== s.origType) ||
                  (n && n.guid !== s.guid) ||
                  (a && !a.test(s.namespace)) ||
                  (i && i !== s.selector && (i !== "**" || !s.selector)) ||
                  (h.splice(o, 1),
                  s.selector && h.delegateCount--,
                  d.remove && d.remove.call(e, s));
            }
            l &&
              !h.length &&
              ((d.teardown && !1 !== d.teardown.call(e, f, m.handle)) ||
                pe.removeEvent(e, p, m.handle),
              delete u[p]);
          } else for (p in u) pe.event.remove(e, p + t[c], n, i, !0);
        }
        pe.isEmptyObject(u) && (delete m.handle, pe._removeData(e, "events"));
      }
    },
    trigger: function (e, t, n, i) {
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      const d = [n || ie];
      let h = ue.call(e, "type") ? e.type : e;
      let p = ue.call(e, "namespace") ? e.namespace.split(".") : [];
      if (
        ((s = c = n = n || ie),
        n.nodeType !== 3 &&
          n.nodeType !== 8 &&
          !et.test(h + pe.event.triggered) &&
          (h.indexOf(".") > -1 && ((h = (p = h.split(".")).shift()), p.sort()),
          (o = h.indexOf(":") < 0 && "on" + h),
          ((e = e[pe.expando]
            ? e
            : new pe.Event(h, typeof e === "object" && e)).isTrigger = i
            ? 2
            : 3),
          (e.namespace = p.join(".")),
          (e.rnamespace = e.namespace
            ? new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)")
            : null),
          (e.result = undefined),
          e.target || (e.target = n),
          (t = t == null ? [e] : pe.makeArray(t, [e])),
          (l = pe.event.special[h] || {}),
          i || !l.trigger || !1 !== l.trigger.apply(n, t)))
      ) {
        if (!i && !l.noBubble && !pe.isWindow(n)) {
          for (
            a = l.delegateType || h, et.test(a + h) || (s = s.parentNode);
            s;
            s = s.parentNode
          ) {
            d.push(s), (c = s);
          }
          c === (n.ownerDocument || ie) &&
            d.push(c.defaultView || c.parentWindow || C);
        }
        for (u = 0; (s = d[u++]) && !e.isPropagationStopped(); ) {
          (e.type = u > 1 ? a : l.bindType || h),
            (r =
              (pe._data(s, "events") || {})[e.type] && pe._data(s, "handle")) &&
              r.apply(s, t),
            (r = o && s[o]) &&
              r.apply &&
              Ae(s) &&
              ((e.result = r.apply(s, t)),
              !1 === e.result && e.preventDefault());
        }
        if (
          ((e.type = h),
          !i &&
            !e.isDefaultPrevented() &&
            (!l._default || !1 === l._default.apply(d.pop(), t)) &&
            Ae(n) &&
            o &&
            n[h] &&
            !pe.isWindow(n))
        ) {
          (c = n[o]) && (n[o] = null), (pe.event.triggered = h);
          try {
            n[h]();
          } catch (f) {}
          (pe.event.triggered = undefined), c && (n[o] = c);
        }
        return e.result;
      }
    },
    dispatch: function (e) {
      e = pe.event.fix(e);
      let t;
      let n;
      let i;
      let r;
      let o;
      let s = [];
      const a = re.call(arguments);
      const l = (pe._data(this, "events") || {})[e.type] || [];
      const c = pe.event.special[e.type] || {};
      if (
        (((a[0] = e).delegateTarget = this),
        !c.preDispatch || !1 !== c.preDispatch.call(this, e))
      ) {
        for (
          s = pe.event.handlers.call(this, e, l), t = 0;
          (r = s[t++]) && !e.isPropagationStopped();

        ) {
          for (
            e.currentTarget = r.elem, n = 0;
            (o = r.handlers[n++]) && !e.isImmediatePropagationStopped();

          ) {
            (e.rnamespace && !e.rnamespace.test(o.namespace)) ||
              ((e.handleObj = o),
              (e.data = o.data),
              (i = (
                (pe.event.special[o.origType] || {}).handle || o.handler
              ).apply(r.elem, a)) !== undefined &&
                !1 === (e.result = i) &&
                (e.preventDefault(), e.stopPropagation()));
          }
        }
        return c.postDispatch && c.postDispatch.call(this, e), e.result;
      }
    },
    handlers: function (e, t) {
      let n;
      let i;
      let r;
      let o;
      const s = [];
      const a = t.delegateCount;
      let l = e.target;
      if (
        a &&
        l.nodeType &&
        (e.type !== "click" || isNaN(e.button) || e.button < 1)
      ) {
        for (; l != this; l = l.parentNode || this) {
          if (l.nodeType === 1 && (!0 !== l.disabled || e.type !== "click")) {
            for (i = [], n = 0; n < a; n++) {
              i[(r = (o = t[n]).selector + " ")] === undefined &&
                (i[r] = o.needsContext
                  ? pe(r, this).index(l) > -1
                  : pe.find(r, this, null, [l]).length),
                i[r] && i.push(o);
            }
            i.length && s.push({ elem: l, handlers: i });
          }
        }
      }
      return a < t.length && s.push({ elem: this, handlers: t.slice(a) }), s;
    },
    fix: function (e) {
      if (e[pe.expando]) return e;
      let t;
      let n;
      let i;
      const r = e.type;
      const o = e;
      let s = this.fixHooks[r];
      for (
        s ||
          (this.fixHooks[r] = s =
            Ze.test(r) ? this.mouseHooks : Je.test(r) ? this.keyHooks : {}),
          i = s.props ? this.props.concat(s.props) : this.props,
          e = new pe.Event(o),
          t = i.length;
        t--;

      ) {
        e[(n = i[t])] = o[n];
      }
      return (
        e.target || (e.target = o.srcElement || ie),
        e.target.nodeType === 3 && (e.target = e.target.parentNode),
        (e.metaKey = !!e.metaKey),
        s.filter ? s.filter(e, o) : e
      );
    },
    props:
      "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(
        " ",
      ),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function (e, t) {
        return (
          e.which == null &&
            (e.which = t.charCode != null ? t.charCode : t.keyCode),
          e
        );
      },
    },
    mouseHooks: {
      props:
        "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(
          " ",
        ),
      filter: function (e, t) {
        let n;
        let i;
        let r;
        const o = t.button;
        const s = t.fromElement;
        return (
          e.pageX == null &&
            t.clientX != null &&
            ((r = (i = e.target.ownerDocument || ie).documentElement),
            (n = i.body),
            (e.pageX =
              t.clientX +
              ((r && r.scrollLeft) || (n && n.scrollLeft) || 0) -
              ((r && r.clientLeft) || (n && n.clientLeft) || 0)),
            (e.pageY =
              t.clientY +
              ((r && r.scrollTop) || (n && n.scrollTop) || 0) -
              ((r && r.clientTop) || (n && n.clientTop) || 0))),
          !e.relatedTarget &&
            s &&
            (e.relatedTarget = s === e.target ? t.toElement : s),
          e.which ||
            o === undefined ||
            (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0),
          e
        );
      },
    },
    special: {
      load: { noBubble: !0 },
      focus: {
        trigger: function () {
          if (this !== f() && this.focus) {
            try {
              return this.focus(), !1;
            } catch (e) {}
          }
        },
        delegateType: "focusin",
      },
      blur: {
        trigger: function () {
          if (this === f() && this.blur) return this.blur(), !1;
        },
        delegateType: "focusout",
      },
      click: {
        trigger: function () {
          if (
            pe.nodeName(this, "input") &&
            this.type === "checkbox" &&
            this.click
          ) {
            return this.click(), !1;
          }
        },
        _default: function (e) {
          return pe.nodeName(e.target, "a");
        },
      },
      beforeunload: {
        postDispatch: function (e) {
          e.result !== undefined &&
            e.originalEvent &&
            (e.originalEvent.returnValue = e.result);
        },
      },
    },
    simulate: function (e, t, n) {
      const i = pe.extend(new pe.Event(), n, { type: e, isSimulated: !0 });
      pe.event.trigger(i, null, t),
        i.isDefaultPrevented() && n.preventDefault();
    },
  }),
    (pe.removeEvent = ie.removeEventListener
      ? function (e, t, n) {
          e.removeEventListener && e.removeEventListener(t, n);
        }
      : function (e, t, n) {
          const i = "on" + t;
          e.detachEvent &&
            (typeof e[i] === "undefined" && (e[i] = null), e.detachEvent(i, n));
        }),
    (pe.Event = function (e, t) {
      if (!(this instanceof pe.Event)) return new pe.Event(e, t);
      e && e.type
        ? ((this.originalEvent = e),
          (this.type = e.type),
          (this.isDefaultPrevented =
            e.defaultPrevented ||
            (e.defaultPrevented === undefined && !1 === e.returnValue)
              ? h
              : p))
        : (this.type = e),
        t && pe.extend(this, t),
        (this.timeStamp = (e && e.timeStamp) || pe.now()),
        (this[pe.expando] = !0);
    }),
    (pe.Event.prototype = {
      constructor: pe.Event,
      isDefaultPrevented: p,
      isPropagationStopped: p,
      isImmediatePropagationStopped: p,
      preventDefault: function () {
        const e = this.originalEvent;
        (this.isDefaultPrevented = h),
          e && (e.preventDefault ? e.preventDefault() : (e.returnValue = !1));
      },
      stopPropagation: function () {
        const e = this.originalEvent;
        (this.isPropagationStopped = h),
          e &&
            !this.isSimulated &&
            (e.stopPropagation && e.stopPropagation(), (e.cancelBubble = !0));
      },
      stopImmediatePropagation: function () {
        const e = this.originalEvent;
        (this.isImmediatePropagationStopped = h),
          e && e.stopImmediatePropagation && e.stopImmediatePropagation(),
          this.stopPropagation();
      },
    }),
    pe.each(
      {
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout",
      },
      function (e, o) {
        pe.event.special[e] = {
          delegateType: o,
          bindType: o,
          handle: function (e) {
            let t;
            const n = this;
            const i = e.relatedTarget;
            const r = e.handleObj;
            return (
              (i && (i === n || pe.contains(n, i))) ||
                ((e.type = r.origType),
                (t = r.handler.apply(this, arguments)),
                (e.type = o)),
              t
            );
          },
        };
      },
    ),
    de.submit ||
      (pe.event.special.submit = {
        setup: function () {
          if (pe.nodeName(this, "form")) return !1;
          pe.event.add(this, "click._submit keypress._submit", function (e) {
            const t = e.target;
            const n =
              pe.nodeName(t, "input") || pe.nodeName(t, "button")
                ? pe.prop(t, "form")
                : undefined;
            n &&
              !pe._data(n, "submit") &&
              (pe.event.add(n, "submit._submit", function (e) {
                e._submitBubble = !0;
              }),
              pe._data(n, "submit", !0));
          });
        },
        postDispatch: function (e) {
          e._submitBubble &&
            (delete e._submitBubble,
            this.parentNode &&
              !e.isTrigger &&
              pe.event.simulate("submit", this.parentNode, e));
        },
        teardown: function () {
          if (pe.nodeName(this, "form")) return !1;
          pe.event.remove(this, "._submit");
        },
      }),
    de.change ||
      (pe.event.special.change = {
        setup: function () {
          if (Qe.test(this.nodeName)) {
            return (
              (this.type !== "checkbox" && this.type !== "radio") ||
                (pe.event.add(this, "propertychange._change", function (e) {
                  e.originalEvent.propertyName === "checked" &&
                    (this._justChanged = !0);
                }),
                pe.event.add(this, "click._change", function (e) {
                  this._justChanged && !e.isTrigger && (this._justChanged = !1),
                    pe.event.simulate("change", this, e);
                })),
              !1
            );
          }
          pe.event.add(this, "beforeactivate._change", function (e) {
            const t = e.target;
            Qe.test(t.nodeName) &&
              !pe._data(t, "change") &&
              (pe.event.add(t, "change._change", function (e) {
                !this.parentNode ||
                  e.isSimulated ||
                  e.isTrigger ||
                  pe.event.simulate("change", this.parentNode, e);
              }),
              pe._data(t, "change", !0));
          });
        },
        handle: function (e) {
          const t = e.target;
          if (
            this !== t ||
            e.isSimulated ||
            e.isTrigger ||
            (t.type !== "radio" && t.type !== "checkbox")
          ) {
            return e.handleObj.handler.apply(this, arguments);
          }
        },
        teardown: function () {
          return pe.event.remove(this, "._change"), !Qe.test(this.nodeName);
        },
      }),
    de.focusin ||
      pe.each({ focus: "focusin", blur: "focusout" }, function (n, i) {
        const r = function (e) {
          pe.event.simulate(i, e.target, pe.event.fix(e));
        };
        pe.event.special[i] = {
          setup: function () {
            const e = this.ownerDocument || this;
            const t = pe._data(e, i);
            t || e.addEventListener(n, r, !0), pe._data(e, i, (t || 0) + 1);
          },
          teardown: function () {
            const e = this.ownerDocument || this;
            const t = pe._data(e, i) - 1;
            t
              ? pe._data(e, i, t)
              : (e.removeEventListener(n, r, !0), pe._removeData(e, i));
          },
        };
      }),
    pe.fn.extend({
      on: function (e, t, n, i) {
        return _(this, e, t, n, i);
      },
      one: function (e, t, n, i) {
        return _(this, e, t, n, i, 1);
      },
      off: function (e, t, n) {
        let i, r;
        if (e && e.preventDefault && e.handleObj) {
          return (
            (i = e.handleObj),
            pe(e.delegateTarget).off(
              i.namespace ? i.origType + "." + i.namespace : i.origType,
              i.selector,
              i.handler,
            ),
            this
          );
        }
        if (typeof e !== "object") {
          return (
            (!1 !== t && typeof t !== "function") || ((n = t), (t = undefined)),
            !1 === n && (n = p),
            this.each(function () {
              pe.event.remove(this, e, n, t);
            })
          );
        }
        for (r in e) this.off(r, t, e[r]);
        return this;
      },
      trigger: function (e, t) {
        return this.each(function () {
          pe.event.trigger(e, t, this);
        });
      },
      triggerHandler: function (e, t) {
        const n = this[0];
        if (n) return pe.event.trigger(e, t, n, !0);
      },
    });
  const nt = / jQuery\d+="(?:null|\d+)"/g;
  const it = new RegExp("<(?:" + Ke + ")[\\s/>]", "i");
  const rt =
    /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;
  const ot = /<script|<style|<link/i;
  var st = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var at = /^true\/(.*)/;
  var lt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
  const ct = m(ie).appendChild(ie.createElement("div"));
  pe.extend({
    htmlPrefilter: function (e) {
      return e.replace(rt, "<$1></$2>");
    },
    clone: function (e, t, n) {
      let i;
      let r;
      let o;
      let s;
      let a;
      const l = pe.contains(e.ownerDocument, e);
      if (
        (de.html5Clone || pe.isXMLDoc(e) || !it.test("<" + e.nodeName + ">")
          ? (o = e.cloneNode(!0))
          : ((ct.innerHTML = e.outerHTML), ct.removeChild((o = ct.firstChild))),
        !(
          (de.noCloneEvent && de.noCloneChecked) ||
          (e.nodeType !== 1 && e.nodeType !== 11) ||
          pe.isXMLDoc(e)
        ))
      ) {
        for (i = v(o), a = v(e), s = 0; (r = a[s]) != null; ++s) {
          i[s] && T(r, i[s]);
        }
      }
      if (t) {
        if (n) {
          for (a = a || v(e), i = i || v(o), s = 0; (r = a[s]) != null; s++) {
            S(r, i[s]);
          }
        } else S(e, o);
      }
      return (
        (i = v(o, "script")).length > 0 && y(i, !l && v(e, "script")),
        (i = a = r = null),
        o
      );
    },
    cleanData: function (e, t) {
      for (
        var n,
          i,
          r,
          o,
          s = 0,
          a = pe.expando,
          l = pe.cache,
          c = de.attributes,
          u = pe.event.special;
        (n = e[s]) != null;
        s++
      ) {
        if ((t || Ae(n)) && (o = (r = n[a]) && l[r])) {
          if (o.events) {
            for (i in o.events) {
              u[i] ? pe.event.remove(n, i) : pe.removeEvent(n, i, o.handle);
            }
          }
          l[r] &&
            (delete l[r],
            c || typeof n.removeAttribute === "undefined"
              ? (n[a] = undefined)
              : n.removeAttribute(a),
            ne.push(r));
        }
      }
    },
  }),
    pe.fn.extend({
      domManip: D,
      detach: function (e) {
        return j(this, e, !0);
      },
      remove: function (e) {
        return j(this, e);
      },
      text: function (e) {
        return ze(
          this,
          function (e) {
            return e === undefined
              ? pe.text(this)
              : this.empty().append(
                  ((this[0] && this[0].ownerDocument) || ie).createTextNode(e),
                );
          },
          null,
          e,
          arguments.length,
        );
      },
      append: function () {
        return D(this, arguments, function (e) {
          (this.nodeType !== 1 &&
            this.nodeType !== 11 &&
            this.nodeType !== 9) ||
            x(this, e).appendChild(e);
        });
      },
      prepend: function () {
        return D(this, arguments, function (e) {
          if (
            this.nodeType === 1 ||
            this.nodeType === 11 ||
            this.nodeType === 9
          ) {
            const t = x(this, e);
            t.insertBefore(e, t.firstChild);
          }
        });
      },
      before: function () {
        return D(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this);
        });
      },
      after: function () {
        return D(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
        });
      },
      empty: function () {
        for (var e, t = 0; (e = this[t]) != null; t++) {
          for (e.nodeType === 1 && pe.cleanData(v(e, !1)); e.firstChild; ) {
            e.removeChild(e.firstChild);
          }
          e.options && pe.nodeName(e, "select") && (e.options.length = 0);
        }
        return this;
      },
      clone: function (e, t) {
        return (
          (e = e != null && e),
          (t = t == null ? e : t),
          this.map(function () {
            return pe.clone(this, e, t);
          })
        );
      },
      html: function (e) {
        return ze(
          this,
          function (e) {
            let t = this[0] || {};
            let n = 0;
            const i = this.length;
            if (e === undefined) {
              return t.nodeType === 1 ? t.innerHTML.replace(nt, "") : undefined;
            }
            if (
              typeof e === "string" &&
              !ot.test(e) &&
              (de.htmlSerialize || !it.test(e)) &&
              (de.leadingWhitespace || !Ve.test(e)) &&
              !Ye[(Be.exec(e) || ["", ""])[1].toLowerCase()]
            ) {
              e = pe.htmlPrefilter(e);
              try {
                for (; n < i; n++) {
                  (t = this[n] || {}).nodeType === 1 &&
                    (pe.cleanData(v(t, !1)), (t.innerHTML = e));
                }
                t = 0;
              } catch (r) {}
            }
            t && this.empty().append(e);
          },
          null,
          e,
          arguments.length,
        );
      },
      replaceWith: function () {
        const n = [];
        return D(
          this,
          arguments,
          function (e) {
            const t = this.parentNode;
            pe.inArray(this, n) < 0 &&
              (pe.cleanData(v(this)), t && t.replaceChild(e, this));
          },
          n,
        );
      },
    }),
    pe.each(
      {
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith",
      },
      function (e, s) {
        pe.fn[e] = function (e) {
          for (var t, n = 0, i = [], r = pe(e), o = r.length - 1; n <= o; n++) {
            (t = n === o ? this : this.clone(!0)),
              pe(r[n])[s](t),
              se.apply(i, t.get());
          }
          return this.pushStack(i);
        };
      },
    );
  let ut;
  var dt = { HTML: "block", BODY: "block" };
  const ht = /^margin/;
  var pt = new RegExp("^(" + He + ")(?!px)[a-z%]+$", "i");
  const ft = function (e, t, n, i) {
    let r;
    let o;
    const s = {};
    for (o in t) (s[o] = e.style[o]), (e.style[o] = t[o]);
    for (o in ((r = n.apply(e, i || [])), t)) e.style[o] = s[o];
    return r;
  };
  const gt = ie.documentElement;
  !(function () {
    function e() {
      let e;
      let t;
      const n = ie.documentElement;
      n.appendChild(c),
        (u.style.cssText =
          "-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%"),
        (i = o = l = !1),
        (r = a = !0),
        C.getComputedStyle &&
          ((t = C.getComputedStyle(u)),
          (i = (t || {}).top !== "1%"),
          (l = (t || {}).marginLeft === "2px"),
          (o = (t || { width: "4px" }).width === "4px"),
          (u.style.marginRight = "50%"),
          (r = (t || { marginRight: "4px" }).marginRight === "4px"),
          ((e = u.appendChild(ie.createElement("div"))).style.cssText =
            u.style.cssText =
              "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0"),
          (e.style.marginRight = e.style.width = "0"),
          (u.style.width = "1px"),
          (a = !parseFloat((C.getComputedStyle(e) || {}).marginRight)),
          u.removeChild(e)),
        (u.style.display = "none"),
        (s = u.getClientRects().length === 0) &&
          ((u.style.display = ""),
          (u.innerHTML = "<table><tr><td></td><td>t</td></tr></table>"),
          (u.childNodes[0].style.borderCollapse = "separate"),
          ((e = u.getElementsByTagName("td"))[0].style.cssText =
            "margin:0;border:0;padding:0;display:none"),
          (s = e[0].offsetHeight === 0) &&
            ((e[0].style.display = ""),
            (e[1].style.display = "none"),
            (s = e[0].offsetHeight === 0))),
        n.removeChild(c);
    }
    let i;
    let r;
    let o;
    let s;
    let a;
    let l;
    var c = ie.createElement("div");
    var u = ie.createElement("div");
    u.style &&
      ((u.style.cssText = "float:left;opacity:.5"),
      (de.opacity = u.style.opacity === "0.5"),
      (de.cssFloat = !!u.style.cssFloat),
      (u.style.backgroundClip = "content-box"),
      (u.cloneNode(!0).style.backgroundClip = ""),
      (de.clearCloneStyle = u.style.backgroundClip === "content-box"),
      ((c = ie.createElement("div")).style.cssText =
        "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute"),
      (u.innerHTML = ""),
      c.appendChild(u),
      (de.boxSizing =
        u.style.boxSizing === "" ||
        u.style.MozBoxSizing === "" ||
        u.style.WebkitBoxSizing === ""),
      pe.extend(de, {
        reliableHiddenOffsets: function () {
          return i == null && e(), s;
        },
        boxSizingReliable: function () {
          return i == null && e(), o;
        },
        pixelMarginRight: function () {
          return i == null && e(), r;
        },
        pixelPosition: function () {
          return i == null && e(), i;
        },
        reliableMarginRight: function () {
          return i == null && e(), a;
        },
        reliableMarginLeft: function () {
          return i == null && e(), l;
        },
      }));
  })();
  let mt;
  let vt;
  const yt = /^(top|right|bottom|left)$/;
  C.getComputedStyle
    ? ((mt = function (e) {
        let t = e.ownerDocument.defaultView;
        return (t && t.opener) || (t = C), t.getComputedStyle(e);
      }),
      (vt = function (e, t, n) {
        let i;
        let r;
        let o;
        let s;
        const a = e.style;
        return (
          ((s = (n = n || mt(e))
            ? n.getPropertyValue(t) || n[t]
            : undefined) !== "" &&
            s !== undefined) ||
            pe.contains(e.ownerDocument, e) ||
            (s = pe.style(e, t)),
          n &&
            !de.pixelMarginRight() &&
            pt.test(s) &&
            ht.test(t) &&
            ((i = a.width),
            (r = a.minWidth),
            (o = a.maxWidth),
            (a.minWidth = a.maxWidth = a.width = s),
            (s = n.width),
            (a.width = i),
            (a.minWidth = r),
            (a.maxWidth = o)),
          s === undefined ? s : s + ""
        );
      }))
    : gt.currentStyle &&
      ((mt = function (e) {
        return e.currentStyle;
      }),
      (vt = function (e, t, n) {
        let i;
        let r;
        let o;
        let s;
        const a = e.style;
        return (
          (s = (n = n || mt(e)) ? n[t] : undefined) == null &&
            a &&
            a[t] &&
            (s = a[t]),
          pt.test(s) &&
            !yt.test(t) &&
            ((i = a.left),
            (o = (r = e.runtimeStyle) && r.left) &&
              (r.left = e.currentStyle.left),
            (a.left = t === "fontSize" ? "1em" : s),
            (s = a.pixelLeft + "px"),
            (a.left = i),
            o && (r.left = o)),
          s === undefined ? s : s + "" || "auto"
        );
      }));
  const bt = /alpha\([^)]*\)/i;
  const _t = /opacity\s*=\s*([^)]*)/i;
  const xt = /^(none|table(?!-c[ea]).+)/;
  var wt = new RegExp("^(" + He + ")(.*)$", "i");
  const Ct = { position: "absolute", visibility: "hidden", display: "block" };
  const kt = { letterSpacing: "0", fontWeight: "400" };
  var St = ["Webkit", "O", "Moz", "ms"];
  var Tt = ie.createElement("div").style;
  pe.extend({
    cssHooks: {
      opacity: {
        get: function (e, t) {
          if (t) {
            const n = vt(e, "opacity");
            return n === "" ? "1" : n;
          }
        },
      },
    },
    cssNumber: {
      animationIterationCount: !0,
      columnCount: !0,
      fillOpacity: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
    },
    cssProps: { float: de.cssFloat ? "cssFloat" : "styleFloat" },
    style: function (e, t, n, i) {
      if (e && e.nodeType !== 3 && e.nodeType !== 8 && e.style) {
        let r;
        let o;
        let s;
        const a = pe.camelCase(t);
        const l = e.style;
        if (
          ((t = pe.cssProps[a] || (pe.cssProps[a] = A(a) || a)),
          (s = pe.cssHooks[t] || pe.cssHooks[a]),
          n === undefined)
        ) {
          return s && "get" in s && (r = s.get(e, !1, i)) !== undefined
            ? r
            : l[t];
        }
        if (
          ((o = typeof n) === "string" &&
            (r = Re.exec(n)) &&
            r[1] &&
            ((n = d(e, t, r)), (o = "number")),
          n != null &&
            n == n &&
            (o === "number" &&
              (n += (r && r[3]) || (pe.cssNumber[a] ? "" : "px")),
            de.clearCloneStyle ||
              n !== "" ||
              t.indexOf("background") !== 0 ||
              (l[t] = "inherit"),
            !(s && "set" in s && (n = s.set(e, n, i)) === undefined)))
        ) {
          try {
            l[t] = n;
          } catch (c) {}
        }
      }
    },
    css: function (e, t, n, i) {
      let r;
      let o;
      let s;
      const a = pe.camelCase(t);
      return (
        (t = pe.cssProps[a] || (pe.cssProps[a] = A(a) || a)),
        (s = pe.cssHooks[t] || pe.cssHooks[a]) &&
          "get" in s &&
          (o = s.get(e, !0, n)),
        o === undefined && (o = vt(e, t, i)),
        o === "normal" && t in kt && (o = kt[t]),
        n === "" || n
          ? ((r = parseFloat(o)), !0 === n || isFinite(r) ? r || 0 : o)
          : o
      );
    },
  }),
    pe.each(["height", "width"], function (e, r) {
      pe.cssHooks[r] = {
        get: function (e, t, n) {
          if (t) {
            return xt.test(pe.css(e, "display")) && e.offsetWidth === 0
              ? ft(e, Ct, function () {
                  return F(e, r, n);
                })
              : F(e, r, n);
          }
        },
        set: function (e, t, n) {
          const i = n && mt(e);
          return O(
            e,
            t,
            n
              ? P(
                  e,
                  r,
                  n,
                  de.boxSizing &&
                    pe.css(e, "boxSizing", !1, i) === "border-box",
                  i,
                )
              : 0,
          );
        },
      };
    }),
    de.opacity ||
      (pe.cssHooks.opacity = {
        get: function (e, t) {
          return _t.test(
            (t && e.currentStyle ? e.currentStyle.filter : e.style.filter) ||
              "",
          )
            ? 0.01 * parseFloat(RegExp.$1) + ""
            : t
              ? "1"
              : "";
        },
        set: function (e, t) {
          const n = e.style;
          const i = e.currentStyle;
          const r = pe.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "";
          const o = (i && i.filter) || n.filter || "";
          (((n.zoom = 1) <= t || t === "") &&
            pe.trim(o.replace(bt, "")) === "" &&
            n.removeAttribute &&
            (n.removeAttribute("filter"), t === "" || (i && !i.filter))) ||
            (n.filter = bt.test(o) ? o.replace(bt, r) : o + " " + r);
        },
      }),
    (pe.cssHooks.marginRight = I(de.reliableMarginRight, function (e, t) {
      if (t) return ft(e, { display: "inline-block" }, vt, [e, "marginRight"]);
    })),
    (pe.cssHooks.marginLeft = I(de.reliableMarginLeft, function (e, t) {
      if (t) {
        return (
          (parseFloat(vt(e, "marginLeft")) ||
            (pe.contains(e.ownerDocument, e)
              ? e.getBoundingClientRect().left -
                ft(e, { marginLeft: 0 }, function () {
                  return e.getBoundingClientRect().left;
                })
              : 0)) + "px"
        );
      }
    })),
    pe.each({ margin: "", padding: "", border: "Width" }, function (r, o) {
      (pe.cssHooks[r + o] = {
        expand: function (e) {
          for (
            var t = 0, n = {}, i = typeof e === "string" ? e.split(" ") : [e];
            t < 4;
            t++
          ) {
            n[r + $e[t] + o] = i[t] || i[t - 2] || i[0];
          }
          return n;
        },
      }),
        ht.test(r) || (pe.cssHooks[r + o].set = O);
    }),
    pe.fn.extend({
      css: function (e, t) {
        return ze(
          this,
          function (e, t, n) {
            let i;
            let r;
            const o = {};
            let s = 0;
            if (pe.isArray(t)) {
              for (i = mt(e), r = t.length; s < r; s++) {
                o[t[s]] = pe.css(e, t[s], !1, i);
              }
              return o;
            }
            return n !== undefined ? pe.style(e, t, n) : pe.css(e, t);
          },
          e,
          t,
          arguments.length > 1,
        );
      },
      show: function () {
        return M(this, !0);
      },
      hide: function () {
        return M(this);
      },
      toggle: function (e) {
        return typeof e === "boolean"
          ? e
            ? this.show()
            : this.hide()
          : this.each(function () {
              qe(this) ? pe(this).show() : pe(this).hide();
            });
      },
    }),
    ((pe.Tween = L).prototype = {
      constructor: L,
      init: function (e, t, n, i, r, o) {
        (this.elem = e),
          (this.prop = n),
          (this.easing = r || pe.easing._default),
          (this.options = t),
          (this.start = this.now = this.cur()),
          (this.end = i),
          (this.unit = o || (pe.cssNumber[n] ? "" : "px"));
      },
      cur: function () {
        const e = L.propHooks[this.prop];
        return e && e.get ? e.get(this) : L.propHooks._default.get(this);
      },
      run: function (e) {
        let t;
        const n = L.propHooks[this.prop];
        return (
          this.options.duration
            ? (this.pos = t =
                pe.easing[this.easing](
                  e,
                  this.options.duration * e,
                  0,
                  1,
                  this.options.duration,
                ))
            : (this.pos = t = e),
          (this.now = (this.end - this.start) * t + this.start),
          this.options.step &&
            this.options.step.call(this.elem, this.now, this),
          n && n.set ? n.set(this) : L.propHooks._default.set(this),
          this
        );
      },
    }),
    (L.prototype.init.prototype = L.prototype),
    (L.propHooks = {
      _default: {
        get: function (e) {
          let t;
          return e.elem.nodeType !== 1 ||
            (e.elem[e.prop] != null && e.elem.style[e.prop] == null)
            ? e.elem[e.prop]
            : (t = pe.css(e.elem, e.prop, "")) && t !== "auto"
              ? t
              : 0;
        },
        set: function (e) {
          pe.fx.step[e.prop]
            ? pe.fx.step[e.prop](e)
            : e.elem.nodeType !== 1 ||
                (e.elem.style[pe.cssProps[e.prop]] == null &&
                  !pe.cssHooks[e.prop])
              ? (e.elem[e.prop] = e.now)
              : pe.style(e.elem, e.prop, e.now + e.unit);
        },
      },
    }),
    (L.propHooks.scrollTop = L.propHooks.scrollLeft =
      {
        set: function (e) {
          e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        },
      }),
    (pe.easing = {
      linear: function (e) {
        return e;
      },
      swing: function (e) {
        return 0.5 - Math.cos(e * Math.PI) / 2;
      },
      _default: "swing",
    }),
    (pe.fx = L.prototype.init),
    (pe.fx.step = {});
  let Dt;
  let jt;
  let Nt;
  let Et;
  let It;
  let At;
  let Mt;
  var Ot = /^(?:toggle|show|hide)$/;
  const Pt = /queueHooks$/;
  (pe.Animation = pe.extend(W, {
    tweeners: {
      "*": [
        function (e, t) {
          const n = this.createTween(e, t);
          return d(n.elem, e, Re.exec(t), n), n;
        },
      ],
    },
    tweener: function (e, t) {
      pe.isFunction(e) ? ((t = e), (e = ["*"])) : (e = e.match(Ee));
      for (var n, i = 0, r = e.length; i < r; i++) {
        (n = e[i]),
          (W.tweeners[n] = W.tweeners[n] || []),
          W.tweeners[n].unshift(t);
      }
    },
    prefilters: [q],
    prefilter: function (e, t) {
      t ? W.prefilters.unshift(e) : W.prefilters.push(e);
    },
  })),
    (pe.speed = function (e, t, n) {
      const i =
        e && typeof e === "object"
          ? pe.extend({}, e)
          : {
              complete: n || (!n && t) || (pe.isFunction(e) && e),
              duration: e,
              easing: (n && t) || (t && !pe.isFunction(t) && t),
            };
      return (
        (i.duration = pe.fx.off
          ? 0
          : typeof i.duration === "number"
            ? i.duration
            : i.duration in pe.fx.speeds
              ? pe.fx.speeds[i.duration]
              : pe.fx.speeds._default),
        (i.queue != null && !0 !== i.queue) || (i.queue = "fx"),
        (i.old = i.complete),
        (i.complete = function () {
          pe.isFunction(i.old) && i.old.call(this),
            i.queue && pe.dequeue(this, i.queue);
        }),
        i
      );
    }),
    pe.fn.extend({
      fadeTo: function (e, t, n, i) {
        return this.filter(qe)
          .css("opacity", 0)
          .show()
          .end()
          .animate({ opacity: t }, e, n, i);
      },
      animate: function (t, e, n, i) {
        const r = pe.isEmptyObject(t);
        const o = pe.speed(e, n, i);
        const s = function () {
          const e = W(this, pe.extend({}, t), o);
          (r || pe._data(this, "finish")) && e.stop(!0);
        };
        return (
          (s.finish = s),
          r || !1 === o.queue ? this.each(s) : this.queue(o.queue, s)
        );
      },
      stop: function (r, e, o) {
        const s = function (e) {
          const t = e.stop;
          delete e.stop, t(o);
        };
        return (
          typeof r !== "string" && ((o = e), (e = r), (r = undefined)),
          e && !1 !== r && this.queue(r || "fx", []),
          this.each(function () {
            let e = !0;
            let t = r != null && r + "queueHooks";
            const n = pe.timers;
            const i = pe._data(this);
            if (t) i[t] && i[t].stop && s(i[t]);
            else for (t in i) i[t] && i[t].stop && Pt.test(t) && s(i[t]);
            for (t = n.length; t--; ) {
              n[t].elem !== this ||
                (r != null && n[t].queue !== r) ||
                (n[t].anim.stop(o), (e = !1), n.splice(t, 1));
            }
            (!e && o) || pe.dequeue(this, r);
          })
        );
      },
      finish: function (s) {
        return (
          !1 !== s && (s = s || "fx"),
          this.each(function () {
            let e;
            const t = pe._data(this);
            const n = t[s + "queue"];
            const i = t[s + "queueHooks"];
            const r = pe.timers;
            const o = n ? n.length : 0;
            for (
              t.finish = !0,
                pe.queue(this, s, []),
                i && i.stop && i.stop.call(this, !0),
                e = r.length;
              e--;

            ) {
              r[e].elem === this &&
                r[e].queue === s &&
                (r[e].anim.stop(!0), r.splice(e, 1));
            }
            for (e = 0; e < o; e++) {
              n[e] && n[e].finish && n[e].finish.call(this);
            }
            delete t.finish;
          })
        );
      },
    }),
    pe.each(["toggle", "show", "hide"], function (e, i) {
      const r = pe.fn[i];
      pe.fn[i] = function (e, t, n) {
        return e == null || typeof e === "boolean"
          ? r.apply(this, arguments)
          : this.animate(R(i, !0), e, t, n);
      };
    }),
    pe.each(
      {
        slideDown: R("show"),
        slideUp: R("hide"),
        slideToggle: R("toggle"),
        fadeIn: { opacity: "show" },
        fadeOut: { opacity: "hide" },
        fadeToggle: { opacity: "toggle" },
      },
      function (e, i) {
        pe.fn[e] = function (e, t, n) {
          return this.animate(i, e, t, n);
        };
      },
    ),
    (pe.timers = []),
    (pe.fx.tick = function () {
      let e;
      const t = pe.timers;
      let n = 0;
      for (Dt = pe.now(); n < t.length; n++) {
        (e = t[n])() || t[n] !== e || t.splice(n--, 1);
      }
      t.length || pe.fx.stop(), (Dt = undefined);
    }),
    (pe.fx.timer = function (e) {
      pe.timers.push(e), e() ? pe.fx.start() : pe.timers.pop();
    }),
    (pe.fx.interval = 13),
    (pe.fx.start = function () {
      jt || (jt = C.setInterval(pe.fx.tick, pe.fx.interval));
    }),
    (pe.fx.stop = function () {
      C.clearInterval(jt), (jt = null);
    }),
    (pe.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
    (pe.fn.delay = function (i, e) {
      return (
        (i = (pe.fx && pe.fx.speeds[i]) || i),
        (e = e || "fx"),
        this.queue(e, function (e, t) {
          const n = C.setTimeout(e, i);
          t.stop = function () {
            C.clearTimeout(n);
          };
        })
      );
    }),
    (Et = ie.createElement("input")),
    (It = ie.createElement("div")),
    (At = ie.createElement("select")),
    (Mt = At.appendChild(ie.createElement("option"))),
    (It = ie.createElement("div")).setAttribute("className", "t"),
    (It.innerHTML =
      "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
    (Nt = It.getElementsByTagName("a")[0]),
    Et.setAttribute("type", "checkbox"),
    It.appendChild(Et),
    ((Nt = It.getElementsByTagName("a")[0]).style.cssText = "top:1px"),
    (de.getSetAttribute = It.className !== "t"),
    (de.style = /top/.test(Nt.getAttribute("style"))),
    (de.hrefNormalized = Nt.getAttribute("href") === "/a"),
    (de.checkOn = !!Et.value),
    (de.optSelected = Mt.selected),
    (de.enctype = !!ie.createElement("form").enctype),
    (At.disabled = !0),
    (de.optDisabled = !Mt.disabled),
    (Et = ie.createElement("input")).setAttribute("value", ""),
    (de.input = Et.getAttribute("value") === ""),
    (Et.value = "t"),
    Et.setAttribute("type", "radio"),
    (de.radioValue = Et.value === "t");
  const Ft = /\r/g;
  const Lt = /[\x20\t\r\n\f]+/g;
  pe.fn.extend({
    val: function (n) {
      let i;
      let e;
      let r;
      const t = this[0];
      return arguments.length
        ? ((r = pe.isFunction(n)),
          this.each(function (e) {
            let t;
            this.nodeType === 1 &&
              ((t = r ? n.call(this, e, pe(this).val()) : n) == null
                ? (t = "")
                : typeof t === "number"
                  ? (t += "")
                  : pe.isArray(t) &&
                    (t = pe.map(t, function (e) {
                      return e == null ? "" : e + "";
                    })),
              ((i =
                pe.valHooks[this.type] ||
                pe.valHooks[this.nodeName.toLowerCase()]) &&
                "set" in i &&
                i.set(this, t, "value") !== undefined) ||
                (this.value = t));
          }))
        : t
          ? (i =
              pe.valHooks[t.type] || pe.valHooks[t.nodeName.toLowerCase()]) &&
            "get" in i &&
            (e = i.get(t, "value")) !== undefined
            ? e
            : typeof (e = t.value) === "string"
              ? e.replace(Ft, "")
              : e == null
                ? ""
                : e
          : void 0;
    },
  }),
    pe.extend({
      valHooks: {
        option: {
          get: function (e) {
            const t = pe.find.attr(e, "value");
            return t != null ? t : pe.trim(pe.text(e)).replace(Lt, " ");
          },
        },
        select: {
          get: function (e) {
            for (
              var t,
                n,
                i = e.options,
                r = e.selectedIndex,
                o = e.type === "select-one" || r < 0,
                s = o ? null : [],
                a = o ? r + 1 : i.length,
                l = r < 0 ? a : o ? r : 0;
              l < a;
              l++
            ) {
              if (
                ((n = i[l]).selected || l === r) &&
                (de.optDisabled
                  ? !n.disabled
                  : n.getAttribute("disabled") === null) &&
                (!n.parentNode.disabled ||
                  !pe.nodeName(n.parentNode, "optgroup"))
              ) {
                if (((t = pe(n).val()), o)) return t;
                s.push(t);
              }
            }
            return s;
          },
          set: function (e, t) {
            for (
              var n, i, r = e.options, o = pe.makeArray(t), s = r.length;
              s--;

            ) {
              if (((i = r[s]), pe.inArray(pe.valHooks.option.get(i), o) > -1)) {
                try {
                  i.selected = n = !0;
                } catch (a) {
                  i.scrollHeight;
                }
              } else i.selected = !1;
            }
            return n || (e.selectedIndex = -1), r;
          },
        },
      },
    }),
    pe.each(["radio", "checkbox"], function () {
      (pe.valHooks[this] = {
        set: function (e, t) {
          if (pe.isArray(t)) {
            return (e.checked = pe.inArray(pe(e).val(), t) > -1);
          }
        },
      }),
        de.checkOn ||
          (pe.valHooks[this].get = function (e) {
            return e.getAttribute("value") === null ? "on" : e.value;
          });
    });
  let Ht;
  let Rt;
  const $t = pe.expr.attrHandle;
  const qt = /^(?:checked|selected)$/i;
  const zt = de.getSetAttribute;
  const Wt = de.input;
  pe.fn.extend({
    attr: function (e, t) {
      return ze(this, pe.attr, e, t, arguments.length > 1);
    },
    removeAttr: function (e) {
      return this.each(function () {
        pe.removeAttr(this, e);
      });
    },
  }),
    pe.extend({
      attr: function (e, t, n) {
        let i;
        let r;
        const o = e.nodeType;
        if (o !== 3 && o !== 8 && o !== 2) {
          return typeof e.getAttribute === "undefined"
            ? pe.prop(e, t, n)
            : ((o === 1 && pe.isXMLDoc(e)) ||
                ((t = t.toLowerCase()),
                (r =
                  pe.attrHooks[t] || (pe.expr.match.bool.test(t) ? Rt : Ht))),
              n !== undefined
                ? n === null
                  ? void pe.removeAttr(e, t)
                  : r && "set" in r && (i = r.set(e, n, t)) !== undefined
                    ? i
                    : (e.setAttribute(t, n + ""), n)
                : r && "get" in r && (i = r.get(e, t)) !== null
                  ? i
                  : (i = pe.find.attr(e, t)) == null
                    ? undefined
                    : i);
        }
      },
      attrHooks: {
        type: {
          set: function (e, t) {
            if (!de.radioValue && t === "radio" && pe.nodeName(e, "input")) {
              const n = e.value;
              return e.setAttribute("type", t), n && (e.value = n), t;
            }
          },
        },
      },
      removeAttr: function (e, t) {
        let n;
        let i;
        let r = 0;
        const o = t && t.match(Ee);
        if (o && e.nodeType === 1) {
          for (; (n = o[r++]); ) {
            (i = pe.propFix[n] || n),
              pe.expr.match.bool.test(n)
                ? (Wt && zt) || !qt.test(n)
                  ? (e[i] = !1)
                  : (e[pe.camelCase("default-" + n)] = e[i] = !1)
                : pe.attr(e, n, ""),
              e.removeAttribute(zt ? n : i);
          }
        }
      },
    }),
    (Rt = {
      set: function (e, t, n) {
        return (
          !1 === t
            ? pe.removeAttr(e, n)
            : (Wt && zt) || !qt.test(n)
              ? e.setAttribute((!zt && pe.propFix[n]) || n, n)
              : (e[pe.camelCase("default-" + n)] = e[n] = !0),
          n
        );
      },
    }),
    pe.each(pe.expr.match.bool.source.match(/\w+/g), function (e, t) {
      const o = $t[t] || pe.find.attr;
      (Wt && zt) || !qt.test(t)
        ? ($t[t] = function (e, t, n) {
            let i, r;
            return (
              n ||
                ((r = $t[t]),
                ($t[t] = i),
                (i = o(e, t, n) != null ? t.toLowerCase() : null),
                ($t[t] = r)),
              i
            );
          })
        : ($t[t] = function (e, t, n) {
            if (!n) {
              return e[pe.camelCase("default-" + t)] ? t.toLowerCase() : null;
            }
          });
    }),
    (Wt && zt) ||
      (pe.attrHooks.value = {
        set: function (e, t, n) {
          if (!pe.nodeName(e, "input")) return Ht && Ht.set(e, t, n);
          e.defaultValue = t;
        },
      }),
    zt ||
      ((Ht = {
        set: function (e, t, n) {
          let i = e.getAttributeNode(n);
          if (
            (i || e.setAttributeNode((i = e.ownerDocument.createAttribute(n))),
            (i.value = t += ""),
            n === "value" || t === e.getAttribute(n))
          ) {
            return t;
          }
        },
      }),
      ($t.id =
        $t.name =
        $t.coords =
          function (e, t, n) {
            let i;
            if (!n) {
              return (i = e.getAttributeNode(t)) && i.value !== ""
                ? i.value
                : null;
            }
          }),
      (pe.valHooks.button = {
        get: function (e, t) {
          const n = e.getAttributeNode(t);
          if (n && n.specified) return n.value;
        },
        set: Ht.set,
      }),
      (pe.attrHooks.contenteditable = {
        set: function (e, t, n) {
          Ht.set(e, t !== "" && t, n);
        },
      }),
      pe.each(["width", "height"], function (e, n) {
        pe.attrHooks[n] = {
          set: function (e, t) {
            if (t === "") return e.setAttribute(n, "auto"), t;
          },
        };
      })),
    de.style ||
      (pe.attrHooks.style = {
        get: function (e) {
          return e.style.cssText || undefined;
        },
        set: function (e, t) {
          return (e.style.cssText = t + "");
        },
      });
  const Bt = /^(?:input|select|textarea|button|object)$/i;
  const Ut = /^(?:a|area)$/i;
  pe.fn.extend({
    prop: function (e, t) {
      return ze(this, pe.prop, e, t, arguments.length > 1);
    },
    removeProp: function (t) {
      return (
        (t = pe.propFix[t] || t),
        this.each(function () {
          try {
            (this[t] = undefined), delete this[t];
          } catch (e) {}
        })
      );
    },
  }),
    pe.extend({
      prop: function (e, t, n) {
        let i;
        let r;
        const o = e.nodeType;
        if (o !== 3 && o !== 8 && o !== 2) {
          return (
            (o === 1 && pe.isXMLDoc(e)) ||
              ((t = pe.propFix[t] || t), (r = pe.propHooks[t])),
            n !== undefined
              ? r && "set" in r && (i = r.set(e, n, t)) !== undefined
                ? i
                : (e[t] = n)
              : r && "get" in r && (i = r.get(e, t)) !== null
                ? i
                : e[t]
          );
        }
      },
      propHooks: {
        tabIndex: {
          get: function (e) {
            const t = pe.find.attr(e, "tabindex");
            return t
              ? parseInt(t, 10)
              : Bt.test(e.nodeName) || (Ut.test(e.nodeName) && e.href)
                ? 0
                : -1;
          },
        },
      },
      propFix: { for: "htmlFor", class: "className" },
    }),
    de.hrefNormalized ||
      pe.each(["href", "src"], function (e, t) {
        pe.propHooks[t] = {
          get: function (e) {
            return e.getAttribute(t, 4);
          },
        };
      }),
    de.optSelected ||
      (pe.propHooks.selected = {
        get: function (e) {
          const t = e.parentNode;
          return (
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex),
            null
          );
        },
        set: function (e) {
          const t = e.parentNode;
          t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        },
      }),
    pe.each(
      [
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable",
      ],
      function () {
        pe.propFix[this.toLowerCase()] = this;
      },
    ),
    de.enctype || (pe.propFix.enctype = "encoding");
  const Vt = /[\t\r\n\f]/g;
  pe.fn.extend({
    addClass: function (t) {
      let e;
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l = 0;
      if (pe.isFunction(t)) {
        return this.each(function (e) {
          pe(this).addClass(t.call(this, e, B(this)));
        });
      }
      if (typeof t === "string" && t) {
        for (e = t.match(Ee) || []; (n = this[l++]); ) {
          if (
            ((r = B(n)),
            (i = n.nodeType === 1 && (" " + r + " ").replace(Vt, " ")))
          ) {
            for (s = 0; (o = e[s++]); ) {
              i.indexOf(" " + o + " ") < 0 && (i += o + " ");
            }
            r !== (a = pe.trim(i)) && pe.attr(n, "class", a);
          }
        }
      }
      return this;
    },
    removeClass: function (t) {
      let e;
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l = 0;
      if (pe.isFunction(t)) {
        return this.each(function (e) {
          pe(this).removeClass(t.call(this, e, B(this)));
        });
      }
      if (!arguments.length) return this.attr("class", "");
      if (typeof t === "string" && t) {
        for (e = t.match(Ee) || []; (n = this[l++]); ) {
          if (
            ((r = B(n)),
            (i = n.nodeType === 1 && (" " + r + " ").replace(Vt, " ")))
          ) {
            for (s = 0; (o = e[s++]); ) {
              for (; i.indexOf(" " + o + " ") > -1; ) {
                i = i.replace(" " + o + " ", " ");
              }
            }
            r !== (a = pe.trim(i)) && pe.attr(n, "class", a);
          }
        }
      }
      return this;
    },
    toggleClass: function (r, t) {
      const o = typeof r;
      return typeof t === "boolean" && o === "string"
        ? t
          ? this.addClass(r)
          : this.removeClass(r)
        : pe.isFunction(r)
          ? this.each(function (e) {
              pe(this).toggleClass(r.call(this, e, B(this), t), t);
            })
          : this.each(function () {
              let e, t, n, i;
              if (o === "string") {
                for (
                  t = 0, n = pe(this), i = r.match(Ee) || [];
                  (e = i[t++]);

                ) {
                  n.hasClass(e) ? n.removeClass(e) : n.addClass(e);
                }
              } else {
                (r !== undefined && o !== "boolean") ||
                  ((e = B(this)) && pe._data(this, "__className__", e),
                  pe.attr(
                    this,
                    "class",
                    e || !1 === r ? "" : pe._data(this, "__className__") || "",
                  ));
              }
            });
    },
    hasClass: function (e) {
      let t;
      let n;
      let i = 0;
      for (t = " " + e + " "; (n = this[i++]); ) {
        if (
          n.nodeType === 1 &&
          (" " + B(n) + " ").replace(Vt, " ").indexOf(t) > -1
        ) {
          return !0;
        }
      }
      return !1;
    },
  }),
    pe.each(
      "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(
        " ",
      ),
      function (e, n) {
        pe.fn[n] = function (e, t) {
          return arguments.length > 0
            ? this.on(n, null, e, t)
            : this.trigger(n);
        };
      },
    ),
    pe.fn.extend({
      hover: function (e, t) {
        return this.mouseenter(e).mouseleave(t || e);
      },
    });
  const Kt = C.location;
  let Yt = pe.now();
  const Xt = /\?/;
  const Gt =
    /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
  (pe.parseJSON = function (e) {
    if (C.JSON && C.JSON.parse) return C.JSON.parse(e + "");
    let r;
    let o = null;
    const t = pe.trim(e + "");
    return t &&
      !pe.trim(
        t.replace(Gt, function (e, t, n, i) {
          return (
            r && t && (o = 0), o === 0 ? e : ((r = n || t), (o += !i - !n), "")
          );
        }),
      )
      ? Function("return " + t)()
      : pe.error("Invalid JSON: " + e);
  }),
    (pe.parseXML = function (e) {
      let t;
      if (!e || typeof e !== "string") return null;
      try {
        C.DOMParser
          ? (t = new C.DOMParser().parseFromString(e, "text/xml"))
          : (((t = new C.ActiveXObject("Microsoft.XMLDOM")).async = "false"),
            t.loadXML(e));
      } catch (n) {
        t = undefined;
      }
      return (
        (t &&
          t.documentElement &&
          !t.getElementsByTagName("parsererror").length) ||
          pe.error("Invalid XML: " + e),
        t
      );
    });
  const Qt = /#.*$/;
  const Jt = /([?&])_=[^&]*/;
  const Zt = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm;
  const en = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/;
  const tn = /^(?:GET|HEAD)$/;
  const nn = /^\/\//;
  const rn = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/;
  const on = {};
  var sn = {};
  const an = "*/".concat("*");
  const ln = Kt.href;
  const cn = rn.exec(ln.toLowerCase()) || [];
  pe.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: ln,
      type: "GET",
      isLocal: en.test(cn[1]),
      global: !0,
      processData: !0,
      async: !0,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": an,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript",
      },
      contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON",
      },
      converters: {
        "* text": String,
        "text html": !0,
        "text json": pe.parseJSON,
        "text xml": pe.parseXML,
      },
      flatOptions: { url: !0, context: !0 },
    },
    ajaxSetup: function (e, t) {
      return t ? K(K(e, pe.ajaxSettings), t) : K(pe.ajaxSettings, e);
    },
    ajaxPrefilter: U(on),
    ajaxTransport: U(sn),
    ajax: function (e, t) {
      function n(e, t, n, i) {
        let r;
        let o;
        let s;
        let a;
        let l;
        let c = t;
        x !== 2 &&
          ((x = 2),
          h && C.clearTimeout(h),
          (f = undefined),
          (d = i || ""),
          (w.readyState = e > 0 ? 4 : 0),
          (r = (e >= 200 && e < 300) || e === 304),
          n && (a = Y(g, w, n)),
          (a = X(g, a, w, r)),
          r
            ? (g.ifModified &&
                ((l = w.getResponseHeader("Last-Modified")) &&
                  (pe.lastModified[u] = l),
                (l = w.getResponseHeader("etag")) && (pe.etag[u] = l)),
              e === 204 || g.type === "HEAD"
                ? (c = "nocontent")
                : e === 304
                  ? (c = "notmodified")
                  : ((c = a.state), (o = a.data), (r = !(s = a.error))))
            : ((s = c), (!e && c) || ((c = "error"), e < 0 && (e = 0))),
          (w.status = e),
          (w.statusText = (t || c) + ""),
          r ? y.resolveWith(m, [o, c, w]) : y.rejectWith(m, [w, c, s]),
          w.statusCode(_),
          (_ = undefined),
          p && v.trigger(r ? "ajaxSuccess" : "ajaxError", [w, g, r ? o : s]),
          b.fireWith(m, [w, c]),
          p &&
            (v.trigger("ajaxComplete", [w, g]),
            --pe.active || pe.event.trigger("ajaxStop")));
      }
      typeof e === "object" && ((t = e), (e = undefined)), (t = t || {});
      let i;
      let r;
      let u;
      let d;
      let h;
      let p;
      let f;
      let o;
      var g = pe.ajaxSetup({}, t);
      var m = g.context || g;
      var v = g.context && (m.nodeType || m.jquery) ? pe(m) : pe.event;
      var y = pe.Deferred();
      var b = pe.Callbacks("once memory");
      var _ = g.statusCode || {};
      const s = {};
      const a = {};
      var x = 0;
      let l = "canceled";
      var w = {
        readyState: 0,
        getResponseHeader: function (e) {
          let t;
          if (x === 2) {
            if (!o) {
              for (o = {}; (t = Zt.exec(d)); ) o[t[1].toLowerCase()] = t[2];
            }
            t = o[e.toLowerCase()];
          }
          return t == null ? null : t;
        },
        getAllResponseHeaders: function () {
          return x === 2 ? d : null;
        },
        setRequestHeader: function (e, t) {
          const n = e.toLowerCase();
          return x || ((e = a[n] = a[n] || e), (s[e] = t)), this;
        },
        overrideMimeType: function (e) {
          return x || (g.mimeType = e), this;
        },
        statusCode: function (e) {
          let t;
          if (e) {
            if (x < 2) for (t in e) _[t] = [_[t], e[t]];
            else w.always(e[w.status]);
          }
          return this;
        },
        abort: function (e) {
          const t = e || l;
          return f && f.abort(t), n(0, t), this;
        },
      };
      if (
        ((y.promise(w).complete = b.add),
        (w.success = w.done),
        (w.error = w.fail),
        (g.url = ((e || g.url || ln) + "")
          .replace(Qt, "")
          .replace(nn, cn[1] + "//")),
        (g.type = t.method || t.type || g.method || g.type),
        (g.dataTypes = pe
          .trim(g.dataType || "*")
          .toLowerCase()
          .match(Ee) || [""]),
        g.crossDomain == null &&
          ((i = rn.exec(g.url.toLowerCase())),
          (g.crossDomain = !(
            !i ||
            (i[1] === cn[1] &&
              i[2] === cn[2] &&
              (i[3] || (i[1] === "http:" ? "80" : "443")) ===
                (cn[3] || (cn[1] === "http:" ? "80" : "443")))
          ))),
        g.data &&
          g.processData &&
          typeof g.data !== "string" &&
          (g.data = pe.param(g.data, g.traditional)),
        V(on, g, t, w),
        x === 2)
      ) {
        return w;
      }
      for (r in ((p = pe.event && g.global) &&
        pe.active++ == 0 &&
        pe.event.trigger("ajaxStart"),
      (g.type = g.type.toUpperCase()),
      (g.hasContent = !tn.test(g.type)),
      (u = g.url),
      g.hasContent ||
        (g.data &&
          ((u = g.url += (Xt.test(u) ? "&" : "?") + g.data), delete g.data),
        !1 === g.cache &&
          (g.url = Jt.test(u)
            ? u.replace(Jt, "$1_=" + Yt++)
            : u + (Xt.test(u) ? "&" : "?") + "_=" + Yt++)),
      g.ifModified &&
        (pe.lastModified[u] &&
          w.setRequestHeader("If-Modified-Since", pe.lastModified[u]),
        pe.etag[u] && w.setRequestHeader("If-None-Match", pe.etag[u])),
      ((g.data && g.hasContent && !1 !== g.contentType) || t.contentType) &&
        w.setRequestHeader("Content-Type", g.contentType),
      w.setRequestHeader(
        "Accept",
        g.dataTypes[0] && g.accepts[g.dataTypes[0]]
          ? g.accepts[g.dataTypes[0]] +
              (g.dataTypes[0] !== "*" ? ", " + an + "; q=0.01" : "")
          : g.accepts["*"],
      ),
      g.headers)) {
        w.setRequestHeader(r, g.headers[r]);
      }
      if (g.beforeSend && (!1 === g.beforeSend.call(m, w, g) || x === 2)) {
        return w.abort();
      }
      for (r in ((l = "abort"), { success: 1, error: 1, complete: 1 })) {
        w[r](g[r]);
      }
      if ((f = V(sn, g, t, w))) {
        if (((w.readyState = 1), p && v.trigger("ajaxSend", [w, g]), x === 2)) {
          return w;
        }
        g.async &&
          g.timeout > 0 &&
          (h = C.setTimeout(function () {
            w.abort("timeout");
          }, g.timeout));
        try {
          (x = 1), f.send(s, n);
        } catch (c) {
          if (!(x < 2)) throw c;
          n(-1, c);
        }
      } else n(-1, "No Transport");
      return w;
    },
    getJSON: function (e, t, n) {
      return pe.get(e, t, n, "json");
    },
    getScript: function (e, t) {
      return pe.get(e, undefined, t, "script");
    },
  }),
    pe.each(["get", "post"], function (e, r) {
      pe[r] = function (e, t, n, i) {
        return (
          pe.isFunction(t) && ((i = i || n), (n = t), (t = undefined)),
          pe.ajax(
            pe.extend(
              { url: e, type: r, dataType: i, data: t, success: n },
              pe.isPlainObject(e) && e,
            ),
          )
        );
      };
    }),
    (pe._evalUrl = function (e) {
      return pe.ajax({
        url: e,
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        throws: !0,
      });
    }),
    pe.fn.extend({
      wrapAll: function (t) {
        if (pe.isFunction(t)) {
          return this.each(function (e) {
            pe(this).wrapAll(t.call(this, e));
          });
        }
        if (this[0]) {
          const e = pe(t, this[0].ownerDocument).eq(0).clone(!0);
          this[0].parentNode && e.insertBefore(this[0]),
            e
              .map(function () {
                for (
                  var e = this;
                  e.firstChild && e.firstChild.nodeType === 1;

                ) {
                  e = e.firstChild;
                }
                return e;
              })
              .append(this);
        }
        return this;
      },
      wrapInner: function (n) {
        return pe.isFunction(n)
          ? this.each(function (e) {
              pe(this).wrapInner(n.call(this, e));
            })
          : this.each(function () {
              const e = pe(this);
              const t = e.contents();
              t.length ? t.wrapAll(n) : e.append(n);
            });
      },
      wrap: function (t) {
        const n = pe.isFunction(t);
        return this.each(function (e) {
          pe(this).wrapAll(n ? t.call(this, e) : t);
        });
      },
      unwrap: function () {
        return this.parent()
          .each(function () {
            pe.nodeName(this, "body") || pe(this).replaceWith(this.childNodes);
          })
          .end();
      },
    }),
    (pe.expr.filters.hidden = function (e) {
      return de.reliableHiddenOffsets()
        ? e.offsetWidth <= 0 &&
            e.offsetHeight <= 0 &&
            !e.getClientRects().length
        : Q(e);
    }),
    (pe.expr.filters.visible = function (e) {
      return !pe.expr.filters.hidden(e);
    });
  const un = /%20/g;
  var dn = /\[\]$/;
  const hn = /\r?\n/g;
  const pn = /^(?:submit|button|image|reset|file)$/i;
  const fn = /^(?:input|select|textarea|keygen)/i;
  (pe.param = function (e, t) {
    let n;
    const i = [];
    const r = function (e, t) {
      (t = pe.isFunction(t) ? t() : t == null ? "" : t),
        (i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t));
    };
    if (
      (t === undefined && (t = pe.ajaxSettings && pe.ajaxSettings.traditional),
      pe.isArray(e) || (e.jquery && !pe.isPlainObject(e)))
    ) {
      pe.each(e, function () {
        r(this.name, this.value);
      });
    } else for (n in e) J(n, e[n], t, r);
    return i.join("&").replace(un, "+");
  }),
    pe.fn.extend({
      serialize: function () {
        return pe.param(this.serializeArray());
      },
      serializeArray: function () {
        return this.map(function () {
          const e = pe.prop(this, "elements");
          return e ? pe.makeArray(e) : this;
        })
          .filter(function () {
            const e = this.type;
            return (
              this.name &&
              !pe(this).is(":disabled") &&
              fn.test(this.nodeName) &&
              !pn.test(e) &&
              (this.checked || !We.test(e))
            );
          })
          .map(function (e, t) {
            const n = pe(this).val();
            return n == null
              ? null
              : pe.isArray(n)
                ? pe.map(n, function (e) {
                    return { name: t.name, value: e.replace(hn, "\r\n") };
                  })
                : { name: t.name, value: n.replace(hn, "\r\n") };
          })
          .get();
      },
    }),
    (pe.ajaxSettings.xhr =
      C.ActiveXObject !== undefined
        ? function () {
            return this.isLocal
              ? ee()
              : ie.documentMode > 8
                ? Z()
                : (/^(get|post|head|put|delete|options)$/i.test(this.type) &&
                    Z()) ||
                  ee();
          }
        : Z);
  let gn = 0;
  const mn = {};
  let vn = pe.ajaxSettings.xhr();
  C.attachEvent &&
    C.attachEvent("onunload", function () {
      for (const e in mn) mn[e](undefined, !0);
    }),
    (de.cors = !!vn && "withCredentials" in vn),
    (vn = de.ajax = !!vn) &&
      pe.ajaxTransport(function (c) {
        let u;
        if (!c.crossDomain || de.cors) {
          return {
            send: function (e, s) {
              let t;
              const a = c.xhr();
              const l = ++gn;
              if (
                (a.open(c.type, c.url, c.async, c.username, c.password),
                c.xhrFields)
              ) {
                for (t in c.xhrFields) a[t] = c.xhrFields[t];
              }
              for (t in (c.mimeType &&
                a.overrideMimeType &&
                a.overrideMimeType(c.mimeType),
              c.crossDomain ||
                e["X-Requested-With"] ||
                (e["X-Requested-With"] = "XMLHttpRequest"),
              e)) {
                e[t] !== undefined && a.setRequestHeader(t, e[t] + "");
              }
              a.send((c.hasContent && c.data) || null),
                (u = function (e, t) {
                  let n, i, r;
                  if (u && (t || a.readyState === 4)) {
                    if (
                      (delete mn[l],
                      (u = undefined),
                      (a.onreadystatechange = pe.noop),
                      t)
                    ) {
                      a.readyState !== 4 && a.abort();
                    } else {
                      (r = {}),
                        (n = a.status),
                        typeof a.responseText === "string" &&
                          (r.text = a.responseText);
                      try {
                        i = a.statusText;
                      } catch (o) {
                        i = "";
                      }
                      n || !c.isLocal || c.crossDomain
                        ? n === 1223 && (n = 204)
                        : (n = r.text ? 200 : 404);
                    }
                  }
                  r && s(n, i, r, a.getAllResponseHeaders());
                }),
                c.async
                  ? a.readyState === 4
                    ? C.setTimeout(u)
                    : (a.onreadystatechange = mn[l] = u)
                  : u();
            },
            abort: function () {
              u && u(undefined, !0);
            },
          };
        }
      }),
    pe.ajaxSetup({
      accepts: {
        script:
          "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
      },
      contents: { script: /\b(?:java|ecma)script\b/ },
      converters: {
        "text script": function (e) {
          return pe.globalEval(e), e;
        },
      },
    }),
    pe.ajaxPrefilter("script", function (e) {
      e.cache === undefined && (e.cache = !1),
        e.crossDomain && ((e.type = "GET"), (e.global = !1));
    }),
    pe.ajaxTransport("script", function (t) {
      if (t.crossDomain) {
        let i;
        const r = ie.head || pe("head")[0] || ie.documentElement;
        return {
          send: function (e, n) {
            ((i = ie.createElement("script")).async = !0),
              t.scriptCharset && (i.charset = t.scriptCharset),
              (i.src = t.url),
              (i.onload = i.onreadystatechange =
                function (e, t) {
                  (t ||
                    !i.readyState ||
                    /loaded|complete/.test(i.readyState)) &&
                    ((i.onload = i.onreadystatechange = null),
                    i.parentNode && i.parentNode.removeChild(i),
                    (i = null),
                    t || n(200, "success"));
                }),
              r.insertBefore(i, r.firstChild);
          },
          abort: function () {
            i && i.onload(undefined, !0);
          },
        };
      }
    });
  const yn = [];
  const bn = /(=)\?(?=&|$)|\?\?/;
  pe.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function () {
      const e = yn.pop() || pe.expando + "_" + Yt++;
      return (this[e] = !0), e;
    },
  }),
    pe.ajaxPrefilter("json jsonp", function (e, t, n) {
      let i;
      let r;
      let o;
      const s =
        !1 !== e.jsonp &&
        (bn.test(e.url)
          ? "url"
          : typeof e.data === "string" &&
            (e.contentType || "").indexOf(
              "application/x-www-form-urlencoded",
            ) === 0 &&
            bn.test(e.data) &&
            "data");
      if (s || e.dataTypes[0] === "jsonp") {
        return (
          (i = e.jsonpCallback =
            pe.isFunction(e.jsonpCallback)
              ? e.jsonpCallback()
              : e.jsonpCallback),
          s
            ? (e[s] = e[s].replace(bn, "$1" + i))
            : !1 !== e.jsonp &&
              (e.url += (Xt.test(e.url) ? "&" : "?") + e.jsonp + "=" + i),
          (e.converters["script json"] = function () {
            return o || pe.error(i + " was not called"), o[0];
          }),
          (e.dataTypes[0] = "json"),
          (r = C[i]),
          (C[i] = function () {
            o = arguments;
          }),
          n.always(function () {
            r === undefined ? pe(C).removeProp(i) : (C[i] = r),
              e[i] && ((e.jsonpCallback = t.jsonpCallback), yn.push(i)),
              o && pe.isFunction(r) && r(o[0]),
              (o = r = undefined);
          }),
          "script"
        );
      }
    }),
    (pe.parseHTML = function (e, t, n) {
      if (!e || typeof e !== "string") return null;
      typeof t === "boolean" && ((n = t), (t = !1)), (t = t || ie);
      let i = we.exec(e);
      const r = !n && [];
      return i
        ? [t.createElement(i[1])]
        : ((i = g([e], t, r)),
          r && r.length && pe(r).remove(),
          pe.merge([], i.childNodes));
    });
  const _n = pe.fn.load;
  (pe.fn.load = function (e, t, n) {
    if (typeof e !== "string" && _n) return _n.apply(this, arguments);
    let i;
    let r;
    let o;
    const s = this;
    const a = e.indexOf(" ");
    return (
      a > -1 && ((i = pe.trim(e.slice(a, e.length))), (e = e.slice(0, a))),
      pe.isFunction(t)
        ? ((n = t), (t = undefined))
        : t && typeof t === "object" && (r = "POST"),
      s.length > 0 &&
        pe
          .ajax({ url: e, type: r || "GET", dataType: "html", data: t })
          .done(function (e) {
            (o = arguments),
              s.html(i ? pe("<div>").append(pe.parseHTML(e)).find(i) : e);
          })
          .always(
            n &&
              function (e, t) {
                s.each(function () {
                  n.apply(this, o || [e.responseText, t, e]);
                });
              },
          ),
      this
    );
  }),
    pe.each(
      [
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend",
      ],
      function (e, t) {
        pe.fn[t] = function (e) {
          return this.on(t, e);
        };
      },
    ),
    (pe.expr.filters.animated = function (t) {
      return pe.grep(pe.timers, function (e) {
        return t === e.elem;
      }).length;
    }),
    (pe.offset = {
      setOffset: function (e, t, n) {
        let i;
        let r;
        let o;
        let s;
        let a;
        let l;
        const c = pe.css(e, "position");
        const u = pe(e);
        const d = {};
        c === "static" && (e.style.position = "relative"),
          (a = u.offset()),
          (o = pe.css(e, "top")),
          (l = pe.css(e, "left")),
          (c === "absolute" || c === "fixed") && pe.inArray("auto", [o, l]) > -1
            ? ((s = (i = u.position()).top), (r = i.left))
            : ((s = parseFloat(o) || 0), (r = parseFloat(l) || 0)),
          pe.isFunction(t) && (t = t.call(e, n, pe.extend({}, a))),
          t.top != null && (d.top = t.top - a.top + s),
          t.left != null && (d.left = t.left - a.left + r),
          "using" in t ? t.using.call(e, d) : u.css(d);
      },
    }),
    pe.fn.extend({
      offset: function (t) {
        if (arguments.length) {
          return t === undefined
            ? this
            : this.each(function (e) {
                pe.offset.setOffset(this, t, e);
              });
        }
        let e;
        let n;
        let i = { top: 0, left: 0 };
        const r = this[0];
        const o = r && r.ownerDocument;
        return o
          ? ((e = o.documentElement),
            pe.contains(e, r)
              ? (typeof r.getBoundingClientRect !== "undefined" &&
                  (i = r.getBoundingClientRect()),
                (n = te(o)),
                {
                  top:
                    i.top + (n.pageYOffset || e.scrollTop) - (e.clientTop || 0),
                  left:
                    i.left +
                    (n.pageXOffset || e.scrollLeft) -
                    (e.clientLeft || 0),
                })
              : i)
          : void 0;
      },
      position: function () {
        if (this[0]) {
          let e;
          let t;
          let n = { top: 0, left: 0 };
          const i = this[0];
          return (
            pe.css(i, "position") === "fixed"
              ? (t = i.getBoundingClientRect())
              : ((e = this.offsetParent()),
                (t = this.offset()),
                pe.nodeName(e[0], "html") || (n = e.offset()),
                (n.top += pe.css(e[0], "borderTopWidth", !0)),
                (n.left += pe.css(e[0], "borderLeftWidth", !0))),
            {
              top: t.top - n.top - pe.css(i, "marginTop", !0),
              left: t.left - n.left - pe.css(i, "marginLeft", !0),
            }
          );
        }
      },
      offsetParent: function () {
        return this.map(function () {
          for (
            var e = this.offsetParent;
            e && !pe.nodeName(e, "html") && pe.css(e, "position") === "static";

          ) {
            e = e.offsetParent;
          }
          return e || gt;
        });
      },
    }),
    pe.each(
      { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
      function (t, r) {
        const o = /Y/.test(r);
        pe.fn[t] = function (e) {
          return ze(
            this,
            function (e, t, n) {
              const i = te(e);
              if (n === undefined) {
                return i
                  ? r in i
                    ? i[r]
                    : i.document.documentElement[t]
                  : e[t];
              }
              i
                ? i.scrollTo(
                    o ? pe(i).scrollLeft() : n,
                    o ? n : pe(i).scrollTop(),
                  )
                : (e[t] = n);
            },
            t,
            e,
            arguments.length,
            null,
          );
        };
      },
    ),
    pe.each(["top", "left"], function (e, n) {
      pe.cssHooks[n] = I(de.pixelPosition, function (e, t) {
        if (t) {
          return (t = vt(e, n)), pt.test(t) ? pe(e).position()[n] + "px" : t;
        }
      });
    }),
    pe.each({ Height: "height", Width: "width" }, function (o, s) {
      pe.each(
        { padding: "inner" + o, content: s, "": "outer" + o },
        function (i, e) {
          pe.fn[e] = function (e, t) {
            const n = arguments.length && (i || typeof e !== "boolean");
            const r = i || (!0 === e || !0 === t ? "margin" : "border");
            return ze(
              this,
              function (e, t, n) {
                let i;
                return pe.isWindow(e)
                  ? e.document.documentElement["client" + o]
                  : e.nodeType === 9
                    ? ((i = e.documentElement),
                      Math.max(
                        e.body["scroll" + o],
                        i["scroll" + o],
                        e.body["offset" + o],
                        i["offset" + o],
                        i["client" + o],
                      ))
                    : n === undefined
                      ? pe.css(e, t, r)
                      : pe.style(e, t, n, r);
              },
              s,
              n ? e : undefined,
              n,
              null,
            );
          };
        },
      );
    }),
    pe.fn.extend({
      bind: function (e, t, n) {
        return this.on(e, null, t, n);
      },
      unbind: function (e, t) {
        return this.off(e, null, t);
      },
      delegate: function (e, t, n, i) {
        return this.on(t, e, n, i);
      },
      undelegate: function (e, t, n) {
        return arguments.length === 1
          ? this.off(e, "**")
          : this.off(t, e || "**", n);
      },
    }),
    (pe.fn.size = function () {
      return this.length;
    }),
    (pe.fn.andSelf = pe.fn.addBack),
    typeof define === "function" &&
      define.amd &&
      define("jquery", [], function () {
        return pe;
      });
  const xn = C.jQuery;
  const wn = C.$;
  return (
    (pe.noConflict = function (e) {
      return (
        C.$ === pe && (C.$ = wn), e && C.jQuery === pe && (C.jQuery = xn), pe
      );
    }),
    e || (C.jQuery = C.$ = pe),
    pe
  );
}),
  (function () {
    "use strict";
    const e = function (u, l) {
      let c;
      u.rails !== l && u.error("jquery-ujs has already been loaded!");
      const e = u(document);
      (u.rails = c =
        {
          linkClickSelector:
            "a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]",
          buttonClickSelector:
            "button[data-remote]:not([form]):not(form button), button[data-confirm]:not([form]):not(form button)",
          inputChangeSelector:
            "select[data-remote], input[data-remote], textarea[data-remote]",
          formSubmitSelector: "form:not([data-turbo=true])",
          formInputClickSelector:
            "form:not([data-turbo=true]) input[type=submit], form:not([data-turbo=true]) input[type=image], form:not([data-turbo=true]) button[type=submit], form:not([data-turbo=true]) button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])",
          disableSelector:
            "input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled",
          enableSelector:
            "input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled",
          requiredInputSelector:
            "input[name][required]:not([disabled]), textarea[name][required]:not([disabled])",
          fileInputSelector: "input[name][type=file]:not([disabled])",
          linkDisableSelector: "a[data-disable-with], a[data-disable]",
          buttonDisableSelector:
            "button[data-remote][data-disable-with], button[data-remote][data-disable]",
          csrfToken: function () {
            return u("meta[name=csrf-token]").attr("content");
          },
          csrfParam: function () {
            return u("meta[name=csrf-param]").attr("content");
          },
          CSRFProtection: function (e) {
            const t = c.csrfToken();
            t && e.setRequestHeader("X-CSRF-Token", t);
          },
          refreshCSRFTokens: function () {
            u('form input[name="' + c.csrfParam() + '"]').val(c.csrfToken());
          },
          fire: function (e, t, n) {
            const i = u.Event(t);
            return e.trigger(i, n), !1 !== i.result;
          },
          confirm: function (e) {
            return confirm(e);
          },
          ajax: function (e) {
            return u.ajax(e);
          },
          href: function (e) {
            return e[0].href;
          },
          isRemote: function (e) {
            return e.data("remote") !== l && !1 !== e.data("remote");
          },
          handleRemote: function (i) {
            let e, t, n, r, o, s;
            if (c.fire(i, "ajax:before")) {
              if (
                ((r = i.data("with-credentials") || null),
                (o =
                  i.data("type") ||
                  (u.ajaxSettings && u.ajaxSettings.dataType)),
                i.is("form"))
              ) {
                (e =
                  i.data("ujs:submit-button-formmethod") || i.attr("method")),
                  (t =
                    i.data("ujs:submit-button-formaction") || i.attr("action")),
                  (n = u(i[0]).serializeArray());
                const a = i.data("ujs:submit-button");
                a && (n.push(a), i.data("ujs:submit-button", null)),
                  i.data("ujs:submit-button-formmethod", null),
                  i.data("ujs:submit-button-formaction", null);
              } else {
                i.is(c.inputChangeSelector)
                  ? ((e = i.data("method")),
                    (t = i.data("url")),
                    (n = i.serialize()),
                    i.data("params") && (n = n + "&" + i.data("params")))
                  : i.is(c.buttonClickSelector)
                    ? ((e = i.data("method") || "get"),
                      (t = i.data("url")),
                      (n = i.serialize()),
                      i.data("params") && (n = n + "&" + i.data("params")))
                    : ((e = i.data("method")),
                      (t = c.href(i)),
                      (n = i.data("params") || null));
              }
              return (
                (s = {
                  type: e || "GET",
                  data: n,
                  dataType: o,
                  beforeSend: function (e, t) {
                    if (
                      (t.dataType === l &&
                        e.setRequestHeader(
                          "accept",
                          "*/*;q=0.5, " + t.accepts.script,
                        ),
                      !c.fire(i, "ajax:beforeSend", [e, t]))
                    ) {
                      return !1;
                    }
                    i.trigger("ajax:send", e);
                  },
                  success: function (e, t, n) {
                    i.trigger("ajax:success", [e, t, n]);
                  },
                  complete: function (e, t) {
                    i.trigger("ajax:complete", [e, t]);
                  },
                  error: function (e, t, n) {
                    i.trigger("ajax:error", [e, t, n]);
                  },
                  crossDomain: c.isCrossDomain(t),
                }),
                r && (s.xhrFields = { withCredentials: r }),
                t && (s.url = t),
                c.ajax(s)
              );
            }
            return !1;
          },
          isCrossDomain: function (e) {
            const t = document.createElement("a");
            t.href = location.href;
            const n = document.createElement("a");
            try {
              return (
                (n.href = e),
                (n.href = n.href),
                !(
                  ((!n.protocol || n.protocol === ":") && !n.host) ||
                  t.protocol + "//" + t.host == n.protocol + "//" + n.host
                )
              );
            } catch (i) {
              return !0;
            }
          },
          handleMethod: function (e) {
            const t = c.href(e);
            const n = e.data("method");
            const i = e.attr("target");
            const r = c.csrfToken();
            const o = c.csrfParam();
            const s = u('<form method="post" action="' + t + '"></form>');
            let a = '<input name="_method" value="' + n + '" type="hidden" />';
            o === l ||
              r === l ||
              c.isCrossDomain(t) ||
              (a +=
                '<input name="' + o + '" value="' + r + '" type="hidden" />'),
              i && s.attr("target", i),
              s.hide().append(a).appendTo("body"),
              s.submit();
          },
          formElements: function (e, t) {
            return e.is("form") ? u(e[0].elements).filter(t) : e.find(t);
          },
          disableFormElements: function (e) {
            c.formElements(e, c.disableSelector).each(function () {
              c.disableFormElement(u(this));
            });
          },
          disableFormElement: function (e) {
            let t, n;
            (t = e.is("button") ? "html" : "val"),
              (n = e.data("disable-with")) !== l &&
                (e.data("ujs:enable-with", e[t]()), e[t](n)),
              e.prop("disabled", !0),
              e.data("ujs:disabled", !0);
          },
          enableFormElements: function (e) {
            c.formElements(e, c.enableSelector).each(function () {
              c.enableFormElement(u(this));
            });
          },
          enableFormElement: function (e) {
            const t = e.is("button") ? "html" : "val";
            e.data("ujs:enable-with") !== l &&
              (e[t](e.data("ujs:enable-with")),
              e.removeData("ujs:enable-with")),
              e.prop("disabled", !1),
              e.removeData("ujs:disabled");
          },
          allowAction: function (e) {
            let t;
            const n = e.data("confirm");
            let i = !1;
            if (!n) return !0;
            if (c.fire(e, "confirm")) {
              try {
                i = c.confirm(n);
              } catch (r) {
                (console.error || console.log).call(console, r.stack || r);
              }
              t = c.fire(e, "confirm:complete", [i]);
            }
            return i && t;
          },
          blankInputs: function (e, t, n) {
            let i;
            let r;
            let o;
            let s = u();
            const a = t || "input,textarea";
            const l = e.find(a);
            const c = {};
            return (
              l.each(function () {
                (i = u(this)).is("input[type=radio]")
                  ? ((o = i.attr("name")),
                    c[o] ||
                      (e.find('input[type=radio]:checked[name="' + o + '"]')
                        .length === 0 &&
                        ((r = e.find('input[type=radio][name="' + o + '"]')),
                        (s = s.add(r))),
                      (c[o] = o)))
                  : (i.is("input[type=checkbox],input[type=radio]")
                      ? i.is(":checked")
                      : !!i.val()) === n && (s = s.add(i));
              }),
              !!s.length && s
            );
          },
          nonBlankInputs: function (e, t) {
            return c.blankInputs(e, t, !0);
          },
          stopEverything: function (e) {
            return (
              u(e.target).trigger("ujs:everythingStopped"),
              e.stopImmediatePropagation(),
              !1
            );
          },
          disableElement: function (e) {
            const t = e.data("disable-with");
            t !== l && (e.data("ujs:enable-with", e.html()), e.html(t)),
              e.on("click.railsDisable", function (e) {
                return c.stopEverything(e);
              }),
              e.data("ujs:disabled", !0);
          },
          enableElement: function (e) {
            e.data("ujs:enable-with") !== l &&
              (e.html(e.data("ujs:enable-with")),
              e.removeData("ujs:enable-with")),
              e.off("click.railsDisable"),
              e.removeData("ujs:disabled");
          },
        }),
        c.fire(e, "rails:attachBindings") &&
          (u.ajaxPrefilter(function (e, t, n) {
            e.crossDomain || c.CSRFProtection(n);
          }),
          u(window).on("pageshow.rails", function () {
            u(u.rails.enableSelector).each(function () {
              const e = u(this);
              e.data("ujs:disabled") && u.rails.enableFormElement(e);
            }),
              u(u.rails.linkDisableSelector).each(function () {
                const e = u(this);
                e.data("ujs:disabled") && u.rails.enableElement(e);
              });
          }),
          e.on("ajax:complete", c.linkDisableSelector, function () {
            c.enableElement(u(this));
          }),
          e.on("ajax:complete", c.buttonDisableSelector, function () {
            c.enableFormElement(u(this));
          }),
          e.on("click.rails", c.linkClickSelector, function (e) {
            const t = u(this);
            const n = t.data("method");
            const i = t.data("params");
            const r = e.metaKey || e.ctrlKey;
            if (!c.allowAction(t)) return c.stopEverything(e);
            if (
              (!r && t.is(c.linkDisableSelector) && c.disableElement(t),
              c.isRemote(t))
            ) {
              if (r && (!n || n === "GET") && !i) return !0;
              const o = c.handleRemote(t);
              return (
                !1 === o
                  ? c.enableElement(t)
                  : o.fail(function () {
                      c.enableElement(t);
                    }),
                !1
              );
            }
            return n ? (c.handleMethod(t), !1) : void 0;
          }),
          e.on("click.rails", c.buttonClickSelector, function (e) {
            const t = u(this);
            if (!c.allowAction(t) || !c.isRemote(t)) return c.stopEverything(e);
            t.is(c.buttonDisableSelector) && c.disableFormElement(t);
            const n = c.handleRemote(t);
            return (
              !1 === n
                ? c.enableFormElement(t)
                : n.fail(function () {
                    c.enableFormElement(t);
                  }),
              !1
            );
          }),
          e.on("change.rails", c.inputChangeSelector, function (e) {
            const t = u(this);
            return c.allowAction(t) && c.isRemote(t)
              ? (c.handleRemote(t), !1)
              : c.stopEverything(e);
          }),
          e.on("submit.rails", c.formSubmitSelector, function (e) {
            let t;
            let n;
            const i = u(this);
            const r = c.isRemote(i);
            if (!c.allowAction(i)) return c.stopEverything(e);
            if (i.attr("novalidate") === l) {
              if (i.data("ujs:formnovalidate-button") === l) {
                if (
                  (t = c.blankInputs(i, c.requiredInputSelector, !1)) &&
                  c.fire(i, "ajax:aborted:required", [t])
                ) {
                  return c.stopEverything(e);
                }
              } else i.data("ujs:formnovalidate-button", l);
            }
            if (r) {
              if ((n = c.nonBlankInputs(i, c.fileInputSelector))) {
                setTimeout(function () {
                  c.disableFormElements(i);
                }, 13);
                const o = c.fire(i, "ajax:aborted:file", [n]);
                return (
                  o ||
                    setTimeout(function () {
                      c.enableFormElements(i);
                    }, 13),
                  o
                );
              }
              return c.handleRemote(i), !1;
            }
            setTimeout(function () {
              c.disableFormElements(i);
            }, 13);
          }),
          e.on("click.rails", c.formInputClickSelector, function (e) {
            const t = u(this);
            if (!c.allowAction(t)) return c.stopEverything(e);
            const n = t.attr("name");
            const i = n ? { name: n, value: t.val() } : null;
            let r = t.closest("form");
            r.length === 0 && (r = u("#" + t.attr("form"))),
              r.data("ujs:submit-button", i),
              r.data("ujs:formnovalidate-button", t.attr("formnovalidate")),
              r.data("ujs:submit-button-formaction", t.attr("formaction")),
              r.data("ujs:submit-button-formmethod", t.attr("formmethod"));
          }),
          e.on("ajax:send.rails", c.formSubmitSelector, function (e) {
            this === e.target && c.disableFormElements(u(this));
          }),
          e.on("ajax:complete.rails", c.formSubmitSelector, function (e) {
            this === e.target && c.enableFormElements(u(this));
          }),
          u(function () {
            c.refreshCSRFTokens();
          }));
    };
    window.jQuery
      ? e(jQuery)
      : typeof exports === "object" &&
        typeof module === "object" &&
        (module.exports = e);
  })(),
  (function (n) {
    "use strict";
    typeof define === "function" && define.amd
      ? define(["jquery"], function (e) {
          return n(e, window, document);
        })
      : typeof exports === "object"
        ? (module.exports = function (e, t) {
            return (
              e || (e = window),
              t ||
                (t =
                  typeof window !== "undefined"
                    ? require("jquery")
                    : require("jquery")(e)),
              n(t, e, e.document)
            );
          })
        : n(jQuery, window, document);
  })(function ($, j, y, q) {
    "use strict";
    function s(t) {
      let n;
      let i;
      const r = "a aa ai ao as b fn i m o s ";
      const o = {};
      $.each(t, function (e) {
        (n = e.match(/^([^A-Z]+?)([A-Z])/)) &&
          r.indexOf(n[1] + " ") !== -1 &&
          ((i = e.replace(n[0], n[2].toLowerCase())),
          (o[i] = e),
          n[1] === "o" && s(t[e]));
      }),
        (t._hungarianMap = o);
    }
    function I(t, n, i) {
      let r;
      t._hungarianMap || s(t),
        $.each(n, function (e) {
          (r = t._hungarianMap[e]) === q ||
            (!i && n[r] !== q) ||
            (r.charAt(0) === "o"
              ? (n[r] || (n[r] = {}),
                $.extend(!0, n[r], n[e]),
                I(t[r], n[r], i))
              : (n[r] = n[e]));
        });
    }
    function A(e) {
      const t = Ve.defaults.oLanguage;
      const n = e.sZeroRecords;
      !e.sEmptyTable &&
        n &&
        t.sEmptyTable === "No data available in table" &&
        Pe(e, e, "sZeroRecords", "sEmptyTable"),
        !e.sLoadingRecords &&
          n &&
          t.sLoadingRecords === "Loading..." &&
          Pe(e, e, "sZeroRecords", "sLoadingRecords"),
        e.sInfoThousands && (e.sThousands = e.sInfoThousands);
      const i = e.sDecimal;
      i && Be(i);
    }
    function M(e) {
      mt(e, "ordering", "bSort"),
        mt(e, "orderMulti", "bSortMulti"),
        mt(e, "orderClasses", "bSortClasses"),
        mt(e, "orderCellsTop", "bSortCellsTop"),
        mt(e, "order", "aaSorting"),
        mt(e, "orderFixed", "aaSortingFixed"),
        mt(e, "paging", "bPaginate"),
        mt(e, "pagingType", "sPaginationType"),
        mt(e, "pageLength", "iDisplayLength"),
        mt(e, "searching", "bFilter"),
        typeof e.sScrollX === "boolean" &&
          (e.sScrollX = e.sScrollX ? "100%" : ""),
        typeof e.scrollX === "boolean" && (e.scrollX = e.scrollX ? "100%" : "");
      const t = e.aoSearchCols;
      if (t) {
        for (let n = 0, i = t.length; n < i; n++) {
          t[n] && I(Ve.models.oSearch, t[n]);
        }
      }
    }
    function O(e) {
      mt(e, "orderable", "bSortable"),
        mt(e, "orderData", "aDataSort"),
        mt(e, "orderSequence", "asSorting"),
        mt(e, "orderDataType", "sortDataType");
      const t = e.aDataSort;
      t && !$.isArray(t) && (e.aDataSort = [t]);
    }
    function P(e) {
      if (!Ve.__browser) {
        const t = {};
        Ve.__browser = t;
        const n = $("<div/>")
          .css({
            position: "fixed",
            top: 0,
            left: 0,
            height: 1,
            width: 1,
            overflow: "hidden",
          })
          .append(
            $("<div/>")
              .css({
                position: "absolute",
                top: 1,
                left: 1,
                width: 100,
                overflow: "scroll",
              })
              .append($("<div/>").css({ width: "100%", height: 10 })),
          )
          .appendTo("body");
        const i = n.children();
        const r = i.children();
        (t.barWidth = i[0].offsetWidth - i[0].clientWidth),
          (t.bScrollOversize =
            r[0].offsetWidth === 100 && i[0].clientWidth !== 100),
          (t.bScrollbarLeft = Math.round(r.offset().left) !== 1),
          (t.bBounding = !!n[0].getBoundingClientRect().width),
          n.remove();
      }
      $.extend(e.oBrowser, Ve.__browser),
        (e.oScroll.iBarWidth = Ve.__browser.barWidth);
    }
    function n(e, t, n, i, r, o) {
      let s;
      let a = i;
      let l = !1;
      for (n !== q && ((s = n), (l = !0)); a !== r; ) {
        e.hasOwnProperty(a) &&
          ((s = l ? t(s, e[a], a, e) : e[a]), (l = !0), (a += o));
      }
      return s;
    }
    function F(e, t) {
      const n = Ve.defaults.column;
      const i = e.aoColumns.length;
      const r = $.extend({}, Ve.models.oColumn, n, {
        nTh: t || y.createElement("th"),
        sTitle: n.sTitle ? n.sTitle : t ? t.innerHTML : "",
        aDataSort: n.aDataSort ? n.aDataSort : [i],
        mData: n.mData ? n.mData : i,
        idx: i,
      });
      e.aoColumns.push(r);
      const o = e.aoPreSearchCols;
      (o[i] = $.extend({}, Ve.models.oSearch, o[i])), L(e, i, $(t).data());
    }
    function L(e, t, n) {
      const i = e.aoColumns[t];
      const r = e.oClasses;
      const o = $(i.nTh);
      if (!i.sWidthOrig) {
        i.sWidthOrig = o.attr("width") || null;
        const s = (o.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
        s && (i.sWidthOrig = s[1]);
      }
      n !== q &&
        n !== null &&
        (O(n),
        I(Ve.defaults.column, n),
        n.mDataProp === q || n.mData || (n.mData = n.mDataProp),
        n.sType && (i._sManualType = n.sType),
        n.className && !n.sClass && (n.sClass = n.className),
        $.extend(i, n),
        Pe(i, n, "sWidth", "sWidthOrig"),
        n.iDataSort !== q && (i.aDataSort = [n.iDataSort]),
        Pe(i, n, "aDataSort"));
      const a = i.mData;
      const l = U(a);
      const c = i.mRender ? U(i.mRender) : null;
      const u = function (e) {
        return typeof e === "string" && e.indexOf("@") !== -1;
      };
      (i._bAttrSrc =
        $.isPlainObject(a) && (u(a.sort) || u(a.type) || u(a.filter))),
        (i.fnGetData = function (e, t, n) {
          const i = l(e, t, q, n);
          return c && t ? c(i, t, e, n) : i;
        }),
        (i.fnSetData = function (e, t, n) {
          return b(a)(e, t, n);
        }),
        typeof a !== "number" && (e._rowReadObject = !0),
        e.oFeatures.bSort || ((i.bSortable = !1), o.addClass(r.sSortableNone));
      const d = $.inArray("asc", i.asSorting) !== -1;
      const h = $.inArray("desc", i.asSorting) !== -1;
      i.bSortable && (d || h)
        ? d && !h
          ? ((i.sSortingClass = r.sSortableAsc),
            (i.sSortingClassJUI = r.sSortJUIAscAllowed))
          : !d && h
            ? ((i.sSortingClass = r.sSortableDesc),
              (i.sSortingClassJUI = r.sSortJUIDescAllowed))
            : ((i.sSortingClass = r.sSortable),
              (i.sSortingClassJUI = r.sSortJUI))
        : ((i.sSortingClass = r.sSortableNone), (i.sSortingClassJUI = ""));
    }
    function z(e) {
      if (!1 !== e.oFeatures.bAutoWidth) {
        const t = e.aoColumns;
        ye(e);
        for (let n = 0, i = t.length; n < i; n++) {
          t[n].nTh.style.width = t[n].sWidth;
        }
      }
      const r = e.oScroll;
      (r.sY === "" && r.sX === "") || me(e), Re(e, null, "column-sizing", [e]);
    }
    function W(e, t) {
      const n = E(e, "bVisible");
      return typeof n[t] === "number" ? n[t] : null;
    }
    function u(e, t) {
      const n = E(e, "bVisible");
      const i = $.inArray(t, n);
      return i !== -1 ? i : null;
    }
    function N(e) {
      return E(e, "bVisible").length;
    }
    function E(e, n) {
      const i = [];
      return (
        $.map(e.aoColumns, function (e, t) {
          e[n] && i.push(t);
        }),
        i
      );
    }
    function l(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      const u = e.aoColumns;
      const d = e.aoData;
      const h = Ve.ext.type.detect;
      for (t = 0, n = u.length; t < n; t++) {
        if (((c = []), !(a = u[t]).sType && a._sManualType)) {
          a.sType = a._sManualType;
        } else if (!a.sType) {
          for (i = 0, r = h.length; i < r; i++) {
            for (
              o = 0, s = d.length;
              o < s &&
              (c[o] === q && (c[o] = g(e, o, t, "type")),
              (l = h[i](c[o], e)) || i === h.length - 1) &&
              l !== "html";
              o++
            );
            if (l) {
              a.sType = l;
              break;
            }
          }
          a.sType || (a.sType = "string");
        }
      }
    }
    function H(e, t, n, i) {
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      const d = e.aoColumns;
      if (t) {
        for (r = t.length - 1; r >= 0; r--) {
          let h = (u = t[r]).targets !== q ? u.targets : u.aTargets;
          for ($.isArray(h) || (h = [h]), s = 0, a = h.length; s < a; s++) {
            if (typeof h[s] === "number" && h[s] >= 0) {
              for (; d.length <= h[s]; ) F(e);
              i(h[s], u);
            } else if (typeof h[s] === "number" && h[s] < 0) {
              i(d.length + h[s], u);
            } else if (typeof h[s] === "string") {
              for (l = 0, c = d.length; l < c; l++) {
                (h[s] == "_all" || $(d[l].nTh).hasClass(h[s])) && i(l, u);
              }
            }
          }
        }
      }
      if (n) for (r = 0, o = n.length; r < o; r++) i(r, n[r]);
    }
    function R(e, t, n, i) {
      const r = e.aoData.length;
      const o = $.extend(!0, {}, Ve.models.oRow, {
        src: n ? "dom" : "data",
        idx: r,
      });
      (o._aData = t), e.aoData.push(o);
      for (let s = e.aoColumns, a = 0, l = s.length; a < l; a++) {
        s[a].sType = null;
      }
      e.aiDisplayMaster.push(r);
      const c = e.rowIdFn(t);
      return (
        c !== q && (e.aIds[c] = o),
        (!n && e.oFeatures.bDeferRender) || w(e, r, n, i),
        r
      );
    }
    function B(n, e) {
      let i;
      return (
        e instanceof $ || (e = $(e)),
        e.map(function (e, t) {
          return (i = d(n, t)), R(n, i.data, t, i.cells);
        })
      );
    }
    function e(e, t) {
      return t._DT_RowIndex !== q ? t._DT_RowIndex : null;
    }
    function t(e, t, n) {
      return $.inArray(n, e.aoData[t].anCells);
    }
    function g(e, t, n, i) {
      const r = e.iDraw;
      const o = e.aoColumns[n];
      const s = e.aoData[t]._aData;
      const a = o.sDefaultContent;
      let l = o.fnGetData(s, i, { settings: e, row: t, col: n });
      if (l === q) {
        return (
          e.iDrawError != r &&
            a === null &&
            (Oe(
              e,
              0,
              "Requested unknown parameter " +
                (typeof o.mData === "function"
                  ? "{function}"
                  : "'" + o.mData + "'") +
                " for row " +
                t +
                ", column " +
                n,
              4,
            ),
            (e.iDrawError = r)),
          a
        );
      }
      if ((l !== s && l !== null) || a === null) {
        if (typeof l === "function") return l.call(s);
      } else l = a;
      return l === null && i == "display" ? "" : l;
    }
    function i(e, t, n, i) {
      const r = e.aoColumns[n];
      const o = e.aoData[t]._aData;
      r.fnSetData(o, i, { settings: e, row: t, col: n });
    }
    function m(e) {
      return $.map(e.match(/(\\.|[^\.])+/g) || [""], function (e) {
        return e.replace(/\\./g, ".");
      });
    }
    function U(r) {
      if ($.isPlainObject(r)) {
        const o = {};
        return (
          $.each(r, function (e, t) {
            t && (o[e] = U(t));
          }),
          function (e, t, n, i) {
            const r = o[t] || o._;
            return r !== q ? r(e, t, n, i) : e;
          }
        );
      }
      if (r === null) {
        return function (e) {
          return e;
        };
      }
      if (typeof r === "function") {
        return function (e, t, n, i) {
          return r(e, t, n, i);
        };
      }
      if (
        typeof r !== "string" ||
        (r.indexOf(".") === -1 &&
          r.indexOf("[") === -1 &&
          r.indexOf("(") === -1)
      ) {
        return function (e) {
          return e[r];
        };
      }
      const p = function (e, t, n) {
        let i, r, o, s;
        if (n !== "") {
          for (let a = m(n), l = 0, c = a.length; l < c; l++) {
            if (((i = a[l].match(vt)), (r = a[l].match(yt)), i)) {
              if (
                ((a[l] = a[l].replace(vt, "")),
                a[l] !== "" && (e = e[a[l]]),
                (o = []),
                a.splice(0, l + 1),
                (s = a.join(".")),
                $.isArray(e))
              ) {
                for (let u = 0, d = e.length; u < d; u++) o.push(p(e[u], t, s));
              }
              const h = i[0].substring(1, i[0].length - 1);
              e = h === "" ? o : o.join(h);
              break;
            }
            if (r) (a[l] = a[l].replace(yt, "")), (e = e[a[l]]());
            else {
              if (e === null || e[a[l]] === q) return q;
              e = e[a[l]];
            }
          }
        }
        return e;
      };
      return function (e, t) {
        return p(e, t, r);
      };
    }
    function b(i) {
      if ($.isPlainObject(i)) return b(i._);
      if (i === null) return function () {};
      if (typeof i === "function") {
        return function (e, t, n) {
          i(e, "set", t, n);
        };
      }
      if (
        typeof i !== "string" ||
        (i.indexOf(".") === -1 &&
          i.indexOf("[") === -1 &&
          i.indexOf("(") === -1)
      ) {
        return function (e, t) {
          e[i] = t;
        };
      }
      const f = function (e, t, n) {
        for (
          var i,
            r,
            o,
            s,
            a,
            l = m(n),
            c = l[l.length - 1],
            u = 0,
            d = l.length - 1;
          u < d;
          u++
        ) {
          if (((r = l[u].match(vt)), (o = l[u].match(yt)), r)) {
            if (
              ((l[u] = l[u].replace(vt, "")),
              (e[l[u]] = []),
              (i = l.slice()).splice(0, u + 1),
              (a = i.join(".")),
              $.isArray(t))
            ) {
              for (let h = 0, p = t.length; h < p; h++) {
                f((s = {}), t[h], a), e[l[u]].push(s);
              }
            } else e[l[u]] = t;
            return;
          }
          o && ((l[u] = l[u].replace(yt, "")), (e = e[l[u]](t))),
            (e[l[u]] !== null && e[l[u]] !== q) || (e[l[u]] = {}),
            (e = e[l[u]]);
        }
        c.match(yt)
          ? (e = e[c.replace(yt, "")](t))
          : (e[c.replace(vt, "")] = t);
      };
      return function (e, t) {
        return f(e, t, i);
      };
    }
    function x(e) {
      return ut(e.aoData, "_aData");
    }
    function c(e) {
      (e.aoData.length = 0),
        (e.aiDisplayMaster.length = 0),
        (e.aiDisplay.length = 0),
        (e.aIds = {});
    }
    function p(e, t, n) {
      for (var i = -1, r = 0, o = e.length; r < o; r++) {
        e[r] == t ? (i = r) : e[r] > t && e[r]--;
      }
      i != -1 && n === q && e.splice(i, 1);
    }
    function r(n, i, e, t) {
      let r;
      let o;
      const s = n.aoData[i];
      const a = function (e, t) {
        for (; e.childNodes.length; ) e.removeChild(e.firstChild);
        e.innerHTML = g(n, i, t, "display");
      };
      if (e !== "dom" && ((e && e !== "auto") || s.src !== "dom")) {
        const l = s.anCells;
        if (l) {
          if (t !== q) a(l[t], t);
          else for (r = 0, o = l.length; r < o; r++) a(l[r], r);
        }
      } else s._aData = d(n, s, t, t === q ? q : s._aData).data;
      (s._aSortData = null), (s._aFilterData = null);
      const c = n.aoColumns;
      if (t !== q) c[t].sType = null;
      else {
        for (r = 0, o = c.length; r < o; r++) c[r].sType = null;
        h(n, s);
      }
    }
    function d(e, t, n, r) {
      let i;
      let o;
      let s;
      let a = [];
      let l = t.firstChild;
      let c = 0;
      const u = e.aoColumns;
      const d = e._rowReadObject;
      r = r !== q ? r : d ? {} : [];
      const h = function (e, t) {
        if (typeof e === "string") {
          const n = e.indexOf("@");
          if (n !== -1) {
            const i = e.substring(n + 1);
            b(e)(r, t.getAttribute(i));
          }
        }
      };
      const p = function (e) {
        (n !== q && n !== c) ||
          ((o = u[c]),
          (s = $.trim(e.innerHTML)),
          o && o._bAttrSrc
            ? (b(o.mData._)(r, s),
              h(o.mData.sort, e),
              h(o.mData.type, e),
              h(o.mData.filter, e))
            : d
              ? (o._setter || (o._setter = b(o.mData)), o._setter(r, s))
              : (r[c] = s));
        c++;
      };
      if (l) {
        for (; l; ) {
          ((i = l.nodeName.toUpperCase()) != "TD" && i != "TH") ||
            (p(l), a.push(l)),
            (l = l.nextSibling);
        }
      } else for (let f = 0, g = (a = t.anCells).length; f < g; f++) p(a[f]);
      const m = t.firstChild ? t : t.nTr;
      if (m) {
        const v = m.getAttribute("id");
        v && b(e.rowId)(r, v);
      }
      return { data: r, cells: a };
    }
    function w(e, t, n, i) {
      let r;
      let o;
      let s;
      let a;
      let l;
      const c = e.aoData[t];
      const u = c._aData;
      const d = [];
      if (c.nTr === null) {
        for (
          r = n || y.createElement("tr"),
            c.nTr = r,
            c.anCells = d,
            r._DT_RowIndex = t,
            h(e, c),
            a = 0,
            l = e.aoColumns.length;
          a < l;
          a++
        ) {
          (s = e.aoColumns[a]),
            ((o = n ? i[a] : y.createElement(s.sCellType))._DT_CellIndex = {
              row: t,
              column: a,
            }),
            d.push(o),
            (n && !s.mRender && s.mData === a) ||
              (o.innerHTML = g(e, t, a, "display")),
            s.sClass && (o.className += " " + s.sClass),
            s.bVisible && !n
              ? r.appendChild(o)
              : !s.bVisible && n && o.parentNode.removeChild(o),
            s.fnCreatedCell &&
              s.fnCreatedCell.call(e.oInstance, o, g(e, t, a), u, t, a);
        }
        Re(e, "aoRowCreatedCallback", null, [r, u, t]);
      }
      c.nTr.setAttribute("role", "row");
    }
    function h(e, t) {
      const n = t.nTr;
      const i = t._aData;
      if (n) {
        const r = e.rowIdFn(i);
        if ((r && (n.id = r), i.DT_RowClass)) {
          const o = i.DT_RowClass.split(" ");
          (t.__rowc = t.__rowc ? gt(t.__rowc.concat(o)) : o),
            $(n).removeClass(t.__rowc.join(" ")).addClass(i.DT_RowClass);
        }
        i.DT_RowAttr && $(n).attr(i.DT_RowAttr),
          i.DT_RowData && $(n).data(i.DT_RowData);
      }
    }
    function f(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      const s = e.nTHead;
      const a = e.nTFoot;
      const l = $("th, td", s).length === 0;
      const c = e.oClasses;
      const u = e.aoColumns;
      for (l && (r = $("<tr/>").appendTo(s)), t = 0, n = u.length; t < n; t++) {
        (o = u[t]),
          (i = $(o.nTh).addClass(o.sClass)),
          l && i.appendTo(r),
          e.oFeatures.bSort &&
            (i.addClass(o.sSortingClass),
            !1 !== o.bSortable &&
              (i
                .attr("tabindex", e.iTabIndex)
                .attr("aria-controls", e.sTableId),
              je(e, o.nTh, t))),
          o.sTitle != i[0].innerHTML && i.html(o.sTitle),
          qe(e, "header")(e, i, o, c);
      }
      if (
        (l && V(e.aoHeader, s),
        $(s).find(">tr").attr("role", "row"),
        $(s).find(">tr>th, >tr>td").addClass(c.sHeaderTH),
        $(a).find(">tr>th, >tr>td").addClass(c.sFooterTH),
        a !== null)
      ) {
        const d = e.aoFooter[0];
        for (t = 0, n = d.length; t < n; t++) {
          ((o = u[t]).nTf = d[t].cell), o.sClass && $(o.nTf).addClass(o.sClass);
        }
      }
    }
    function v(e, t, n) {
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d;
      const h = [];
      const p = [];
      const f = e.aoColumns.length;
      if (t) {
        for (n === q && (n = !1), i = 0, r = t.length; i < r; i++) {
          for (
            h[i] = t[i].slice(), h[i].nTr = t[i].nTr, o = f - 1;
            o >= 0;
            o--
          ) {
            e.aoColumns[o].bVisible || n || h[i].splice(o, 1);
          }
          p.push([]);
        }
        for (i = 0, r = h.length; i < r; i++) {
          if ((c = h[i].nTr)) for (; (l = c.firstChild); ) c.removeChild(l);
          for (o = 0, s = h[i].length; o < s; o++) {
            if (((d = u = 1), p[i][o] === q)) {
              for (
                c.appendChild(h[i][o].cell), p[i][o] = 1;
                h[i + u] !== q && h[i][o].cell == h[i + u][o].cell;

              ) {
                (p[i + u][o] = 1), u++;
              }
              for (; h[i][o + d] !== q && h[i][o].cell == h[i][o + d].cell; ) {
                for (a = 0; a < u; a++) p[i + a][o + d] = 1;
                d++;
              }
              $(h[i][o].cell).attr("rowspan", u).attr("colspan", d);
            }
          }
        }
      }
    }
    function _(e) {
      const t = Re(e, "aoPreDrawCallback", "preDraw", [e]);
      if ($.inArray(!1, t) === -1) {
        const n = [];
        let i = 0;
        const r = e.asStripeClasses;
        const o = r.length;
        const s = (e.aoOpenRows.length, e.oLanguage);
        const a = e.iInitDisplayStart;
        const l = ze(e) == "ssp";
        const c = e.aiDisplay;
        (e.bDrawing = !0),
          a !== q &&
            a !== -1 &&
            ((e._iDisplayStart = l ? a : a >= e.fnRecordsDisplay() ? 0 : a),
            (e.iInitDisplayStart = -1));
        const u = e._iDisplayStart;
        const d = e.fnDisplayEnd();
        if (e.bDeferLoading) (e.bDeferLoading = !1), e.iDraw++, fe(e, !1);
        else if (l) {
          if (!e.bDestroying && !T(e)) return;
        } else e.iDraw++;
        if (c.length !== 0) {
          for (
            let h = l ? 0 : u, p = l ? e.aoData.length : d, f = h;
            f < p;
            f++
          ) {
            const g = c[f];
            const m = e.aoData[g];
            m.nTr === null && w(e, g);
            const v = m.nTr;
            if (o !== 0) {
              const y = r[i % o];
              m._sRowStripe != y &&
                ($(v).removeClass(m._sRowStripe).addClass(y),
                (m._sRowStripe = y));
            }
            Re(e, "aoRowCallback", null, [v, m._aData, i, f]), n.push(v), i++;
          }
        } else {
          let b = s.sZeroRecords;
          e.iDraw == 1 && ze(e) == "ajax"
            ? (b = s.sLoadingRecords)
            : s.sEmptyTable && e.fnRecordsTotal() === 0 && (b = s.sEmptyTable),
            (n[0] = $("<tr/>", { class: o ? r[0] : "" }).append(
              $("<td />", {
                valign: "top",
                colSpan: N(e),
                class: e.oClasses.sRowEmpty,
              }).html(b),
            )[0]);
        }
        Re(e, "aoHeaderCallback", "header", [
          $(e.nTHead).children("tr")[0],
          x(e),
          u,
          d,
          c,
        ]),
          Re(e, "aoFooterCallback", "footer", [
            $(e.nTFoot).children("tr")[0],
            x(e),
            u,
            d,
            c,
          ]);
        const _ = $(e.nTBody);
        _.children().detach(),
          _.append($(n)),
          Re(e, "aoDrawCallback", "draw", [e]),
          (e.bSorted = !1),
          (e.bFiltered = !1),
          (e.bDrawing = !1);
      } else fe(e, !1);
    }
    function C(e, t) {
      const n = e.oFeatures;
      const i = n.bSort;
      const r = n.bFilter;
      i && Se(e),
        r ? X(e, e.oPreviousSearch) : (e.aiDisplay = e.aiDisplayMaster.slice()),
        !0 !== t && (e._iDisplayStart = 0),
        (e._drawHold = t),
        _(e),
        (e._drawHold = !1);
    }
    function k(e) {
      const t = e.oClasses;
      const n = $(e.nTable);
      const i = $("<div/>").insertBefore(n);
      const r = e.oFeatures;
      let o = $("<div/>", {
        id: e.sTableId + "_wrapper",
        class: t.sWrapper + (e.nTFoot ? "" : " " + t.sNoFooter),
      });
      (e.nHolding = i[0]),
        (e.nTableWrapper = o[0]),
        (e.nTableReinsertBefore = e.nTable.nextSibling);
      for (
        var s, a, l, c, u, d, h = e.sDom.split(""), p = 0;
        p < h.length;
        p++
      ) {
        if (((s = null), (a = h[p]) == "<")) {
          if (((l = $("<div/>")[0]), (c = h[p + 1]) == "'" || c == '"')) {
            for (u = "", d = 2; h[p + d] != c; ) (u += h[p + d]), d++;
            if (
              (u == "H" ? (u = t.sJUIHeader) : u == "F" && (u = t.sJUIFooter),
              u.indexOf(".") != -1)
            ) {
              const f = u.split(".");
              (l.id = f[0].substr(1, f[0].length - 1)), (l.className = f[1]);
            } else {
              u.charAt(0) == "#"
                ? (l.id = u.substr(1, u.length - 1))
                : (l.className = u);
            }
            p += d;
          }
          o.append(l), (o = $(l));
        } else if (a == ">") o = o.parent();
        else if (a == "l" && r.bPaginate && r.bLengthChange) s = ue(e);
        else if (a == "f" && r.bFilter) s = Y(e);
        else if (a == "r" && r.bProcessing) s = pe(e);
        else if (a == "t") s = ge(e);
        else if (a == "i" && r.bInfo) s = re(e);
        else if (a == "p" && r.bPaginate) s = de(e);
        else if (Ve.ext.feature.length !== 0) {
          for (let g = Ve.ext.feature, m = 0, v = g.length; m < v; m++) {
            if (a == g[m].cFeature) {
              s = g[m].fnInit(e);
              break;
            }
          }
        }
        if (s) {
          const y = e.aanFeatures;
          y[a] || (y[a] = []), y[a].push(s), o.append(s);
        }
      }
      i.replaceWith(o), (e.nHolding = null);
    }
    function V(e, t) {
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d;
      let h;
      const p = $(t).children("tr");
      const f = function (e, t, n) {
        for (let i = e[t]; i[n]; ) n++;
        return n;
      };
      for (e.splice(0, e.length), r = 0, a = p.length; r < a; r++) e.push([]);
      for (r = 0, a = p.length; r < a; r++) {
        for (c = 0, i = (n = p[r]).firstChild; i; ) {
          if (
            i.nodeName.toUpperCase() == "TD" ||
            i.nodeName.toUpperCase() == "TH"
          ) {
            for (
              u =
                (u = 1 * i.getAttribute("colspan")) && u !== 0 && u !== 1
                  ? u
                  : 1,
                d =
                  (d = 1 * i.getAttribute("rowspan")) && d !== 0 && d !== 1
                    ? d
                    : 1,
                l = f(e, r, c),
                h = u === 1,
                s = 0;
              s < u;
              s++
            ) {
              for (o = 0; o < d; o++) {
                (e[r + o][l + s] = { cell: i, unique: h }), (e[r + o].nTr = n);
              }
            }
          }
          i = i.nextSibling;
        }
      }
    }
    function K(e, t, n) {
      const i = [];
      n || ((n = e.aoHeader), t && V((n = []), t));
      for (let r = 0, o = n.length; r < o; r++) {
        for (let s = 0, a = n[r].length; s < a; s++) {
          !n[r][s].unique || (i[s] && e.bSortCellsTop) || (i[s] = n[r][s].cell);
        }
      }
      return i;
    }
    function S(i, e, t) {
      if ((Re(i, "aoServerParams", "serverParams", [e]), e && $.isArray(e))) {
        const r = {};
        const o = /(.*?)\[\]$/;
        $.each(e, function (e, t) {
          const n = t.name.match(o);
          if (n) {
            const i = n[0];
            r[i] || (r[i] = []), r[i].push(t.value);
          } else r[t.name] = t.value;
        }),
          (e = r);
      }
      let n;
      const s = i.ajax;
      const a = i.oInstance;
      const l = function (e) {
        Re(i, null, "xhr", [i, e, i.jqXHR]), t(e);
      };
      if ($.isPlainObject(s) && s.data) {
        n = s.data;
        const c = $.isFunction(n) ? n(e, i) : n;
        (e = $.isFunction(n) && c ? c : $.extend(!0, e, c)), delete s.data;
      }
      const u = {
        data: e,
        success: function (e) {
          const t = e.error || e.sError;
          t && Oe(i, 0, t), (i.json = e), l(e);
        },
        dataType: "json",
        cache: !1,
        type: i.sServerMethod,
        error: function (e, t) {
          const n = Re(i, null, "xhr", [i, null, i.jqXHR]);
          $.inArray(!0, n) === -1 &&
            (t == "parsererror"
              ? Oe(i, 0, "Invalid JSON response", 1)
              : e.readyState === 4 && Oe(i, 0, "Ajax error", 7)),
            fe(i, !1);
        },
      };
      (i.oAjaxData = e),
        Re(i, null, "preXhr", [i, e]),
        i.fnServerData
          ? i.fnServerData.call(
              a,
              i.sAjaxSource,
              $.map(e, function (e, t) {
                return { name: t, value: e };
              }),
              l,
              i,
            )
          : i.sAjaxSource || typeof s === "string"
            ? (i.jqXHR = $.ajax($.extend(u, { url: s || i.sAjaxSource })))
            : $.isFunction(s)
              ? (i.jqXHR = s.call(a, e, l, i))
              : ((i.jqXHR = $.ajax($.extend(u, s))), (s.data = n));
    }
    function T(t) {
      return (
        !t.bAjaxDataGet ||
        (t.iDraw++,
        fe(t, !0),
        S(t, o(t), function (e) {
          a(t, e);
        }),
        !1)
      );
    }
    function o(e) {
      let t;
      let n;
      let i;
      let r;
      const o = e.aoColumns;
      const s = o.length;
      const a = e.oFeatures;
      const l = e.oPreviousSearch;
      const c = e.aoPreSearchCols;
      const u = [];
      const d = ke(e);
      const h = e._iDisplayStart;
      const p = !1 !== a.bPaginate ? e._iDisplayLength : -1;
      const f = function (e, t) {
        u.push({ name: e, value: t });
      };
      f("sEcho", e.iDraw),
        f("iColumns", s),
        f("sColumns", ut(o, "sName").join(",")),
        f("iDisplayStart", h),
        f("iDisplayLength", p);
      const g = {
        draw: e.iDraw,
        columns: [],
        order: [],
        start: h,
        length: p,
        search: { value: l.sSearch, regex: l.bRegex },
      };
      for (t = 0; t < s; t++) {
        (i = o[t]),
          (r = c[t]),
          (n = typeof i.mData === "function" ? "function" : i.mData),
          g.columns.push({
            data: n,
            name: i.sName,
            searchable: i.bSearchable,
            orderable: i.bSortable,
            search: { value: r.sSearch, regex: r.bRegex },
          }),
          f("mDataProp_" + t, n),
          a.bFilter &&
            (f("sSearch_" + t, r.sSearch),
            f("bRegex_" + t, r.bRegex),
            f("bSearchable_" + t, i.bSearchable)),
          a.bSort && f("bSortable_" + t, i.bSortable);
      }
      a.bFilter && (f("sSearch", l.sSearch), f("bRegex", l.bRegex)),
        a.bSort &&
          ($.each(d, function (e, t) {
            g.order.push({ column: t.col, dir: t.dir }),
              f("iSortCol_" + e, t.col),
              f("sSortDir_" + e, t.dir);
          }),
          f("iSortingCols", d.length));
      const m = Ve.ext.legacy.ajax;
      return m === null ? (e.sAjaxSource ? u : g) : m ? u : g;
    }
    function a(e, n) {
      const t = function (e, t) {
        return n[e] !== q ? n[e] : n[t];
      };
      const i = D(e, n);
      const r = t("sEcho", "draw");
      const o = t("iTotalRecords", "recordsTotal");
      const s = t("iTotalDisplayRecords", "recordsFiltered");
      if (r) {
        if (1 * r < e.iDraw) return;
        e.iDraw = 1 * r;
      }
      c(e),
        (e._iRecordsTotal = parseInt(o, 10)),
        (e._iRecordsDisplay = parseInt(s, 10));
      for (let a = 0, l = i.length; a < l; a++) R(e, i[a]);
      (e.aiDisplay = e.aiDisplayMaster.slice()),
        (e.bAjaxDataGet = !1),
        _(e),
        e._bInitComplete || le(e, n),
        (e.bAjaxDataGet = !0),
        fe(e, !1);
    }
    function D(e, t) {
      const n =
        $.isPlainObject(e.ajax) && e.ajax.dataSrc !== q
          ? e.ajax.dataSrc
          : e.sAjaxDataProp;
      return n === "data" ? t.aaData || t[n] : n !== "" ? U(n)(t) : t;
    }
    function Y(i) {
      const e = i.oClasses;
      const t = i.sTableId;
      const n = i.oLanguage;
      const r = i.oPreviousSearch;
      const o = i.aanFeatures;
      const s = '<input type="search" class="' + e.sFilterInput + '"/>';
      let a = n.sSearch;
      a = a.match(/_INPUT_/) ? a.replace("_INPUT_", s) : a + s;
      const l = $("<div/>", {
        id: o.f ? null : t + "_filter",
        class: e.sFilter,
      }).append($("<label/>").append(a));
      const c = function () {
        o.f;
        const e = this.value ? this.value : "";
        e != r.sSearch &&
          (X(i, {
            sSearch: e,
            bRegex: r.bRegex,
            bSmart: r.bSmart,
            bCaseInsensitive: r.bCaseInsensitive,
          }),
          (i._iDisplayStart = 0),
          _(i));
      };
      const u =
        i.searchDelay !== null ? i.searchDelay : ze(i) === "ssp" ? 400 : 0;
      const d = $("input", l)
        .val(r.sSearch)
        .attr("placeholder", n.sSearchPlaceholder)
        .bind("keyup.DT search.DT input.DT paste.DT cut.DT", u ? be(c, u) : c)
        .bind("keypress.DT", function (e) {
          if (e.keyCode == 13) return !1;
        })
        .attr("aria-controls", t);
      return (
        $(i.nTable).on("search.dt.DT", function (e, t) {
          if (i === t) {
            try {
              d[0] !== y.activeElement && d.val(r.sSearch);
            } catch (n) {}
          }
        }),
        l[0]
      );
    }
    function X(e, t, n) {
      const i = e.oPreviousSearch;
      const r = e.aoPreSearchCols;
      const o = function (e) {
        (i.sSearch = e.sSearch),
          (i.bRegex = e.bRegex),
          (i.bSmart = e.bSmart),
          (i.bCaseInsensitive = e.bCaseInsensitive);
      };
      const s = function (e) {
        return e.bEscapeRegex !== q ? !e.bEscapeRegex : e.bRegex;
      };
      if ((l(e), ze(e) != "ssp")) {
        J(e, t.sSearch, n, s(t), t.bSmart, t.bCaseInsensitive), o(t);
        for (let a = 0; a < r.length; a++) {
          Q(e, r[a].sSearch, a, s(r[a]), r[a].bSmart, r[a].bCaseInsensitive);
        }
        G(e);
      } else o(t);
      (e.bFiltered = !0), Re(e, null, "search", [e]);
    }
    function G(e) {
      for (
        var t, n, i = Ve.ext.search, r = e.aiDisplay, o = 0, s = i.length;
        o < s;
        o++
      ) {
        for (var a = [], l = 0, c = r.length; l < c; l++) {
          (n = r[l]),
            (t = e.aoData[n]),
            i[o](e, t._aFilterData, n, t._aData, l) && a.push(n);
        }
        (r.length = 0), $.merge(r, a);
      }
    }
    function Q(e, t, n, i, r, o) {
      if (t !== "") {
        for (
          var s, a = e.aiDisplay, l = Z(t, i, r, o), c = a.length - 1;
          c >= 0;
          c--
        ) {
          (s = e.aoData[a[c]]._aFilterData[n]), l.test(s) || a.splice(c, 1);
        }
      }
    }
    function J(e, t, n, i, r, o) {
      let s;
      let a;
      let l;
      const c = Z(t, i, r, o);
      const u = e.oPreviousSearch.sSearch;
      const d = e.aiDisplayMaster;
      if (
        (Ve.ext.search.length !== 0 && (n = !0), (a = te(e)), t.length <= 0)
      ) {
        e.aiDisplay = d.slice();
      } else {
        for (
          (a || n || u.length > t.length || t.indexOf(u) !== 0 || e.bSorted) &&
            (e.aiDisplay = d.slice()),
            l = (s = e.aiDisplay).length - 1;
          l >= 0;
          l--
        ) {
          c.test(e.aoData[s[l]]._sFilterRow) || s.splice(l, 1);
        }
      }
    }
    function Z(e, t, n, i) {
      ((e = t ? e : ee(e)), n) &&
        (e =
          "^(?=.*?" +
          $.map(e.match(/"[^"]+"|[^ ]+/g) || [""], function (e) {
            if (e.charAt(0) === '"') {
              const t = e.match(/^"(.*)"$/);
              e = t ? t[1] : e;
            }
            return e.replace('"', "");
          }).join(")(?=.*?") +
          ").*$");
      return new RegExp(e, i ? "i" : "");
    }
    function ee(e) {
      return e.replace(nt, "\\$1");
    }
    function te(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      const c = e.aoColumns;
      const u = Ve.ext.type.search;
      let d = !1;
      for (n = 0, r = e.aoData.length; n < r; n++) {
        if (!(l = e.aoData[n])._aFilterData) {
          for (s = [], i = 0, o = c.length; i < o; i++) {
            (t = c[i]).bSearchable
              ? ((a = g(e, n, i, "filter")),
                u[t.sType] && (a = u[t.sType](a)),
                a === null && (a = ""),
                typeof a !== "string" && a.toString && (a = a.toString()))
              : (a = ""),
              a.indexOf &&
                a.indexOf("&") !== -1 &&
                ((bt.innerHTML = a), (a = _t ? bt.textContent : bt.innerText)),
              a.replace && (a = a.replace(/[\r\n]/g, "")),
              s.push(a);
          }
          (l._aFilterData = s), (l._sFilterRow = s.join("  ")), (d = !0);
        }
      }
      return d;
    }
    function ne(e) {
      return {
        search: e.sSearch,
        smart: e.bSmart,
        regex: e.bRegex,
        caseInsensitive: e.bCaseInsensitive,
      };
    }
    function ie(e) {
      return {
        sSearch: e.search,
        bSmart: e.smart,
        bRegex: e.regex,
        bCaseInsensitive: e.caseInsensitive,
      };
    }
    function re(e) {
      const t = e.sTableId;
      const n = e.aanFeatures.i;
      const i = $("<div/>", {
        class: e.oClasses.sInfo,
        id: n ? null : t + "_info",
      });
      return (
        n ||
          (e.aoDrawCallback.push({ fn: oe, sName: "information" }),
          i.attr("role", "status").attr("aria-live", "polite"),
          $(e.nTable).attr("aria-describedby", t + "_info")),
        i[0]
      );
    }
    function oe(e) {
      const t = e.aanFeatures.i;
      if (t.length !== 0) {
        const n = e.oLanguage;
        const i = e._iDisplayStart + 1;
        const r = e.fnDisplayEnd();
        const o = e.fnRecordsTotal();
        const s = e.fnRecordsDisplay();
        let a = s ? n.sInfo : n.sInfoEmpty;
        s !== o && (a += " " + n.sInfoFiltered),
          (a = se(e, (a += n.sInfoPostFix)));
        const l = n.fnInfoCallback;
        l !== null && (a = l.call(e.oInstance, e, i, r, o, s, a)), $(t).html(a);
      }
    }
    function se(e, t) {
      const n = e.fnFormatNumber;
      const i = e._iDisplayStart + 1;
      const r = e._iDisplayLength;
      const o = e.fnRecordsDisplay();
      const s = r === -1;
      return t
        .replace(/_START_/g, n.call(e, i))
        .replace(/_END_/g, n.call(e, e.fnDisplayEnd()))
        .replace(/_MAX_/g, n.call(e, e.fnRecordsTotal()))
        .replace(/_TOTAL_/g, n.call(e, o))
        .replace(/_PAGE_/g, n.call(e, s ? 1 : Math.ceil(i / r)))
        .replace(/_PAGES_/g, n.call(e, s ? 1 : Math.ceil(o / r)));
    }
    function ae(n) {
      let i;
      let e;
      let t;
      const r = n.iInitDisplayStart;
      const o = n.aoColumns;
      const s = n.oFeatures;
      const a = n.bDeferLoading;
      if (n.bInitialised) {
        for (
          k(n),
            f(n),
            v(n, n.aoHeader),
            v(n, n.aoFooter),
            fe(n, !0),
            s.bAutoWidth && ye(n),
            i = 0,
            e = o.length;
          i < e;
          i++
        ) {
          (t = o[i]).sWidth && (t.nTh.style.width = Ce(t.sWidth));
        }
        Re(n, null, "preInit", [n]), C(n);
        const l = ze(n);
        (l != "ssp" || a) &&
          (l == "ajax"
            ? S(
                n,
                [],
                function (e) {
                  const t = D(n, e);
                  for (i = 0; i < t.length; i++) R(n, t[i]);
                  (n.iInitDisplayStart = r), C(n), fe(n, !1), le(n, e);
                },
                n,
              )
            : (fe(n, !1), le(n)));
      } else {
        setTimeout(function () {
          ae(n);
        }, 200);
      }
    }
    function le(e, t) {
      (e._bInitComplete = !0),
        (t || e.oInit.aaData) && z(e),
        Re(e, null, "plugin-init", [e, t]),
        Re(e, "aoInitComplete", "init", [e, t]);
    }
    function ce(e, t) {
      const n = parseInt(t, 10);
      (e._iDisplayLength = n), $e(e), Re(e, null, "length", [e, n]);
    }
    function ue(i) {
      for (
        var e = i.oClasses,
          t = i.sTableId,
          n = i.aLengthMenu,
          r = $.isArray(n[0]),
          o = r ? n[0] : n,
          s = r ? n[1] : n,
          a = $("<select/>", {
            name: t + "_length",
            "aria-controls": t,
            class: e.sLengthSelect,
          }),
          l = 0,
          c = o.length;
        l < c;
        l++
      ) {
        a[0][l] = new Option(s[l], o[l]);
      }
      const u = $("<div><label/></div>").addClass(e.sLength);
      return (
        i.aanFeatures.l || (u[0].id = t + "_length"),
        u
          .children()
          .append(i.oLanguage.sLengthMenu.replace("_MENU_", a[0].outerHTML)),
        $("select", u)
          .val(i._iDisplayLength)
          .bind("change.DT", function () {
            ce(i, $(this).val()), _(i);
          }),
        $(i.nTable).bind("length.dt.DT", function (e, t, n) {
          i === t && $("select", u).val(n);
        }),
        u[0]
      );
    }
    function de(e) {
      const t = e.sPaginationType;
      const u = Ve.ext.pager[t];
      const d = typeof u === "function";
      const h = function (e) {
        _(e);
      };
      const n = $("<div/>").addClass(e.oClasses.sPaging + t)[0];
      const p = e.aanFeatures;
      return (
        d || u.fnInit(e, n, h),
        p.p ||
          ((n.id = e.sTableId + "_paginate"),
          e.aoDrawCallback.push({
            fn: function (e) {
              if (d) {
                let t;
                let n;
                const i = e._iDisplayStart;
                const r = e._iDisplayLength;
                const o = e.fnRecordsDisplay();
                const s = r === -1;
                const a = s ? 0 : Math.ceil(i / r);
                const l = s ? 1 : Math.ceil(o / r);
                const c = u(a, l);
                for (t = 0, n = p.p.length; t < n; t++) {
                  qe(e, "pageButton")(e, p.p[t], t, c, a, l);
                }
              } else u.fnUpdate(e, h);
            },
            sName: "pagination",
          })),
        n
      );
    }
    function he(e, t, n) {
      let i = e._iDisplayStart;
      const r = e._iDisplayLength;
      const o = e.fnRecordsDisplay();
      o === 0 || r === -1
        ? (i = 0)
        : typeof t === "number"
          ? o < (i = t * r) && (i = 0)
          : t == "first"
            ? (i = 0)
            : t == "previous"
              ? (i = r >= 0 ? i - r : 0) < 0 && (i = 0)
              : t == "next"
                ? i + r < o && (i += r)
                : t == "last"
                  ? (i = Math.floor((o - 1) / r) * r)
                  : Oe(e, 0, "Unknown paging action: " + t, 5);
      const s = e._iDisplayStart !== i;
      return (
        (e._iDisplayStart = i), s && (Re(e, null, "page", [e]), n && _(e)), s
      );
    }
    function pe(e) {
      return $("<div/>", {
        id: e.aanFeatures.r ? null : e.sTableId + "_processing",
        class: e.oClasses.sProcessing,
      })
        .html(e.oLanguage.sProcessing)
        .insertBefore(e.nTable)[0];
    }
    function fe(e, t) {
      e.oFeatures.bProcessing &&
        $(e.aanFeatures.r).css("display", t ? "block" : "none"),
        Re(e, null, "processing", [e, t]);
    }
    function ge(e) {
      const t = $(e.nTable);
      t.attr("role", "grid");
      const n = e.oScroll;
      if (n.sX === "" && n.sY === "") return e.nTable;
      const i = n.sX;
      const r = n.sY;
      const o = e.oClasses;
      const s = t.children("caption");
      const a = s.length ? s[0]._captionSide : null;
      const l = $(t[0].cloneNode(!1));
      const c = $(t[0].cloneNode(!1));
      let u = t.children("tfoot");
      const d = "<div/>";
      const h = function (e) {
        return e ? Ce(e) : null;
      };
      u.length || (u = null);
      const p = $(d, { class: o.sScrollWrapper })
        .append(
          $(d, { class: o.sScrollHead })
            .css({
              overflow: "hidden",
              position: "relative",
              border: 0,
              width: i ? h(i) : "100%",
            })
            .append(
              $(d, { class: o.sScrollHeadInner })
                .css({
                  "box-sizing": "content-box",
                  width: n.sXInner || "100%",
                })
                .append(
                  l
                    .removeAttr("id")
                    .css("margin-left", 0)
                    .append(a === "top" ? s : null)
                    .append(t.children("thead")),
                ),
            ),
        )
        .append(
          $(d, { class: o.sScrollBody })
            .css({ position: "relative", overflow: "auto", width: h(i) })
            .append(t),
        );
      u &&
        p.append(
          $(d, { class: o.sScrollFoot })
            .css({ overflow: "hidden", border: 0, width: i ? h(i) : "100%" })
            .append(
              $(d, { class: o.sScrollFootInner }).append(
                c
                  .removeAttr("id")
                  .css("margin-left", 0)
                  .append(a === "bottom" ? s : null)
                  .append(t.children("tfoot")),
              ),
            ),
        );
      const f = p.children();
      const g = f[0];
      const m = f[1];
      const v = u ? f[2] : null;
      return (
        i &&
          $(m).on("scroll.DT", function () {
            const e = this.scrollLeft;
            (g.scrollLeft = e), u && (v.scrollLeft = e);
          }),
        $(m).css(r && n.bCollapse ? "max-height" : "height", r),
        (e.nScrollHead = g),
        (e.nScrollBody = m),
        (e.nScrollFoot = v),
        e.aoDrawCallback.push({ fn: me, sName: "scrolling" }),
        p[0]
      );
    }
    function me(n) {
      let e;
      let t;
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      const u = n.oScroll;
      const d = u.sX;
      const h = u.sXInner;
      const p = u.sY;
      const f = u.iBarWidth;
      const g = $(n.nScrollHead);
      const m = g[0].style;
      const v = g.children("div");
      const y = v[0].style;
      const b = v.children("table");
      const _ = n.nScrollBody;
      const x = $(_);
      const w = _.style;
      const C = $(n.nScrollFoot).children("div");
      const k = C.children("table");
      const S = $(n.nTHead);
      const T = $(n.nTable);
      const D = T[0];
      const j = D.style;
      const N = n.nTFoot ? $(n.nTFoot) : null;
      const E = n.oBrowser;
      const I = E.bScrollOversize;
      const A = [];
      const M = [];
      const O = [];
      const P = function (e) {
        const t = e.style;
        (t.paddingTop = "0"),
          (t.paddingBottom = "0"),
          (t.borderTopWidth = "0"),
          (t.borderBottomWidth = "0"),
          (t.height = 0);
      };
      const F = _.scrollHeight > _.clientHeight;
      if (n.scrollBarVis !== F && n.scrollBarVis !== q) {
        return (n.scrollBarVis = F), void z(n);
      }
      (n.scrollBarVis = F),
        T.children("thead, tfoot").remove(),
        (o = S.clone().prependTo(T)),
        (e = S.find("tr")),
        (i = o.find("tr")),
        o.find("th, td").removeAttr("tabindex"),
        N &&
          ((s = N.clone().prependTo(T)),
          (t = N.find("tr")),
          (r = s.find("tr"))),
        d || ((w.width = "100%"), (g[0].style.width = "100%")),
        $.each(K(n, o), function (e, t) {
          (a = W(n, e)), (t.style.width = n.aoColumns[a].sWidth);
        }),
        N &&
          ve(function (e) {
            e.style.width = "";
          }, r),
        (c = T.outerWidth()),
        d === ""
          ? ((j.width = "100%"),
            I &&
              (T.find("tbody").height() > _.offsetHeight ||
                x.css("overflow-y") == "scroll") &&
              (j.width = Ce(T.outerWidth() - f)),
            (c = T.outerWidth()))
          : h !== "" && ((j.width = Ce(h)), (c = T.outerWidth())),
        ve(P, i),
        ve(function (e) {
          O.push(e.innerHTML), A.push(Ce($(e).css("width")));
        }, i),
        ve(function (e, t) {
          e.style.width = A[t];
        }, e),
        $(i).height(0),
        N &&
          (ve(P, r),
          ve(function (e) {
            M.push(Ce($(e).css("width")));
          }, r),
          ve(function (e, t) {
            e.style.width = M[t];
          }, t),
          $(r).height(0)),
        ve(function (e, t) {
          (e.innerHTML =
            '<div class="dataTables_sizing" style="height:0;overflow:hidden;">' +
            O[t] +
            "</div>"),
            (e.style.width = A[t]);
        }, i),
        N &&
          ve(function (e, t) {
            (e.innerHTML = ""), (e.style.width = M[t]);
          }, r),
        T.outerWidth() < c
          ? ((l =
              _.scrollHeight > _.offsetHeight || x.css("overflow-y") == "scroll"
                ? c + f
                : c),
            I &&
              (_.scrollHeight > _.offsetHeight ||
                x.css("overflow-y") == "scroll") &&
              (j.width = Ce(l - f)),
            (d !== "" && h === "") ||
              Oe(n, 1, "Possible column misalignment", 6))
          : (l = "100%"),
        (w.width = Ce(l)),
        (m.width = Ce(l)),
        N && (n.nScrollFoot.style.width = Ce(l)),
        p || (I && (w.height = Ce(D.offsetHeight + f)));
      const L = T.outerWidth();
      (b[0].style.width = Ce(L)), (y.width = Ce(L));
      const H = T.height() > _.clientHeight || x.css("overflow-y") == "scroll";
      const R = "padding" + (E.bScrollbarLeft ? "Left" : "Right");
      (y[R] = H ? f + "px" : "0px"),
        N &&
          ((k[0].style.width = Ce(L)),
          (C[0].style.width = Ce(L)),
          (C[0].style[R] = H ? f + "px" : "0px")),
        x.scroll(),
        (!n.bSorted && !n.bFiltered) || n._drawHold || (_.scrollTop = 0);
    }
    function ve(e, t, n) {
      for (var i, r, o = 0, s = 0, a = t.length; s < a; ) {
        for (i = t[s].firstChild, r = n ? n[s].firstChild : null; i; ) {
          i.nodeType === 1 && (n ? e(i, r, o) : e(i, o), o++),
            (i = i.nextSibling),
            (r = n ? r.nextSibling : null);
        }
        s++;
      }
    }
    function ye(e) {
      let t;
      let n;
      let i;
      const r = e.nTable;
      const o = e.aoColumns;
      const s = e.oScroll;
      const a = s.sY;
      const l = s.sX;
      const c = s.sXInner;
      const u = o.length;
      const d = E(e, "bVisible");
      let h = $("th", e.nTHead);
      let p = r.getAttribute("width");
      const f = r.parentNode;
      let g = !1;
      const m = e.oBrowser;
      const v = m.bScrollOversize;
      const y = r.style.width;
      for (y && y.indexOf("%") !== -1 && (p = y), t = 0; t < d.length; t++) {
        (n = o[d[t]]).sWidth !== null &&
          ((n.sWidth = _e(n.sWidthOrig, f)), (g = !0));
      }
      if (v || (!g && !l && !a && u == N(e) && u == h.length)) {
        for (t = 0; t < u; t++) {
          const b = W(e, t);
          b !== null && (o[b].sWidth = Ce(h.eq(t).width()));
        }
      } else {
        const _ = $(r).clone().css("visibility", "hidden").removeAttr("id");
        _.find("tbody tr").remove();
        const x = $("<tr/>").appendTo(_.find("tbody"));
        for (
          _.find("thead, tfoot").remove(),
            _.append($(e.nTHead).clone()).append($(e.nTFoot).clone()),
            _.find("tfoot th, tfoot td").css("width", ""),
            h = K(e, _.find("thead")[0]),
            t = 0;
          t < d.length;
          t++
        ) {
          (n = o[d[t]]),
            (h[t].style.width =
              n.sWidthOrig !== null && n.sWidthOrig !== ""
                ? Ce(n.sWidthOrig)
                : ""),
            n.sWidthOrig &&
              l &&
              $(h[t]).append(
                $("<div/>").css({
                  width: n.sWidthOrig,
                  margin: 0,
                  padding: 0,
                  border: 0,
                  height: 1,
                }),
              );
        }
        if (e.aoData.length) {
          for (t = 0; t < d.length; t++) {
            (n = o[(i = d[t])]),
              $(xe(e, i)).clone(!1).append(n.sContentPadding).appendTo(x);
          }
        }
        const w = $("<div/>")
          .css(
            l || a
              ? {
                  position: "absolute",
                  top: 0,
                  left: 0,
                  height: 1,
                  right: 0,
                  overflow: "hidden",
                }
              : {},
          )
          .append(_)
          .appendTo(f);
        l && c
          ? _.width(c)
          : l
            ? (_.css("width", "auto"),
              _.removeAttr("width"),
              _.width() < f.clientWidth && p && _.width(f.clientWidth))
            : a
              ? _.width(f.clientWidth)
              : p && _.width(p);
        let C = 0;
        for (t = 0; t < d.length; t++) {
          const k = $(h[t]);
          const S = k.outerWidth() - k.width();
          const T = m.bBounding
            ? Math.ceil(h[t].getBoundingClientRect().width)
            : k.outerWidth();
          (C += T), (o[d[t]].sWidth = Ce(T - S));
        }
        (r.style.width = Ce(C)), w.remove();
      }
      if ((p && (r.style.width = Ce(p)), (p || l) && !e._reszEvt)) {
        const D = function () {
          $(j).bind(
            "resize.DT-" + e.sInstance,
            be(function () {
              z(e);
            }),
          );
        };
        v ? setTimeout(D, 1e3) : D(), (e._reszEvt = !0);
      }
    }
    function be(i, e) {
      let r;
      let o;
      const s = e !== q ? e : 200;
      return function () {
        const e = this;
        const t = +new Date();
        const n = arguments;
        r && t < r + s
          ? (clearTimeout(o),
            (o = setTimeout(function () {
              (r = q), i.apply(e, n);
            }, s)))
          : ((r = t), i.apply(e, n));
      };
    }
    function _e(e, t) {
      if (!e) return 0;
      const n = $("<div/>")
        .css("width", Ce(e))
        .appendTo(t || y.body);
      const i = n[0].offsetWidth;
      return n.remove(), i;
    }
    function xe(e, t) {
      const n = we(e, t);
      if (n < 0) return null;
      const i = e.aoData[n];
      return i.nTr ? i.anCells[t] : $("<td/>").html(g(e, n, t, "display"))[0];
    }
    function we(e, t) {
      for (var n, i = -1, r = -1, o = 0, s = e.aoData.length; o < s; o++) {
        (n = (n = (n = g(e, o, t, "display") + "").replace(xt, "")).replace(
          /&nbsp;/g,
          " ",
        )).length > i && ((i = n.length), (r = o));
      }
      return r;
    }
    function Ce(e) {
      return e === null
        ? "0px"
        : typeof e === "number"
          ? e < 0
            ? "0px"
            : e + "px"
          : e.match(/\d$/)
            ? e + "px"
            : e;
    }
    function ke(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      let s;
      let a;
      const l = [];
      const c = e.aoColumns;
      const u = e.aaSortingFixed;
      const d = $.isPlainObject(u);
      const h = [];
      const p = function (e) {
        e.length && !$.isArray(e[0]) ? h.push(e) : $.merge(h, e);
      };
      for (
        $.isArray(u) && p(u),
          d && u.pre && p(u.pre),
          p(e.aaSorting),
          d && u.post && p(u.post),
          t = 0;
        t < h.length;
        t++
      ) {
        for (n = 0, i = (r = c[(a = h[t][0])].aDataSort).length; n < i; n++) {
          (s = c[(o = r[n])].sType || "string"),
            h[t]._idx === q && (h[t]._idx = $.inArray(h[t][1], c[o].asSorting)),
            l.push({
              src: a,
              col: o,
              dir: h[t][1],
              index: h[t]._idx,
              type: s,
              formatter: Ve.ext.type.order[s + "-pre"],
            });
        }
      }
      return l;
    }
    function Se(e) {
      let t;
      let n;
      let i;
      let r;
      let u;
      const d = [];
      const h = Ve.ext.type.order;
      const p = e.aoData;
      let o = (e.aoColumns, 0);
      const s = e.aiDisplayMaster;
      for (l(e), t = 0, n = (u = ke(e)).length; t < n; t++) {
        (r = u[t]).formatter && o++, Ee(e, r.col);
      }
      if (ze(e) != "ssp" && u.length !== 0) {
        for (t = 0, i = s.length; t < i; t++) d[s[t]] = t;
        o === u.length
          ? s.sort(function (e, t) {
              let n;
              let i;
              let r;
              let o;
              let s;
              const a = u.length;
              const l = p[e]._aSortData;
              const c = p[t]._aSortData;
              for (r = 0; r < a; r++) {
                if (
                  (o =
                    (n = l[(s = u[r]).col]) < (i = c[s.col])
                      ? -1
                      : i < n
                        ? 1
                        : 0) !== 0
                ) {
                  return s.dir === "asc" ? o : -o;
                }
              }
              return (n = d[e]) < (i = d[t]) ? -1 : i < n ? 1 : 0;
            })
          : s.sort(function (e, t) {
              let n;
              let i;
              let r;
              let o;
              let s;
              const a = u.length;
              const l = p[e]._aSortData;
              const c = p[t]._aSortData;
              for (r = 0; r < a; r++) {
                if (
                  ((n = l[(s = u[r]).col]),
                  (i = c[s.col]),
                  (o = (h[s.type + "-" + s.dir] || h["string-" + s.dir])(
                    n,
                    i,
                  )) !== 0)
                ) {
                  return o;
                }
              }
              return (n = d[e]) < (i = d[t]) ? -1 : i < n ? 1 : 0;
            });
      }
      e.bSorted = !0;
    }
    function Te(e) {
      for (
        var t,
          n,
          i = e.aoColumns,
          r = ke(e),
          o = e.oLanguage.oAria,
          s = 0,
          a = i.length;
        s < a;
        s++
      ) {
        const l = i[s];
        const c = l.asSorting;
        const u = l.sTitle.replace(/<.*?>/g, "");
        const d = l.nTh;
        d.removeAttribute("aria-sort"),
          l.bSortable
            ? (r.length > 0 && r[0].col == s
                ? (d.setAttribute(
                    "aria-sort",
                    r[0].dir == "asc" ? "ascending" : "descending",
                  ),
                  (n = c[r[0].index + 1] || c[0]))
                : (n = c[0]),
              (t = u + (n === "asc" ? o.sSortAscending : o.sSortDescending)))
            : (t = u),
          d.setAttribute("aria-label", t);
      }
    }
    function De(e, t, n, i) {
      let r;
      const o = e.aoColumns[t];
      let s = e.aaSorting;
      const a = o.asSorting;
      const l = function (e, t) {
        let n = e._idx;
        return (
          n === q && (n = $.inArray(e[1], a)),
          n + 1 < a.length ? n + 1 : t ? null : 0
        );
      };
      if (
        (typeof s[0] === "number" && (s = e.aaSorting = [s]),
        n && e.oFeatures.bSortMulti)
      ) {
        const c = $.inArray(t, ut(s, "0"));
        c !== -1
          ? ((r = l(s[c], !0)) === null && s.length === 1 && (r = 0),
            r === null ? s.splice(c, 1) : ((s[c][1] = a[r]), (s[c]._idx = r)))
          : (s.push([t, a[0], 0]), (s[s.length - 1]._idx = 0));
      } else {
        s.length && s[0][0] == t
          ? ((r = l(s[0])), (s.length = 1), (s[0][1] = a[r]), (s[0]._idx = r))
          : ((s.length = 0), s.push([t, a[0]]), (s[0]._idx = 0));
      }
      C(e), typeof i === "function" && i(e);
    }
    function je(t, e, n, i) {
      const r = t.aoColumns[n];
      Le(e, {}, function (e) {
        !1 !== r.bSortable &&
          (t.oFeatures.bProcessing
            ? (fe(t, !0),
              setTimeout(function () {
                De(t, n, e.shiftKey, i), ze(t) !== "ssp" && fe(t, !1);
              }, 0))
            : De(t, n, e.shiftKey, i));
      });
    }
    function Ne(e) {
      let t;
      let n;
      let i;
      const r = e.aLastSort;
      const o = e.oClasses.sSortColumn;
      const s = ke(e);
      const a = e.oFeatures;
      if (a.bSort && a.bSortClasses) {
        for (t = 0, n = r.length; t < n; t++) {
          (i = r[t].src),
            $(ut(e.aoData, "anCells", i)).removeClass(o + (t < 2 ? t + 1 : 3));
        }
        for (t = 0, n = s.length; t < n; t++) {
          (i = s[t].src),
            $(ut(e.aoData, "anCells", i)).addClass(o + (t < 2 ? t + 1 : 3));
        }
      }
      e.aLastSort = s;
    }
    function Ee(e, t) {
      let n;
      let i;
      let r;
      const o = e.aoColumns[t];
      const s = Ve.ext.order[o.sSortDataType];
      s && (n = s.call(e.oInstance, e, t, u(e, t)));
      for (
        let a = Ve.ext.type.order[o.sType + "-pre"], l = 0, c = e.aoData.length;
        l < c;
        l++
      ) {
        (i = e.aoData[l])._aSortData || (i._aSortData = []),
          (i._aSortData[t] && !s) ||
            ((r = s ? n[l] : g(e, l, t, "sort")),
            (i._aSortData[t] = a ? a(r) : r));
      }
    }
    function Ie(n) {
      if (n.oFeatures.bStateSave && !n.bDestroying) {
        const e = {
          time: +new Date(),
          start: n._iDisplayStart,
          length: n._iDisplayLength,
          order: $.extend(!0, [], n.aaSorting),
          search: ne(n.oPreviousSearch),
          columns: $.map(n.aoColumns, function (e, t) {
            return { visible: e.bVisible, search: ne(n.aoPreSearchCols[t]) };
          }),
        };
        Re(n, "aoStateSaveParams", "stateSaveParams", [n, e]),
          (n.oSavedState = e),
          n.fnStateSaveCallback.call(n.oInstance, n, e);
      }
    }
    function Ae(n) {
      let e;
      let t;
      const i = n.aoColumns;
      if (n.oFeatures.bStateSave) {
        const r = n.fnStateLoadCallback.call(n.oInstance, n);
        if (r && r.time) {
          const o = Re(n, "aoStateLoadParams", "stateLoadParams", [n, r]);
          if ($.inArray(!1, o) === -1) {
            const s = n.iStateDuration;
            if (
              !(s > 0 && r.time < +new Date() - 1e3 * s) &&
              i.length === r.columns.length
            ) {
              for (
                n.oLoadedState = $.extend(!0, {}, r),
                  r.start !== q &&
                    ((n._iDisplayStart = r.start),
                    (n.iInitDisplayStart = r.start)),
                  r.length !== q && (n._iDisplayLength = r.length),
                  r.order !== q &&
                    ((n.aaSorting = []),
                    $.each(r.order, function (e, t) {
                      n.aaSorting.push(t[0] >= i.length ? [0, t[1]] : t);
                    })),
                  r.search !== q && $.extend(n.oPreviousSearch, ie(r.search)),
                  e = 0,
                  t = r.columns.length;
                e < t;
                e++
              ) {
                const a = r.columns[e];
                a.visible !== q && (i[e].bVisible = a.visible),
                  a.search !== q &&
                    $.extend(n.aoPreSearchCols[e], ie(a.search));
              }
              Re(n, "aoStateLoaded", "stateLoaded", [n, r]);
            }
          }
        }
      }
    }
    function Me(e) {
      const t = Ve.settings;
      const n = $.inArray(e, ut(t, "nTable"));
      return n !== -1 ? t[n] : null;
    }
    function Oe(e, t, n, i) {
      if (
        ((n =
          "DataTables warning: " +
          (e ? "table id=" + e.sTableId + " - " : "") +
          n),
        i &&
          (n +=
            ". For more information about this error, please see http://datatables.net/tn/" +
            i),
        t)
      ) {
        j.console && console.log && console.log(n);
      } else {
        const r = Ve.ext;
        const o = r.sErrMode || r.errMode;
        if ((e && Re(e, null, "error", [e, i, n]), o == "alert")) alert(n);
        else {
          if (o == "throw") throw new Error(n);
          typeof o === "function" && o(e, i, n);
        }
      }
    }
    function Pe(n, i, e, t) {
      $.isArray(e)
        ? $.each(e, function (e, t) {
            $.isArray(t) ? Pe(n, i, t[0], t[1]) : Pe(n, i, t);
          })
        : (t === q && (t = e), i[e] !== q && (n[t] = i[e]));
    }
    function Fe(e, t, n) {
      let i;
      for (const r in t) {
        t.hasOwnProperty(r) &&
          ((i = t[r]),
          $.isPlainObject(i)
            ? ($.isPlainObject(e[r]) || (e[r] = {}), $.extend(!0, e[r], i))
            : n && r !== "data" && r !== "aaData" && $.isArray(i)
              ? (e[r] = i.slice())
              : (e[r] = i));
      }
      return e;
    }
    function Le(t, e, n) {
      $(t)
        .bind("click.DT", e, function (e) {
          t.blur(), n(e);
        })
        .bind("keypress.DT", e, function (e) {
          e.which === 13 && (e.preventDefault(), n(e));
        })
        .bind("selectstart.DT", function () {
          return !1;
        });
    }
    function He(e, t, n, i) {
      n && e[t].push({ fn: n, sName: i });
    }
    function Re(t, e, n, i) {
      let r = [];
      if (
        (e &&
          (r = $.map(t[e].slice().reverse(), function (e) {
            return e.fn.apply(t.oInstance, i);
          })),
        n !== null)
      ) {
        const o = $.Event(n + ".dt");
        $(t.nTable).trigger(o, i), r.push(o.result);
      }
      return r;
    }
    function $e(e) {
      let t = e._iDisplayStart;
      const n = e.fnDisplayEnd();
      const i = e._iDisplayLength;
      n <= t && (t = n - i),
        (t -= t % i),
        (i === -1 || t < 0) && (t = 0),
        (e._iDisplayStart = t);
    }
    function qe(e, t) {
      const n = e.renderer;
      const i = Ve.ext.renderer[t];
      return $.isPlainObject(n) && n[t]
        ? i[n[t]] || i._
        : (typeof n === "string" && i[n]) || i._;
    }
    function ze(e) {
      return e.oFeatures.bServerSide
        ? "ssp"
        : e.ajax || e.sAjaxSource
          ? "ajax"
          : "dom";
    }
    function We(e, t) {
      let n = [];
      const i = Kt.numbers_length;
      const r = Math.floor(i / 2);
      return (
        t <= i
          ? (n = ht(0, t))
          : e <= r
            ? ((n = ht(0, i - 2)).push("ellipsis"), n.push(t - 1))
            : (t - 1 - r <= e
                ? (n = ht(t - (i - 2), t)).splice(0, 0, "ellipsis")
                : ((n = ht(e - r + 2, e + r - 1)).push("ellipsis"),
                  n.push(t - 1),
                  n.splice(0, 0, "ellipsis")),
              n.splice(0, 0, 0)),
        (n.DT_el = "span"),
        n
      );
    }
    function Be(n) {
      $.each(
        {
          num: function (e) {
            return Yt(e, n);
          },
          "num-fmt": function (e) {
            return Yt(e, n, it);
          },
          "html-num": function (e) {
            return Yt(e, n, Ze);
          },
          "html-num-fmt": function (e) {
            return Yt(e, n, Ze, it);
          },
        },
        function (e, t) {
          (Ke.type.order[e + n + "-pre"] = t),
            e.match(/^html\-/) && (Ke.type.search[e + n] = Ke.type.search.html);
        },
      );
    }
    function Ue(t) {
      return function () {
        const e = [Me(this[Ve.ext.iApiIndex])].concat(
          Array.prototype.slice.call(arguments),
        );
        return Ve.ext.internal[t].apply(this, e);
      };
    }
    let Ve;
    let Ke;
    let Ye;
    let Xe;
    let Ge;
    const Qe = {};
    const Je = /[\r\n]/g;
    var Ze = /<.*?>/g;
    const et = /^[\w\+\-]/;
    const tt = /[\w\+\-]$/;
    var nt = new RegExp(
      "(\\" +
        [
          "/",
          ".",
          "*",
          "+",
          "?",
          "|",
          "(",
          ")",
          "[",
          "]",
          "{",
          "}",
          "\\",
          "$",
          "^",
          "-",
        ].join("|\\") +
        ")",
      "g",
    );
    var it = /[',$\xa3\u20ac\xa5%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;
    const rt = function (e) {
      return !e || !0 === e || e === "-";
    };
    const ot = function (e) {
      const t = parseInt(e, 10);
      return !isNaN(t) && isFinite(e) ? t : null;
    };
    const st = function (e, t) {
      return (
        Qe[t] || (Qe[t] = new RegExp(ee(t), "g")),
        typeof e === "string" && t !== "."
          ? e.replace(/\./g, "").replace(Qe[t], ".")
          : e
      );
    };
    const at = function (e, t, n) {
      const i = typeof e === "string";
      return (
        !!rt(e) ||
        (t && i && (e = st(e, t)),
        n && i && (e = e.replace(it, "")),
        !isNaN(parseFloat(e)) && isFinite(e))
      );
    };
    const lt = function (e) {
      return rt(e) || typeof e === "string";
    };
    const ct = function (e, t, n) {
      return !!rt(e) || (lt(e) && !!at(ft(e), t, n)) || null;
    };
    var ut = function (e, t, n) {
      const i = [];
      let r = 0;
      const o = e.length;
      if (n !== q) for (; r < o; r++) e[r] && e[r][t] && i.push(e[r][t][n]);
      else for (; r < o; r++) e[r] && i.push(e[r][t]);
      return i;
    };
    const dt = function (e, t, n, i) {
      const r = [];
      let o = 0;
      const s = t.length;
      if (i !== q) for (; o < s; o++) e[t[o]][n] && r.push(e[t[o]][n][i]);
      else for (; o < s; o++) r.push(e[t[o]][n]);
      return r;
    };
    var ht = function (e, t) {
      let n;
      const i = [];
      t === q ? ((t = 0), (n = e)) : ((n = t), (t = e));
      for (let r = t; r < n; r++) i.push(r);
      return i;
    };
    const pt = function (e) {
      for (var t = [], n = 0, i = e.length; n < i; n++) e[n] && t.push(e[n]);
      return t;
    };
    var ft = function (e) {
      return e.replace(Ze, "");
    };
    var gt = function (e) {
      let t;
      let n;
      let i;
      const r = [];
      const o = e.length;
      let s = 0;
      e: for (n = 0; n < o; n++) {
        for (t = e[n], i = 0; i < s; i++) if (r[i] === t) continue e;
        r.push(t), s++;
      }
      return r;
    };
    var mt = function (e, t, n) {
      e[t] !== q && (e[n] = e[t]);
    };
    var vt = /\[.*?\]$/;
    var yt = /\(\)$/;
    var bt = $("<div>")[0];
    var _t = bt.textContent !== q;
    var xt = /<.*?>/g;
    Ve = function (D) {
      (this.$ = function (e, t) {
        return this.api(!0).$(e, t);
      }),
        (this._ = function (e, t) {
          return this.api(!0).rows(e, t).data();
        }),
        (this.api = function (e) {
          return new Ye(e ? Me(this[Ke.iApiIndex]) : this);
        }),
        (this.fnAddData = function (e, t) {
          const n = this.api(!0);
          const i =
            $.isArray(e) && ($.isArray(e[0]) || $.isPlainObject(e[0]))
              ? n.rows.add(e)
              : n.row.add(e);
          return (t === q || t) && n.draw(), i.flatten().toArray();
        }),
        (this.fnAdjustColumnSizing = function (e) {
          const t = this.api(!0).columns.adjust();
          const n = t.settings()[0];
          const i = n.oScroll;
          e === q || e ? t.draw(!1) : (i.sX === "" && i.sY === "") || me(n);
        }),
        (this.fnClearTable = function (e) {
          const t = this.api(!0).clear();
          (e === q || e) && t.draw();
        }),
        (this.fnClose = function (e) {
          this.api(!0).row(e).child.hide();
        }),
        (this.fnDeleteRow = function (e, t, n) {
          const i = this.api(!0);
          const r = i.rows(e);
          const o = r.settings()[0];
          const s = o.aoData[r[0][0]];
          return (
            r.remove(), t && t.call(this, o, s), (n === q || n) && i.draw(), s
          );
        }),
        (this.fnDestroy = function (e) {
          this.api(!0).destroy(e);
        }),
        (this.fnDraw = function (e) {
          this.api(!0).draw(e);
        }),
        (this.fnFilter = function (e, t, n, i, r, o) {
          const s = this.api(!0);
          t === null || t === q
            ? s.search(e, n, i, o)
            : s.column(t).search(e, n, i, o),
            s.draw();
        }),
        (this.fnGetData = function (e, t) {
          const n = this.api(!0);
          if (e === q) return n.data().toArray();
          const i = e.nodeName ? e.nodeName.toLowerCase() : "";
          return t !== q || i == "td" || i == "th"
            ? n.cell(e, t).data()
            : n.row(e).data() || null;
        }),
        (this.fnGetNodes = function (e) {
          const t = this.api(!0);
          return e !== q
            ? t.row(e).node()
            : t.rows().nodes().flatten().toArray();
        }),
        (this.fnGetPosition = function (e) {
          const t = this.api(!0);
          const n = e.nodeName.toUpperCase();
          if (n == "TR") return t.row(e).index();
          if (n != "TD" && n != "TH") return null;
          const i = t.cell(e).index();
          return [i.row, i.columnVisible, i.column];
        }),
        (this.fnIsOpen = function (e) {
          return this.api(!0).row(e).child.isShown();
        }),
        (this.fnOpen = function (e, t, n) {
          return this.api(!0).row(e).child(t, n).show().child()[0];
        }),
        (this.fnPageChange = function (e, t) {
          const n = this.api(!0).page(e);
          (t === q || t) && n.draw(!1);
        }),
        (this.fnSetColumnVis = function (e, t, n) {
          const i = this.api(!0).column(e).visible(t);
          (n === q || n) && i.columns.adjust().draw();
        }),
        (this.fnSettings = function () {
          return Me(this[Ke.iApiIndex]);
        }),
        (this.fnSort = function (e) {
          this.api(!0).order(e).draw();
        }),
        (this.fnSortListener = function (e, t, n) {
          this.api(!0).order.listener(e, t, n);
        }),
        (this.fnUpdate = function (e, t, n, i, r) {
          const o = this.api(!0);
          return (
            n === q || n === null ? o.row(t).data(e) : o.cell(t, n).data(e),
            (r === q || r) && o.columns.adjust(),
            (i === q || i) && o.draw(),
            0
          );
        }),
        (this.fnVersionCheck = Ke.fnVersionCheck);
      let j = this;
      const N = D === q;
      const E = this.length;
      for (const e in (N && (D = {}),
      (this.oApi = this.internal = Ke.internal),
      Ve.ext.internal)) {
        e && (this[e] = Ue(e));
      }
      return (
        this.each(function () {
          let e;
          let t = E > 1 ? Fe({}, D, !0) : D;
          let n = 0;
          let i = this.getAttribute("id");
          let r = !1;
          const o = Ve.defaults;
          const s = $(this);
          if (this.nodeName.toLowerCase() == "table") {
            M(o),
              O(o.column),
              I(o, o, !0),
              I(o.column, o.column, !0),
              I(o, $.extend(t, s.data()));
            const a = Ve.settings;
            for (n = 0, e = a.length; n < e; n++) {
              const l = a[n];
              if (
                l.nTable == this ||
                l.nTHead.parentNode == this ||
                (l.nTFoot && l.nTFoot.parentNode == this)
              ) {
                const c = t.bRetrieve !== q ? t.bRetrieve : o.bRetrieve;
                const u = t.bDestroy !== q ? t.bDestroy : o.bDestroy;
                if (N || c) return l.oInstance;
                if (u) {
                  l.oInstance.fnDestroy();
                  break;
                }
                return void Oe(l, 0, "Cannot reinitialise DataTable", 3);
              }
              if (l.sTableId == this.id) {
                a.splice(n, 1);
                break;
              }
            }
            (i !== null && i !== "") ||
              ((i = "DataTables_Table_" + Ve.ext._unique++), (this.id = i));
            const d = $.extend(!0, {}, Ve.models.oSettings, {
              sDestroyWidth: s[0].style.width,
              sInstance: i,
              sTableId: i,
            });
            (d.nTable = this),
              (d.oApi = j.internal),
              (d.oInit = t),
              a.push(d),
              (d.oInstance = j.length === 1 ? j : s.dataTable()),
              M(t),
              t.oLanguage && A(t.oLanguage),
              t.aLengthMenu &&
                !t.iDisplayLength &&
                (t.iDisplayLength = $.isArray(t.aLengthMenu[0])
                  ? t.aLengthMenu[0][0]
                  : t.aLengthMenu[0]),
              (t = Fe($.extend(!0, {}, o), t)),
              Pe(d.oFeatures, t, [
                "bPaginate",
                "bLengthChange",
                "bFilter",
                "bSort",
                "bSortMulti",
                "bInfo",
                "bProcessing",
                "bAutoWidth",
                "bSortClasses",
                "bServerSide",
                "bDeferRender",
              ]),
              Pe(d, t, [
                "asStripeClasses",
                "ajax",
                "fnServerData",
                "fnFormatNumber",
                "sServerMethod",
                "aaSorting",
                "aaSortingFixed",
                "aLengthMenu",
                "sPaginationType",
                "sAjaxSource",
                "sAjaxDataProp",
                "iStateDuration",
                "sDom",
                "bSortCellsTop",
                "iTabIndex",
                "fnStateLoadCallback",
                "fnStateSaveCallback",
                "renderer",
                "searchDelay",
                "rowId",
                ["iCookieDuration", "iStateDuration"],
                ["oSearch", "oPreviousSearch"],
                ["aoSearchCols", "aoPreSearchCols"],
                ["iDisplayLength", "_iDisplayLength"],
                ["bJQueryUI", "bJUI"],
              ]),
              Pe(d.oScroll, t, [
                ["sScrollX", "sX"],
                ["sScrollXInner", "sXInner"],
                ["sScrollY", "sY"],
                ["bScrollCollapse", "bCollapse"],
              ]),
              Pe(d.oLanguage, t, "fnInfoCallback"),
              He(d, "aoDrawCallback", t.fnDrawCallback, "user"),
              He(d, "aoServerParams", t.fnServerParams, "user"),
              He(d, "aoStateSaveParams", t.fnStateSaveParams, "user"),
              He(d, "aoStateLoadParams", t.fnStateLoadParams, "user"),
              He(d, "aoStateLoaded", t.fnStateLoaded, "user"),
              He(d, "aoRowCallback", t.fnRowCallback, "user"),
              He(d, "aoRowCreatedCallback", t.fnCreatedRow, "user"),
              He(d, "aoHeaderCallback", t.fnHeaderCallback, "user"),
              He(d, "aoFooterCallback", t.fnFooterCallback, "user"),
              He(d, "aoInitComplete", t.fnInitComplete, "user"),
              He(d, "aoPreDrawCallback", t.fnPreDrawCallback, "user"),
              (d.rowIdFn = U(t.rowId)),
              P(d);
            const h = d.oClasses;
            if (
              (t.bJQueryUI
                ? ($.extend(h, Ve.ext.oJUIClasses, t.oClasses),
                  t.sDom === o.sDom &&
                    o.sDom === "lfrtip" &&
                    (d.sDom = '<"H"lfr>t<"F"ip>'),
                  d.renderer
                    ? $.isPlainObject(d.renderer) &&
                      !d.renderer.header &&
                      (d.renderer.header = "jqueryui")
                    : (d.renderer = "jqueryui"))
                : $.extend(h, Ve.ext.classes, t.oClasses),
              s.addClass(h.sTable),
              d.iInitDisplayStart === q &&
                ((d.iInitDisplayStart = t.iDisplayStart),
                (d._iDisplayStart = t.iDisplayStart)),
              t.iDeferLoading !== null)
            ) {
              d.bDeferLoading = !0;
              const p = $.isArray(t.iDeferLoading);
              (d._iRecordsDisplay = p ? t.iDeferLoading[0] : t.iDeferLoading),
                (d._iRecordsTotal = p ? t.iDeferLoading[1] : t.iDeferLoading);
            }
            const f = d.oLanguage;
            $.extend(!0, f, t.oLanguage),
              f.sUrl !== "" &&
                ($.ajax({
                  dataType: "json",
                  url: f.sUrl,
                  success: function (e) {
                    A(e), I(o.oLanguage, e), $.extend(!0, f, e), ae(d);
                  },
                  error: function () {
                    ae(d);
                  },
                }),
                (r = !0)),
              t.asStripeClasses === null &&
                (d.asStripeClasses = [h.sStripeOdd, h.sStripeEven]);
            const g = d.asStripeClasses;
            const m = s.children("tbody").find("tr").eq(0);
            $.inArray(
              !0,
              $.map(g, function (e) {
                return m.hasClass(e);
              }),
            ) !== -1 &&
              ($("tbody tr", this).removeClass(g.join(" ")),
              (d.asDestroyStripes = g.slice()));
            let v;
            let y = [];
            const b = this.getElementsByTagName("thead");
            if (
              (b.length !== 0 && (V(d.aoHeader, b[0]), (y = K(d))),
              t.aoColumns === null)
            ) {
              for (v = [], n = 0, e = y.length; n < e; n++) v.push(null);
            } else v = t.aoColumns;
            for (n = 0, e = v.length; n < e; n++) F(d, y ? y[n] : null);
            if (
              (H(d, t.aoColumnDefs, v, function (e, t) {
                L(d, e, t);
              }),
              m.length)
            ) {
              const _ = function (e, t) {
                return e.getAttribute("data-" + t) !== null ? t : null;
              };
              $(m[0])
                .children("th, td")
                .each(function (e, t) {
                  const n = d.aoColumns[e];
                  if (n.mData === e) {
                    const i = _(t, "sort") || _(t, "order");
                    const r = _(t, "filter") || _(t, "search");
                    (i === null && r === null) ||
                      ((n.mData = {
                        _: e + ".display",
                        sort: i !== null ? e + ".@data-" + i : q,
                        type: i !== null ? e + ".@data-" + i : q,
                        filter: r !== null ? e + ".@data-" + r : q,
                      }),
                      L(d, e));
                  }
                });
            }
            const x = d.oFeatures;
            if (
              (t.bStateSave &&
                ((x.bStateSave = !0),
                Ae(d, t),
                He(d, "aoDrawCallback", Ie, "state_save")),
              t.aaSorting === q)
            ) {
              const w = d.aaSorting;
              for (n = 0, e = w.length; n < e; n++) {
                w[n][1] = d.aoColumns[n].asSorting[0];
              }
            }
            Ne(d),
              x.bSort &&
                He(d, "aoDrawCallback", function () {
                  if (d.bSorted) {
                    const e = ke(d);
                    const n = {};
                    $.each(e, function (e, t) {
                      n[t.src] = t.dir;
                    }),
                      Re(d, null, "order", [d, e, n]),
                      Te(d);
                  }
                }),
              He(
                d,
                "aoDrawCallback",
                function () {
                  (d.bSorted || ze(d) === "ssp" || x.bDeferRender) && Ne(d);
                },
                "sc",
              );
            const C = s.children("caption").each(function () {
              this._captionSide = s.css("caption-side");
            });
            let k = s.children("thead");
            k.length === 0 && (k = $("<thead/>").appendTo(this)),
              (d.nTHead = k[0]);
            let S = s.children("tbody");
            S.length === 0 && (S = $("<tbody/>").appendTo(this)),
              (d.nTBody = S[0]);
            let T = s.children("tfoot");
            if (
              (T.length === 0 &&
                C.length > 0 &&
                (d.oScroll.sX !== "" || d.oScroll.sY !== "") &&
                (T = $("<tfoot/>").appendTo(this)),
              T.length === 0 || T.children().length === 0
                ? s.addClass(h.sNoFooter)
                : T.length > 0 && ((d.nTFoot = T[0]), V(d.aoFooter, d.nTFoot)),
              t.aaData)
            ) {
              for (n = 0; n < t.aaData.length; n++) R(d, t.aaData[n]);
            } else {
              (d.bDeferLoading || ze(d) == "dom") &&
                B(d, $(d.nTBody).children("tr"));
            }
            (d.aiDisplay = d.aiDisplayMaster.slice()),
              !(d.bInitialised = !0) === r && ae(d);
          } else {
            Oe(
              null,
              0,
              "Non-table node initialisation (" + this.nodeName + ")",
              2,
            );
          }
        }),
        (j = null),
        this
      );
    };
    const wt = [];
    const Ct = Array.prototype;
    const kt = function (e) {
      let t;
      let n;
      const i = Ve.settings;
      const r = $.map(i, function (e) {
        return e.nTable;
      });
      return e
        ? e.nTable && e.oApi
          ? [e]
          : e.nodeName && e.nodeName.toLowerCase() === "table"
            ? (t = $.inArray(e, r)) !== -1
              ? [i[t]]
              : null
            : e && typeof e.settings === "function"
              ? e.settings().toArray()
              : (typeof e === "string" ? (n = $(e)) : e instanceof $ && (n = e),
                n
                  ? n
                      .map(function () {
                        return (t = $.inArray(this, r)) !== -1 ? i[t] : null;
                      })
                      .toArray()
                  : void 0)
        : [];
    };
    (Ye = function (e, t) {
      if (!(this instanceof Ye)) return new Ye(e, t);
      let n = [];
      const i = function (e) {
        const t = kt(e);
        t && (n = n.concat(t));
      };
      if ($.isArray(e)) for (let r = 0, o = e.length; r < o; r++) i(e[r]);
      else i(e);
      (this.context = gt(n)),
        t && $.merge(this, t),
        (this.selector = { rows: null, cols: null, opts: null }),
        Ye.extend(this, this, wt);
    }),
      (Ve.Api = Ye),
      $.extend(Ye.prototype, {
        any: function () {
          return this.count() !== 0;
        },
        concat: Ct.concat,
        context: [],
        count: function () {
          return this.flatten().length;
        },
        each: function (e) {
          for (let t = 0, n = this.length; t < n; t++) {
            e.call(this, this[t], t, this);
          }
          return this;
        },
        eq: function (e) {
          const t = this.context;
          return t.length > e ? new Ye(t[e], this[e]) : null;
        },
        filter: function (e) {
          let t = [];
          if (Ct.filter) t = Ct.filter.call(this, e, this);
          else {
            for (let n = 0, i = this.length; n < i; n++) {
              e.call(this, this[n], n, this) && t.push(this[n]);
            }
          }
          return new Ye(this.context, t);
        },
        flatten: function () {
          const e = [];
          return new Ye(this.context, e.concat.apply(e, this.toArray()));
        },
        join: Ct.join,
        indexOf:
          Ct.indexOf ||
          function (e, t) {
            for (let n = t || 0, i = this.length; n < i; n++) {
              if (this[n] === e) return n;
            }
            return -1;
          },
        iterator: function (e, t, n, i) {
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          const h = [];
          const p = this.context;
          const f = this.selector;
          for (
            typeof e === "string" && ((i = n), (n = t), (t = e), (e = !1)),
              o = 0,
              s = p.length;
            o < s;
            o++
          ) {
            const g = new Ye(p[o]);
            if (t === "table") (r = n.call(g, p[o], o)) !== q && h.push(r);
            else if (t === "columns" || t === "rows") {
              (r = n.call(g, p[o], this[o], o)) !== q && h.push(r);
            } else if (
              t === "column" ||
              t === "column-rows" ||
              t === "row" ||
              t === "cell"
            ) {
              for (
                u = this[o],
                  t === "column-rows" && (c = Et(p[o], f.opts)),
                  a = 0,
                  l = u.length;
                a < l;
                a++
              ) {
                (d = u[a]),
                  (r =
                    t === "cell"
                      ? n.call(g, p[o], d.row, d.column, o, a)
                      : n.call(g, p[o], d, o, a, c)) !== q && h.push(r);
              }
            }
          }
          if (h.length || i) {
            const m = new Ye(p, e ? h.concat.apply([], h) : h);
            const v = m.selector;
            return (v.rows = f.rows), (v.cols = f.cols), (v.opts = f.opts), m;
          }
          return this;
        },
        lastIndexOf:
          Ct.lastIndexOf ||
          function () {
            return this.indexOf.apply(this.toArray.reverse(), arguments);
          },
        length: 0,
        map: function (e) {
          let t = [];
          if (Ct.map) t = Ct.map.call(this, e, this);
          else {
            for (let n = 0, i = this.length; n < i; n++) {
              t.push(e.call(this, this[n], n));
            }
          }
          return new Ye(this.context, t);
        },
        pluck: function (t) {
          return this.map(function (e) {
            return e[t];
          });
        },
        pop: Ct.pop,
        push: Ct.push,
        reduce:
          Ct.reduce ||
          function (e, t) {
            return n(this, e, t, 0, this.length, 1);
          },
        reduceRight:
          Ct.reduceRight ||
          function (e, t) {
            return n(this, e, t, this.length - 1, -1, -1);
          },
        reverse: Ct.reverse,
        selector: null,
        shift: Ct.shift,
        sort: Ct.sort,
        splice: Ct.splice,
        toArray: function () {
          return Ct.slice.call(this);
        },
        to$: function () {
          return $(this);
        },
        toJQuery: function () {
          return $(this);
        },
        unique: function () {
          return new Ye(this.context, gt(this));
        },
        unshift: Ct.unshift,
      }),
      (Ye.extend = function (e, t, n) {
        if (n.length && t && (t instanceof Ye || t.__dt_wrapper)) {
          let i;
          let r;
          let o;
          const s = function (t, n, i) {
            return function () {
              const e = n.apply(t, arguments);
              return Ye.extend(e, e, i.methodExt), e;
            };
          };
          for (i = 0, r = n.length; i < r; i++) {
            (t[(o = n[i]).name] =
              typeof o.val === "function"
                ? s(e, o.val, o)
                : $.isPlainObject(o.val)
                  ? {}
                  : o.val),
              (t[o.name].__dt_wrapper = !0),
              Ye.extend(e, t[o.name], o.propExt);
          }
        }
      }),
      (Ye.register = Xe =
        function (e, t) {
          if ($.isArray(e)) {
            for (let n = 0, i = e.length; n < i; n++) Ye.register(e[n], t);
          } else {
            let r;
            let o;
            let s;
            let a;
            const l = e.split(".");
            let c = wt;
            const u = function (e, t) {
              for (let n = 0, i = e.length; n < i; n++) {
                if (e[n].name === t) return e[n];
              }
              return null;
            };
            for (r = 0, o = l.length; r < o; r++) {
              let d = u(
                c,
                (s = (a = l[r].indexOf("()") !== -1)
                  ? l[r].replace("()", "")
                  : l[r]),
              );
              d ||
                ((d = { name: s, val: {}, methodExt: [], propExt: [] }),
                c.push(d)),
                r === o - 1 ? (d.val = t) : (c = a ? d.methodExt : d.propExt);
            }
          }
        }),
      (Ye.registerPlural = Ge =
        function (e, t, n) {
          Ye.register(e, n),
            Ye.register(t, function () {
              const e = n.apply(this, arguments);
              return e === this
                ? this
                : e instanceof Ye
                  ? e.length
                    ? $.isArray(e[0])
                      ? new Ye(e.context, e[0])
                      : e[0]
                    : q
                  : e;
            });
        });
    const St = function (e, t) {
      if (typeof e === "number") return [t[e]];
      const n = $.map(t, function (e) {
        return e.nTable;
      });
      return $(n)
        .filter(e)
        .map(function () {
          const e = $.inArray(this, n);
          return t[e];
        })
        .toArray();
    };
    Xe("tables()", function (e) {
      return e ? new Ye(St(e, this.context)) : this;
    }),
      Xe("table()", function (e) {
        const t = this.tables(e);
        const n = t.context;
        return n.length ? new Ye(n[0]) : t;
      }),
      Ge("tables().nodes()", "table().node()", function () {
        return this.iterator(
          "table",
          function (e) {
            return e.nTable;
          },
          1,
        );
      }),
      Ge("tables().body()", "table().body()", function () {
        return this.iterator(
          "table",
          function (e) {
            return e.nTBody;
          },
          1,
        );
      }),
      Ge("tables().header()", "table().header()", function () {
        return this.iterator(
          "table",
          function (e) {
            return e.nTHead;
          },
          1,
        );
      }),
      Ge("tables().footer()", "table().footer()", function () {
        return this.iterator(
          "table",
          function (e) {
            return e.nTFoot;
          },
          1,
        );
      }),
      Ge("tables().containers()", "table().container()", function () {
        return this.iterator(
          "table",
          function (e) {
            return e.nTableWrapper;
          },
          1,
        );
      }),
      Xe("draw()", function (t) {
        return this.iterator("table", function (e) {
          t === "page"
            ? _(e)
            : (typeof t === "string" && (t = t !== "full-hold"),
              C(e, !1 === t));
        });
      }),
      Xe("page()", function (t) {
        return t === q
          ? this.page.info().page
          : this.iterator("table", function (e) {
              he(e, t);
            });
      }),
      Xe("page.info()", function () {
        if (this.context.length === 0) return q;
        const e = this.context[0];
        const t = e._iDisplayStart;
        const n = e.oFeatures.bPaginate ? e._iDisplayLength : -1;
        const i = e.fnRecordsDisplay();
        const r = n === -1;
        return {
          page: r ? 0 : Math.floor(t / n),
          pages: r ? 1 : Math.ceil(i / n),
          start: t,
          end: e.fnDisplayEnd(),
          length: n,
          recordsTotal: e.fnRecordsTotal(),
          recordsDisplay: i,
          serverSide: ze(e) === "ssp",
        };
      }),
      Xe("page.len()", function (t) {
        return t === q
          ? this.context.length !== 0
            ? this.context[0]._iDisplayLength
            : q
          : this.iterator("table", function (e) {
              ce(e, t);
            });
      });
    const Tt = function (r, o, e) {
      if (e) {
        const t = new Ye(r);
        t.one("draw", function () {
          e(t.ajax.json());
        });
      }
      if (ze(r) == "ssp") C(r, o);
      else {
        fe(r, !0);
        const n = r.jqXHR;
        n && n.readyState !== 4 && n.abort(),
          S(r, [], function (e) {
            c(r);
            for (let t = D(r, e), n = 0, i = t.length; n < i; n++) R(r, t[n]);
            C(r, o), fe(r, !1);
          });
      }
    };
    Xe("ajax.json()", function () {
      const e = this.context;
      if (e.length > 0) return e[0].json;
    }),
      Xe("ajax.params()", function () {
        const e = this.context;
        if (e.length > 0) return e[0].oAjaxData;
      }),
      Xe("ajax.reload()", function (t, n) {
        return this.iterator("table", function (e) {
          Tt(e, !1 === n, t);
        });
      }),
      Xe("ajax.url()", function (t) {
        let e = this.context;
        return t === q
          ? e.length === 0
            ? q
            : (e = e[0]).ajax
              ? $.isPlainObject(e.ajax)
                ? e.ajax.url
                : e.ajax
              : e.sAjaxSource
          : this.iterator("table", function (e) {
              $.isPlainObject(e.ajax) ? (e.ajax.url = t) : (e.ajax = t);
            });
      }),
      Xe("ajax.url().load()", function (t, n) {
        return this.iterator("table", function (e) {
          Tt(e, !1 === n, t);
        });
      });
    const Dt = function (e, t, n, i, r) {
      let o;
      let s;
      let a;
      let l;
      let c;
      let u;
      let d = [];
      const h = typeof t;
      for (
        (t && h !== "string" && h !== "function" && t.length !== q) ||
          (t = [t]),
          a = 0,
          l = t.length;
        a < l;
        a++
      ) {
        for (
          c = 0, u = (s = t[a] && t[a].split ? t[a].split(",") : [t[a]]).length;
          c < u;
          c++
        ) {
          (o = n(typeof s[c] === "string" ? $.trim(s[c]) : s[c])) &&
            o.length &&
            (d = d.concat(o));
        }
      }
      const p = Ke.selector[e];
      if (p.length) for (a = 0, l = p.length; a < l; a++) d = p[a](i, r, d);
      return gt(d);
    };
    const jt = function (e) {
      return (
        e || (e = {}),
        e.filter && e.search === q && (e.search = e.filter),
        $.extend({ search: "none", order: "current", page: "all" }, e)
      );
    };
    const Nt = function (e) {
      for (let t = 0, n = e.length; t < n; t++) {
        if (e[t].length > 0) {
          return (
            (e[0] = e[t]),
            (e[0].length = 1),
            (e.length = 1),
            (e.context = [e.context[t]]),
            e
          );
        }
      }
      return (e.length = 0), e;
    };
    var Et = function (e, t) {
      let n;
      let i;
      let r;
      let o = [];
      const s = e.aiDisplay;
      const a = e.aiDisplayMaster;
      const l = t.search;
      const c = t.order;
      const u = t.page;
      if (ze(e) == "ssp") return l === "removed" ? [] : ht(0, a.length);
      if (u == "current") {
        for (n = e._iDisplayStart, i = e.fnDisplayEnd(); n < i; n++) {
          o.push(s[n]);
        }
      } else if (c == "current" || c == "applied") {
        o =
          l == "none"
            ? a.slice()
            : l == "applied"
              ? s.slice()
              : $.map(a, function (e) {
                  return $.inArray(e, s) === -1 ? e : null;
                });
      } else if (c == "index" || c == "original") {
        for (n = 0, i = e.aoData.length; n < i; n++) {
          l == "none"
            ? o.push(n)
            : (((r = $.inArray(n, s)) === -1 && l == "removed") ||
                (r >= 0 && l == "applied")) &&
              o.push(n);
        }
      }
      return o;
    };
    const It = function (o, e, s) {
      return Dt(
        "row",
        e,
        function (n) {
          const e = ot(n);
          if (e !== null && !s) return [e];
          const t = Et(o, s);
          if (e !== null && $.inArray(e, t) !== -1) return [e];
          if (!n) return t;
          if (typeof n === "function") {
            return $.map(t, function (e) {
              const t = o.aoData[e];
              return n(e, t._aData, t.nTr) ? e : null;
            });
          }
          const i = pt(dt(o.aoData, t, "nTr"));
          if (n.nodeName && $.inArray(n, i) !== -1) return [n._DT_RowIndex];
          if (typeof n === "string" && n.charAt(0) === "#") {
            const r = o.aIds[n.replace(/^#/, "")];
            if (r !== q) return [r.idx];
          }
          return $(i)
            .filter(n)
            .map(function () {
              return this._DT_RowIndex;
            })
            .toArray();
        },
        o,
        s,
      );
    };
    Xe("rows()", function (t, n) {
      t === q ? (t = "") : $.isPlainObject(t) && ((n = t), (t = "")),
        (n = jt(n));
      const e = this.iterator(
        "table",
        function (e) {
          return It(e, t, n);
        },
        1,
      );
      return (e.selector.rows = t), (e.selector.opts = n), e;
    }),
      Xe("rows().nodes()", function () {
        return this.iterator(
          "row",
          function (e, t) {
            return e.aoData[t].nTr || q;
          },
          1,
        );
      }),
      Xe("rows().data()", function () {
        return this.iterator(
          !0,
          "rows",
          function (e, t) {
            return dt(e.aoData, t, "_aData");
          },
          1,
        );
      }),
      Ge("rows().cache()", "row().cache()", function (i) {
        return this.iterator(
          "row",
          function (e, t) {
            const n = e.aoData[t];
            return i === "search" ? n._aFilterData : n._aSortData;
          },
          1,
        );
      }),
      Ge("rows().invalidate()", "row().invalidate()", function (n) {
        return this.iterator("row", function (e, t) {
          r(e, t, n);
        });
      }),
      Ge("rows().indexes()", "row().index()", function () {
        return this.iterator(
          "row",
          function (e, t) {
            return t;
          },
          1,
        );
      }),
      Ge("rows().ids()", "row().id()", function (e) {
        for (var t = [], n = this.context, i = 0, r = n.length; i < r; i++) {
          for (let o = 0, s = this[i].length; o < s; o++) {
            const a = n[i].rowIdFn(n[i].aoData[this[i][o]]._aData);
            t.push((!0 === e ? "#" : "") + a);
          }
        }
        return new Ye(n, t);
      }),
      Ge("rows().remove()", "row().remove()", function () {
        const h = this;
        return (
          this.iterator("row", function (e, t, n) {
            let i;
            let r;
            let o;
            let s;
            let a;
            let l;
            const c = e.aoData;
            const u = c[t];
            for (c.splice(t, 1), i = 0, r = c.length; i < r; i++) {
              if (
                ((l = (a = c[i]).anCells),
                a.nTr !== null && (a.nTr._DT_RowIndex = i),
                l !== null)
              ) {
                for (o = 0, s = l.length; o < s; o++) {
                  l[o]._DT_CellIndex.row = i;
                }
              }
            }
            p(e.aiDisplayMaster, t), p(e.aiDisplay, t), p(h[n], t, !1), $e(e);
            const d = e.rowIdFn(u._aData);
            d !== q && delete e.aIds[d];
          }),
          this.iterator("table", function (e) {
            for (let t = 0, n = e.aoData.length; t < n; t++) {
              e.aoData[t].idx = t;
            }
          }),
          this
        );
      }),
      Xe("rows.add()", function (o) {
        const e = this.iterator(
          "table",
          function (e) {
            let t;
            let n;
            let i;
            const r = [];
            for (n = 0, i = o.length; n < i; n++) {
              (t = o[n]).nodeName && t.nodeName.toUpperCase() === "TR"
                ? r.push(B(e, t)[0])
                : r.push(R(e, t));
            }
            return r;
          },
          1,
        );
        const t = this.rows(-1);
        return t.pop(), $.merge(t, e), t;
      }),
      Xe("row()", function (e, t) {
        return Nt(this.rows(e, t));
      }),
      Xe("row().data()", function (e) {
        const t = this.context;
        return e === q
          ? t.length && this.length
            ? t[0].aoData[this[0]]._aData
            : q
          : ((t[0].aoData[this[0]]._aData = e), r(t[0], this[0], "data"), this);
      }),
      Xe("row().node()", function () {
        const e = this.context;
        return (e.length && this.length && e[0].aoData[this[0]].nTr) || null;
      }),
      Xe("row.add()", function (t) {
        t instanceof $ && t.length && (t = t[0]);
        const e = this.iterator("table", function (e) {
          return t.nodeName && t.nodeName.toUpperCase() === "TR"
            ? B(e, t)[0]
            : R(e, t);
        });
        return this.row(e[0]);
      });
    const At = function (o, e, t, n) {
      const s = [];
      const a = function (e, t) {
        if ($.isArray(e) || e instanceof $) {
          for (let n = 0, i = e.length; n < i; n++) a(e[n], t);
        } else if (e.nodeName && e.nodeName.toLowerCase() === "tr") s.push(e);
        else {
          const r = $("<tr><td/></tr>").addClass(t);
          ($("td", r).addClass(t).html(e)[0].colSpan = N(o)), s.push(r[0]);
        }
      };
      a(t, n),
        e._details && e._details.remove(),
        (e._details = $(s)),
        e._detailsShow && e._details.insertAfter(e.nTr);
    };
    const Mt = function (e, t) {
      const n = e.context;
      if (n.length) {
        const i = n[0].aoData[t !== q ? t : e[0]];
        i &&
          i._details &&
          (i._details.remove(), (i._detailsShow = q), (i._details = q));
      }
    };
    const Ot = function (e, t) {
      const n = e.context;
      if (n.length && e.length) {
        const i = n[0].aoData[e[0]];
        i._details &&
          ((i._detailsShow = t)
            ? i._details.insertAfter(i.nTr)
            : i._details.detach(),
          Pt(n[0]));
      }
    };
    var Pt = function (s) {
      const r = new Ye(s);
      const e = ".dt.DT_details";
      const t = "draw" + e;
      const n = "column-visibility" + e;
      const i = "destroy" + e;
      const a = s.aoData;
      r.off(t + " " + n + " " + i),
        ut(a, "_details").length > 0 &&
          (r.on(t, function (e, t) {
            s === t &&
              r
                .rows({ page: "current" })
                .eq(0)
                .each(function (e) {
                  const t = a[e];
                  t._detailsShow && t._details.insertAfter(t.nTr);
                });
          }),
          r.on(n, function (e, t) {
            if (s === t) {
              for (var n, i = N(t), r = 0, o = a.length; r < o; r++) {
                (n = a[r])._details &&
                  n._details.children("td[colspan]").attr("colspan", i);
              }
            }
          }),
          r.on(i, function (e, t) {
            if (s === t) {
              for (let n = 0, i = a.length; n < i; n++) {
                a[n]._details && Mt(r, n);
              }
            }
          }));
    };
    const Ft = "" + "row().child";
    const Lt = Ft + "()";
    Xe(Lt, function (e, t) {
      const n = this.context;
      return e === q
        ? n.length && this.length
          ? n[0].aoData[this[0]]._details
          : q
        : (!0 === e
            ? this.child.show()
            : !1 === e
              ? Mt(this)
              : n.length && this.length && At(n[0], n[0].aoData[this[0]], e, t),
          this);
    }),
      Xe([Ft + ".show()", Lt + ".show()"], function () {
        return Ot(this, !0), this;
      }),
      Xe([Ft + ".hide()", Lt + ".hide()"], function () {
        return Ot(this, !1), this;
      }),
      Xe([Ft + ".remove()", Lt + ".remove()"], function () {
        return Mt(this), this;
      }),
      Xe(Ft + ".isShown()", function () {
        const e = this.context;
        return (
          (e.length && this.length && e[0].aoData[this[0]]._detailsShow) || !1
        );
      });
    const Ht = /^(.+):(name|visIdx|visible)$/;
    const Rt = function (e, t, n, i, r) {
      for (var o = [], s = 0, a = r.length; s < a; s++) o.push(g(e, r[s], t));
      return o;
    };
    const $t = function (s, e, a) {
      const l = s.aoColumns;
      const c = ut(l, "sName");
      const u = ut(l, "nTh");
      return Dt(
        "column",
        e,
        function (n) {
          const e = ot(n);
          if (n === "") return ht(l.length);
          if (e !== null) return [e >= 0 ? e : l.length + e];
          if (typeof n === "function") {
            const i = Et(s, a);
            return $.map(l, function (e, t) {
              return n(t, Rt(s, t, 0, 0, i), u[t]) ? t : null;
            });
          }
          const r = typeof n === "string" ? n.match(Ht) : "";
          if (!r) {
            return $(u)
              .filter(n)
              .map(function () {
                return $.inArray(this, u);
              })
              .toArray();
          }
          switch (r[2]) {
            case "visIdx":
            case "visible":
              var t = parseInt(r[1], 10);
              if (t < 0) {
                const o = $.map(l, function (e, t) {
                  return e.bVisible ? t : null;
                });
                return [o[o.length + t]];
              }
              return [W(s, t)];
            case "name":
              return $.map(c, function (e, t) {
                return e === r[1] ? t : null;
              });
          }
        },
        s,
        a,
      );
    };
    const qt = function (e, t, n, i) {
      let r;
      let o;
      let s;
      let a;
      const l = e.aoColumns;
      const c = l[t];
      const u = e.aoData;
      if (n === q) return c.bVisible;
      if (c.bVisible !== n) {
        if (n) {
          const d = $.inArray(!0, ut(l, "bVisible"), t + 1);
          for (o = 0, s = u.length; o < s; o++) {
            (a = u[o].nTr),
              (r = u[o].anCells),
              a && a.insertBefore(r[t], r[d] || null);
          }
        } else $(ut(e.aoData, "anCells", t)).detach();
        (c.bVisible = n),
          v(e, e.aoHeader),
          v(e, e.aoFooter),
          (i === q || i) && (z(e), (e.oScroll.sX || e.oScroll.sY) && me(e)),
          Re(e, null, "column-visibility", [e, t, n, i]),
          Ie(e);
      }
    };
    Xe("columns()", function (t, n) {
      t === q ? (t = "") : $.isPlainObject(t) && ((n = t), (t = "")),
        (n = jt(n));
      const e = this.iterator(
        "table",
        function (e) {
          return $t(e, t, n);
        },
        1,
      );
      return (e.selector.cols = t), (e.selector.opts = n), e;
    }),
      Ge("columns().header()", "column().header()", function () {
        return this.iterator(
          "column",
          function (e, t) {
            return e.aoColumns[t].nTh;
          },
          1,
        );
      }),
      Ge("columns().footer()", "column().footer()", function () {
        return this.iterator(
          "column",
          function (e, t) {
            return e.aoColumns[t].nTf;
          },
          1,
        );
      }),
      Ge("columns().data()", "column().data()", function () {
        return this.iterator("column-rows", Rt, 1);
      }),
      Ge("columns().dataSrc()", "column().dataSrc()", function () {
        return this.iterator(
          "column",
          function (e, t) {
            return e.aoColumns[t].mData;
          },
          1,
        );
      }),
      Ge("columns().cache()", "column().cache()", function (o) {
        return this.iterator(
          "column-rows",
          function (e, t, n, i, r) {
            return dt(
              e.aoData,
              r,
              o === "search" ? "_aFilterData" : "_aSortData",
              t,
            );
          },
          1,
        );
      }),
      Ge("columns().nodes()", "column().nodes()", function () {
        return this.iterator(
          "column-rows",
          function (e, t, n, i, r) {
            return dt(e.aoData, r, "anCells", t);
          },
          1,
        );
      }),
      Ge("columns().visible()", "column().visible()", function (n, i) {
        return this.iterator("column", function (e, t) {
          if (n === q) return e.aoColumns[t].bVisible;
          qt(e, t, n, i);
        });
      }),
      Ge("columns().indexes()", "column().index()", function (n) {
        return this.iterator(
          "column",
          function (e, t) {
            return n === "visible" ? u(e, t) : t;
          },
          1,
        );
      }),
      Xe("columns.adjust()", function () {
        return this.iterator(
          "table",
          function (e) {
            z(e);
          },
          1,
        );
      }),
      Xe("column.index()", function (e, t) {
        if (this.context.length !== 0) {
          const n = this.context[0];
          if (e === "fromVisible" || e === "toData") return W(n, t);
          if (e === "fromData" || e === "toVisible") return u(n, t);
        }
      }),
      Xe("column()", function (e, t) {
        return Nt(this.columns(e, t));
      });
    let zt;
    let Wt;
    let Bt;
    let Ut;
    const Vt = function (n, e, t) {
      let i;
      let r;
      let o;
      let s;
      let a;
      let l;
      let c;
      const u = n.aoData;
      const d = Et(n, t);
      const h = pt(dt(u, d, "anCells"));
      const p = $([].concat.apply([], h));
      const f = n.aoColumns.length;
      return Dt(
        "cell",
        e,
        function (e) {
          const t = typeof e === "function";
          if (e === null || e === q || t) {
            for (r = [], o = 0, s = d.length; o < s; o++) {
              for (i = d[o], a = 0; a < f; a++) {
                (l = { row: i, column: a }),
                  t
                    ? ((c = u[i]),
                      e(l, g(n, i, a), c.anCells ? c.anCells[a] : null) &&
                        r.push(l))
                    : r.push(l);
              }
            }
            return r;
          }
          return $.isPlainObject(e)
            ? [e]
            : p
                .filter(e)
                .map(function (e, t) {
                  return {
                    row: t._DT_CellIndex.row,
                    column: t._DT_CellIndex.column,
                  };
                })
                .toArray();
        },
        n,
        t,
      );
    };
    Xe("cells()", function (t, e, n) {
      if (
        ($.isPlainObject(t) &&
          (t.row === q ? ((n = t), (t = null)) : ((n = e), (e = null))),
        $.isPlainObject(e) && ((n = e), (e = null)),
        e === null || e === q)
      ) {
        return this.iterator("table", function (e) {
          return Vt(e, t, jt(n));
        });
      }
      let i;
      let r;
      let o;
      let s;
      let a;
      const l = this.columns(e, n);
      const c = this.rows(t, n);
      const u = this.iterator(
        "table",
        function (e, t) {
          for (i = [], r = 0, o = c[t].length; r < o; r++) {
            for (s = 0, a = l[t].length; s < a; s++) {
              i.push({ row: c[t][r], column: l[t][s] });
            }
          }
          return i;
        },
        1,
      );
      return $.extend(u.selector, { cols: e, rows: t, opts: n }), u;
    }),
      Ge("cells().nodes()", "cell().node()", function () {
        return this.iterator(
          "cell",
          function (e, t, n) {
            const i = e.aoData[t].anCells;
            return i ? i[n] : q;
          },
          1,
        );
      }),
      Xe("cells().data()", function () {
        return this.iterator(
          "cell",
          function (e, t, n) {
            return g(e, t, n);
          },
          1,
        );
      }),
      Ge("cells().cache()", "cell().cache()", function (i) {
        return (
          (i = i === "search" ? "_aFilterData" : "_aSortData"),
          this.iterator(
            "cell",
            function (e, t, n) {
              return e.aoData[t][i][n];
            },
            1,
          )
        );
      }),
      Ge("cells().render()", "cell().render()", function (i) {
        return this.iterator(
          "cell",
          function (e, t, n) {
            return g(e, t, n, i);
          },
          1,
        );
      }),
      Ge("cells().indexes()", "cell().index()", function () {
        return this.iterator(
          "cell",
          function (e, t, n) {
            return { row: t, column: n, columnVisible: u(e, n) };
          },
          1,
        );
      }),
      Ge("cells().invalidate()", "cell().invalidate()", function (i) {
        return this.iterator("cell", function (e, t, n) {
          r(e, t, i, n);
        });
      }),
      Xe("cell()", function (e, t, n) {
        return Nt(this.cells(e, t, n));
      }),
      Xe("cell().data()", function (e) {
        const t = this.context;
        const n = this[0];
        return e === q
          ? t.length && n.length
            ? g(t[0], n[0].row, n[0].column)
            : q
          : (i(t[0], n[0].row, n[0].column, e),
            r(t[0], n[0].row, "data", n[0].column),
            this);
      }),
      Xe("order()", function (t, e) {
        const n = this.context;
        return t === q
          ? n.length !== 0
            ? n[0].aaSorting
            : q
          : (typeof t === "number"
              ? (t = [[t, e]])
              : $.isArray(t[0]) || (t = Array.prototype.slice.call(arguments)),
            this.iterator("table", function (e) {
              e.aaSorting = t.slice();
            }));
      }),
      Xe("order.listener()", function (t, n, i) {
        return this.iterator("table", function (e) {
          je(e, t, n, i);
        });
      }),
      Xe("order.fixed()", function (t) {
        if (t) {
          return this.iterator("table", function (e) {
            e.aaSortingFixed = $.extend(!0, {}, t);
          });
        }
        const e = this.context;
        const n = e.length ? e[0].aaSortingFixed : q;
        return $.isArray(n) ? { pre: n } : n;
      }),
      Xe(["columns().order()", "column().order()"], function (i) {
        const r = this;
        return this.iterator("table", function (e, t) {
          const n = [];
          $.each(r[t], function (e, t) {
            n.push([t, i]);
          }),
            (e.aaSorting = n);
        });
      }),
      Xe("search()", function (t, n, i, r) {
        const e = this.context;
        return t === q
          ? e.length !== 0
            ? e[0].oPreviousSearch.sSearch
            : q
          : this.iterator("table", function (e) {
              e.oFeatures.bFilter &&
                X(
                  e,
                  $.extend({}, e.oPreviousSearch, {
                    sSearch: t + "",
                    bRegex: n !== null && n,
                    bSmart: i === null || i,
                    bCaseInsensitive: r === null || r,
                  }),
                  1,
                );
            });
      }),
      Ge("columns().search()", "column().search()", function (i, r, o, s) {
        return this.iterator("column", function (e, t) {
          const n = e.aoPreSearchCols;
          if (i === q) return n[t].sSearch;
          e.oFeatures.bFilter &&
            ($.extend(n[t], {
              sSearch: i + "",
              bRegex: r !== null && r,
              bSmart: o === null || o,
              bCaseInsensitive: s === null || s,
            }),
            X(e, e.oPreviousSearch, 1));
        });
      }),
      Xe("state()", function () {
        return this.context.length ? this.context[0].oSavedState : null;
      }),
      Xe("state.clear()", function () {
        return this.iterator("table", function (e) {
          e.fnStateSaveCallback.call(e.oInstance, e, {});
        });
      }),
      Xe("state.loaded()", function () {
        return this.context.length ? this.context[0].oLoadedState : null;
      }),
      Xe("state.save()", function () {
        return this.iterator("table", function (e) {
          Ie(e);
        });
      }),
      (Ve.versionCheck = Ve.fnVersionCheck =
        function (e) {
          for (
            var t,
              n,
              i = Ve.version.split("."),
              r = e.split("."),
              o = 0,
              s = r.length;
            o < s;
            o++
          ) {
            if (
              (t = parseInt(i[o], 10) || 0) !== (n = parseInt(r[o], 10) || 0)
            ) {
              return n < t;
            }
          }
          return !0;
        }),
      (Ve.isDataTable = Ve.fnIsDataTable =
        function (e) {
          const r = $(e).get(0);
          let o = !1;
          return (
            $.each(Ve.settings, function (e, t) {
              const n = t.nScrollHead ? $("table", t.nScrollHead)[0] : null;
              const i = t.nScrollFoot ? $("table", t.nScrollFoot)[0] : null;
              (t.nTable !== r && n !== r && i !== r) || (o = !0);
            }),
            o
          );
        }),
      (Ve.tables = Ve.fnTables =
        function (t) {
          let e = !1;
          $.isPlainObject(t) && ((e = t.api), (t = t.visible));
          const n = $.map(Ve.settings, function (e) {
            if (!t || (t && $(e.nTable).is(":visible"))) return e.nTable;
          });
          return e ? new Ye(n) : n;
        }),
      (Ve.util = { throttle: be, escapeRegex: ee }),
      (Ve.camelToHungarian = I),
      Xe("$()", function (e, t) {
        const n = this.rows(t).nodes();
        const i = $(n);
        return $([].concat(i.filter(e).toArray(), i.find(e).toArray()));
      }),
      $.each(["on", "one", "off"], function (e, n) {
        Xe(n + "()", function () {
          const e = Array.prototype.slice.call(arguments);
          e[0].match(/\.dt\b/) || (e[0] += ".dt");
          const t = $(this.tables().nodes());
          return t[n].apply(t, e), this;
        });
      }),
      Xe("clear()", function () {
        return this.iterator("table", function (e) {
          c(e);
        });
      }),
      Xe("settings()", function () {
        return new Ye(this.context, this.context);
      }),
      Xe("init()", function () {
        const e = this.context;
        return e.length ? e[0].oInit : null;
      }),
      Xe("data()", function () {
        return this.iterator("table", function (e) {
          return ut(e.aoData, "_aData");
        }).flatten();
      }),
      Xe("destroy()", function (f) {
        return (
          (f = f || !1),
          this.iterator("table", function (t) {
            let n;
            const e = t.nTableWrapper.parentNode;
            const i = t.oClasses;
            const r = t.nTable;
            const o = t.nTBody;
            const s = t.nTHead;
            const a = t.nTFoot;
            const l = $(r);
            const c = $(o);
            const u = $(t.nTableWrapper);
            const d = $.map(t.aoData, function (e) {
              return e.nTr;
            });
            (t.bDestroying = !0),
              Re(t, "aoDestroyCallback", "destroy", [t]),
              f || new Ye(t).columns().visible(!0),
              u.unbind(".DT").find(":not(tbody *)").unbind(".DT"),
              $(j).unbind(".DT-" + t.sInstance),
              r != s.parentNode && (l.children("thead").detach(), l.append(s)),
              a &&
                r != a.parentNode &&
                (l.children("tfoot").detach(), l.append(a)),
              (t.aaSorting = []),
              (t.aaSortingFixed = []),
              Ne(t),
              $(d).removeClass(t.asStripeClasses.join(" ")),
              $("th, td", s).removeClass(
                i.sSortable +
                  " " +
                  i.sSortableAsc +
                  " " +
                  i.sSortableDesc +
                  " " +
                  i.sSortableNone,
              ),
              t.bJUI &&
                ($(
                  "th span." + i.sSortIcon + ", td span." + i.sSortIcon,
                  s,
                ).detach(),
                $("th, td", s).each(function () {
                  const e = $("div." + i.sSortJUIWrapper, this);
                  $(this).append(e.contents()), e.detach();
                })),
              c.children().detach(),
              c.append(d);
            const h = f ? "remove" : "detach";
            l[h](),
              u[h](),
              !f &&
                e &&
                (e.insertBefore(r, t.nTableReinsertBefore),
                l.css("width", t.sDestroyWidth).removeClass(i.sTable),
                (n = t.asDestroyStripes.length) &&
                  c.children().each(function (e) {
                    $(this).addClass(t.asDestroyStripes[e % n]);
                  }));
            const p = $.inArray(t, Ve.settings);
            p !== -1 && Ve.settings.splice(p, 1);
          })
        );
      }),
      $.each(["column", "row", "cell"], function (e, l) {
        Xe(l + "s().every()", function (o) {
          const s = this.selector.opts;
          const a = this;
          return this.iterator(l, function (e, t, n, i, r) {
            o.call(
              a[l](t, l === "cell" ? n : s, l === "cell" ? s : q),
              t,
              n,
              i,
              r,
            );
          });
        });
      }),
      Xe("i18n()", function (e, t, n) {
        const i = this.context[0];
        let r = U(e)(i.oLanguage);
        return (
          r === q && (r = t),
          n !== q && $.isPlainObject(r) && (r = r[n] !== q ? r[n] : r._),
          r.replace("%d", n)
        );
      }),
      (Ve.version = "1.10.10"),
      (Ve.settings = []),
      (Ve.models = {}),
      (Ve.models.oSearch = {
        bCaseInsensitive: !0,
        sSearch: "",
        bRegex: !1,
        bSmart: !0,
      }),
      (Ve.models.oRow = {
        nTr: null,
        anCells: null,
        _aData: [],
        _aSortData: null,
        _aFilterData: null,
        _sFilterRow: null,
        _sRowStripe: "",
        src: null,
        idx: -1,
      }),
      (Ve.models.oColumn = {
        idx: null,
        aDataSort: null,
        asSorting: null,
        bSearchable: null,
        bSortable: null,
        bVisible: null,
        _sManualType: null,
        _bAttrSrc: !1,
        fnCreatedCell: null,
        fnGetData: null,
        fnSetData: null,
        mData: null,
        mRender: null,
        nTh: null,
        nTf: null,
        sClass: null,
        sContentPadding: null,
        sDefaultContent: null,
        sName: null,
        sSortDataType: "std",
        sSortingClass: null,
        sSortingClassJUI: null,
        sTitle: null,
        sType: null,
        sWidth: null,
        sWidthOrig: null,
      }),
      (Ve.defaults = {
        aaData: null,
        aaSorting: [[0, "asc"]],
        aaSortingFixed: [],
        ajax: null,
        aLengthMenu: [10, 25, 50, 100],
        aoColumns: null,
        aoColumnDefs: null,
        aoSearchCols: [],
        asStripeClasses: null,
        bAutoWidth: !0,
        bDeferRender: !1,
        bDestroy: !1,
        bFilter: !0,
        bInfo: !0,
        bJQueryUI: !1,
        bLengthChange: !0,
        bPaginate: !0,
        bProcessing: !1,
        bRetrieve: !1,
        bScrollCollapse: !1,
        bServerSide: !1,
        bSort: !0,
        bSortMulti: !0,
        bSortCellsTop: !1,
        bSortClasses: !0,
        bStateSave: !1,
        fnCreatedRow: null,
        fnDrawCallback: null,
        fnFooterCallback: null,
        fnFormatNumber: function (e) {
          return e
            .toString()
            .replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands);
        },
        fnHeaderCallback: null,
        fnInfoCallback: null,
        fnInitComplete: null,
        fnPreDrawCallback: null,
        fnRowCallback: null,
        fnServerData: null,
        fnServerParams: null,
        fnStateLoadCallback: function (e) {
          try {
            return JSON.parse(
              (e.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
                "DataTables_" + e.sInstance + "_" + location.pathname,
              ),
            );
          } catch (t) {}
        },
        fnStateLoadParams: null,
        fnStateLoaded: null,
        fnStateSaveCallback: function (e, t) {
          try {
            (e.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
              "DataTables_" + e.sInstance + "_" + location.pathname,
              JSON.stringify(t),
            );
          } catch (n) {}
        },
        fnStateSaveParams: null,
        iStateDuration: 7200,
        iDeferLoading: null,
        iDisplayLength: 10,
        iDisplayStart: 0,
        iTabIndex: 0,
        oClasses: {},
        oLanguage: {
          oAria: {
            sSortAscending: ": activate to sort column ascending",
            sSortDescending: ": activate to sort column descending",
          },
          oPaginate: {
            sFirst: "First",
            sLast: "Last",
            sNext: "Next",
            sPrevious: "Previous",
          },
          sEmptyTable: "No data available in table",
          sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
          sInfoEmpty: "Showing 0 to 0 of 0 entries",
          sInfoFiltered: "(filtered from _MAX_ total entries)",
          sInfoPostFix: "",
          sDecimal: "",
          sThousands: ",",
          sLengthMenu: "Show _MENU_ entries",
          sLoadingRecords: "Loading...",
          sProcessing: "Processing...",
          sSearch: "Search:",
          sSearchPlaceholder: "",
          sUrl: "",
          sZeroRecords: "No matching records found",
        },
        oSearch: $.extend({}, Ve.models.oSearch),
        sAjaxDataProp: "data",
        sAjaxSource: null,
        sDom: "lfrtip",
        searchDelay: null,
        sPaginationType: "simple_numbers",
        sScrollX: "",
        sScrollXInner: "",
        sScrollY: "",
        sServerMethod: "GET",
        renderer: null,
        rowId: "DT_RowId",
      }),
      s(Ve.defaults),
      (Ve.defaults.column = {
        aDataSort: null,
        iDataSort: -1,
        asSorting: ["asc", "desc"],
        bSearchable: !0,
        bSortable: !0,
        bVisible: !0,
        fnCreatedCell: null,
        mData: null,
        mRender: null,
        sCellType: "td",
        sClass: "",
        sContentPadding: "",
        sDefaultContent: null,
        sName: "",
        sSortDataType: "std",
        sTitle: null,
        sType: null,
        sWidth: null,
      }),
      s(Ve.defaults.column),
      (Ve.models.oSettings = {
        oFeatures: {
          bAutoWidth: null,
          bDeferRender: null,
          bFilter: null,
          bInfo: null,
          bLengthChange: null,
          bPaginate: null,
          bProcessing: null,
          bServerSide: null,
          bSort: null,
          bSortMulti: null,
          bSortClasses: null,
          bStateSave: null,
        },
        oScroll: {
          bCollapse: null,
          iBarWidth: 0,
          sX: null,
          sXInner: null,
          sY: null,
        },
        oLanguage: { fnInfoCallback: null },
        oBrowser: {
          bScrollOversize: !1,
          bScrollbarLeft: !1,
          bBounding: !1,
          barWidth: 0,
        },
        ajax: null,
        aanFeatures: [],
        aoData: [],
        aiDisplay: [],
        aiDisplayMaster: [],
        aIds: {},
        aoColumns: [],
        aoHeader: [],
        aoFooter: [],
        oPreviousSearch: {},
        aoPreSearchCols: [],
        aaSorting: null,
        aaSortingFixed: [],
        asStripeClasses: null,
        asDestroyStripes: [],
        sDestroyWidth: 0,
        aoRowCallback: [],
        aoHeaderCallback: [],
        aoFooterCallback: [],
        aoDrawCallback: [],
        aoRowCreatedCallback: [],
        aoPreDrawCallback: [],
        aoInitComplete: [],
        aoStateSaveParams: [],
        aoStateLoadParams: [],
        aoStateLoaded: [],
        sTableId: "",
        nTable: null,
        nTHead: null,
        nTFoot: null,
        nTBody: null,
        nTableWrapper: null,
        bDeferLoading: !1,
        bInitialised: !1,
        aoOpenRows: [],
        sDom: null,
        searchDelay: null,
        sPaginationType: "two_button",
        iStateDuration: 0,
        aoStateSave: [],
        aoStateLoad: [],
        oSavedState: null,
        oLoadedState: null,
        sAjaxSource: null,
        sAjaxDataProp: null,
        bAjaxDataGet: !0,
        jqXHR: null,
        json: q,
        oAjaxData: q,
        fnServerData: null,
        aoServerParams: [],
        sServerMethod: null,
        fnFormatNumber: null,
        aLengthMenu: null,
        iDraw: 0,
        bDrawing: !1,
        iDrawError: -1,
        _iDisplayLength: 10,
        _iDisplayStart: 0,
        _iRecordsTotal: 0,
        _iRecordsDisplay: 0,
        bJUI: null,
        oClasses: {},
        bFiltered: !1,
        bSorted: !1,
        bSortCellsTop: null,
        oInit: null,
        aoDestroyCallback: [],
        fnRecordsTotal: function () {
          return ze(this) == "ssp"
            ? 1 * this._iRecordsTotal
            : this.aiDisplayMaster.length;
        },
        fnRecordsDisplay: function () {
          return ze(this) == "ssp"
            ? 1 * this._iRecordsDisplay
            : this.aiDisplay.length;
        },
        fnDisplayEnd: function () {
          const e = this._iDisplayLength;
          const t = this._iDisplayStart;
          const n = t + e;
          const i = this.aiDisplay.length;
          const r = this.oFeatures;
          const o = r.bPaginate;
          return r.bServerSide
            ? !1 === o || e === -1
              ? t + i
              : Math.min(t + e, this._iRecordsDisplay)
            : !o || i < n || e === -1
              ? i
              : n;
        },
        oInstance: null,
        sInstance: null,
        iTabIndex: 0,
        nScrollHead: null,
        nScrollFoot: null,
        aLastSort: [],
        oPlugins: {},
        rowIdFn: null,
        rowId: null,
      }),
      (Ve.ext = Ke =
        {
          buttons: {},
          classes: {},
          builder: "-source-",
          errMode: "alert",
          feature: [],
          search: [],
          selector: { cell: [], column: [], row: [] },
          internal: {},
          legacy: { ajax: null },
          pager: {},
          renderer: { pageButton: {}, header: {} },
          order: {},
          type: { detect: [], search: {}, order: {} },
          _unique: 0,
          fnVersionCheck: Ve.fnVersionCheck,
          iApiIndex: 0,
          oJUIClasses: {},
          sVersion: Ve.version,
        }),
      $.extend(Ke, {
        afnFiltering: Ke.search,
        aTypes: Ke.type.detect,
        ofnSearch: Ke.type.search,
        oSort: Ke.type.order,
        afnSortData: Ke.order,
        aoFeatures: Ke.feature,
        oApi: Ke.internal,
        oStdClasses: Ke.classes,
        oPagination: Ke.pager,
      }),
      $.extend(Ve.ext.classes, {
        sTable: "dataTable",
        sNoFooter: "no-footer",
        sPageButton: "paginate_button",
        sPageButtonActive: "current",
        sPageButtonDisabled: "disabled",
        sStripeOdd: "odd",
        sStripeEven: "even",
        sRowEmpty: "dataTables_empty",
        sWrapper: "dataTables_wrapper",
        sFilter: "dataTables_filter",
        sInfo: "dataTables_info",
        sPaging: "dataTables_paginate paging_",
        sLength: "dataTables_length",
        sProcessing: "dataTables_processing",
        sSortAsc: "sorting_asc",
        sSortDesc: "sorting_desc",
        sSortable: "sorting",
        sSortableAsc: "sorting_asc_disabled",
        sSortableDesc: "sorting_desc_disabled",
        sSortableNone: "sorting_disabled",
        sSortColumn: "sorting_",
        sFilterInput: "",
        sLengthSelect: "",
        sScrollWrapper: "dataTables_scroll",
        sScrollHead: "dataTables_scrollHead",
        sScrollHeadInner: "dataTables_scrollHeadInner",
        sScrollBody: "dataTables_scrollBody",
        sScrollFoot: "dataTables_scrollFoot",
        sScrollFootInner: "dataTables_scrollFootInner",
        sHeaderTH: "",
        sFooterTH: "",
        sSortJUIAsc: "",
        sSortJUIDesc: "",
        sSortJUI: "",
        sSortJUIAscAllowed: "",
        sSortJUIDescAllowed: "",
        sSortJUIWrapper: "",
        sSortIcon: "",
        sJUIHeader: "",
        sJUIFooter: "",
      }),
      (Wt = (zt = zt = "") + "ui-state-default"),
      (Bt = zt + "css_right ui-icon ui-icon-"),
      (Ut = zt + "fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix"),
      $.extend(Ve.ext.oJUIClasses, Ve.ext.classes, {
        sPageButton: "fg-button ui-button " + Wt,
        sPageButtonActive: "ui-state-disabled",
        sPageButtonDisabled: "ui-state-disabled",
        sPaging:
          "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
        sSortAsc: Wt + " sorting_asc",
        sSortDesc: Wt + " sorting_desc",
        sSortable: Wt + " sorting",
        sSortableAsc: Wt + " sorting_asc_disabled",
        sSortableDesc: Wt + " sorting_desc_disabled",
        sSortableNone: Wt + " sorting_disabled",
        sSortJUIAsc: Bt + "triangle-1-n",
        sSortJUIDesc: Bt + "triangle-1-s",
        sSortJUI: Bt + "carat-2-n-s",
        sSortJUIAscAllowed: Bt + "carat-1-n",
        sSortJUIDescAllowed: Bt + "carat-1-s",
        sSortJUIWrapper: "DataTables_sort_wrapper",
        sSortIcon: "DataTables_sort_icon",
        sScrollHead: "dataTables_scrollHead " + Wt,
        sScrollFoot: "dataTables_scrollFoot " + Wt,
        sHeaderTH: Wt,
        sFooterTH: Wt,
        sJUIHeader: Ut + " ui-corner-tl ui-corner-tr",
        sJUIFooter: Ut + " ui-corner-bl ui-corner-br",
      });
    var Kt = Ve.ext.pager;
    $.extend(Kt, {
      simple: function () {
        return ["previous", "next"];
      },
      full: function () {
        return ["first", "previous", "next", "last"];
      },
      numbers: function (e, t) {
        return [We(e, t)];
      },
      simple_numbers: function (e, t) {
        return ["previous", We(e, t), "next"];
      },
      full_numbers: function (e, t) {
        return ["first", "previous", We(e, t), "next", "last"];
      },
      _numbers: We,
      numbers_length: 7,
    }),
      $.extend(!0, Ve.ext.renderer, {
        pageButton: {
          _: function (a, e, l, t, c, u) {
            let d;
            let h;
            let n;
            const p = a.oClasses;
            const f = a.oLanguage.oPaginate;
            const g = a.oLanguage.oAria.paginate || {};
            let m = 0;
            const v = function (e, t) {
              let n;
              let i;
              let r;
              const o = function (e) {
                he(a, e.data.action, !0);
              };
              for (n = 0, i = t.length; n < i; n++) {
                if (((r = t[n]), $.isArray(r))) {
                  const s = $("<" + (r.DT_el || "div") + "/>").appendTo(e);
                  v(s, r);
                } else {
                  switch (((d = null), (h = ""), r)) {
                    case "ellipsis":
                      e.append('<span class="ellipsis">&#x2026;</span>');
                      break;
                    case "first":
                      (d = f.sFirst),
                        (h = r + (c > 0 ? "" : " " + p.sPageButtonDisabled));
                      break;
                    case "previous":
                      (d = f.sPrevious),
                        (h = r + (c > 0 ? "" : " " + p.sPageButtonDisabled));
                      break;
                    case "next":
                      (d = f.sNext),
                        (h =
                          r + (c < u - 1 ? "" : " " + p.sPageButtonDisabled));
                      break;
                    case "last":
                      (d = f.sLast),
                        (h =
                          r + (c < u - 1 ? "" : " " + p.sPageButtonDisabled));
                      break;
                    default:
                      (d = r + 1), (h = c === r ? p.sPageButtonActive : "");
                  }
                  d !== null &&
                    (Le(
                      $("<a>", {
                        class: p.sPageButton + " " + h,
                        "aria-controls": a.sTableId,
                        "aria-label": g[r],
                        "data-dt-idx": m,
                        tabindex: a.iTabIndex,
                        id:
                          l === 0 && typeof r === "string"
                            ? a.sTableId + "_" + r
                            : null,
                      })
                        .html(d)
                        .appendTo(e),
                      { action: r },
                      o,
                    ),
                    m++);
                }
              }
            };
            try {
              n = $(e).find(y.activeElement).data("dt-idx");
            } catch (i) {}
            v($(e).empty(), t),
              n &&
                $(e)
                  .find("[data-dt-idx=" + n + "]")
                  .focus();
          },
        },
      }),
      $.extend(Ve.ext.type.detect, [
        function (e, t) {
          const n = t.oLanguage.sDecimal;
          return at(e, n) ? "num" + n : null;
        },
        function (e) {
          if (e && !(e instanceof Date) && (!et.test(e) || !tt.test(e))) {
            return null;
          }
          const t = Date.parse(e);
          return (t !== null && !isNaN(t)) || rt(e) ? "date" : null;
        },
        function (e, t) {
          const n = t.oLanguage.sDecimal;
          return at(e, n, !0) ? "num-fmt" + n : null;
        },
        function (e, t) {
          const n = t.oLanguage.sDecimal;
          return ct(e, n) ? "html-num" + n : null;
        },
        function (e, t) {
          const n = t.oLanguage.sDecimal;
          return ct(e, n, !0) ? "html-num-fmt" + n : null;
        },
        function (e) {
          return rt(e) || (typeof e === "string" && e.indexOf("<") !== -1)
            ? "html"
            : null;
        },
      ]),
      $.extend(Ve.ext.type.search, {
        html: function (e) {
          return rt(e)
            ? e
            : typeof e === "string"
              ? e.replace(Je, " ").replace(Ze, "")
              : "";
        },
        string: function (e) {
          return rt(e) ? e : typeof e === "string" ? e.replace(Je, " ") : e;
        },
      });
    var Yt = function (e, t, n, i) {
      return e === 0 || (e && e !== "-")
        ? (t && (e = st(e, t)),
          e.replace &&
            (n && (e = e.replace(n, "")), i && (e = e.replace(i, ""))),
          1 * e)
        : -Infinity;
    };
    return (
      $.extend(Ke.type.order, {
        "date-pre": function (e) {
          return Date.parse(e) || 0;
        },
        "html-pre": function (e) {
          return rt(e)
            ? ""
            : e.replace
              ? e.replace(/<.*?>/g, "").toLowerCase()
              : e + "";
        },
        "string-pre": function (e) {
          return rt(e)
            ? ""
            : typeof e === "string"
              ? e.toLowerCase()
              : e.toString
                ? e.toString()
                : "";
        },
        "string-asc": function (e, t) {
          return e < t ? -1 : t < e ? 1 : 0;
        },
        "string-desc": function (e, t) {
          return e < t ? 1 : t < e ? -1 : 0;
        },
      }),
      Be(""),
      $.extend(!0, Ve.ext.renderer, {
        header: {
          _: function (o, s, a, l) {
            $(o.nTable).on("order.dt.DT", function (e, t, n, i) {
              if (o === t) {
                const r = a.idx;
                s.removeClass(
                  a.sSortingClass + " " + l.sSortAsc + " " + l.sSortDesc,
                ).addClass(
                  i[r] == "asc"
                    ? l.sSortAsc
                    : i[r] == "desc"
                      ? l.sSortDesc
                      : a.sSortingClass,
                );
              }
            });
          },
          jqueryui: function (o, s, a, l) {
            $("<div/>")
              .addClass(l.sSortJUIWrapper)
              .append(s.contents())
              .append(
                $("<span/>").addClass(l.sSortIcon + " " + a.sSortingClassJUI),
              )
              .appendTo(s),
              $(o.nTable).on("order.dt.DT", function (e, t, n, i) {
                if (o === t) {
                  const r = a.idx;
                  s
                    .removeClass(l.sSortAsc + " " + l.sSortDesc)
                    .addClass(
                      i[r] == "asc"
                        ? l.sSortAsc
                        : i[r] == "desc"
                          ? l.sSortDesc
                          : a.sSortingClass,
                    ),
                    s
                      .find("span." + l.sSortIcon)
                      .removeClass(
                        l.sSortJUIAsc +
                          " " +
                          l.sSortJUIDesc +
                          " " +
                          l.sSortJUI +
                          " " +
                          l.sSortJUIAscAllowed +
                          " " +
                          l.sSortJUIDescAllowed,
                      )
                      .addClass(
                        i[r] == "asc"
                          ? l.sSortJUIAsc
                          : i[r] == "desc"
                            ? l.sSortJUIDesc
                            : a.sSortingClassJUI,
                      );
                }
              });
          },
        },
      }),
      (Ve.render = {
        number: function (o, s, a, l, c) {
          return {
            display: function (e) {
              if (typeof e !== "number" && typeof e !== "string") return e;
              const t = e < 0 ? "-" : "";
              const n = parseFloat(e);
              if (isNaN(n)) return e;
              e = Math.abs(n);
              const i = parseInt(e, 10);
              const r = a ? s + (e - i).toFixed(a).substring(2) : "";
              return (
                t +
                (l || "") +
                i.toString().replace(/\B(?=(\d{3})+(?!\d))/g, o) +
                r +
                (c || "")
              );
            },
          };
        },
        text: function () {
          return {
            display: function (e) {
              return typeof e === "string"
                ? e
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                : e;
            },
          };
        },
      }),
      $.extend(Ve.ext.internal, {
        _fnExternApiFunc: Ue,
        _fnBuildAjax: S,
        _fnAjaxUpdate: T,
        _fnAjaxParameters: o,
        _fnAjaxUpdateDraw: a,
        _fnAjaxDataSrc: D,
        _fnAddColumn: F,
        _fnColumnOptions: L,
        _fnAdjustColumnSizing: z,
        _fnVisibleToColumnIndex: W,
        _fnColumnIndexToVisible: u,
        _fnVisbleColumns: N,
        _fnGetColumns: E,
        _fnColumnTypes: l,
        _fnApplyColumnDefs: H,
        _fnHungarianMap: s,
        _fnCamelToHungarian: I,
        _fnLanguageCompat: A,
        _fnBrowserDetect: P,
        _fnAddData: R,
        _fnAddTr: B,
        _fnNodeToDataIndex: e,
        _fnNodeToColumnIndex: t,
        _fnGetCellData: g,
        _fnSetCellData: i,
        _fnSplitObjNotation: m,
        _fnGetObjectDataFn: U,
        _fnSetObjectDataFn: b,
        _fnGetDataMaster: x,
        _fnClearTable: c,
        _fnDeleteIndex: p,
        _fnInvalidate: r,
        _fnGetRowElements: d,
        _fnCreateTr: w,
        _fnBuildHead: f,
        _fnDrawHead: v,
        _fnDraw: _,
        _fnReDraw: C,
        _fnAddOptionsHtml: k,
        _fnDetectHeader: V,
        _fnGetUniqueThs: K,
        _fnFeatureHtmlFilter: Y,
        _fnFilterComplete: X,
        _fnFilterCustom: G,
        _fnFilterColumn: Q,
        _fnFilter: J,
        _fnFilterCreateSearch: Z,
        _fnEscapeRegex: ee,
        _fnFilterData: te,
        _fnFeatureHtmlInfo: re,
        _fnUpdateInfo: oe,
        _fnInfoMacros: se,
        _fnInitialise: ae,
        _fnInitComplete: le,
        _fnLengthChange: ce,
        _fnFeatureHtmlLength: ue,
        _fnFeatureHtmlPaginate: de,
        _fnPageChange: he,
        _fnFeatureHtmlProcessing: pe,
        _fnProcessingDisplay: fe,
        _fnFeatureHtmlTable: ge,
        _fnScrollDraw: me,
        _fnApplyToChildren: ve,
        _fnCalculateColumnWidths: ye,
        _fnThrottle: be,
        _fnConvertToWidth: _e,
        _fnGetWidestNode: xe,
        _fnGetMaxLenString: we,
        _fnStringToCss: Ce,
        _fnSortFlatten: ke,
        _fnSort: Se,
        _fnSortAria: Te,
        _fnSortListener: De,
        _fnSortAttachListener: je,
        _fnSortingClasses: Ne,
        _fnSortData: Ee,
        _fnSaveState: Ie,
        _fnLoadState: Ae,
        _fnSettingsFromNode: Me,
        _fnLog: Oe,
        _fnMap: Pe,
        _fnBindAction: Le,
        _fnCallbackReg: He,
        _fnCallbackFire: Re,
        _fnLengthOverflow: $e,
        _fnRenderer: qe,
        _fnDataSource: ze,
        _fnRowAttributes: h,
        _fnCalculateEnd: function () {},
      }),
      ((($.fn.dataTable = Ve).$ = $).fn.dataTableSettings = Ve.settings),
      ($.fn.dataTableExt = Ve.ext),
      ($.fn.DataTable = function (e) {
        return $(this).dataTable(e).api();
      }),
      $.each(Ve, function (e, t) {
        $.fn.DataTable[e] = t;
      }),
      $.fn.dataTable
    );
  }),
  (function (n) {
    typeof define === "function" && define.amd
      ? define(["jquery", "datatables.net"], function (e) {
          return n(e, window, document);
        })
      : typeof exports === "object"
        ? (module.exports = function (e, t) {
            return (
              e || (e = window),
              (t && t.fn.dataTable) || (t = require("datatables.net")(e, t).$),
              n(t, e, e.document)
            );
          })
        : n(jQuery, window, document);
  })(function (C, a, l, k) {
    "use strict";
    const o = C.fn.dataTable;
    const c = function (e, t) {
      const n = this;
      if (this instanceof c) {
        (t !== k && !0 !== t) || (t = {});
        const i = C.fn.dataTable.camelToHungarian;
        i && (i(c.defaults, c.defaults, !0), i(c.defaults, t));
        const r = new C.fn.dataTable.Api(e).settings()[0];
        if (
          ((this.s = {
            dt: r,
            iTableColumns: r.aoColumns.length,
            aiOuterWidths: [],
            aiInnerWidths: [],
          }),
          (this.dom = {
            scroller: null,
            header: null,
            body: null,
            footer: null,
            grid: {
              wrapper: null,
              dt: null,
              left: { wrapper: null, head: null, body: null, foot: null },
              right: { wrapper: null, head: null, body: null, foot: null },
            },
            clone: {
              left: { header: null, body: null, footer: null },
              right: { header: null, body: null, footer: null },
            },
          }),
          r._oFixedColumns)
        ) {
          throw "FixedColumns already initialised on this table";
        }
        (r._oFixedColumns = this),
          r._bInitComplete
            ? this._fnConstruct(t)
            : r.oApi._fnCallbackReg(
                r,
                "aoInitComplete",
                function () {
                  n._fnConstruct(t);
                },
                "FixedColumns",
              );
      } else {
        alert(
          "FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.",
        );
      }
    };
    return (
      C.extend(c.prototype, {
        fnUpdate: function () {
          this._fnDraw(!0);
        },
        fnRedrawLayout: function () {
          this._fnColCalc(), this._fnGridLayout(), this.fnUpdate();
        },
        fnRecalculateHeight: function (e) {
          delete e._DTTC_iHeight, (e.style.height = "auto");
        },
        fnSetRowHeight: function (e, t) {
          e.style.height = t + "px";
        },
        fnGetPosition: function (e) {
          let t;
          const n = this.s.dt.oInstance;
          if (C(e).parents(".DTFC_Cloned").length) {
            if (e.nodeName.toLowerCase() === "tr") {
              return (
                (t = C(e).index()),
                n.fnGetPosition(C("tr", this.s.dt.nTBody)[t])
              );
            }
            const i = C(e).index();
            return (
              (t = C(e.parentNode).index()),
              [
                n.fnGetPosition(C("tr", this.s.dt.nTBody)[t]),
                i,
                n.oApi._fnVisibleToColumnIndex(this.s.dt, i),
              ]
            );
          }
          return n.fnGetPosition(e);
        },
        _fnConstruct: function (e) {
          const o = this;
          if (
            typeof this.s.dt.oInstance.fnVersionCheck === "function" &&
            !0 === this.s.dt.oInstance.fnVersionCheck("1.8.0")
          ) {
            if (this.s.dt.oScroll.sX !== "") {
              this.s = C.extend(!0, this.s, c.defaults, e);
              let t;
              const n = this.s.dt.oClasses;
              (this.dom.grid.dt = C(this.s.dt.nTable).parents(
                "div." + n.sScrollWrapper,
              )[0]),
                (this.dom.scroller = C(
                  "div." + n.sScrollBody,
                  this.dom.grid.dt,
                )[0]),
                this._fnColCalc(),
                this._fnGridSetup(),
                C(this.dom.scroller)
                  .on("mouseover.DTFC touchstart.DTFC", function () {
                    t = "main";
                  })
                  .on("scroll.DTFC", function (e) {
                    !t && e.originalEvent && (t = "main"),
                      t === "main" &&
                        (o.s.iLeftColumns > 0 &&
                          (o.dom.grid.left.liner.scrollTop =
                            o.dom.scroller.scrollTop),
                        o.s.iRightColumns > 0 &&
                          (o.dom.grid.right.liner.scrollTop =
                            o.dom.scroller.scrollTop));
                  });
              const i =
                "onwheel" in l.createElement("div")
                  ? "wheel.DTFC"
                  : "mousewheel.DTFC";
              o.s.iLeftColumns > 0 &&
                C(o.dom.grid.left.liner)
                  .on("mouseover.DTFC touchstart.DTFC", function () {
                    t = "left";
                  })
                  .on("scroll.DTFC", function (e) {
                    !t && e.originalEvent && (t = "left"),
                      t === "left" &&
                        ((o.dom.scroller.scrollTop =
                          o.dom.grid.left.liner.scrollTop),
                        o.s.iRightColumns > 0 &&
                          (o.dom.grid.right.liner.scrollTop =
                            o.dom.grid.left.liner.scrollTop));
                  })
                  .on(i, function (e) {
                    const t =
                      e.type === "wheel"
                        ? -e.originalEvent.deltaX
                        : e.originalEvent.wheelDeltaX;
                    o.dom.scroller.scrollLeft -= t;
                  }),
                o.s.iRightColumns > 0 &&
                  C(o.dom.grid.right.liner)
                    .on("mouseover.DTFC touchstart.DTFC", function () {
                      t = "right";
                    })
                    .on("scroll.DTFC", function (e) {
                      !t && e.originalEvent && (t = "right"),
                        t === "right" &&
                          ((o.dom.scroller.scrollTop =
                            o.dom.grid.right.liner.scrollTop),
                          o.s.iLeftColumns > 0 &&
                            (o.dom.grid.left.liner.scrollTop =
                              o.dom.grid.right.liner.scrollTop));
                    })
                    .on(i, function (e) {
                      const t =
                        e.type === "wheel"
                          ? -e.originalEvent.deltaX
                          : e.originalEvent.wheelDeltaX;
                      o.dom.scroller.scrollLeft -= t;
                    }),
                C(a).on("resize.DTFC", function () {
                  o._fnGridLayout.call(o);
                });
              let r = !0;
              const s = C(this.s.dt.nTable);
              s
                .on("draw.dt.DTFC", function () {
                  o._fnDraw.call(o, r), (r = !1);
                })
                .on("column-sizing.dt.DTFC", function () {
                  o._fnColCalc(), o._fnGridLayout(o);
                })
                .on("column-visibility.dt.DTFC", function (e, t, n, i, r) {
                  (r === k || r) &&
                    (o._fnColCalc(), o._fnGridLayout(o), o._fnDraw(!0));
                })
                .on("destroy.dt.DTFC", function () {
                  s.off(
                    "column-sizing.dt.DTFC column-visibility.dt.DTFC destroy.dt.DTFC draw.dt.DTFC",
                  ),
                    C(o.dom.scroller).off(
                      "mouseover.DTFC touchstart.DTFC scroll.DTFC",
                    ),
                    C(a).off("resize.DTFC"),
                    C(o.dom.grid.left.liner).off(
                      "mouseover.DTFC touchstart.DTFC scroll.DTFC " + i,
                    ),
                    C(o.dom.grid.left.wrapper).remove(),
                    C(o.dom.grid.right.liner).off(
                      "mouseover.DTFC touchstart.DTFC scroll.DTFC " + i,
                    ),
                    C(o.dom.grid.right.wrapper).remove();
                }),
                this._fnGridLayout(),
                this.s.dt.oInstance.fnDraw(!1);
            } else {
              this.s.dt.oInstance.oApi._fnLog(
                this.s.dt,
                1,
                "FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled",
              );
            }
          } else {
            alert(
              "FixedColumns " +
                c.VERSION +
                " required DataTables 1.8.0 or later. Please upgrade your DataTables installation",
            );
          }
        },
        _fnColCalc: function () {
          const o = this;
          let s = 0;
          let a = 0;
          (this.s.aiInnerWidths = []),
            (this.s.aiOuterWidths = []),
            C.each(this.s.dt.aoColumns, function (e, t) {
              let n;
              const i = C(t.nTh);
              if (i.filter(":visible").length) {
                let r = i.outerWidth();
                o.s.aiOuterWidths.length === 0 &&
                  (r +=
                    typeof (n = C(o.s.dt.nTable).css("border-left-width")) ===
                    "string"
                      ? 1
                      : parseInt(n, 10)),
                  o.s.aiOuterWidths.length === o.s.dt.aoColumns.length - 1 &&
                    (r +=
                      typeof (n = C(o.s.dt.nTable).css(
                        "border-right-width",
                      )) === "string"
                        ? 1
                        : parseInt(n, 10)),
                  o.s.aiOuterWidths.push(r),
                  o.s.aiInnerWidths.push(i.width()),
                  e < o.s.iLeftColumns && (s += r),
                  o.s.iTableColumns - o.s.iRightColumns <= e && (a += r);
              } else o.s.aiInnerWidths.push(0), o.s.aiOuterWidths.push(0);
            }),
            (this.s.iLeftWidth = s),
            (this.s.iRightWidth = a);
        },
        _fnGridSetup: function () {
          let e;
          const t = this._fnDTOverflow();
          (this.dom.body = this.s.dt.nTable),
            (this.dom.header = this.s.dt.nTHead.parentNode),
            (this.dom.header.parentNode.parentNode.style.position = "relative");
          const n = C(
            '<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; left:0;"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>',
          )[0];
          const i = n.childNodes[0];
          const r = n.childNodes[1];
          this.dom.grid.dt.parentNode.insertBefore(n, this.dom.grid.dt),
            n.appendChild(this.dom.grid.dt),
            (this.dom.grid.wrapper = n),
            this.s.iLeftColumns > 0 &&
              ((this.dom.grid.left.wrapper = i),
              (this.dom.grid.left.head = i.childNodes[0]),
              (this.dom.grid.left.body = i.childNodes[1]),
              (this.dom.grid.left.liner = C("div.DTFC_LeftBodyLiner", n)[0]),
              n.appendChild(i)),
            this.s.iRightColumns > 0 &&
              ((this.dom.grid.right.wrapper = r),
              (this.dom.grid.right.head = r.childNodes[0]),
              (this.dom.grid.right.body = r.childNodes[1]),
              (this.dom.grid.right.liner = C("div.DTFC_RightBodyLiner", n)[0]),
              ((e = C("div.DTFC_RightHeadBlocker", n)[0]).style.width =
                t.bar + "px"),
              (e.style.right = -t.bar + "px"),
              (this.dom.grid.right.headBlock = e),
              ((e = C("div.DTFC_RightFootBlocker", n)[0]).style.width =
                t.bar + "px"),
              (e.style.right = -t.bar + "px"),
              (this.dom.grid.right.footBlock = e),
              n.appendChild(r)),
            this.s.dt.nTFoot &&
              ((this.dom.footer = this.s.dt.nTFoot.parentNode),
              this.s.iLeftColumns > 0 &&
                (this.dom.grid.left.foot = i.childNodes[2]),
              this.s.iRightColumns > 0 &&
                (this.dom.grid.right.foot = r.childNodes[2]));
        },
        _fnGridLayout: function () {
          let e;
          const t = this.dom.grid;
          const n = C(t.wrapper).width();
          let i = C(this.s.dt.nTable.parentNode).outerHeight();
          const r = C(this.s.dt.nTable.parentNode.parentNode).outerHeight();
          const o = this._fnDTOverflow();
          const s = this.s.iLeftWidth;
          const a = this.s.iRightWidth;
          const l = function (e, t) {
            o.bar
              ? (e.style.width = t + o.bar + "px")
              : ((e.style.width = t + 20 + "px"),
                (e.style.paddingRight = "20px"),
                (e.style.boxSizing = "border-box"));
          };
          o.x && (i -= o.bar),
            (t.wrapper.style.height = r + "px"),
            this.s.iLeftColumns > 0 &&
              ((t.left.wrapper.style.width = s + "px"),
              (t.left.wrapper.style.height = "1px"),
              (t.left.body.style.height = i + "px"),
              t.left.foot && (t.left.foot.style.top = (o.x ? o.bar : 0) + "px"),
              l(t.left.liner, s),
              (t.left.liner.style.height = i + "px")),
            this.s.iRightColumns > 0 &&
              ((e = n - a),
              o.y && (e -= o.bar),
              (t.right.wrapper.style.width = a + "px"),
              (t.right.wrapper.style.left = e + "px"),
              (t.right.wrapper.style.height = "1px"),
              (t.right.body.style.height = i + "px"),
              t.right.foot &&
                (t.right.foot.style.top = (o.x ? o.bar : 0) + "px"),
              l(t.right.liner, a),
              (t.right.liner.style.height = i + "px"),
              (t.right.headBlock.style.display = o.y ? "block" : "none"),
              (t.right.footBlock.style.display = o.y ? "block" : "none"));
        },
        _fnDTOverflow: function () {
          const e = this.s.dt.nTable;
          const t = e.parentNode;
          const n = { x: !1, y: !1, bar: this.s.dt.oScroll.iBarWidth };
          return (
            e.offsetWidth > t.clientWidth && (n.x = !0),
            e.offsetHeight > t.clientHeight && (n.y = !0),
            n
          );
        },
        _fnDraw: function (e) {
          this._fnGridLayout(),
            this._fnCloneLeft(e),
            this._fnCloneRight(e),
            this.s.fnDrawCallback !== null &&
              this.s.fnDrawCallback.call(
                this,
                this.dom.clone.left,
                this.dom.clone.right,
              ),
            C(this).trigger("draw.dtfc", {
              leftClone: this.dom.clone.left,
              rightClone: this.dom.clone.right,
            });
        },
        _fnCloneRight: function (e) {
          if (!(this.s.iRightColumns <= 0)) {
            let t;
            const n = [];
            for (
              t = this.s.iTableColumns - this.s.iRightColumns;
              t < this.s.iTableColumns;
              t++
            ) {
              this.s.dt.aoColumns[t].bVisible && n.push(t);
            }
            this._fnClone(this.dom.clone.right, this.dom.grid.right, n, e);
          }
        },
        _fnCloneLeft: function (e) {
          if (!(this.s.iLeftColumns <= 0)) {
            let t;
            const n = [];
            for (t = 0; t < this.s.iLeftColumns; t++) {
              this.s.dt.aoColumns[t].bVisible && n.push(t);
            }
            this._fnClone(this.dom.clone.left, this.dom.grid.left, n, e);
          }
        },
        _fnCopyLayout: function (e, t, n) {
          for (var i = [], r = [], o = [], s = 0, a = e.length; s < a; s++) {
            const l = [];
            l.nTr = C(e[s].nTr).clone(n, !1)[0];
            for (let c = 0, u = this.s.iTableColumns; c < u; c++) {
              if (C.inArray(c, t) !== -1) {
                const d = C.inArray(e[s][c].cell, o);
                if (d === -1) {
                  const h = C(e[s][c].cell).clone(n, !1)[0];
                  r.push(h),
                    o.push(e[s][c].cell),
                    l.push({ cell: h, unique: e[s][c].unique });
                } else l.push({ cell: r[d], unique: e[s][c].unique });
              }
            }
            i.push(l);
          }
          return i;
        },
        _fnClone: function (e, t, r, n) {
          let i;
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          let p;
          const f = this;
          const g = this.s.dt;
          if (n) {
            for (
              C(e.header).remove(),
                e.header = C(this.dom.header).clone(!0, !1)[0],
                e.header.className += " DTFC_Cloned",
                e.header.style.width = "100%",
                t.head.appendChild(e.header),
                d = this._fnCopyLayout(g.aoHeader, r, !0),
                (h = C(">thead", e.header)).empty(),
                i = 0,
                o = d.length;
              i < o;
              i++
            ) {
              h[0].appendChild(d[i].nTr);
            }
            g.oApi._fnDrawHead(g, d, !0);
          } else {
            for (
              d = this._fnCopyLayout(g.aoHeader, r, !1),
                p = [],
                g.oApi._fnDetectHeader(p, C(">thead", e.header)[0]),
                i = 0,
                o = d.length;
              i < o;
              i++
            ) {
              for (s = 0, a = d[i].length; s < a; s++) {
                (p[i][s].cell.className = d[i][s].cell.className),
                  C("span.DataTables_sort_icon", p[i][s].cell).each(
                    function () {
                      this.className = C(
                        "span.DataTables_sort_icon",
                        d[i][s].cell,
                      )[0].className;
                    },
                  );
              }
            }
          }
          this._fnEqualiseHeights("thead", this.dom.header, e.header),
            this.s.sHeightMatch == "auto" &&
              C(">tbody>tr", f.dom.body).css("height", "auto"),
            e.body !== null && (C(e.body).remove(), (e.body = null)),
            (e.body = C(this.dom.body).clone(!0)[0]),
            (e.body.className += " DTFC_Cloned"),
            (e.body.style.paddingBottom = g.oScroll.iBarWidth + "px"),
            (e.body.style.marginBottom = 2 * g.oScroll.iBarWidth + "px"),
            e.body.getAttribute("id") !== null && e.body.removeAttribute("id"),
            C(">thead>tr", e.body).empty(),
            C(">tfoot", e.body).remove();
          const m = C("tbody", e.body)[0];
          if ((C(m).empty(), g.aiDisplay.length > 0)) {
            const v = C(">thead>tr", e.body)[0];
            for (u = 0; u < r.length; u++) {
              (l = r[u]),
                ((c = C(g.aoColumns[l].nTh).clone(!0)[0]).innerHTML = "");
              const y = c.style;
              (y.paddingTop = "0"),
                (y.paddingBottom = "0"),
                (y.borderTopWidth = "0"),
                (y.borderBottomWidth = "0"),
                (y.height = 0),
                (y.width = f.s.aiInnerWidths[l] + "px"),
                v.appendChild(c);
            }
            C(">tbody>tr", f.dom.body).each(function (e) {
              const t = this.cloneNode(!1);
              t.removeAttribute("id");
              const n =
                !1 === f.s.dt.oFeatures.bServerSide
                  ? f.s.dt.aiDisplay[f.s.dt._iDisplayStart + e]
                  : e;
              const i = f.s.dt.aoData[n].anCells || C(this).children("td, th");
              for (u = 0; u < r.length; u++) {
                (l = r[u]),
                  i.length > 0 &&
                    ((c = C(i[l]).clone(!0, !0)[0]), t.appendChild(c));
              }
              m.appendChild(t);
            });
          } else {
            C(">tbody>tr", f.dom.body).each(function () {
              ((c = this.cloneNode(!0)).className += " DTFC_NoData"),
                C("td", c).html(""),
                m.appendChild(c);
            });
          }
          if (
            ((e.body.style.width = "100%"),
            (e.body.style.margin = "0"),
            (e.body.style.padding = "0"),
            g.oScroller !== k)
          ) {
            const b = g.oScroller.dom.force;
            t.forcer
              ? (t.forcer.style.height = b.style.height)
              : ((t.forcer = b.cloneNode(!0)), t.liner.appendChild(t.forcer));
          }
          if (
            (t.liner.appendChild(e.body),
            this._fnEqualiseHeights("tbody", f.dom.body, e.body),
            g.nTFoot !== null)
          ) {
            if (n) {
              e.footer !== null && e.footer.parentNode.removeChild(e.footer),
                (e.footer = C(this.dom.footer).clone(!0, !0)[0]),
                (e.footer.className += " DTFC_Cloned"),
                (e.footer.style.width = "100%"),
                t.foot.appendChild(e.footer),
                (d = this._fnCopyLayout(g.aoFooter, r, !0));
              const _ = C(">tfoot", e.footer);
              for (_.empty(), i = 0, o = d.length; i < o; i++) {
                _[0].appendChild(d[i].nTr);
              }
              g.oApi._fnDrawHead(g, d, !0);
            } else {
              d = this._fnCopyLayout(g.aoFooter, r, !1);
              const x = [];
              for (
                g.oApi._fnDetectHeader(x, C(">tfoot", e.footer)[0]),
                  i = 0,
                  o = d.length;
                i < o;
                i++
              ) {
                for (s = 0, a = d[i].length; s < a; s++) {
                  x[i][s].cell.className = d[i][s].cell.className;
                }
              }
            }
            this._fnEqualiseHeights("tfoot", this.dom.footer, e.footer);
          }
          let w = g.oApi._fnGetUniqueThs(g, C(">thead", e.header)[0]);
          C(w).each(function (e) {
            (l = r[e]), (this.style.width = f.s.aiInnerWidths[l] + "px");
          }),
            f.s.dt.nTFoot !== null &&
              ((w = g.oApi._fnGetUniqueThs(g, C(">tfoot", e.footer)[0])),
              C(w).each(function (e) {
                (l = r[e]), (this.style.width = f.s.aiInnerWidths[l] + "px");
              }));
        },
        _fnGetTrNodes: function (e) {
          for (var t = [], n = 0, i = e.childNodes.length; n < i; n++) {
            e.childNodes[n].nodeName.toUpperCase() == "TR" &&
              t.push(e.childNodes[n]);
          }
          return t;
        },
        _fnEqualiseHeights: function (e, t, n) {
          if (this.s.sHeightMatch != "none" || e === "thead" || e === "tfoot") {
            let i;
            let r;
            let o;
            let s;
            let a;
            const l = t.getElementsByTagName(e)[0];
            const c = n.getElementsByTagName(e)[0];
            const u = C(">" + e + ">tr:eq(0)", t).children(":first");
            const d = (u.outerHeight(), u.height(), this._fnGetTrNodes(l));
            const h = this._fnGetTrNodes(c);
            const p = [];
            for (i = 0, r = h.length; i < r; i++) {
              (o = (s = d[i].offsetHeight) < (a = h[i].offsetHeight) ? a : s),
                this.s.sHeightMatch == "semiauto" && (d[i]._DTTC_iHeight = o),
                p.push(o);
            }
            for (i = 0, r = h.length; i < r; i++) {
              (h[i].style.height = p[i] + "px"),
                (d[i].style.height = p[i] + "px");
            }
          }
        },
      }),
      (c.defaults = {
        iLeftColumns: 1,
        iRightColumns: 0,
        fnDrawCallback: null,
        sHeightMatch: "semiauto",
      }),
      (c.version = "3.2.0"),
      o.Api.register("fixedColumns()", function () {
        return this;
      }),
      o.Api.register("fixedColumns().update()", function () {
        return this.iterator("table", function (e) {
          e._oFixedColumns && e._oFixedColumns.fnUpdate();
        });
      }),
      o.Api.register("fixedColumns().relayout()", function () {
        return this.iterator("table", function (e) {
          e._oFixedColumns && e._oFixedColumns.fnRedrawLayout();
        });
      }),
      o.Api.register("rows().recalcHeight()", function () {
        return this.iterator("row", function (e, t) {
          e._oFixedColumns &&
            e._oFixedColumns.fnRecalculateHeight(this.row(t).node());
        });
      }),
      o.Api.register("fixedColumns().rowIndex()", function (e) {
        return (e = C(e)).parents(".DTFC_Cloned").length
          ? this.rows({ page: "current" }).indexes()[e.index()]
          : this.row(e).index();
      }),
      o.Api.register("fixedColumns().cellIndex()", function (e) {
        if ((e = C(e)).parents(".DTFC_Cloned").length) {
          let t;
          const n = e.parent().index();
          const i = this.rows({ page: "current" }).indexes()[n];
          if (e.parents(".DTFC_LeftWrapper").length) t = e.index();
          else {
            t =
              this.columns().flatten().length -
              this.context[0]._oFixedColumns.s.iRightColumns +
              e.index();
          }
          return {
            row: i,
            column: this.column.index("toData", t),
            columnVisible: t,
          };
        }
        return this.cell(e).index();
      }),
      C(l).on("init.dt.fixedColumns", function (e, t) {
        if (e.namespace === "dt") {
          const n = t.oInit.fixedColumns;
          const i = o.defaults.fixedColumns;
          if (n || i) {
            const r = C.extend({}, n, i);
            !1 !== n && new c(t, r);
          }
        }
      }),
      (C.fn.dataTable.FixedColumns = c),
      (C.fn.DataTable.FixedColumns = c)
    );
  }),
  (function (e) {
    "use strict";
    typeof define === "function" && define.amd
      ? define(["jquery"], e)
      : e(jQuery);
  })(function (te) {
    "use strict";
    function l(e) {
      for (var t = e.css("visibility"); t === "inherit"; ) {
        t = (e = e.parent()).css("visibility");
      }
      return t === "visible";
    }
    function c(e) {
      for (var t, n; e.length && e[0] !== document; ) {
        if (
          ((t = e.css("position")) === "absolute" ||
            t === "relative" ||
            t === "fixed") &&
          ((n = parseInt(e.css("zIndex"), 10)), !isNaN(n) && n !== 0)
        ) {
          return n;
        }
        e = e.parent();
      }
      return 0;
    }
    function e() {
      (this._curInst = null),
        (this._keyEvent = !1),
        (this._disabledInputs = []),
        (this._datepickerShowing = !1),
        (this._inDialog = !1),
        (this._mainDivId = "ui-datepicker-div"),
        (this._inlineClass = "ui-datepicker-inline"),
        (this._appendClass = "ui-datepicker-append"),
        (this._triggerClass = "ui-datepicker-trigger"),
        (this._dialogClass = "ui-datepicker-dialog"),
        (this._disableClass = "ui-datepicker-disabled"),
        (this._unselectableClass = "ui-datepicker-unselectable"),
        (this._currentClass = "ui-datepicker-current-day"),
        (this._dayOverClass = "ui-datepicker-days-cell-over"),
        (this.regional = []),
        (this.regional[""] = {
          closeText: "Done",
          prevText: "Prev",
          nextText: "Next",
          currentText: "Today",
          monthNames: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          monthNamesShort: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          dayNames: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          weekHeader: "Wk",
          dateFormat: "mm/dd/yy",
          firstDay: 0,
          isRTL: !1,
          showMonthAfterYear: !1,
          yearSuffix: "",
          selectMonthLabel: "Select month",
          selectYearLabel: "Select year",
        }),
        (this._defaults = {
          showOn: "focus",
          showAnim: "fadeIn",
          showOptions: {},
          defaultDate: null,
          appendText: "",
          buttonText: "...",
          buttonImage: "",
          buttonImageOnly: !1,
          hideIfNoPrevNext: !1,
          navigationAsDateFormat: !1,
          gotoCurrent: !1,
          changeMonth: !1,
          changeYear: !1,
          yearRange: "c-10:c+10",
          showOtherMonths: !1,
          selectOtherMonths: !1,
          showWeek: !1,
          calculateWeek: this.iso8601Week,
          shortYearCutoff: "+10",
          minDate: null,
          maxDate: null,
          duration: "fast",
          beforeShowDay: null,
          beforeShow: null,
          onSelect: null,
          onChangeMonthYear: null,
          onClose: null,
          onUpdateDatepicker: null,
          numberOfMonths: 1,
          showCurrentAtPos: 0,
          stepMonths: 1,
          stepBigMonths: 12,
          altField: "",
          altFormat: "",
          constrainInput: !0,
          showButtonPanel: !1,
          autoSize: !1,
          disabled: !1,
        }),
        te.extend(this._defaults, this.regional[""]),
        (this.regional.en = te.extend(!0, {}, this.regional[""])),
        (this.regional["en-US"] = te.extend(!0, {}, this.regional.en)),
        (this.dpDiv = n(
          te(
            "<div id='" +
              this._mainDivId +
              "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>",
          ),
        ));
    }
    function n(e) {
      const t =
        "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
      return e
        .on("mouseout", t, function () {
          te(this).removeClass("ui-state-hover"),
            this.className.indexOf("ui-datepicker-prev") !== -1 &&
              te(this).removeClass("ui-datepicker-prev-hover"),
            this.className.indexOf("ui-datepicker-next") !== -1 &&
              te(this).removeClass("ui-datepicker-next-hover");
        })
        .on("mouseover", t, a);
    }
    function a() {
      te.datepicker._isDisabledDatepicker(
        w.inline ? w.dpDiv.parent()[0] : w.input[0],
      ) ||
        (te(this)
          .parents(".ui-datepicker-calendar")
          .find("a")
          .removeClass("ui-state-hover"),
        te(this).addClass("ui-state-hover"),
        this.className.indexOf("ui-datepicker-prev") !== -1 &&
          te(this).addClass("ui-datepicker-prev-hover"),
        this.className.indexOf("ui-datepicker-next") !== -1 &&
          te(this).addClass("ui-datepicker-next-hover"));
    }
    function d(e, t) {
      for (const n in (te.extend(e, t), t)) t[n] == null && (e[n] = t[n]);
      return e;
    }
    function t(t) {
      return function () {
        const e = this.element.val();
        t.apply(this, arguments),
          this._refresh(),
          e !== this.element.val() && this._trigger("change");
      };
    }
    function u(e) {
      return e == null
        ? e + ""
        : typeof e === "object"
          ? D[j.call(e)] || "object"
          : typeof e;
    }
    function h(e, t, n) {
      const i = M[t.type] || {};
      return e == null
        ? n || !t.def
          ? null
          : t.def
        : ((e = i.floor ? ~~e : parseFloat(e)),
          isNaN(e)
            ? t.def
            : i.mod
              ? (e + i.mod) % i.mod
              : Math.min(i.max, Math.max(0, e)));
    }
    function p(s) {
      const a = I();
      let l = (a._rgba = []);
      return (
        (s = s.toLowerCase()),
        F(E, function (e, t) {
          let n;
          const i = t.re.exec(s);
          const r = i && t.parse(i);
          const o = t.space || "rgba";
          if (r) {
            return (
              (n = a[o](r)),
              (a[A[o].cache] = n[A[o].cache]),
              (l = a._rgba = n._rgba),
              !1
            );
          }
        }),
        l.length
          ? (l.join() === "0,0,0,0" && S.extend(l, k.transparent), a)
          : k[s]
      );
    }
    function f(e, t, n) {
      return 6 * (n = (n + 1) % 1) < 1
        ? e + (t - e) * n * 6
        : 2 * n < 1
          ? t
          : 3 * n < 2
            ? e + (t - e) * (2 / 3 - n) * 6
            : e;
    }
    te.ui = te.ui || {};
    te.ui.version = "1.13.1";
    let r;
    let i = 0;
    const s = Array.prototype.hasOwnProperty;
    const g = Array.prototype.slice;
    (te.cleanData =
      ((r = te.cleanData),
      function (e) {
        let t, n, i;
        for (i = 0; (n = e[i]) != null; i++) {
          (t = te._data(n, "events")) &&
            t.remove &&
            te(n).triggerHandler("remove");
        }
        r(e);
      })),
      (te.widget = function (e, n, t) {
        let i;
        let r;
        let o;
        const s = {};
        const a = e.split(".")[0];
        const l = a + "-" + (e = e.split(".")[1]);
        return (
          t || ((t = n), (n = te.Widget)),
          Array.isArray(t) && (t = te.extend.apply(null, [{}].concat(t))),
          (te.expr.pseudos[l.toLowerCase()] = function (e) {
            return !!te.data(e, l);
          }),
          (te[a] = te[a] || {}),
          (i = te[a][e]),
          (r = te[a][e] =
            function (e, t) {
              if (!this || !this._createWidget) return new r(e, t);
              arguments.length && this._createWidget(e, t);
            }),
          te.extend(r, i, {
            version: t.version,
            _proto: te.extend({}, t),
            _childConstructors: [],
          }),
          ((o = new n()).options = te.widget.extend({}, o.options)),
          te.each(t, function (t, o) {
            s[t] =
              typeof o === "function"
                ? (function () {
                    function i() {
                      return n.prototype[t].apply(this, arguments);
                    }
                    function r(e) {
                      return n.prototype[t].apply(this, e);
                    }
                    return function () {
                      let e;
                      const t = this._super;
                      const n = this._superApply;
                      return (
                        (this._super = i),
                        (this._superApply = r),
                        (e = o.apply(this, arguments)),
                        (this._super = t),
                        (this._superApply = n),
                        e
                      );
                    };
                  })()
                : o;
          }),
          (r.prototype = te.widget.extend(
            o,
            { widgetEventPrefix: (i && o.widgetEventPrefix) || e },
            s,
            { constructor: r, namespace: a, widgetName: e, widgetFullName: l },
          )),
          i
            ? (te.each(i._childConstructors, function (e, t) {
                const n = t.prototype;
                te.widget(n.namespace + "." + n.widgetName, r, t._proto);
              }),
              delete i._childConstructors)
            : n._childConstructors.push(r),
          te.widget.bridge(e, r),
          r
        );
      }),
      (te.widget.extend = function (e) {
        for (
          var t, n, i = g.call(arguments, 1), r = 0, o = i.length;
          r < o;
          r++
        ) {
          for (t in i[r]) {
            (n = i[r][t]),
              s.call(i[r], t) &&
                n !== undefined &&
                (te.isPlainObject(n)
                  ? (e[t] = te.isPlainObject(e[t])
                      ? te.widget.extend({}, e[t], n)
                      : te.widget.extend({}, n))
                  : (e[t] = n));
          }
        }
        return e;
      }),
      (te.widget.bridge = function (o, t) {
        const s = t.prototype.widgetFullName || o;
        te.fn[o] = function (n) {
          const e = typeof n === "string";
          const i = g.call(arguments, 1);
          let r = this;
          return (
            e
              ? this.length || n !== "instance"
                ? this.each(function () {
                    let e;
                    const t = te.data(this, s);
                    return n === "instance"
                      ? ((r = t), !1)
                      : t
                        ? typeof t[n] !== "function" || n.charAt(0) === "_"
                          ? te.error(
                              "no such method '" +
                                n +
                                "' for " +
                                o +
                                " widget instance",
                            )
                          : (e = t[n].apply(t, i)) !== t && e !== undefined
                            ? ((r = e && e.jquery ? r.pushStack(e.get()) : e),
                              !1)
                            : void 0
                        : te.error(
                            "cannot call methods on " +
                              o +
                              " prior to initialization; attempted to call method '" +
                              n +
                              "'",
                          );
                  })
                : (r = undefined)
              : (i.length && (n = te.widget.extend.apply(null, [n].concat(i))),
                this.each(function () {
                  const e = te.data(this, s);
                  e
                    ? (e.option(n || {}), e._init && e._init())
                    : te.data(this, s, new t(n, this));
                })),
            r
          );
        };
      }),
      (te.Widget = function () {}),
      (te.Widget._childConstructors = []),
      (te.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: { classes: {}, disabled: !1, create: null },
        _createWidget: function (e, t) {
          (t = te(t || this.defaultElement || this)[0]),
            (this.element = te(t)),
            (this.uuid = i++),
            (this.eventNamespace = "." + this.widgetName + this.uuid),
            (this.bindings = te()),
            (this.hoverable = te()),
            (this.focusable = te()),
            (this.classesElementLookup = {}),
            t !== this &&
              (te.data(t, this.widgetFullName, this),
              this._on(!0, this.element, {
                remove: function (e) {
                  e.target === t && this.destroy();
                },
              }),
              (this.document = te(t.style ? t.ownerDocument : t.document || t)),
              (this.window = te(
                this.document[0].defaultView || this.document[0].parentWindow,
              ))),
            (this.options = te.widget.extend(
              {},
              this.options,
              this._getCreateOptions(),
              e,
            )),
            this._create(),
            this.options.disabled &&
              this._setOptionDisabled(this.options.disabled),
            this._trigger("create", null, this._getCreateEventData()),
            this._init();
        },
        _getCreateOptions: function () {
          return {};
        },
        _getCreateEventData: te.noop,
        _create: te.noop,
        _init: te.noop,
        destroy: function () {
          const n = this;
          this._destroy(),
            te.each(this.classesElementLookup, function (e, t) {
              n._removeClass(t, e);
            }),
            this.element
              .off(this.eventNamespace)
              .removeData(this.widgetFullName),
            this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
            this.bindings.off(this.eventNamespace);
        },
        _destroy: te.noop,
        widget: function () {
          return this.element;
        },
        option: function (e, t) {
          let n;
          let i;
          let r;
          let o = e;
          if (arguments.length === 0) return te.widget.extend({}, this.options);
          if (typeof e === "string") {
            if (((o = {}), (e = (n = e.split(".")).shift()), n.length)) {
              for (
                i = o[e] = te.widget.extend({}, this.options[e]), r = 0;
                r < n.length - 1;
                r++
              ) {
                (i[n[r]] = i[n[r]] || {}), (i = i[n[r]]);
              }
              if (((e = n.pop()), arguments.length === 1)) {
                return i[e] === undefined ? null : i[e];
              }
              i[e] = t;
            } else {
              if (arguments.length === 1) {
                return this.options[e] === undefined ? null : this.options[e];
              }
              o[e] = t;
            }
          }
          return this._setOptions(o), this;
        },
        _setOptions: function (e) {
          let t;
          for (t in e) this._setOption(t, e[t]);
          return this;
        },
        _setOption: function (e, t) {
          return (
            e === "classes" && this._setOptionClasses(t),
            (this.options[e] = t),
            e === "disabled" && this._setOptionDisabled(t),
            this
          );
        },
        _setOptionClasses: function (e) {
          let t, n, i;
          for (t in e) {
            (i = this.classesElementLookup[t]),
              e[t] !== this.options.classes[t] &&
                i &&
                i.length &&
                ((n = te(i.get())),
                this._removeClass(i, t),
                n.addClass(
                  this._classes({ element: n, keys: t, classes: e, add: !0 }),
                ));
          }
        },
        _setOptionDisabled: function (e) {
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !!e,
          ),
            e &&
              (this._removeClass(this.hoverable, null, "ui-state-hover"),
              this._removeClass(this.focusable, null, "ui-state-focus"));
        },
        enable: function () {
          return this._setOptions({ disabled: !1 });
        },
        disable: function () {
          return this._setOptions({ disabled: !0 });
        },
        _classes: function (r) {
          function o() {
            const n = [];
            r.element.each(function (e, t) {
              te
                .map(a.classesElementLookup, function (e) {
                  return e;
                })
                .some(function (e) {
                  return e.is(t);
                }) || n.push(t);
            }),
              a._on(te(n), { remove: "_untrackClassesElement" });
          }
          function e(e, t) {
            let n, i;
            for (i = 0; i < e.length; i++) {
              (n = a.classesElementLookup[e[i]] || te()),
                r.add
                  ? (o(),
                    (n = te(te.uniqueSort(n.get().concat(r.element.get())))))
                  : (n = te(n.not(r.element).get())),
                (a.classesElementLookup[e[i]] = n),
                s.push(e[i]),
                t && r.classes[e[i]] && s.push(r.classes[e[i]]);
            }
          }
          var s = [];
          var a = this;
          return (
            (r = te.extend(
              { element: this.element, classes: this.options.classes || {} },
              r,
            )).keys && e(r.keys.match(/\S+/g) || [], !0),
            r.extra && e(r.extra.match(/\S+/g) || []),
            s.join(" ")
          );
        },
        _untrackClassesElement: function (n) {
          const i = this;
          te.each(i.classesElementLookup, function (e, t) {
            te.inArray(n.target, t) !== -1 &&
              (i.classesElementLookup[e] = te(t.not(n.target).get()));
          }),
            this._off(te(n.target));
        },
        _removeClass: function (e, t, n) {
          return this._toggleClass(e, t, n, !1);
        },
        _addClass: function (e, t, n) {
          return this._toggleClass(e, t, n, !0);
        },
        _toggleClass: function (e, t, n, i) {
          i = typeof i === "boolean" ? i : n;
          const r = typeof e === "string" || e === null;
          const o = {
            extra: r ? t : n,
            keys: r ? e : t,
            element: r ? this.element : e,
            add: i,
          };
          return o.element.toggleClass(this._classes(o), i), this;
        },
        _on: function (s, a, e) {
          let l;
          const c = this;
          typeof s !== "boolean" && ((e = a), (a = s), (s = !1)),
            e
              ? ((a = l = te(a)), (this.bindings = this.bindings.add(a)))
              : ((e = a), (a = this.element), (l = this.widget())),
            te.each(e, function (e, t) {
              function n() {
                if (
                  s ||
                  (!0 !== c.options.disabled &&
                    !te(this).hasClass("ui-state-disabled"))
                ) {
                  return (typeof t === "string" ? c[t] : t).apply(c, arguments);
                }
              }
              typeof t !== "string" &&
                (n.guid = t.guid = t.guid || n.guid || te.guid++);
              const i = e.match(/^([\w:-]*)\s*(.*)$/);
              const r = i[1] + c.eventNamespace;
              const o = i[2];
              o ? l.on(r, o, n) : a.on(r, n);
            });
        },
        _off: function (e, t) {
          (t =
            (t || "").split(" ").join(this.eventNamespace + " ") +
            this.eventNamespace),
            e.off(t),
            (this.bindings = te(this.bindings.not(e).get())),
            (this.focusable = te(this.focusable.not(e).get())),
            (this.hoverable = te(this.hoverable.not(e).get()));
        },
        _delay: function (e, t) {
          function n() {
            return (typeof e === "string" ? i[e] : e).apply(i, arguments);
          }
          var i = this;
          return setTimeout(n, t || 0);
        },
        _hoverable: function (e) {
          (this.hoverable = this.hoverable.add(e)),
            this._on(e, {
              mouseenter: function (e) {
                this._addClass(te(e.currentTarget), null, "ui-state-hover");
              },
              mouseleave: function (e) {
                this._removeClass(te(e.currentTarget), null, "ui-state-hover");
              },
            });
        },
        _focusable: function (e) {
          (this.focusable = this.focusable.add(e)),
            this._on(e, {
              focusin: function (e) {
                this._addClass(te(e.currentTarget), null, "ui-state-focus");
              },
              focusout: function (e) {
                this._removeClass(te(e.currentTarget), null, "ui-state-focus");
              },
            });
        },
        _trigger: function (e, t, n) {
          let i;
          let r;
          const o = this.options[e];
          if (
            ((n = n || {}),
            ((t = te.Event(t)).type = (
              e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e
            ).toLowerCase()),
            (t.target = this.element[0]),
            (r = t.originalEvent))
          ) {
            for (i in r) i in t || (t[i] = r[i]);
          }
          return (
            this.element.trigger(t, n),
            !(
              (typeof o === "function" &&
                !1 === o.apply(this.element[0], [t].concat(n))) ||
              t.isDefaultPrevented()
            )
          );
        },
      }),
      te.each({ show: "fadeIn", hide: "fadeOut" }, function (o, s) {
        te.Widget.prototype["_" + o] = function (t, e, n) {
          let i;
          typeof e === "string" && (e = { effect: e });
          const r = e
            ? !0 === e || typeof e === "number"
              ? s
              : e.effect || s
            : o;
          typeof (e = e || {}) === "number"
            ? (e = { duration: e })
            : !0 === e && (e = {}),
            (i = !te.isEmptyObject(e)),
            (e.complete = n),
            e.delay && t.delay(e.delay),
            i && te.effects && te.effects.effect[r]
              ? t[o](e)
              : r !== o && t[r]
                ? t[r](e.duration, e.easing, n)
                : t.queue(function (e) {
                    te(this)[o](), n && n.call(t[0]), e();
                  });
        };
      });
    te.widget;
    !(function () {
      function w(e, t, n) {
        return [
          parseFloat(e[0]) * (c.test(e[0]) ? t / 100 : 1),
          parseFloat(e[1]) * (c.test(e[1]) ? n / 100 : 1),
        ];
      }
      function C(e, t) {
        return parseInt(te.css(e, t), 10) || 0;
      }
      function r(e) {
        return e != null && e === e.window;
      }
      function t(e) {
        const t = e[0];
        return t.nodeType === 9
          ? {
              width: e.width(),
              height: e.height(),
              offset: { top: 0, left: 0 },
            }
          : r(t)
            ? {
                width: e.width(),
                height: e.height(),
                offset: { top: e.scrollTop(), left: e.scrollLeft() },
              }
            : t.preventDefault
              ? { width: 0, height: 0, offset: { top: t.pageY, left: t.pageX } }
              : {
                  width: e.outerWidth(),
                  height: e.outerHeight(),
                  offset: e.offset(),
                };
      }
      let o;
      const k = Math.max;
      const S = Math.abs;
      const i = /left|center|right/;
      const s = /top|center|bottom/;
      const a = /[\+\-]\d+(\.[\d]+)?%?/;
      const l = /^\w+/;
      var c = /%$/;
      const n = te.fn.position;
      (te.position = {
        scrollbarWidth: function () {
          if (o !== undefined) return o;
          let e;
          let t;
          const n = te(
            "<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>",
          );
          const i = n.children()[0];
          return (
            te("body").append(n),
            (e = i.offsetWidth),
            n.css("overflow", "scroll"),
            e === (t = i.offsetWidth) && (t = n[0].clientWidth),
            n.remove(),
            (o = e - t)
          );
        },
        getScrollInfo: function (e) {
          const t =
            e.isWindow || e.isDocument ? "" : e.element.css("overflow-x");
          const n =
            e.isWindow || e.isDocument ? "" : e.element.css("overflow-y");
          const i =
            t === "scroll" ||
            (t === "auto" && e.width < e.element[0].scrollWidth);
          return {
            width:
              n === "scroll" ||
              (n === "auto" && e.height < e.element[0].scrollHeight)
                ? te.position.scrollbarWidth()
                : 0,
            height: i ? te.position.scrollbarWidth() : 0,
          };
        },
        getWithinInfo: function (e) {
          const t = te(e || window);
          const n = r(t[0]);
          const i = !!t[0] && t[0].nodeType === 9;
          return {
            element: t,
            isWindow: n,
            isDocument: i,
            offset: !n && !i ? te(e).offset() : { left: 0, top: 0 },
            scrollLeft: t.scrollLeft(),
            scrollTop: t.scrollTop(),
            width: t.outerWidth(),
            height: t.outerHeight(),
          };
        },
      }),
        (te.fn.position = function (d) {
          if (!d || !d.of) return n.apply(this, arguments);
          let h;
          let p;
          let f;
          let g;
          let m;
          let e;
          const v =
            typeof (d = te.extend({}, d)).of === "string"
              ? te(document).find(d.of)
              : te(d.of);
          const y = te.position.getWithinInfo(d.within);
          const b = te.position.getScrollInfo(y);
          const _ = (d.collision || "flip").split(" ");
          const x = {};
          return (
            (e = t(v)),
            v[0].preventDefault && (d.at = "left top"),
            (p = e.width),
            (f = e.height),
            (g = e.offset),
            (m = te.extend({}, g)),
            te.each(["my", "at"], function () {
              let e;
              let t;
              let n = (d[this] || "").split(" ");
              n.length === 1 &&
                (n = i.test(n[0])
                  ? n.concat(["center"])
                  : s.test(n[0])
                    ? ["center"].concat(n)
                    : ["center", "center"]),
                (n[0] = i.test(n[0]) ? n[0] : "center"),
                (n[1] = s.test(n[1]) ? n[1] : "center"),
                (e = a.exec(n[0])),
                (t = a.exec(n[1])),
                (x[this] = [e ? e[0] : 0, t ? t[0] : 0]),
                (d[this] = [l.exec(n[0])[0], l.exec(n[1])[0]]);
            }),
            _.length === 1 && (_[1] = _[0]),
            d.at[0] === "right"
              ? (m.left += p)
              : d.at[0] === "center" && (m.left += p / 2),
            d.at[1] === "bottom"
              ? (m.top += f)
              : d.at[1] === "center" && (m.top += f / 2),
            (h = w(x.at, p, f)),
            (m.left += h[0]),
            (m.top += h[1]),
            this.each(function () {
              let n;
              let e;
              const s = te(this);
              const a = s.outerWidth();
              const l = s.outerHeight();
              const t = C(this, "marginLeft");
              const i = C(this, "marginTop");
              const r = a + t + C(this, "marginRight") + b.width;
              const o = l + i + C(this, "marginBottom") + b.height;
              const c = te.extend({}, m);
              const u = w(x.my, s.outerWidth(), s.outerHeight());
              d.my[0] === "right"
                ? (c.left -= a)
                : d.my[0] === "center" && (c.left -= a / 2),
                d.my[1] === "bottom"
                  ? (c.top -= l)
                  : d.my[1] === "center" && (c.top -= l / 2),
                (c.left += u[0]),
                (c.top += u[1]),
                (n = { marginLeft: t, marginTop: i }),
                te.each(["left", "top"], function (e, t) {
                  te.ui.position[_[e]] &&
                    te.ui.position[_[e]][t](c, {
                      targetWidth: p,
                      targetHeight: f,
                      elemWidth: a,
                      elemHeight: l,
                      collisionPosition: n,
                      collisionWidth: r,
                      collisionHeight: o,
                      offset: [h[0] + u[0], h[1] + u[1]],
                      my: d.my,
                      at: d.at,
                      within: y,
                      elem: s,
                    });
                }),
                d.using &&
                  (e = function (e) {
                    const t = g.left - c.left;
                    const n = t + p - a;
                    const i = g.top - c.top;
                    const r = i + f - l;
                    const o = {
                      target: {
                        element: v,
                        left: g.left,
                        top: g.top,
                        width: p,
                        height: f,
                      },
                      element: {
                        element: s,
                        left: c.left,
                        top: c.top,
                        width: a,
                        height: l,
                      },
                      horizontal: n < 0 ? "left" : t > 0 ? "right" : "center",
                      vertical: r < 0 ? "top" : i > 0 ? "bottom" : "middle",
                    };
                    p < a && S(t + n) < p && (o.horizontal = "center"),
                      f < l && S(i + r) < f && (o.vertical = "middle"),
                      k(S(t), S(n)) > k(S(i), S(r))
                        ? (o.important = "horizontal")
                        : (o.important = "vertical"),
                      d.using.call(this, e, o);
                  }),
                s.offset(te.extend(c, { using: e }));
            })
          );
        }),
        (te.ui.position = {
          fit: {
            left: function (e, t) {
              let n;
              const i = t.within;
              const r = i.isWindow ? i.scrollLeft : i.offset.left;
              const o = i.width;
              const s = e.left - t.collisionPosition.marginLeft;
              const a = r - s;
              const l = s + t.collisionWidth - o - r;
              t.collisionWidth > o
                ? a > 0 && l <= 0
                  ? ((n = e.left + a + t.collisionWidth - o - r),
                    (e.left += a - n))
                  : (e.left =
                      l > 0 && a <= 0
                        ? r
                        : l < a
                          ? r + o - t.collisionWidth
                          : r)
                : a > 0
                  ? (e.left += a)
                  : l > 0
                    ? (e.left -= l)
                    : (e.left = k(e.left - s, e.left));
            },
            top: function (e, t) {
              let n;
              const i = t.within;
              const r = i.isWindow ? i.scrollTop : i.offset.top;
              const o = t.within.height;
              const s = e.top - t.collisionPosition.marginTop;
              const a = r - s;
              const l = s + t.collisionHeight - o - r;
              t.collisionHeight > o
                ? a > 0 && l <= 0
                  ? ((n = e.top + a + t.collisionHeight - o - r),
                    (e.top += a - n))
                  : (e.top =
                      l > 0 && a <= 0
                        ? r
                        : l < a
                          ? r + o - t.collisionHeight
                          : r)
                : a > 0
                  ? (e.top += a)
                  : l > 0
                    ? (e.top -= l)
                    : (e.top = k(e.top - s, e.top));
            },
          },
          flip: {
            left: function (e, t) {
              let n;
              let i;
              const r = t.within;
              const o = r.offset.left + r.scrollLeft;
              const s = r.width;
              const a = r.isWindow ? r.scrollLeft : r.offset.left;
              const l = e.left - t.collisionPosition.marginLeft;
              const c = l - a;
              const u = l + t.collisionWidth - s - a;
              const d =
                t.my[0] === "left"
                  ? -t.elemWidth
                  : t.my[0] === "right"
                    ? t.elemWidth
                    : 0;
              const h =
                t.at[0] === "left"
                  ? t.targetWidth
                  : t.at[0] === "right"
                    ? -t.targetWidth
                    : 0;
              const p = -2 * t.offset[0];
              c < 0
                ? ((n = e.left + d + h + p + t.collisionWidth - s - o) < 0 ||
                    n < S(c)) &&
                  (e.left += d + h + p)
                : u > 0 &&
                  ((i =
                    e.left - t.collisionPosition.marginLeft + d + h + p - a) >
                    0 ||
                    S(i) < u) &&
                  (e.left += d + h + p);
            },
            top: function (e, t) {
              let n;
              let i;
              const r = t.within;
              const o = r.offset.top + r.scrollTop;
              const s = r.height;
              const a = r.isWindow ? r.scrollTop : r.offset.top;
              const l = e.top - t.collisionPosition.marginTop;
              const c = l - a;
              const u = l + t.collisionHeight - s - a;
              const d =
                t.my[1] === "top"
                  ? -t.elemHeight
                  : t.my[1] === "bottom"
                    ? t.elemHeight
                    : 0;
              const h =
                t.at[1] === "top"
                  ? t.targetHeight
                  : t.at[1] === "bottom"
                    ? -t.targetHeight
                    : 0;
              const p = -2 * t.offset[1];
              c < 0
                ? ((i = e.top + d + h + p + t.collisionHeight - s - o) < 0 ||
                    i < S(c)) &&
                  (e.top += d + h + p)
                : u > 0 &&
                  ((n = e.top - t.collisionPosition.marginTop + d + h + p - a) >
                    0 ||
                    S(n) < u) &&
                  (e.top += d + h + p);
            },
          },
          flipfit: {
            left: function () {
              te.ui.position.flip.left.apply(this, arguments),
                te.ui.position.fit.left.apply(this, arguments);
            },
            top: function () {
              te.ui.position.flip.top.apply(this, arguments),
                te.ui.position.fit.top.apply(this, arguments);
            },
          },
        });
    })();
    let o;
    te.ui.position,
      te.extend(te.expr.pseudos, {
        data: te.expr.createPseudo
          ? te.expr.createPseudo(function (t) {
              return function (e) {
                return !!te.data(e, t);
              };
            })
          : function (e, t, n) {
              return !!te.data(e, n[3]);
            },
      }),
      te.fn.extend({
        disableSelection:
          ((o =
            "onselectstart" in document.createElement("div")
              ? "selectstart"
              : "mousedown"),
          function () {
            return this.on(o + ".ui-disableSelection", function (e) {
              e.preventDefault();
            });
          }),
        enableSelection: function () {
          return this.off(".ui-disableSelection");
        },
      });
    (te.ui.focusable = function (e, t) {
      let n;
      let i;
      let r;
      let o;
      let s;
      const a = e.nodeName.toLowerCase();
      return a === "area"
        ? ((i = (n = e.parentNode).name),
          !(!e.href || !i || n.nodeName.toLowerCase() !== "map") &&
            (r = te("img[usemap='#" + i + "']")).length > 0 &&
            r.is(":visible"))
        : (/^(input|select|textarea|button|object)$/.test(a)
            ? (o = !e.disabled) &&
              (s = te(e).closest("fieldset")[0]) &&
              (o = !s.disabled)
            : (o = (a === "a" && e.href) || t),
          o && te(e).is(":visible") && l(te(e)));
    }),
      te.extend(te.expr.pseudos, {
        focusable: function (e) {
          return te.ui.focusable(e, te.attr(e, "tabindex") != null);
        },
      });
    te.ui.focusable,
      (te.fn._form = function () {
        return typeof this[0].form === "string"
          ? this.closest("form")
          : te(this[0].form);
      }),
      (te.ui.formResetMixin = {
        _formResetHandler: function () {
          const t = te(this);
          setTimeout(function () {
            const e = t.data("ui-form-reset-instances");
            te.each(e, function () {
              this.refresh();
            });
          });
        },
        _bindFormResetHandler: function () {
          if (((this.form = this.element._form()), this.form.length)) {
            const e = this.form.data("ui-form-reset-instances") || [];
            e.length ||
              this.form.on("reset.ui-form-reset", this._formResetHandler),
              e.push(this),
              this.form.data("ui-form-reset-instances", e);
          }
        },
        _unbindFormResetHandler: function () {
          if (this.form.length) {
            const e = this.form.data("ui-form-reset-instances");
            e.splice(te.inArray(this, e), 1),
              e.length
                ? this.form.data("ui-form-reset-instances", e)
                : this.form
                    .removeData("ui-form-reset-instances")
                    .off("reset.ui-form-reset");
          }
        },
      });
    if (
      (te.expr.pseudos || (te.expr.pseudos = te.expr[":"]),
      te.uniqueSort || (te.uniqueSort = te.unique),
      !te.escapeSelector)
    ) {
      const m = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      const v = function (e, t) {
        return t
          ? e === "\0"
            ? "\ufffd"
            : e.slice(0, -1) +
              "\\" +
              e.charCodeAt(e.length - 1).toString(16) +
              " "
          : "\\" + e;
      };
      te.escapeSelector = function (e) {
        return (e + "").replace(m, v);
      };
    }
    (te.fn.even && te.fn.odd) ||
      te.fn.extend({
        even: function () {
          return this.filter(function (e) {
            return e % 2 == 0;
          });
        },
        odd: function () {
          return this.filter(function (e) {
            return e % 2 == 1;
          });
        },
      });
    (te.ui.keyCode = {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38,
    }),
      (te.fn.labels = function () {
        let e, t, n, i, r;
        return this.length
          ? this[0].labels && this[0].labels.length
            ? this.pushStack(this[0].labels)
            : ((i = this.eq(0).parents("label")),
              (n = this.attr("id")) &&
                ((r = (e = this.eq(0).parents().last()).add(
                  e.length ? e.siblings() : this.siblings(),
                )),
                (t = "label[for='" + te.escapeSelector(n) + "']"),
                (i = i.add(r.find(t).addBack(t)))),
              this.pushStack(i))
          : this.pushStack([]);
      }),
      (te.fn.scrollParent = function (e) {
        const t = this.css("position");
        const n = t === "absolute";
        const i = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/;
        const r = this.parents()
          .filter(function () {
            const e = te(this);
            return (
              (!n || e.css("position") !== "static") &&
              i.test(
                e.css("overflow") + e.css("overflow-y") + e.css("overflow-x"),
              )
            );
          })
          .eq(0);
        return t !== "fixed" && r.length
          ? r
          : te(this[0].ownerDocument || document);
      }),
      te.extend(te.expr.pseudos, {
        tabbable: function (e) {
          const t = te.attr(e, "tabindex");
          const n = t != null;
          return (!n || t >= 0) && te.ui.focusable(e, n);
        },
      }),
      te.fn.extend({
        uniqueId:
          ((y = 0),
          function () {
            return this.each(function () {
              this.id || (this.id = "ui-id-" + ++y);
            });
          }),
        removeUniqueId: function () {
          return this.each(function () {
            /^ui-id-\d+$/.test(this.id) && te(this).removeAttr("id");
          });
        },
      }),
      (te.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
    let y;
    let b = !1;
    te(document).on("mouseup", function () {
      b = !1;
    });
    te.widget("ui.mouse", {
      version: "1.13.1",
      options: {
        cancel: "input, textarea, button, select, option",
        distance: 1,
        delay: 0,
      },
      _mouseInit: function () {
        const t = this;
        this.element
          .on("mousedown." + this.widgetName, function (e) {
            return t._mouseDown(e);
          })
          .on("click." + this.widgetName, function (e) {
            if (!0 === te.data(e.target, t.widgetName + ".preventClickEvent")) {
              return (
                te.removeData(e.target, t.widgetName + ".preventClickEvent"),
                e.stopImmediatePropagation(),
                !1
              );
            }
          }),
          (this.started = !1);
      },
      _mouseDestroy: function () {
        this.element.off("." + this.widgetName),
          this._mouseMoveDelegate &&
            this.document
              .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
              .off("mouseup." + this.widgetName, this._mouseUpDelegate);
      },
      _mouseDown: function (e) {
        if (!b) {
          (this._mouseMoved = !1),
            this._mouseStarted && this._mouseUp(e),
            (this._mouseDownEvent = e);
          const t = this;
          const n = e.which === 1;
          const i =
            !(typeof this.options.cancel !== "string" || !e.target.nodeName) &&
            te(e.target).closest(this.options.cancel).length;
          return (
            !(n && !i && this._mouseCapture(e)) ||
            ((this.mouseDelayMet = !this.options.delay),
            this.mouseDelayMet ||
              (this._mouseDelayTimer = setTimeout(function () {
                t.mouseDelayMet = !0;
              }, this.options.delay)),
            this._mouseDistanceMet(e) &&
            this._mouseDelayMet(e) &&
            ((this._mouseStarted = !1 !== this._mouseStart(e)),
            !this._mouseStarted)
              ? (e.preventDefault(), !0)
              : (!0 ===
                  te.data(e.target, this.widgetName + ".preventClickEvent") &&
                  te.removeData(
                    e.target,
                    this.widgetName + ".preventClickEvent",
                  ),
                (this._mouseMoveDelegate = function (e) {
                  return t._mouseMove(e);
                }),
                (this._mouseUpDelegate = function (e) {
                  return t._mouseUp(e);
                }),
                this.document
                  .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                  .on("mouseup." + this.widgetName, this._mouseUpDelegate),
                e.preventDefault(),
                (b = !0)))
          );
        }
      },
      _mouseMove: function (e) {
        if (this._mouseMoved) {
          if (
            te.ui.ie &&
            (!document.documentMode || document.documentMode < 9) &&
            !e.button
          ) {
            return this._mouseUp(e);
          }
          if (!e.which) {
            if (
              e.originalEvent.altKey ||
              e.originalEvent.ctrlKey ||
              e.originalEvent.metaKey ||
              e.originalEvent.shiftKey
            ) {
              this.ignoreMissingWhich = !0;
            } else if (!this.ignoreMissingWhich) return this._mouseUp(e);
          }
        }
        return (
          (e.which || e.button) && (this._mouseMoved = !0),
          this._mouseStarted
            ? (this._mouseDrag(e), e.preventDefault())
            : (this._mouseDistanceMet(e) &&
                this._mouseDelayMet(e) &&
                ((this._mouseStarted =
                  !1 !== this._mouseStart(this._mouseDownEvent, e)),
                this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)),
              !this._mouseStarted)
        );
      },
      _mouseUp: function (e) {
        this.document
          .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
          .off("mouseup." + this.widgetName, this._mouseUpDelegate),
          this._mouseStarted &&
            ((this._mouseStarted = !1),
            e.target === this._mouseDownEvent.target &&
              te.data(e.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(e)),
          this._mouseDelayTimer &&
            (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
          (this.ignoreMissingWhich = !1),
          (b = !1),
          e.preventDefault();
      },
      _mouseDistanceMet: function (e) {
        return (
          Math.max(
            Math.abs(this._mouseDownEvent.pageX - e.pageX),
            Math.abs(this._mouseDownEvent.pageY - e.pageY),
          ) >= this.options.distance
        );
      },
      _mouseDelayMet: function () {
        return this.mouseDelayMet;
      },
      _mouseStart: function () {},
      _mouseDrag: function () {},
      _mouseStop: function () {},
      _mouseCapture: function () {
        return !0;
      },
    }),
      (te.ui.plugin = {
        add: function (e, t, n) {
          let i;
          const r = te.ui[e].prototype;
          for (i in n) {
            (r.plugins[i] = r.plugins[i] || []), r.plugins[i].push([t, n[i]]);
          }
        },
        call: function (e, t, n, i) {
          let r;
          const o = e.plugins[t];
          if (
            o &&
            (i ||
              (e.element[0].parentNode &&
                e.element[0].parentNode.nodeType !== 11))
          ) {
            for (r = 0; r < o.length; r++) {
              e.options[o[r][0]] && o[r][1].apply(e.element, n);
            }
          }
        },
      }),
      (te.ui.safeActiveElement = function (e) {
        let t;
        try {
          t = e.activeElement;
        } catch (n) {
          t = e.body;
        }
        return t || (t = e.body), t.nodeName || (t = e.body), t;
      }),
      (te.ui.safeBlur = function (e) {
        e && e.nodeName.toLowerCase() !== "body" && te(e).trigger("blur");
      });
    te.widget("ui.draggable", te.ui.mouse, {
      version: "1.13.1",
      widgetEventPrefix: "drag",
      options: {
        addClasses: !0,
        appendTo: "parent",
        axis: !1,
        connectToSortable: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        iframeFix: !1,
        opacity: !1,
        refreshPositions: !1,
        revert: !1,
        revertDuration: 500,
        scope: "default",
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        snap: !1,
        snapMode: "both",
        snapTolerance: 20,
        stack: !1,
        zIndex: !1,
        drag: null,
        start: null,
        stop: null,
      },
      _create: function () {
        this.options.helper === "original" && this._setPositionRelative(),
          this.options.addClasses && this._addClass("ui-draggable"),
          this._setHandleClassName(),
          this._mouseInit();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          e === "handle" &&
            (this._removeHandleClassName(), this._setHandleClassName());
      },
      _destroy: function () {
        (this.helper || this.element).is(".ui-draggable-dragging")
          ? (this.destroyOnClear = !0)
          : (this._removeHandleClassName(), this._mouseDestroy());
      },
      _mouseCapture: function (e) {
        const t = this.options;
        return (
          !(
            this.helper ||
            t.disabled ||
            te(e.target).closest(".ui-resizable-handle").length > 0
          ) &&
          ((this.handle = this._getHandle(e)),
          !!this.handle &&
            (this._blurActiveElement(e),
            this._blockFrames(!0 === t.iframeFix ? "iframe" : t.iframeFix),
            !0))
        );
      },
      _blockFrames: function (e) {
        this.iframeBlocks = this.document.find(e).map(function () {
          const e = te(this);
          return te("<div>")
            .css("position", "absolute")
            .appendTo(e.parent())
            .outerWidth(e.outerWidth())
            .outerHeight(e.outerHeight())
            .offset(e.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _blurActiveElement: function (e) {
        const t = te.ui.safeActiveElement(this.document[0]);
        te(e.target).closest(t).length || te.ui.safeBlur(t);
      },
      _mouseStart: function (e) {
        const t = this.options;
        return (
          (this.helper = this._createHelper(e)),
          this._addClass(this.helper, "ui-draggable-dragging"),
          this._cacheHelperProportions(),
          te.ui.ddmanager && (te.ui.ddmanager.current = this),
          this._cacheMargins(),
          (this.cssPosition = this.helper.css("position")),
          (this.scrollParent = this.helper.scrollParent(!0)),
          (this.offsetParent = this.helper.offsetParent()),
          (this.hasFixedAncestor =
            this.helper.parents().filter(function () {
              return te(this).css("position") === "fixed";
            }).length > 0),
          (this.positionAbs = this.element.offset()),
          this._refreshOffsets(e),
          (this.originalPosition = this.position =
            this._generatePosition(e, !1)),
          (this.originalPageX = e.pageX),
          (this.originalPageY = e.pageY),
          t.cursorAt && this._adjustOffsetFromHelper(t.cursorAt),
          this._setContainment(),
          !1 === this._trigger("start", e)
            ? (this._clear(), !1)
            : (this._cacheHelperProportions(),
              te.ui.ddmanager &&
                !t.dropBehaviour &&
                te.ui.ddmanager.prepareOffsets(this, e),
              this._mouseDrag(e, !0),
              te.ui.ddmanager && te.ui.ddmanager.dragStart(this, e),
              !0)
        );
      },
      _refreshOffsets: function (e) {
        (this.offset = {
          top: this.positionAbs.top - this.margins.top,
          left: this.positionAbs.left - this.margins.left,
          scroll: !1,
          parent: this._getParentOffset(),
          relative: this._getRelativeOffset(),
        }),
          (this.offset.click = {
            left: e.pageX - this.offset.left,
            top: e.pageY - this.offset.top,
          });
      },
      _mouseDrag: function (e, t) {
        if (
          (this.hasFixedAncestor &&
            (this.offset.parent = this._getParentOffset()),
          (this.position = this._generatePosition(e, !0)),
          (this.positionAbs = this._convertPositionTo("absolute")),
          !t)
        ) {
          const n = this._uiHash();
          if (!1 === this._trigger("drag", e, n)) {
            return this._mouseUp(new te.Event("mouseup", e)), !1;
          }
          this.position = n.position;
        }
        return (
          (this.helper[0].style.left = this.position.left + "px"),
          (this.helper[0].style.top = this.position.top + "px"),
          te.ui.ddmanager && te.ui.ddmanager.drag(this, e),
          !1
        );
      },
      _mouseStop: function (e) {
        const t = this;
        let n = !1;
        return (
          te.ui.ddmanager &&
            !this.options.dropBehaviour &&
            (n = te.ui.ddmanager.drop(this, e)),
          this.dropped && ((n = this.dropped), (this.dropped = !1)),
          (this.options.revert === "invalid" && !n) ||
          (this.options.revert === "valid" && n) ||
          !0 === this.options.revert ||
          (typeof this.options.revert === "function" &&
            this.options.revert.call(this.element, n))
            ? te(this.helper).animate(
                this.originalPosition,
                parseInt(this.options.revertDuration, 10),
                function () {
                  !1 !== t._trigger("stop", e) && t._clear();
                },
              )
            : !1 !== this._trigger("stop", e) && this._clear(),
          !1
        );
      },
      _mouseUp: function (e) {
        return (
          this._unblockFrames(),
          te.ui.ddmanager && te.ui.ddmanager.dragStop(this, e),
          this.handleElement.is(e.target) && this.element.trigger("focus"),
          te.ui.mouse.prototype._mouseUp.call(this, e)
        );
      },
      cancel: function () {
        return (
          this.helper.is(".ui-draggable-dragging")
            ? this._mouseUp(
                new te.Event("mouseup", { target: this.element[0] }),
              )
            : this._clear(),
          this
        );
      },
      _getHandle: function (e) {
        return (
          !this.options.handle ||
          !!te(e.target).closest(this.element.find(this.options.handle)).length
        );
      },
      _setHandleClassName: function () {
        (this.handleElement = this.options.handle
          ? this.element.find(this.options.handle)
          : this.element),
          this._addClass(this.handleElement, "ui-draggable-handle");
      },
      _removeHandleClassName: function () {
        this._removeClass(this.handleElement, "ui-draggable-handle");
      },
      _createHelper: function (e) {
        const t = this.options;
        const n = typeof t.helper === "function";
        const i = n
          ? te(t.helper.apply(this.element[0], [e]))
          : t.helper === "clone"
            ? this.element.clone().removeAttr("id")
            : this.element;
        return (
          i.parents("body").length ||
            i.appendTo(
              t.appendTo === "parent" ? this.element[0].parentNode : t.appendTo,
            ),
          n && i[0] === this.element[0] && this._setPositionRelative(),
          i[0] === this.element[0] ||
            /(fixed|absolute)/.test(i.css("position")) ||
            i.css("position", "absolute"),
          i
        );
      },
      _setPositionRelative: function () {
        /^(?:r|a|f)/.test(this.element.css("position")) ||
          (this.element[0].style.position = "relative");
      },
      _adjustOffsetFromHelper: function (e) {
        typeof e === "string" && (e = e.split(" ")),
          Array.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }),
          "left" in e && (this.offset.click.left = e.left + this.margins.left),
          "right" in e &&
            (this.offset.click.left =
              this.helperProportions.width - e.right + this.margins.left),
          "top" in e && (this.offset.click.top = e.top + this.margins.top),
          "bottom" in e &&
            (this.offset.click.top =
              this.helperProportions.height - e.bottom + this.margins.top);
      },
      _isRootNode: function (e) {
        return /(html|body)/i.test(e.tagName) || e === this.document[0];
      },
      _getParentOffset: function () {
        let e = this.offsetParent.offset();
        const t = this.document[0];
        return (
          this.cssPosition === "absolute" &&
            this.scrollParent[0] !== t &&
            te.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((e.left += this.scrollParent.scrollLeft()),
            (e.top += this.scrollParent.scrollTop())),
          this._isRootNode(this.offsetParent[0]) && (e = { top: 0, left: 0 }),
          {
            top:
              e.top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              e.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if (this.cssPosition !== "relative") return { top: 0, left: 0 };
        const e = this.element.position();
        const t = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            e.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollTop()),
          left:
            e.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollLeft()),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.element.css("marginLeft"), 10) || 0,
          top: parseInt(this.element.css("marginTop"), 10) || 0,
          right: parseInt(this.element.css("marginRight"), 10) || 0,
          bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        let e;
        let t;
        let n;
        const i = this.options;
        const r = this.document[0];
        (this.relativeContainer = null),
          i.containment
            ? i.containment !== "window"
              ? i.containment !== "document"
                ? i.containment.constructor !== Array
                  ? (i.containment === "parent" &&
                      (i.containment = this.helper[0].parentNode),
                    (n = (t = te(i.containment))[0]) &&
                      ((e = /(scroll|auto)/.test(t.css("overflow"))),
                      (this.containment = [
                        (parseInt(t.css("borderLeftWidth"), 10) || 0) +
                          (parseInt(t.css("paddingLeft"), 10) || 0),
                        (parseInt(t.css("borderTopWidth"), 10) || 0) +
                          (parseInt(t.css("paddingTop"), 10) || 0),
                        (e
                          ? Math.max(n.scrollWidth, n.offsetWidth)
                          : n.offsetWidth) -
                          (parseInt(t.css("borderRightWidth"), 10) || 0) -
                          (parseInt(t.css("paddingRight"), 10) || 0) -
                          this.helperProportions.width -
                          this.margins.left -
                          this.margins.right,
                        (e
                          ? Math.max(n.scrollHeight, n.offsetHeight)
                          : n.offsetHeight) -
                          (parseInt(t.css("borderBottomWidth"), 10) || 0) -
                          (parseInt(t.css("paddingBottom"), 10) || 0) -
                          this.helperProportions.height -
                          this.margins.top -
                          this.margins.bottom,
                      ]),
                      (this.relativeContainer = t)))
                  : (this.containment = i.containment)
                : (this.containment = [
                    0,
                    0,
                    te(r).width() -
                      this.helperProportions.width -
                      this.margins.left,
                    (te(r).height() || r.body.parentNode.scrollHeight) -
                      this.helperProportions.height -
                      this.margins.top,
                  ])
              : (this.containment = [
                  te(window).scrollLeft() -
                    this.offset.relative.left -
                    this.offset.parent.left,
                  te(window).scrollTop() -
                    this.offset.relative.top -
                    this.offset.parent.top,
                  te(window).scrollLeft() +
                    te(window).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  te(window).scrollTop() +
                    (te(window).height() || r.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
            : (this.containment = null);
      },
      _convertPositionTo: function (e, t) {
        t || (t = this.position);
        const n = e === "absolute" ? 1 : -1;
        const i = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            t.top +
            this.offset.relative.top * n +
            this.offset.parent.top * n -
            (this.cssPosition === "fixed"
              ? -this.offset.scroll.top
              : i
                ? 0
                : this.offset.scroll.top) *
              n,
          left:
            t.left +
            this.offset.relative.left * n +
            this.offset.parent.left * n -
            (this.cssPosition === "fixed"
              ? -this.offset.scroll.left
              : i
                ? 0
                : this.offset.scroll.left) *
              n,
        };
      },
      _generatePosition: function (e, t) {
        let n;
        let i;
        let r;
        let o;
        const s = this.options;
        const a = this._isRootNode(this.scrollParent[0]);
        let l = e.pageX;
        let c = e.pageY;
        return (
          (a && this.offset.scroll) ||
            (this.offset.scroll = {
              top: this.scrollParent.scrollTop(),
              left: this.scrollParent.scrollLeft(),
            }),
          t &&
            (this.containment &&
              (this.relativeContainer
                ? ((i = this.relativeContainer.offset()),
                  (n = [
                    this.containment[0] + i.left,
                    this.containment[1] + i.top,
                    this.containment[2] + i.left,
                    this.containment[3] + i.top,
                  ]))
                : (n = this.containment),
              e.pageX - this.offset.click.left < n[0] &&
                (l = n[0] + this.offset.click.left),
              e.pageY - this.offset.click.top < n[1] &&
                (c = n[1] + this.offset.click.top),
              e.pageX - this.offset.click.left > n[2] &&
                (l = n[2] + this.offset.click.left),
              e.pageY - this.offset.click.top > n[3] &&
                (c = n[3] + this.offset.click.top)),
            s.grid &&
              ((r = s.grid[1]
                ? this.originalPageY +
                  Math.round((c - this.originalPageY) / s.grid[1]) * s.grid[1]
                : this.originalPageY),
              (c = n
                ? r - this.offset.click.top >= n[1] ||
                  r - this.offset.click.top > n[3]
                  ? r
                  : r - this.offset.click.top >= n[1]
                    ? r - s.grid[1]
                    : r + s.grid[1]
                : r),
              (o = s.grid[0]
                ? this.originalPageX +
                  Math.round((l - this.originalPageX) / s.grid[0]) * s.grid[0]
                : this.originalPageX),
              (l = n
                ? o - this.offset.click.left >= n[0] ||
                  o - this.offset.click.left > n[2]
                  ? o
                  : o - this.offset.click.left >= n[0]
                    ? o - s.grid[0]
                    : o + s.grid[0]
                : o)),
            s.axis === "y" && (l = this.originalPageX),
            s.axis === "x" && (c = this.originalPageY)),
          {
            top:
              c -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              (this.cssPosition === "fixed"
                ? -this.offset.scroll.top
                : a
                  ? 0
                  : this.offset.scroll.top),
            left:
              l -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              (this.cssPosition === "fixed"
                ? -this.offset.scroll.left
                : a
                  ? 0
                  : this.offset.scroll.left),
          }
        );
      },
      _clear: function () {
        this._removeClass(this.helper, "ui-draggable-dragging"),
          this.helper[0] === this.element[0] ||
            this.cancelHelperRemoval ||
            this.helper.remove(),
          (this.helper = null),
          (this.cancelHelperRemoval = !1),
          this.destroyOnClear && this.destroy();
      },
      _trigger: function (e, t, n) {
        return (
          (n = n || this._uiHash()),
          te.ui.plugin.call(this, e, [t, n, this], !0),
          /^(drag|start|stop)/.test(e) &&
            ((this.positionAbs = this._convertPositionTo("absolute")),
            (n.offset = this.positionAbs)),
          te.Widget.prototype._trigger.call(this, e, t, n)
        );
      },
      plugins: {},
      _uiHash: function () {
        return {
          helper: this.helper,
          position: this.position,
          originalPosition: this.originalPosition,
          offset: this.positionAbs,
        };
      },
    }),
      te.ui.plugin.add("draggable", "connectToSortable", {
        start: function (t, e, n) {
          const i = te.extend({}, e, { item: n.element });
          (n.sortables = []),
            te(n.options.connectToSortable).each(function () {
              const e = te(this).sortable("instance");
              e &&
                !e.options.disabled &&
                (n.sortables.push(e),
                e.refreshPositions(),
                e._trigger("activate", t, i));
            });
        },
        stop: function (t, e, n) {
          const i = te.extend({}, e, { item: n.element });
          (n.cancelHelperRemoval = !1),
            te.each(n.sortables, function () {
              const e = this;
              e.isOver
                ? ((e.isOver = 0),
                  (n.cancelHelperRemoval = !0),
                  (e.cancelHelperRemoval = !1),
                  (e._storedCSS = {
                    position: e.placeholder.css("position"),
                    top: e.placeholder.css("top"),
                    left: e.placeholder.css("left"),
                  }),
                  e._mouseStop(t),
                  (e.options.helper = e.options._helper))
                : ((e.cancelHelperRemoval = !0),
                  e._trigger("deactivate", t, i));
            });
        },
        drag: function (n, i, r) {
          te.each(r.sortables, function () {
            let e = !1;
            const t = this;
            (t.positionAbs = r.positionAbs),
              (t.helperProportions = r.helperProportions),
              (t.offset.click = r.offset.click),
              t._intersectsWith(t.containerCache) &&
                ((e = !0),
                te.each(r.sortables, function () {
                  return (
                    (this.positionAbs = r.positionAbs),
                    (this.helperProportions = r.helperProportions),
                    (this.offset.click = r.offset.click),
                    this !== t &&
                      this._intersectsWith(this.containerCache) &&
                      te.contains(t.element[0], this.element[0]) &&
                      (e = !1),
                    e
                  );
                })),
              e
                ? (t.isOver ||
                    ((t.isOver = 1),
                    (r._parent = i.helper.parent()),
                    (t.currentItem = i.helper
                      .appendTo(t.element)
                      .data("ui-sortable-item", !0)),
                    (t.options._helper = t.options.helper),
                    (t.options.helper = function () {
                      return i.helper[0];
                    }),
                    (n.target = t.currentItem[0]),
                    t._mouseCapture(n, !0),
                    t._mouseStart(n, !0, !0),
                    (t.offset.click.top = r.offset.click.top),
                    (t.offset.click.left = r.offset.click.left),
                    (t.offset.parent.left -=
                      r.offset.parent.left - t.offset.parent.left),
                    (t.offset.parent.top -=
                      r.offset.parent.top - t.offset.parent.top),
                    r._trigger("toSortable", n),
                    (r.dropped = t.element),
                    te.each(r.sortables, function () {
                      this.refreshPositions();
                    }),
                    (r.currentItem = r.element),
                    (t.fromOutside = r)),
                  t.currentItem && (t._mouseDrag(n), (i.position = t.position)))
                : t.isOver &&
                  ((t.isOver = 0),
                  (t.cancelHelperRemoval = !0),
                  (t.options._revert = t.options.revert),
                  (t.options.revert = !1),
                  t._trigger("out", n, t._uiHash(t)),
                  t._mouseStop(n, !0),
                  (t.options.revert = t.options._revert),
                  (t.options.helper = t.options._helper),
                  t.placeholder && t.placeholder.remove(),
                  i.helper.appendTo(r._parent),
                  r._refreshOffsets(n),
                  (i.position = r._generatePosition(n, !0)),
                  r._trigger("fromSortable", n),
                  (r.dropped = !1),
                  te.each(r.sortables, function () {
                    this.refreshPositions();
                  }));
          });
        },
      }),
      te.ui.plugin.add("draggable", "cursor", {
        start: function (e, t, n) {
          const i = te("body");
          const r = n.options;
          i.css("cursor") && (r._cursor = i.css("cursor")),
            i.css("cursor", r.cursor);
        },
        stop: function (e, t, n) {
          const i = n.options;
          i._cursor && te("body").css("cursor", i._cursor);
        },
      }),
      te.ui.plugin.add("draggable", "opacity", {
        start: function (e, t, n) {
          const i = te(t.helper);
          const r = n.options;
          i.css("opacity") && (r._opacity = i.css("opacity")),
            i.css("opacity", r.opacity);
        },
        stop: function (e, t, n) {
          const i = n.options;
          i._opacity && te(t.helper).css("opacity", i._opacity);
        },
      }),
      te.ui.plugin.add("draggable", "scroll", {
        start: function (e, t, n) {
          n.scrollParentNotHidden ||
            (n.scrollParentNotHidden = n.helper.scrollParent(!1)),
            n.scrollParentNotHidden[0] !== n.document[0] &&
              n.scrollParentNotHidden[0].tagName !== "HTML" &&
              (n.overflowOffset = n.scrollParentNotHidden.offset());
        },
        drag: function (e, t, n) {
          const i = n.options;
          let r = !1;
          const o = n.scrollParentNotHidden[0];
          const s = n.document[0];
          o !== s && o.tagName !== "HTML"
            ? ((i.axis && i.axis === "x") ||
                (n.overflowOffset.top + o.offsetHeight - e.pageY <
                i.scrollSensitivity
                  ? (o.scrollTop = r = o.scrollTop + i.scrollSpeed)
                  : e.pageY - n.overflowOffset.top < i.scrollSensitivity &&
                    (o.scrollTop = r = o.scrollTop - i.scrollSpeed)),
              (i.axis && i.axis === "y") ||
                (n.overflowOffset.left + o.offsetWidth - e.pageX <
                i.scrollSensitivity
                  ? (o.scrollLeft = r = o.scrollLeft + i.scrollSpeed)
                  : e.pageX - n.overflowOffset.left < i.scrollSensitivity &&
                    (o.scrollLeft = r = o.scrollLeft - i.scrollSpeed)))
            : ((i.axis && i.axis === "x") ||
                (e.pageY - te(s).scrollTop() < i.scrollSensitivity
                  ? (r = te(s).scrollTop(te(s).scrollTop() - i.scrollSpeed))
                  : te(window).height() - (e.pageY - te(s).scrollTop()) <
                      i.scrollSensitivity &&
                    (r = te(s).scrollTop(te(s).scrollTop() + i.scrollSpeed))),
              (i.axis && i.axis === "y") ||
                (e.pageX - te(s).scrollLeft() < i.scrollSensitivity
                  ? (r = te(s).scrollLeft(te(s).scrollLeft() - i.scrollSpeed))
                  : te(window).width() - (e.pageX - te(s).scrollLeft()) <
                      i.scrollSensitivity &&
                    (r = te(s).scrollLeft(
                      te(s).scrollLeft() + i.scrollSpeed,
                    )))),
            !1 !== r &&
              te.ui.ddmanager &&
              !i.dropBehaviour &&
              te.ui.ddmanager.prepareOffsets(n, e);
        },
      }),
      te.ui.plugin.add("draggable", "snap", {
        start: function (e, t, n) {
          const i = n.options;
          (n.snapElements = []),
            te(
              i.snap.constructor !== String
                ? i.snap.items || ":data(ui-draggable)"
                : i.snap,
            ).each(function () {
              const e = te(this);
              const t = e.offset();
              this !== n.element[0] &&
                n.snapElements.push({
                  item: this,
                  width: e.outerWidth(),
                  height: e.outerHeight(),
                  top: t.top,
                  left: t.left,
                });
            });
        },
        drag: function (e, t, n) {
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          const p = n.options;
          const f = p.snapTolerance;
          const g = t.offset.left;
          const m = g + n.helperProportions.width;
          const v = t.offset.top;
          const y = v + n.helperProportions.height;
          for (d = n.snapElements.length - 1; d >= 0; d--) {
            (l =
              (a = n.snapElements[d].left - n.margins.left) +
              n.snapElements[d].width),
              (u =
                (c = n.snapElements[d].top - n.margins.top) +
                n.snapElements[d].height),
              m < a - f ||
              l + f < g ||
              y < c - f ||
              u + f < v ||
              !te.contains(
                n.snapElements[d].item.ownerDocument,
                n.snapElements[d].item,
              )
                ? (n.snapElements[d].snapping &&
                    n.options.snap.release &&
                    n.options.snap.release.call(
                      n.element,
                      e,
                      te.extend(n._uiHash(), {
                        snapItem: n.snapElements[d].item,
                      }),
                    ),
                  (n.snapElements[d].snapping = !1))
                : (p.snapMode !== "inner" &&
                    ((i = Math.abs(c - y) <= f),
                    (r = Math.abs(u - v) <= f),
                    (o = Math.abs(a - m) <= f),
                    (s = Math.abs(l - g) <= f),
                    i &&
                      (t.position.top = n._convertPositionTo("relative", {
                        top: c - n.helperProportions.height,
                        left: 0,
                      }).top),
                    r &&
                      (t.position.top = n._convertPositionTo("relative", {
                        top: u,
                        left: 0,
                      }).top),
                    o &&
                      (t.position.left = n._convertPositionTo("relative", {
                        top: 0,
                        left: a - n.helperProportions.width,
                      }).left),
                    s &&
                      (t.position.left = n._convertPositionTo("relative", {
                        top: 0,
                        left: l,
                      }).left)),
                  (h = i || r || o || s),
                  p.snapMode !== "outer" &&
                    ((i = Math.abs(c - v) <= f),
                    (r = Math.abs(u - y) <= f),
                    (o = Math.abs(a - g) <= f),
                    (s = Math.abs(l - m) <= f),
                    i &&
                      (t.position.top = n._convertPositionTo("relative", {
                        top: c,
                        left: 0,
                      }).top),
                    r &&
                      (t.position.top = n._convertPositionTo("relative", {
                        top: u - n.helperProportions.height,
                        left: 0,
                      }).top),
                    o &&
                      (t.position.left = n._convertPositionTo("relative", {
                        top: 0,
                        left: a,
                      }).left),
                    s &&
                      (t.position.left = n._convertPositionTo("relative", {
                        top: 0,
                        left: l - n.helperProportions.width,
                      }).left)),
                  !n.snapElements[d].snapping &&
                    (i || r || o || s || h) &&
                    n.options.snap.snap &&
                    n.options.snap.snap.call(
                      n.element,
                      e,
                      te.extend(n._uiHash(), {
                        snapItem: n.snapElements[d].item,
                      }),
                    ),
                  (n.snapElements[d].snapping = i || r || o || s || h));
          }
        },
      }),
      te.ui.plugin.add("draggable", "stack", {
        start: function (e, t, n) {
          let i;
          const r = n.options;
          const o = te.makeArray(te(r.stack)).sort(function (e, t) {
            return (
              (parseInt(te(e).css("zIndex"), 10) || 0) -
              (parseInt(te(t).css("zIndex"), 10) || 0)
            );
          });
          o.length &&
            ((i = parseInt(te(o[0]).css("zIndex"), 10) || 0),
            te(o).each(function (e) {
              te(this).css("zIndex", i + e);
            }),
            this.css("zIndex", i + o.length));
        },
      }),
      te.ui.plugin.add("draggable", "zIndex", {
        start: function (e, t, n) {
          const i = te(t.helper);
          const r = n.options;
          i.css("zIndex") && (r._zIndex = i.css("zIndex")),
            i.css("zIndex", r.zIndex);
        },
        stop: function (e, t, n) {
          const i = n.options;
          i._zIndex && te(t.helper).css("zIndex", i._zIndex);
        },
      });
    te.ui.draggable;
    te.widget("ui.droppable", {
      version: "1.13.1",
      widgetEventPrefix: "drop",
      options: {
        accept: "*",
        addClasses: !0,
        greedy: !1,
        scope: "default",
        tolerance: "intersect",
        activate: null,
        deactivate: null,
        drop: null,
        out: null,
        over: null,
      },
      _create: function () {
        let t;
        const e = this.options;
        const n = e.accept;
        (this.isover = !1),
          (this.isout = !0),
          (this.accept =
            typeof n === "function"
              ? n
              : function (e) {
                  return e.is(n);
                }),
          (this.proportions = function (e) {
            if (!arguments.length) {
              return (
                t ||
                (t = {
                  width: this.element[0].offsetWidth,
                  height: this.element[0].offsetHeight,
                })
              );
            }
            t = e;
          }),
          this._addToManager(e.scope),
          e.addClasses && this._addClass("ui-droppable");
      },
      _addToManager: function (e) {
        (te.ui.ddmanager.droppables[e] = te.ui.ddmanager.droppables[e] || []),
          te.ui.ddmanager.droppables[e].push(this);
      },
      _splice: function (e) {
        for (let t = 0; t < e.length; t++) e[t] === this && e.splice(t, 1);
      },
      _destroy: function () {
        const e = te.ui.ddmanager.droppables[this.options.scope];
        this._splice(e);
      },
      _setOption: function (e, t) {
        if (e === "accept") {
          this.accept =
            typeof t === "function"
              ? t
              : function (e) {
                  return e.is(t);
                };
        } else if (e === "scope") {
          const n = te.ui.ddmanager.droppables[this.options.scope];
          this._splice(n), this._addToManager(t);
        }
        this._super(e, t);
      },
      _activate: function (e) {
        const t = te.ui.ddmanager.current;
        this._addActiveClass(), t && this._trigger("activate", e, this.ui(t));
      },
      _deactivate: function (e) {
        const t = te.ui.ddmanager.current;
        this._removeActiveClass(),
          t && this._trigger("deactivate", e, this.ui(t));
      },
      _over: function (e) {
        const t = te.ui.ddmanager.current;
        t &&
          (t.currentItem || t.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], t.currentItem || t.element) &&
          (this._addHoverClass(), this._trigger("over", e, this.ui(t)));
      },
      _out: function (e) {
        const t = te.ui.ddmanager.current;
        t &&
          (t.currentItem || t.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], t.currentItem || t.element) &&
          (this._removeHoverClass(), this._trigger("out", e, this.ui(t)));
      },
      _drop: function (t, e) {
        const n = e || te.ui.ddmanager.current;
        let i = !1;
        return (
          !(!n || (n.currentItem || n.element)[0] === this.element[0]) &&
          (this.element
            .find(":data(ui-droppable)")
            .not(".ui-draggable-dragging")
            .each(function () {
              const e = te(this).droppable("instance");
              if (
                e.options.greedy &&
                !e.options.disabled &&
                e.options.scope === n.options.scope &&
                e.accept.call(e.element[0], n.currentItem || n.element) &&
                te.ui.intersect(
                  n,
                  te.extend(e, { offset: e.element.offset() }),
                  e.options.tolerance,
                  t,
                )
              ) {
                return !(i = !0);
              }
            }),
          !i &&
            !!this.accept.call(this.element[0], n.currentItem || n.element) &&
            (this._removeActiveClass(),
            this._removeHoverClass(),
            this._trigger("drop", t, this.ui(n)),
            this.element))
        );
      },
      ui: function (e) {
        return {
          draggable: e.currentItem || e.element,
          helper: e.helper,
          position: e.position,
          offset: e.positionAbs,
        };
      },
      _addHoverClass: function () {
        this._addClass("ui-droppable-hover");
      },
      _removeHoverClass: function () {
        this._removeClass("ui-droppable-hover");
      },
      _addActiveClass: function () {
        this._addClass("ui-droppable-active");
      },
      _removeActiveClass: function () {
        this._removeClass("ui-droppable-active");
      },
    }),
      (te.ui.intersect = (function () {
        function h(e, t, n) {
          return t <= e && e < t + n;
        }
        return function (e, t, n, i) {
          if (!t.offset) return !1;
          const r =
            (e.positionAbs || e.position.absolute).left + e.margins.left;
          const o = (e.positionAbs || e.position.absolute).top + e.margins.top;
          const s = r + e.helperProportions.width;
          const a = o + e.helperProportions.height;
          const l = t.offset.left;
          const c = t.offset.top;
          const u = l + t.proportions().width;
          const d = c + t.proportions().height;
          switch (n) {
            case "fit":
              return l <= r && s <= u && c <= o && a <= d;
            case "intersect":
              return (
                l < r + e.helperProportions.width / 2 &&
                s - e.helperProportions.width / 2 < u &&
                c < o + e.helperProportions.height / 2 &&
                a - e.helperProportions.height / 2 < d
              );
            case "pointer":
              return (
                h(i.pageY, c, t.proportions().height) &&
                h(i.pageX, l, t.proportions().width)
              );
            case "touch":
              return (
                ((c <= o && o <= d) ||
                  (c <= a && a <= d) ||
                  (o < c && d < a)) &&
                ((l <= r && r <= u) || (l <= s && s <= u) || (r < l && u < s))
              );
            default:
              return !1;
          }
        };
      })()),
      !(te.ui.ddmanager = {
        current: null,
        droppables: { default: [] },
        prepareOffsets: function (e, t) {
          let n;
          let i;
          const r = te.ui.ddmanager.droppables[e.options.scope] || [];
          const o = t ? t.type : null;
          const s = (e.currentItem || e.element)
            .find(":data(ui-droppable)")
            .addBack();
          e: for (n = 0; n < r.length; n++) {
            if (
              !(
                r[n].options.disabled ||
                (e &&
                  !r[n].accept.call(
                    r[n].element[0],
                    e.currentItem || e.element,
                  ))
              )
            ) {
              for (i = 0; i < s.length; i++) {
                if (s[i] === r[n].element[0]) {
                  r[n].proportions().height = 0;
                  continue e;
                }
              }
              (r[n].visible = r[n].element.css("display") !== "none"),
                r[n].visible &&
                  (o === "mousedown" && r[n]._activate.call(r[n], t),
                  (r[n].offset = r[n].element.offset()),
                  r[n].proportions({
                    width: r[n].element[0].offsetWidth,
                    height: r[n].element[0].offsetHeight,
                  }));
            }
          }
        },
        drop: function (e, t) {
          let n = !1;
          return (
            te.each(
              (te.ui.ddmanager.droppables[e.options.scope] || []).slice(),
              function () {
                this.options &&
                  (!this.options.disabled &&
                    this.visible &&
                    te.ui.intersect(e, this, this.options.tolerance, t) &&
                    (n = this._drop.call(this, t) || n),
                  !this.options.disabled &&
                    this.visible &&
                    this.accept.call(
                      this.element[0],
                      e.currentItem || e.element,
                    ) &&
                    ((this.isout = !0),
                    (this.isover = !1),
                    this._deactivate.call(this, t)));
              },
            ),
            n
          );
        },
        dragStart: function (e, t) {
          e.element.parentsUntil("body").on("scroll.droppable", function () {
            e.options.refreshPositions || te.ui.ddmanager.prepareOffsets(e, t);
          });
        },
        drag: function (o, s) {
          o.options.refreshPositions && te.ui.ddmanager.prepareOffsets(o, s),
            te.each(
              te.ui.ddmanager.droppables[o.options.scope] || [],
              function () {
                if (
                  !this.options.disabled &&
                  !this.greedyChild &&
                  this.visible
                ) {
                  let e;
                  let t;
                  let n;
                  const i = te.ui.intersect(o, this, this.options.tolerance, s);
                  const r =
                    !i && this.isover
                      ? "isout"
                      : i && !this.isover
                        ? "isover"
                        : null;
                  r &&
                    (this.options.greedy &&
                      ((t = this.options.scope),
                      (n = this.element
                        .parents(":data(ui-droppable)")
                        .filter(function () {
                          return (
                            te(this).droppable("instance").options.scope === t
                          );
                        })).length &&
                        ((e = te(n[0]).droppable("instance")).greedyChild =
                          r === "isover")),
                    e &&
                      r === "isover" &&
                      ((e.isover = !1), (e.isout = !0), e._out.call(e, s)),
                    (this[r] = !0),
                    (this[r === "isout" ? "isover" : "isout"] = !1),
                    this[r === "isover" ? "_over" : "_out"].call(this, s),
                    e &&
                      r === "isout" &&
                      ((e.isout = !1), (e.isover = !0), e._over.call(e, s)));
                }
              },
            );
        },
        dragStop: function (e, t) {
          e.element.parentsUntil("body").off("scroll.droppable"),
            e.options.refreshPositions || te.ui.ddmanager.prepareOffsets(e, t);
        },
      }) !== te.uiBackCompat &&
        te.widget("ui.droppable", te.ui.droppable, {
          options: { hoverClass: !1, activeClass: !1 },
          _addActiveClass: function () {
            this._super(),
              this.options.activeClass &&
                this.element.addClass(this.options.activeClass);
          },
          _removeActiveClass: function () {
            this._super(),
              this.options.activeClass &&
                this.element.removeClass(this.options.activeClass);
          },
          _addHoverClass: function () {
            this._super(),
              this.options.hoverClass &&
                this.element.addClass(this.options.hoverClass);
          },
          _removeHoverClass: function () {
            this._super(),
              this.options.hoverClass &&
                this.element.removeClass(this.options.hoverClass);
          },
        });
    te.ui.droppable;
    te.widget("ui.resizable", te.ui.mouse, {
      version: "1.13.1",
      widgetEventPrefix: "resize",
      options: {
        alsoResize: !1,
        animate: !1,
        animateDuration: "slow",
        animateEasing: "swing",
        aspectRatio: !1,
        autoHide: !1,
        classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
        containment: !1,
        ghost: !1,
        grid: !1,
        handles: "e,s,se",
        helper: !1,
        maxHeight: null,
        maxWidth: null,
        minHeight: 10,
        minWidth: 10,
        zIndex: 90,
        resize: null,
        start: null,
        stop: null,
      },
      _num: function (e) {
        return parseFloat(e) || 0;
      },
      _isNumber: function (e) {
        return !isNaN(parseFloat(e));
      },
      _hasScroll: function (e, t) {
        if (te(e).css("overflow") === "hidden") return !1;
        const n = t && t === "left" ? "scrollLeft" : "scrollTop";
        let i = !1;
        if (e[n] > 0) return !0;
        try {
          (e[n] = 1), (i = e[n] > 0), (e[n] = 0);
        } catch (r) {}
        return i;
      },
      _create: function () {
        let e;
        const t = this.options;
        const n = this;
        this._addClass("ui-resizable"),
          te.extend(this, {
            _aspectRatio: !!t.aspectRatio,
            aspectRatio: t.aspectRatio,
            originalElement: this.element,
            _proportionallyResizeElements: [],
            _helper:
              t.helper || t.ghost || t.animate
                ? t.helper || "ui-resizable-helper"
                : null,
          }),
          this.element[0].nodeName.match(
            /^(canvas|textarea|input|select|button|img)$/i,
          ) &&
            (this.element.wrap(
              te("<div class='ui-wrapper'></div>").css({
                overflow: "hidden",
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left"),
              }),
            ),
            (this.element = this.element
              .parent()
              .data("ui-resizable", this.element.resizable("instance"))),
            (this.elementIsWrapper = !0),
            (e = {
              marginTop: this.originalElement.css("marginTop"),
              marginRight: this.originalElement.css("marginRight"),
              marginBottom: this.originalElement.css("marginBottom"),
              marginLeft: this.originalElement.css("marginLeft"),
            }),
            this.element.css(e),
            this.originalElement.css("margin", 0),
            (this.originalResizeStyle = this.originalElement.css("resize")),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(
              this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block",
              }),
            ),
            this.originalElement.css(e),
            this._proportionallyResize()),
          this._setupHandles(),
          t.autoHide &&
            te(this.element)
              .on("mouseenter", function () {
                t.disabled ||
                  (n._removeClass("ui-resizable-autohide"), n._handles.show());
              })
              .on("mouseleave", function () {
                t.disabled ||
                  n.resizing ||
                  (n._addClass("ui-resizable-autohide"), n._handles.hide());
              }),
          this._mouseInit();
      },
      _destroy: function () {
        this._mouseDestroy(), this._addedHandles.remove();
        let e;
        const t = function (e) {
          te(e)
            .removeData("resizable")
            .removeData("ui-resizable")
            .off(".resizable");
        };
        return (
          this.elementIsWrapper &&
            (t(this.element),
            (e = this.element),
            this.originalElement
              .css({
                position: e.css("position"),
                width: e.outerWidth(),
                height: e.outerHeight(),
                top: e.css("top"),
                left: e.css("left"),
              })
              .insertAfter(e),
            e.remove()),
          this.originalElement.css("resize", this.originalResizeStyle),
          t(this.originalElement),
          this
        );
      },
      _setOption: function (e, t) {
        switch ((this._super(e, t), e)) {
          case "handles":
            this._removeHandles(), this._setupHandles();
            break;
          case "aspectRatio":
            this._aspectRatio = !!t;
        }
      },
      _setupHandles: function () {
        let e;
        let t;
        let n;
        let i;
        let r;
        const o = this.options;
        const s = this;
        if (
          ((this.handles =
            o.handles ||
            (te(".ui-resizable-handle", this.element).length
              ? {
                  n: ".ui-resizable-n",
                  e: ".ui-resizable-e",
                  s: ".ui-resizable-s",
                  w: ".ui-resizable-w",
                  se: ".ui-resizable-se",
                  sw: ".ui-resizable-sw",
                  ne: ".ui-resizable-ne",
                  nw: ".ui-resizable-nw",
                }
              : "e,s,se")),
          (this._handles = te()),
          (this._addedHandles = te()),
          this.handles.constructor === String)
        ) {
          for (
            this.handles === "all" && (this.handles = "n,e,s,w,se,sw,ne,nw"),
              n = this.handles.split(","),
              this.handles = {},
              t = 0;
            t < n.length;
            t++
          ) {
            (i = "ui-resizable-" + (e = String.prototype.trim.call(n[t]))),
              (r = te("<div>")),
              this._addClass(r, "ui-resizable-handle " + i),
              r.css({ zIndex: o.zIndex }),
              (this.handles[e] = ".ui-resizable-" + e),
              this.element.children(this.handles[e]).length ||
                (this.element.append(r),
                (this._addedHandles = this._addedHandles.add(r)));
          }
        }
        (this._renderAxis = function (e) {
          let t, n, i, r;
          for (t in ((e = e || this.element), this.handles)) {
            this.handles[t].constructor === String
              ? (this.handles[t] = this.element
                  .children(this.handles[t])
                  .first()
                  .show())
              : (this.handles[t].jquery || this.handles[t].nodeType) &&
                ((this.handles[t] = te(this.handles[t])),
                this._on(this.handles[t], { mousedown: s._mouseDown })),
              this.elementIsWrapper &&
                this.originalElement[0].nodeName.match(
                  /^(textarea|input|select|button)$/i,
                ) &&
                ((n = te(this.handles[t], this.element)),
                (r = /sw|ne|nw|se|n|s/.test(t)
                  ? n.outerHeight()
                  : n.outerWidth()),
                (i = [
                  "padding",
                  /ne|nw|n/.test(t)
                    ? "Top"
                    : /se|sw|s/.test(t)
                      ? "Bottom"
                      : /^e$/.test(t)
                        ? "Right"
                        : "Left",
                ].join("")),
                e.css(i, r),
                this._proportionallyResize()),
              (this._handles = this._handles.add(this.handles[t]));
          }
        }),
          this._renderAxis(this.element),
          (this._handles = this._handles.add(
            this.element.find(".ui-resizable-handle"),
          )),
          this._handles.disableSelection(),
          this._handles.on("mouseover", function () {
            s.resizing ||
              (this.className &&
                (r = this.className.match(
                  /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i,
                )),
              (s.axis = r && r[1] ? r[1] : "se"));
          }),
          o.autoHide &&
            (this._handles.hide(), this._addClass("ui-resizable-autohide"));
      },
      _removeHandles: function () {
        this._addedHandles.remove();
      },
      _mouseCapture: function (e) {
        let t;
        let n;
        let i = !1;
        for (t in this.handles) {
          ((n = te(this.handles[t])[0]) === e.target ||
            te.contains(n, e.target)) &&
            (i = !0);
        }
        return !this.options.disabled && i;
      },
      _mouseStart: function (e) {
        let t;
        let n;
        let i;
        const r = this.options;
        const o = this.element;
        return (
          (this.resizing = !0),
          this._renderProxy(),
          (t = this._num(this.helper.css("left"))),
          (n = this._num(this.helper.css("top"))),
          r.containment &&
            ((t += te(r.containment).scrollLeft() || 0),
            (n += te(r.containment).scrollTop() || 0)),
          (this.offset = this.helper.offset()),
          (this.position = { left: t, top: n }),
          (this.size = this._helper
            ? { width: this.helper.width(), height: this.helper.height() }
            : { width: o.width(), height: o.height() }),
          (this.originalSize = this._helper
            ? { width: o.outerWidth(), height: o.outerHeight() }
            : { width: o.width(), height: o.height() }),
          (this.sizeDiff = {
            width: o.outerWidth() - o.width(),
            height: o.outerHeight() - o.height(),
          }),
          (this.originalPosition = { left: t, top: n }),
          (this.originalMousePosition = { left: e.pageX, top: e.pageY }),
          (this.aspectRatio =
            typeof r.aspectRatio === "number"
              ? r.aspectRatio
              : this.originalSize.width / this.originalSize.height || 1),
          (i = te(".ui-resizable-" + this.axis).css("cursor")),
          te("body").css("cursor", i === "auto" ? this.axis + "-resize" : i),
          this._addClass("ui-resizable-resizing"),
          this._propagate("start", e),
          !0
        );
      },
      _mouseDrag: function (e) {
        let t;
        let n;
        const i = this.originalMousePosition;
        const r = this.axis;
        const o = e.pageX - i.left || 0;
        const s = e.pageY - i.top || 0;
        const a = this._change[r];
        return (
          this._updatePrevProperties(),
          a &&
            ((t = a.apply(this, [e, o, s])),
            this._updateVirtualBoundaries(e.shiftKey),
            (this._aspectRatio || e.shiftKey) && (t = this._updateRatio(t, e)),
            (t = this._respectSize(t, e)),
            this._updateCache(t),
            this._propagate("resize", e),
            (n = this._applyChanges()),
            !this._helper &&
              this._proportionallyResizeElements.length &&
              this._proportionallyResize(),
            te.isEmptyObject(n) ||
              (this._updatePrevProperties(),
              this._trigger("resize", e, this.ui()),
              this._applyChanges())),
          !1
        );
      },
      _mouseStop: function (e) {
        this.resizing = !1;
        let t;
        let n;
        let i;
        let r;
        let o;
        let s;
        let a;
        const l = this.options;
        const c = this;
        return (
          this._helper &&
            ((i =
              (n =
                (t = this._proportionallyResizeElements).length &&
                /textarea/i.test(t[0].nodeName)) &&
              this._hasScroll(t[0], "left")
                ? 0
                : c.sizeDiff.height),
            (r = n ? 0 : c.sizeDiff.width),
            (o = {
              width: c.helper.width() - r,
              height: c.helper.height() - i,
            }),
            (s =
              parseFloat(c.element.css("left")) +
                (c.position.left - c.originalPosition.left) || null),
            (a =
              parseFloat(c.element.css("top")) +
                (c.position.top - c.originalPosition.top) || null),
            l.animate || this.element.css(te.extend(o, { top: a, left: s })),
            c.helper.height(c.size.height),
            c.helper.width(c.size.width),
            this._helper && !l.animate && this._proportionallyResize()),
          te("body").css("cursor", "auto"),
          this._removeClass("ui-resizable-resizing"),
          this._propagate("stop", e),
          this._helper && this.helper.remove(),
          !1
        );
      },
      _updatePrevProperties: function () {
        (this.prevPosition = {
          top: this.position.top,
          left: this.position.left,
        }),
          (this.prevSize = {
            width: this.size.width,
            height: this.size.height,
          });
      },
      _applyChanges: function () {
        const e = {};
        return (
          this.position.top !== this.prevPosition.top &&
            (e.top = this.position.top + "px"),
          this.position.left !== this.prevPosition.left &&
            (e.left = this.position.left + "px"),
          this.size.width !== this.prevSize.width &&
            (e.width = this.size.width + "px"),
          this.size.height !== this.prevSize.height &&
            (e.height = this.size.height + "px"),
          this.helper.css(e),
          e
        );
      },
      _updateVirtualBoundaries: function (e) {
        let t;
        let n;
        let i;
        let r;
        let o;
        const s = this.options;
        (o = {
          minWidth: this._isNumber(s.minWidth) ? s.minWidth : 0,
          maxWidth: this._isNumber(s.maxWidth) ? s.maxWidth : Infinity,
          minHeight: this._isNumber(s.minHeight) ? s.minHeight : 0,
          maxHeight: this._isNumber(s.maxHeight) ? s.maxHeight : Infinity,
        }),
          (this._aspectRatio || e) &&
            ((t = o.minHeight * this.aspectRatio),
            (i = o.minWidth / this.aspectRatio),
            (n = o.maxHeight * this.aspectRatio),
            (r = o.maxWidth / this.aspectRatio),
            t > o.minWidth && (o.minWidth = t),
            i > o.minHeight && (o.minHeight = i),
            n < o.maxWidth && (o.maxWidth = n),
            r < o.maxHeight && (o.maxHeight = r)),
          (this._vBoundaries = o);
      },
      _updateCache: function (e) {
        (this.offset = this.helper.offset()),
          this._isNumber(e.left) && (this.position.left = e.left),
          this._isNumber(e.top) && (this.position.top = e.top),
          this._isNumber(e.height) && (this.size.height = e.height),
          this._isNumber(e.width) && (this.size.width = e.width);
      },
      _updateRatio: function (e) {
        const t = this.position;
        const n = this.size;
        const i = this.axis;
        return (
          this._isNumber(e.height)
            ? (e.width = e.height * this.aspectRatio)
            : this._isNumber(e.width) &&
              (e.height = e.width / this.aspectRatio),
          i === "sw" &&
            ((e.left = t.left + (n.width - e.width)), (e.top = null)),
          i === "nw" &&
            ((e.top = t.top + (n.height - e.height)),
            (e.left = t.left + (n.width - e.width))),
          e
        );
      },
      _respectSize: function (e) {
        const t = this._vBoundaries;
        const n = this.axis;
        const i = this._isNumber(e.width) && t.maxWidth && t.maxWidth < e.width;
        const r =
          this._isNumber(e.height) && t.maxHeight && t.maxHeight < e.height;
        const o = this._isNumber(e.width) && t.minWidth && t.minWidth > e.width;
        const s =
          this._isNumber(e.height) && t.minHeight && t.minHeight > e.height;
        const a = this.originalPosition.left + this.originalSize.width;
        const l = this.originalPosition.top + this.originalSize.height;
        const c = /sw|nw|w/.test(n);
        const u = /nw|ne|n/.test(n);
        return (
          o && (e.width = t.minWidth),
          s && (e.height = t.minHeight),
          i && (e.width = t.maxWidth),
          r && (e.height = t.maxHeight),
          o && c && (e.left = a - t.minWidth),
          i && c && (e.left = a - t.maxWidth),
          s && u && (e.top = l - t.minHeight),
          r && u && (e.top = l - t.maxHeight),
          e.width || e.height || e.left || !e.top
            ? e.width || e.height || e.top || !e.left || (e.left = null)
            : (e.top = null),
          e
        );
      },
      _getPaddingPlusBorderDimensions: function (e) {
        for (
          var t = 0,
            n = [],
            i = [
              e.css("borderTopWidth"),
              e.css("borderRightWidth"),
              e.css("borderBottomWidth"),
              e.css("borderLeftWidth"),
            ],
            r = [
              e.css("paddingTop"),
              e.css("paddingRight"),
              e.css("paddingBottom"),
              e.css("paddingLeft"),
            ];
          t < 4;
          t++
        ) {
          (n[t] = parseFloat(i[t]) || 0), (n[t] += parseFloat(r[t]) || 0);
        }
        return { height: n[0] + n[2], width: n[1] + n[3] };
      },
      _proportionallyResize: function () {
        if (this._proportionallyResizeElements.length) {
          for (
            var e, t = 0, n = this.helper || this.element;
            t < this._proportionallyResizeElements.length;
            t++
          ) {
            (e = this._proportionallyResizeElements[t]),
              this.outerDimensions ||
                (this.outerDimensions =
                  this._getPaddingPlusBorderDimensions(e)),
              e.css({
                height: n.height() - this.outerDimensions.height || 0,
                width: n.width() - this.outerDimensions.width || 0,
              });
          }
        }
      },
      _renderProxy: function () {
        const e = this.element;
        const t = this.options;
        (this.elementOffset = e.offset()),
          this._helper
            ? ((this.helper =
                this.helper || te("<div></div>").css({ overflow: "hidden" })),
              this._addClass(this.helper, this._helper),
              this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++t.zIndex,
              }),
              this.helper.appendTo("body").disableSelection())
            : (this.helper = this.element);
      },
      _change: {
        e: function (e, t) {
          return { width: this.originalSize.width + t };
        },
        w: function (e, t) {
          const n = this.originalSize;
          return { left: this.originalPosition.left + t, width: n.width - t };
        },
        n: function (e, t, n) {
          const i = this.originalSize;
          return { top: this.originalPosition.top + n, height: i.height - n };
        },
        s: function (e, t, n) {
          return { height: this.originalSize.height + n };
        },
        se: function (e, t, n) {
          return te.extend(
            this._change.s.apply(this, arguments),
            this._change.e.apply(this, [e, t, n]),
          );
        },
        sw: function (e, t, n) {
          return te.extend(
            this._change.s.apply(this, arguments),
            this._change.w.apply(this, [e, t, n]),
          );
        },
        ne: function (e, t, n) {
          return te.extend(
            this._change.n.apply(this, arguments),
            this._change.e.apply(this, [e, t, n]),
          );
        },
        nw: function (e, t, n) {
          return te.extend(
            this._change.n.apply(this, arguments),
            this._change.w.apply(this, [e, t, n]),
          );
        },
      },
      _propagate: function (e, t) {
        te.ui.plugin.call(this, e, [t, this.ui()]),
          e !== "resize" && this._trigger(e, t, this.ui());
      },
      plugins: {},
      ui: function () {
        return {
          originalElement: this.originalElement,
          element: this.element,
          helper: this.helper,
          position: this.position,
          size: this.size,
          originalSize: this.originalSize,
          originalPosition: this.originalPosition,
        };
      },
    }),
      te.ui.plugin.add("resizable", "animate", {
        stop: function (t) {
          const n = te(this).resizable("instance");
          const e = n.options;
          const i = n._proportionallyResizeElements;
          const r = i.length && /textarea/i.test(i[0].nodeName);
          const o = r && n._hasScroll(i[0], "left") ? 0 : n.sizeDiff.height;
          const s = r ? 0 : n.sizeDiff.width;
          const a = { width: n.size.width - s, height: n.size.height - o };
          const l =
            parseFloat(n.element.css("left")) +
              (n.position.left - n.originalPosition.left) || null;
          const c =
            parseFloat(n.element.css("top")) +
              (n.position.top - n.originalPosition.top) || null;
          n.element.animate(te.extend(a, c && l ? { top: c, left: l } : {}), {
            duration: e.animateDuration,
            easing: e.animateEasing,
            step: function () {
              const e = {
                width: parseFloat(n.element.css("width")),
                height: parseFloat(n.element.css("height")),
                top: parseFloat(n.element.css("top")),
                left: parseFloat(n.element.css("left")),
              };
              i &&
                i.length &&
                te(i[0]).css({ width: e.width, height: e.height }),
                n._updateCache(e),
                n._propagate("resize", t);
            },
          });
        },
      }),
      te.ui.plugin.add("resizable", "containment", {
        start: function () {
          let n;
          let i;
          let e;
          let t;
          let r;
          let o;
          let s;
          const a = te(this).resizable("instance");
          const l = a.options;
          const c = a.element;
          const u = l.containment;
          const d =
            u instanceof te
              ? u.get(0)
              : /parent/.test(u)
                ? c.parent().get(0)
                : u;
          d &&
            ((a.containerElement = te(d)),
            /document/.test(u) || u === document
              ? ((a.containerOffset = { left: 0, top: 0 }),
                (a.containerPosition = { left: 0, top: 0 }),
                (a.parentData = {
                  element: te(document),
                  left: 0,
                  top: 0,
                  width: te(document).width(),
                  height:
                    te(document).height() ||
                    document.body.parentNode.scrollHeight,
                }))
              : ((n = te(d)),
                (i = []),
                te(["Top", "Right", "Left", "Bottom"]).each(function (e, t) {
                  i[e] = a._num(n.css("padding" + t));
                }),
                (a.containerOffset = n.offset()),
                (a.containerPosition = n.position()),
                (a.containerSize = {
                  height: n.innerHeight() - i[3],
                  width: n.innerWidth() - i[1],
                }),
                (e = a.containerOffset),
                (t = a.containerSize.height),
                (r = a.containerSize.width),
                (o = a._hasScroll(d, "left") ? d.scrollWidth : r),
                (s = a._hasScroll(d) ? d.scrollHeight : t),
                (a.parentData = {
                  element: d,
                  left: e.left,
                  top: e.top,
                  width: o,
                  height: s,
                })));
        },
        resize: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = te(this).resizable("instance");
          const s = o.options;
          const a = o.containerOffset;
          const l = o.position;
          const c = o._aspectRatio || e.shiftKey;
          let u = { top: 0, left: 0 };
          const d = o.containerElement;
          let h = !0;
          d[0] !== document && /static/.test(d.css("position")) && (u = a),
            l.left < (o._helper ? a.left : 0) &&
              ((o.size.width =
                o.size.width +
                (o._helper
                  ? o.position.left - a.left
                  : o.position.left - u.left)),
              c && ((o.size.height = o.size.width / o.aspectRatio), (h = !1)),
              (o.position.left = s.helper ? a.left : 0)),
            l.top < (o._helper ? a.top : 0) &&
              ((o.size.height =
                o.size.height +
                (o._helper ? o.position.top - a.top : o.position.top)),
              c && ((o.size.width = o.size.height * o.aspectRatio), (h = !1)),
              (o.position.top = o._helper ? a.top : 0)),
            (i = o.containerElement.get(0) === o.element.parent().get(0)),
            (r = /relative|absolute/.test(o.containerElement.css("position"))),
            i && r
              ? ((o.offset.left = o.parentData.left + o.position.left),
                (o.offset.top = o.parentData.top + o.position.top))
              : ((o.offset.left = o.element.offset().left),
                (o.offset.top = o.element.offset().top)),
            (t = Math.abs(
              o.sizeDiff.width +
                (o._helper ? o.offset.left - u.left : o.offset.left - a.left),
            )),
            (n = Math.abs(
              o.sizeDiff.height +
                (o._helper ? o.offset.top - u.top : o.offset.top - a.top),
            )),
            t + o.size.width >= o.parentData.width &&
              ((o.size.width = o.parentData.width - t),
              c && ((o.size.height = o.size.width / o.aspectRatio), (h = !1))),
            n + o.size.height >= o.parentData.height &&
              ((o.size.height = o.parentData.height - n),
              c && ((o.size.width = o.size.height * o.aspectRatio), (h = !1))),
            h ||
              ((o.position.left = o.prevPosition.left),
              (o.position.top = o.prevPosition.top),
              (o.size.width = o.prevSize.width),
              (o.size.height = o.prevSize.height));
        },
        stop: function () {
          const e = te(this).resizable("instance");
          const t = e.options;
          const n = e.containerOffset;
          const i = e.containerPosition;
          const r = e.containerElement;
          const o = te(e.helper);
          const s = o.offset();
          const a = o.outerWidth() - e.sizeDiff.width;
          const l = o.outerHeight() - e.sizeDiff.height;
          e._helper &&
            !t.animate &&
            /relative/.test(r.css("position")) &&
            te(this).css({
              left: s.left - i.left - n.left,
              width: a,
              height: l,
            }),
            e._helper &&
              !t.animate &&
              /static/.test(r.css("position")) &&
              te(this).css({
                left: s.left - i.left - n.left,
                width: a,
                height: l,
              });
        },
      }),
      te.ui.plugin.add("resizable", "alsoResize", {
        start: function () {
          const e = te(this).resizable("instance").options;
          te(e.alsoResize).each(function () {
            const e = te(this);
            e.data("ui-resizable-alsoresize", {
              width: parseFloat(e.width()),
              height: parseFloat(e.height()),
              left: parseFloat(e.css("left")),
              top: parseFloat(e.css("top")),
            });
          });
        },
        resize: function (e, n) {
          const t = te(this).resizable("instance");
          const i = t.options;
          const r = t.originalSize;
          const o = t.originalPosition;
          const s = {
            height: t.size.height - r.height || 0,
            width: t.size.width - r.width || 0,
            top: t.position.top - o.top || 0,
            left: t.position.left - o.left || 0,
          };
          te(i.alsoResize).each(function () {
            const e = te(this);
            const i = te(this).data("ui-resizable-alsoresize");
            const r = {};
            const t = e.parents(n.originalElement[0]).length
              ? ["width", "height"]
              : ["width", "height", "top", "left"];
            te.each(t, function (e, t) {
              const n = (i[t] || 0) + (s[t] || 0);
              n && n >= 0 && (r[t] = n || null);
            }),
              e.css(r);
          });
        },
        stop: function () {
          te(this).removeData("ui-resizable-alsoresize");
        },
      }),
      te.ui.plugin.add("resizable", "ghost", {
        start: function () {
          const e = te(this).resizable("instance");
          const t = e.size;
          (e.ghost = e.originalElement.clone()),
            e.ghost.css({
              opacity: 0.25,
              display: "block",
              position: "relative",
              height: t.height,
              width: t.width,
              margin: 0,
              left: 0,
              top: 0,
            }),
            e._addClass(e.ghost, "ui-resizable-ghost"),
            !1 !== te.uiBackCompat &&
              typeof e.options.ghost === "string" &&
              e.ghost.addClass(this.options.ghost),
            e.ghost.appendTo(e.helper);
        },
        resize: function () {
          const e = te(this).resizable("instance");
          e.ghost &&
            e.ghost.css({
              position: "relative",
              height: e.size.height,
              width: e.size.width,
            });
        },
        stop: function () {
          const e = te(this).resizable("instance");
          e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0));
        },
      }),
      te.ui.plugin.add("resizable", "grid", {
        resize: function () {
          let e;
          const t = te(this).resizable("instance");
          const n = t.options;
          const i = t.size;
          const r = t.originalSize;
          const o = t.originalPosition;
          const s = t.axis;
          const a = typeof n.grid === "number" ? [n.grid, n.grid] : n.grid;
          const l = a[0] || 1;
          const c = a[1] || 1;
          const u = Math.round((i.width - r.width) / l) * l;
          const d = Math.round((i.height - r.height) / c) * c;
          let h = r.width + u;
          let p = r.height + d;
          const f = n.maxWidth && n.maxWidth < h;
          const g = n.maxHeight && n.maxHeight < p;
          const m = n.minWidth && n.minWidth > h;
          const v = n.minHeight && n.minHeight > p;
          (n.grid = a),
            m && (h += l),
            v && (p += c),
            f && (h -= l),
            g && (p -= c),
            /^(se|s|e)$/.test(s)
              ? ((t.size.width = h), (t.size.height = p))
              : /^(ne)$/.test(s)
                ? ((t.size.width = h),
                  (t.size.height = p),
                  (t.position.top = o.top - d))
                : /^(sw)$/.test(s)
                  ? ((t.size.width = h),
                    (t.size.height = p),
                    (t.position.left = o.left - u))
                  : ((p - c <= 0 || h - l <= 0) &&
                      (e = t._getPaddingPlusBorderDimensions(this)),
                    p - c > 0
                      ? ((t.size.height = p), (t.position.top = o.top - d))
                      : ((p = c - e.height),
                        (t.size.height = p),
                        (t.position.top = o.top + r.height - p)),
                    h - l > 0
                      ? ((t.size.width = h), (t.position.left = o.left - u))
                      : ((h = l - e.width),
                        (t.size.width = h),
                        (t.position.left = o.left + r.width - h)));
        },
      });
    te.ui.resizable,
      te.widget("ui.selectable", te.ui.mouse, {
        version: "1.13.1",
        options: {
          appendTo: "body",
          autoRefresh: !0,
          distance: 0,
          filter: "*",
          tolerance: "touch",
          selected: null,
          selecting: null,
          start: null,
          stop: null,
          unselected: null,
          unselecting: null,
        },
        _create: function () {
          const i = this;
          this._addClass("ui-selectable"),
            (this.dragged = !1),
            (this.refresh = function () {
              (i.elementPos = te(i.element[0]).offset()),
                (i.selectees = te(i.options.filter, i.element[0])),
                i._addClass(i.selectees, "ui-selectee"),
                i.selectees.each(function () {
                  const e = te(this);
                  const t = e.offset();
                  const n = {
                    left: t.left - i.elementPos.left,
                    top: t.top - i.elementPos.top,
                  };
                  te.data(this, "selectable-item", {
                    element: this,
                    $element: e,
                    left: n.left,
                    top: n.top,
                    right: n.left + e.outerWidth(),
                    bottom: n.top + e.outerHeight(),
                    startselected: !1,
                    selected: e.hasClass("ui-selected"),
                    selecting: e.hasClass("ui-selecting"),
                    unselecting: e.hasClass("ui-unselecting"),
                  });
                });
            }),
            this.refresh(),
            this._mouseInit(),
            (this.helper = te("<div>")),
            this._addClass(this.helper, "ui-selectable-helper");
        },
        _destroy: function () {
          this.selectees.removeData("selectable-item"), this._mouseDestroy();
        },
        _mouseStart: function (n) {
          const i = this;
          const e = this.options;
          (this.opos = [n.pageX, n.pageY]),
            (this.elementPos = te(this.element[0]).offset()),
            this.options.disabled ||
              ((this.selectees = te(e.filter, this.element[0])),
              this._trigger("start", n),
              te(e.appendTo).append(this.helper),
              this.helper.css({
                left: n.pageX,
                top: n.pageY,
                width: 0,
                height: 0,
              }),
              e.autoRefresh && this.refresh(),
              this.selectees.filter(".ui-selected").each(function () {
                const e = te.data(this, "selectable-item");
                (e.startselected = !0),
                  n.metaKey ||
                    n.ctrlKey ||
                    (i._removeClass(e.$element, "ui-selected"),
                    (e.selected = !1),
                    i._addClass(e.$element, "ui-unselecting"),
                    (e.unselecting = !0),
                    i._trigger("unselecting", n, { unselecting: e.element }));
              }),
              te(n.target)
                .parents()
                .addBack()
                .each(function () {
                  let e;
                  const t = te.data(this, "selectable-item");
                  if (t) {
                    return (
                      (e =
                        (!n.metaKey && !n.ctrlKey) ||
                        !t.$element.hasClass("ui-selected")),
                      i
                        ._removeClass(
                          t.$element,
                          e ? "ui-unselecting" : "ui-selected",
                        )
                        ._addClass(
                          t.$element,
                          e ? "ui-selecting" : "ui-unselecting",
                        ),
                      (t.unselecting = !e),
                      (t.selecting = e),
                      (t.selected = e)
                        ? i._trigger("selecting", n, { selecting: t.element })
                        : i._trigger("unselecting", n, {
                            unselecting: t.element,
                          }),
                      !1
                    );
                  }
                }));
        },
        _mouseDrag: function (i) {
          if (((this.dragged = !0), !this.options.disabled)) {
            let e;
            const r = this;
            const o = this.options;
            let s = this.opos[0];
            let a = this.opos[1];
            let l = i.pageX;
            let c = i.pageY;
            return (
              l < s && ((e = l), (l = s), (s = e)),
              c < a && ((e = c), (c = a), (a = e)),
              this.helper.css({ left: s, top: a, width: l - s, height: c - a }),
              this.selectees.each(function () {
                const e = te.data(this, "selectable-item");
                let t = !1;
                const n = {};
                e &&
                  e.element !== r.element[0] &&
                  ((n.left = e.left + r.elementPos.left),
                  (n.right = e.right + r.elementPos.left),
                  (n.top = e.top + r.elementPos.top),
                  (n.bottom = e.bottom + r.elementPos.top),
                  o.tolerance === "touch"
                    ? (t = !(
                        n.left > l ||
                        n.right < s ||
                        n.top > c ||
                        n.bottom < a
                      ))
                    : o.tolerance === "fit" &&
                      (t =
                        n.left > s && n.right < l && n.top > a && n.bottom < c),
                  t
                    ? (e.selected &&
                        (r._removeClass(e.$element, "ui-selected"),
                        (e.selected = !1)),
                      e.unselecting &&
                        (r._removeClass(e.$element, "ui-unselecting"),
                        (e.unselecting = !1)),
                      e.selecting ||
                        (r._addClass(e.$element, "ui-selecting"),
                        (e.selecting = !0),
                        r._trigger("selecting", i, { selecting: e.element })))
                    : (e.selecting &&
                        ((i.metaKey || i.ctrlKey) && e.startselected
                          ? (r._removeClass(e.$element, "ui-selecting"),
                            (e.selecting = !1),
                            r._addClass(e.$element, "ui-selected"),
                            (e.selected = !0))
                          : (r._removeClass(e.$element, "ui-selecting"),
                            (e.selecting = !1),
                            e.startselected &&
                              (r._addClass(e.$element, "ui-unselecting"),
                              (e.unselecting = !0)),
                            r._trigger("unselecting", i, {
                              unselecting: e.element,
                            }))),
                      e.selected &&
                        (i.metaKey ||
                          i.ctrlKey ||
                          e.startselected ||
                          (r._removeClass(e.$element, "ui-selected"),
                          (e.selected = !1),
                          r._addClass(e.$element, "ui-unselecting"),
                          (e.unselecting = !0),
                          r._trigger("unselecting", i, {
                            unselecting: e.element,
                          })))));
              }),
              !1
            );
          }
        },
        _mouseStop: function (t) {
          const n = this;
          return (
            (this.dragged = !1),
            te(".ui-unselecting", this.element[0]).each(function () {
              const e = te.data(this, "selectable-item");
              n._removeClass(e.$element, "ui-unselecting"),
                (e.unselecting = !1),
                (e.startselected = !1),
                n._trigger("unselected", t, { unselected: e.element });
            }),
            te(".ui-selecting", this.element[0]).each(function () {
              const e = te.data(this, "selectable-item");
              n
                ._removeClass(e.$element, "ui-selecting")
                ._addClass(e.$element, "ui-selected"),
                (e.selecting = !1),
                (e.selected = !0),
                (e.startselected = !0),
                n._trigger("selected", t, { selected: e.element });
            }),
            this._trigger("stop", t),
            this.helper.remove(),
            !1
          );
        },
      }),
      te.widget("ui.sortable", te.ui.mouse, {
        version: "1.13.1",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
          appendTo: "parent",
          axis: !1,
          connectWith: !1,
          containment: !1,
          cursor: "auto",
          cursorAt: !1,
          dropOnEmpty: !0,
          forcePlaceholderSize: !1,
          forceHelperSize: !1,
          grid: !1,
          handle: !1,
          helper: "original",
          items: "> *",
          opacity: !1,
          placeholder: !1,
          revert: !1,
          scroll: !0,
          scrollSensitivity: 20,
          scrollSpeed: 20,
          scope: "default",
          tolerance: "intersect",
          zIndex: 1e3,
          activate: null,
          beforeStop: null,
          change: null,
          deactivate: null,
          out: null,
          over: null,
          receive: null,
          remove: null,
          sort: null,
          start: null,
          stop: null,
          update: null,
        },
        _isOverAxis: function (e, t, n) {
          return t <= e && e < t + n;
        },
        _isFloating: function (e) {
          return (
            /left|right/.test(e.css("float")) ||
            /inline|table-cell/.test(e.css("display"))
          );
        },
        _create: function () {
          (this.containerCache = {}),
            this._addClass("ui-sortable"),
            this.refresh(),
            (this.offset = this.element.offset()),
            this._mouseInit(),
            this._setHandleClassName(),
            (this.ready = !0);
        },
        _setOption: function (e, t) {
          this._super(e, t), e === "handle" && this._setHandleClassName();
        },
        _setHandleClassName: function () {
          const e = this;
          this._removeClass(
            this.element.find(".ui-sortable-handle"),
            "ui-sortable-handle",
          ),
            te.each(this.items, function () {
              e._addClass(
                this.instance.options.handle
                  ? this.item.find(this.instance.options.handle)
                  : this.item,
                "ui-sortable-handle",
              );
            });
        },
        _destroy: function () {
          this._mouseDestroy();
          for (let e = this.items.length - 1; e >= 0; e--) {
            this.items[e].item.removeData(this.widgetName + "-item");
          }
          return this;
        },
        _mouseCapture: function (e, t) {
          let n = null;
          let i = !1;
          const r = this;
          return (
            !this.reverting &&
            !this.options.disabled &&
            this.options.type !== "static" &&
            (this._refreshItems(e),
            te(e.target)
              .parents()
              .each(function () {
                if (te.data(this, r.widgetName + "-item") === r) {
                  return (n = te(this)), !1;
                }
              }),
            te.data(e.target, r.widgetName + "-item") === r &&
              (n = te(e.target)),
            !!n &&
              !(
                this.options.handle &&
                !t &&
                (te(this.options.handle, n)
                  .find("*")
                  .addBack()
                  .each(function () {
                    this === e.target && (i = !0);
                  }),
                !i)
              ) &&
              ((this.currentItem = n), this._removeCurrentsFromItems(), !0))
          );
        },
        _mouseStart: function (e, t, n) {
          let i;
          let r;
          const o = this.options;
          if (
            ((this.currentContainer = this).refreshPositions(),
            (this.appendTo = te(
              o.appendTo !== "parent" ? o.appendTo : this.currentItem.parent(),
            )),
            (this.helper = this._createHelper(e)),
            this._cacheHelperProportions(),
            this._cacheMargins(),
            (this.offset = this.currentItem.offset()),
            (this.offset = {
              top: this.offset.top - this.margins.top,
              left: this.offset.left - this.margins.left,
            }),
            te.extend(this.offset, {
              click: {
                left: e.pageX - this.offset.left,
                top: e.pageY - this.offset.top,
              },
              relative: this._getRelativeOffset(),
            }),
            this.helper.css("position", "absolute"),
            (this.cssPosition = this.helper.css("position")),
            o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt),
            (this.domPosition = {
              prev: this.currentItem.prev()[0],
              parent: this.currentItem.parent()[0],
            }),
            this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
            this._createPlaceholder(),
            (this.scrollParent = this.placeholder.scrollParent()),
            te.extend(this.offset, { parent: this._getParentOffset() }),
            o.containment && this._setContainment(),
            o.cursor &&
              o.cursor !== "auto" &&
              ((r = this.document.find("body")),
              (this.storedCursor = r.css("cursor")),
              r.css("cursor", o.cursor),
              (this.storedStylesheet = te(
                "<style>*{ cursor: " + o.cursor + " !important; }</style>",
              ).appendTo(r))),
            o.zIndex &&
              (this.helper.css("zIndex") &&
                (this._storedZIndex = this.helper.css("zIndex")),
              this.helper.css("zIndex", o.zIndex)),
            o.opacity &&
              (this.helper.css("opacity") &&
                (this._storedOpacity = this.helper.css("opacity")),
              this.helper.css("opacity", o.opacity)),
            this.scrollParent[0] !== this.document[0] &&
              this.scrollParent[0].tagName !== "HTML" &&
              (this.overflowOffset = this.scrollParent.offset()),
            this._trigger("start", e, this._uiHash()),
            this._preserveHelperProportions || this._cacheHelperProportions(),
            !n)
          ) {
            for (i = this.containers.length - 1; i >= 0; i--) {
              this.containers[i]._trigger("activate", e, this._uiHash(this));
            }
          }
          return (
            te.ui.ddmanager && (te.ui.ddmanager.current = this),
            te.ui.ddmanager &&
              !o.dropBehaviour &&
              te.ui.ddmanager.prepareOffsets(this, e),
            (this.dragging = !0),
            this._addClass(this.helper, "ui-sortable-helper"),
            this.helper.parent().is(this.appendTo) ||
              (this.helper.detach().appendTo(this.appendTo),
              (this.offset.parent = this._getParentOffset())),
            (this.position = this.originalPosition = this._generatePosition(e)),
            (this.originalPageX = e.pageX),
            (this.originalPageY = e.pageY),
            (this.lastPositionAbs = this.positionAbs =
              this._convertPositionTo("absolute")),
            this._mouseDrag(e),
            !0
          );
        },
        _scroll: function (e) {
          const t = this.options;
          let n = !1;
          return (
            this.scrollParent[0] !== this.document[0] &&
            this.scrollParent[0].tagName !== "HTML"
              ? (this.overflowOffset.top +
                  this.scrollParent[0].offsetHeight -
                  e.pageY <
                t.scrollSensitivity
                  ? (this.scrollParent[0].scrollTop = n =
                      this.scrollParent[0].scrollTop + t.scrollSpeed)
                  : e.pageY - this.overflowOffset.top < t.scrollSensitivity &&
                    (this.scrollParent[0].scrollTop = n =
                      this.scrollParent[0].scrollTop - t.scrollSpeed),
                this.overflowOffset.left +
                  this.scrollParent[0].offsetWidth -
                  e.pageX <
                t.scrollSensitivity
                  ? (this.scrollParent[0].scrollLeft = n =
                      this.scrollParent[0].scrollLeft + t.scrollSpeed)
                  : e.pageX - this.overflowOffset.left < t.scrollSensitivity &&
                    (this.scrollParent[0].scrollLeft = n =
                      this.scrollParent[0].scrollLeft - t.scrollSpeed))
              : (e.pageY - this.document.scrollTop() < t.scrollSensitivity
                  ? (n = this.document.scrollTop(
                      this.document.scrollTop() - t.scrollSpeed,
                    ))
                  : this.window.height() -
                      (e.pageY - this.document.scrollTop()) <
                      t.scrollSensitivity &&
                    (n = this.document.scrollTop(
                      this.document.scrollTop() + t.scrollSpeed,
                    )),
                e.pageX - this.document.scrollLeft() < t.scrollSensitivity
                  ? (n = this.document.scrollLeft(
                      this.document.scrollLeft() - t.scrollSpeed,
                    ))
                  : this.window.width() -
                      (e.pageX - this.document.scrollLeft()) <
                      t.scrollSensitivity &&
                    (n = this.document.scrollLeft(
                      this.document.scrollLeft() + t.scrollSpeed,
                    ))),
            n
          );
        },
        _mouseDrag: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = this.options;
          for (
            this.position = this._generatePosition(e),
              this.positionAbs = this._convertPositionTo("absolute"),
              (this.options.axis && this.options.axis === "y") ||
                (this.helper[0].style.left = this.position.left + "px"),
              (this.options.axis && this.options.axis === "x") ||
                (this.helper[0].style.top = this.position.top + "px"),
              o.scroll &&
                !1 !== this._scroll(e) &&
                (this._refreshItemPositions(!0),
                te.ui.ddmanager &&
                  !o.dropBehaviour &&
                  te.ui.ddmanager.prepareOffsets(this, e)),
              this.dragDirection = {
                vertical: this._getDragVerticalDirection(),
                horizontal: this._getDragHorizontalDirection(),
              },
              t = this.items.length - 1;
            t >= 0;
            t--
          ) {
            if (
              ((i = (n = this.items[t]).item[0]),
              (r = this._intersectsWithPointer(n)) &&
                n.instance === this.currentContainer &&
                !(
                  i === this.currentItem[0] ||
                  this.placeholder[r === 1 ? "next" : "prev"]()[0] === i ||
                  te.contains(this.placeholder[0], i) ||
                  (this.options.type === "semi-dynamic" &&
                    te.contains(this.element[0], i))
                ))
            ) {
              if (
                ((this.direction = r === 1 ? "down" : "up"),
                this.options.tolerance !== "pointer" &&
                  !this._intersectsWithSides(n))
              ) {
                break;
              }
              this._rearrange(e, n), this._trigger("change", e, this._uiHash());
              break;
            }
          }
          return (
            this._contactContainers(e),
            te.ui.ddmanager && te.ui.ddmanager.drag(this, e),
            this._trigger("sort", e, this._uiHash()),
            (this.lastPositionAbs = this.positionAbs),
            !1
          );
        },
        _mouseStop: function (e, t) {
          if (e) {
            if (
              (te.ui.ddmanager &&
                !this.options.dropBehaviour &&
                te.ui.ddmanager.drop(this, e),
              this.options.revert)
            ) {
              const n = this;
              const i = this.placeholder.offset();
              const r = this.options.axis;
              const o = {};
              (r && r !== "x") ||
                (o.left =
                  i.left -
                  this.offset.parent.left -
                  this.margins.left +
                  (this.offsetParent[0] === this.document[0].body
                    ? 0
                    : this.offsetParent[0].scrollLeft)),
                (r && r !== "y") ||
                  (o.top =
                    i.top -
                    this.offset.parent.top -
                    this.margins.top +
                    (this.offsetParent[0] === this.document[0].body
                      ? 0
                      : this.offsetParent[0].scrollTop)),
                (this.reverting = !0),
                te(this.helper).animate(
                  o,
                  parseInt(this.options.revert, 10) || 500,
                  function () {
                    n._clear(e);
                  },
                );
            } else this._clear(e, t);
            return !1;
          }
        },
        cancel: function () {
          if (this.dragging) {
            this._mouseUp(new te.Event("mouseup", { target: null })),
              this.options.helper === "original"
                ? (this.currentItem.css(this._storedCSS),
                  this._removeClass(this.currentItem, "ui-sortable-helper"))
                : this.currentItem.show();
            for (let e = this.containers.length - 1; e >= 0; e--) {
              this.containers[e]._trigger(
                "deactivate",
                null,
                this._uiHash(this),
              ),
                this.containers[e].containerCache.over &&
                  (this.containers[e]._trigger("out", null, this._uiHash(this)),
                  (this.containers[e].containerCache.over = 0));
            }
          }
          return (
            this.placeholder &&
              (this.placeholder[0].parentNode &&
                this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
              this.options.helper !== "original" &&
                this.helper &&
                this.helper[0].parentNode &&
                this.helper.remove(),
              te.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null,
              }),
              this.domPosition.prev
                ? te(this.domPosition.prev).after(this.currentItem)
                : te(this.domPosition.parent).prepend(this.currentItem)),
            this
          );
        },
        serialize: function (t) {
          const e = this._getItemsAsjQuery(t && t.connected);
          const n = [];
          return (
            (t = t || {}),
            te(e).each(function () {
              const e = (
                te(t.item || this).attr(t.attribute || "id") || ""
              ).match(t.expression || /(.+)[\-=_](.+)/);
              e &&
                n.push(
                  (t.key || e[1] + "[]") +
                    "=" +
                    (t.key && t.expression ? e[1] : e[2]),
                );
            }),
            !n.length && t.key && n.push(t.key + "="),
            n.join("&")
          );
        },
        toArray: function (e) {
          const t = this._getItemsAsjQuery(e && e.connected);
          const n = [];
          return (
            (e = e || {}),
            t.each(function () {
              n.push(te(e.item || this).attr(e.attribute || "id") || "");
            }),
            n
          );
        },
        _intersectsWith: function (e) {
          const t = this.positionAbs.left;
          const n = t + this.helperProportions.width;
          const i = this.positionAbs.top;
          const r = i + this.helperProportions.height;
          const o = e.left;
          const s = o + e.width;
          const a = e.top;
          const l = a + e.height;
          const c = this.offset.click.top;
          const u = this.offset.click.left;
          const d = this.options.axis === "x" || (a < i + c && i + c < l);
          const h = this.options.axis === "y" || (o < t + u && t + u < s);
          const p = d && h;
          return this.options.tolerance === "pointer" ||
            this.options.forcePointerForContainers ||
            (this.options.tolerance !== "pointer" &&
              this.helperProportions[this.floating ? "width" : "height"] >
                e[this.floating ? "width" : "height"])
            ? p
            : o < t + this.helperProportions.width / 2 &&
                n - this.helperProportions.width / 2 < s &&
                a < i + this.helperProportions.height / 2 &&
                r - this.helperProportions.height / 2 < l;
        },
        _intersectsWithPointer: function (e) {
          let t;
          let n;
          const i =
            this.options.axis === "x" ||
            this._isOverAxis(
              this.positionAbs.top + this.offset.click.top,
              e.top,
              e.height,
            );
          const r =
            this.options.axis === "y" ||
            this._isOverAxis(
              this.positionAbs.left + this.offset.click.left,
              e.left,
              e.width,
            );
          return (
            !(!i || !r) &&
            ((t = this.dragDirection.vertical),
            (n = this.dragDirection.horizontal),
            this.floating
              ? n === "right" || t === "down"
                ? 2
                : 1
              : t && (t === "down" ? 2 : 1))
          );
        },
        _intersectsWithSides: function (e) {
          const t = this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            e.top + e.height / 2,
            e.height,
          );
          const n = this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            e.left + e.width / 2,
            e.width,
          );
          const i = this.dragDirection.vertical;
          const r = this.dragDirection.horizontal;
          return this.floating && r
            ? (r === "right" && n) || (r === "left" && !n)
            : i && ((i === "down" && t) || (i === "up" && !t));
        },
        _getDragVerticalDirection: function () {
          const e = this.positionAbs.top - this.lastPositionAbs.top;
          return e !== 0 && (e > 0 ? "down" : "up");
        },
        _getDragHorizontalDirection: function () {
          const e = this.positionAbs.left - this.lastPositionAbs.left;
          return e !== 0 && (e > 0 ? "right" : "left");
        },
        refresh: function (e) {
          return (
            this._refreshItems(e),
            this._setHandleClassName(),
            this.refreshPositions(),
            this
          );
        },
        _connectWith: function () {
          const e = this.options;
          return e.connectWith.constructor === String
            ? [e.connectWith]
            : e.connectWith;
        },
        _getItemsAsjQuery: function (e) {
          function t() {
            s.push(this);
          }
          let n;
          let i;
          let r;
          let o;
          var s = [];
          const a = [];
          const l = this._connectWith();
          if (l && e) {
            for (n = l.length - 1; n >= 0; n--) {
              for (
                i = (r = te(l[n], this.document[0])).length - 1;
                i >= 0;
                i--
              ) {
                (o = te.data(r[i], this.widgetFullName)) &&
                  o !== this &&
                  !o.options.disabled &&
                  a.push([
                    typeof o.options.items === "function"
                      ? o.options.items.call(o.element)
                      : te(o.options.items, o.element)
                          .not(".ui-sortable-helper")
                          .not(".ui-sortable-placeholder"),
                    o,
                  ]);
              }
            }
          }
          for (
            a.push([
              typeof this.options.items === "function"
                ? this.options.items.call(this.element, null, {
                    options: this.options,
                    item: this.currentItem,
                  })
                : te(this.options.items, this.element)
                    .not(".ui-sortable-helper")
                    .not(".ui-sortable-placeholder"),
              this,
            ]),
              n = a.length - 1;
            n >= 0;
            n--
          ) {
            a[n][0].each(t);
          }
          return te(s);
        },
        _removeCurrentsFromItems: function () {
          const n = this.currentItem.find(
            ":data(" + this.widgetName + "-item)",
          );
          this.items = te.grep(this.items, function (e) {
            for (let t = 0; t < n.length; t++) {
              if (n[t] === e.item[0]) return !1;
            }
            return !0;
          });
        },
        _refreshItems: function (e) {
          (this.items = []), (this.containers = [this]);
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          const c = this.items;
          const u = [
            [
              typeof this.options.items === "function"
                ? this.options.items.call(this.element[0], e, {
                    item: this.currentItem,
                  })
                : te(this.options.items, this.element),
              this,
            ],
          ];
          const d = this._connectWith();
          if (d && this.ready) {
            for (t = d.length - 1; t >= 0; t--) {
              for (
                n = (i = te(d[t], this.document[0])).length - 1;
                n >= 0;
                n--
              ) {
                (r = te.data(i[n], this.widgetFullName)) &&
                  r !== this &&
                  !r.options.disabled &&
                  (u.push([
                    typeof r.options.items === "function"
                      ? r.options.items.call(r.element[0], e, {
                          item: this.currentItem,
                        })
                      : te(r.options.items, r.element),
                    r,
                  ]),
                  this.containers.push(r));
              }
            }
          }
          for (t = u.length - 1; t >= 0; t--) {
            for (o = u[t][1], n = 0, l = (s = u[t][0]).length; n < l; n++) {
              (a = te(s[n])).data(this.widgetName + "-item", o),
                c.push({
                  item: a,
                  instance: o,
                  width: 0,
                  height: 0,
                  left: 0,
                  top: 0,
                });
            }
          }
        },
        _refreshItemPositions: function (e) {
          let t, n, i, r;
          for (t = this.items.length - 1; t >= 0; t--) {
            (n = this.items[t]),
              (this.currentContainer &&
                n.instance !== this.currentContainer &&
                n.item[0] !== this.currentItem[0]) ||
                ((i = this.options.toleranceElement
                  ? te(this.options.toleranceElement, n.item)
                  : n.item),
                e || ((n.width = i.outerWidth()), (n.height = i.outerHeight())),
                (r = i.offset()),
                (n.left = r.left),
                (n.top = r.top));
          }
        },
        refreshPositions: function (e) {
          let t, n;
          if (
            ((this.floating =
              !!this.items.length &&
              (this.options.axis === "x" ||
                this._isFloating(this.items[0].item))),
            this.offsetParent &&
              this.helper &&
              (this.offset.parent = this._getParentOffset()),
            this._refreshItemPositions(e),
            this.options.custom && this.options.custom.refreshContainers)
          ) {
            this.options.custom.refreshContainers.call(this);
          } else {
            for (t = this.containers.length - 1; t >= 0; t--) {
              (n = this.containers[t].element.offset()),
                (this.containers[t].containerCache.left = n.left),
                (this.containers[t].containerCache.top = n.top),
                (this.containers[t].containerCache.width =
                  this.containers[t].element.outerWidth()),
                (this.containers[t].containerCache.height =
                  this.containers[t].element.outerHeight());
            }
          }
          return this;
        },
        _createPlaceholder: function (n) {
          let i;
          let r;
          const o = (n = n || this).options;
          (o.placeholder && o.placeholder.constructor !== String) ||
            ((i = o.placeholder),
            (r = n.currentItem[0].nodeName.toLowerCase()),
            (o.placeholder = {
              element: function () {
                const e = te("<" + r + ">", n.document[0]);
                return (
                  n
                    ._addClass(
                      e,
                      "ui-sortable-placeholder",
                      i || n.currentItem[0].className,
                    )
                    ._removeClass(e, "ui-sortable-helper"),
                  r === "tbody"
                    ? n._createTrPlaceholder(
                        n.currentItem.find("tr").eq(0),
                        te("<tr>", n.document[0]).appendTo(e),
                      )
                    : r === "tr"
                      ? n._createTrPlaceholder(n.currentItem, e)
                      : r === "img" && e.attr("src", n.currentItem.attr("src")),
                  i || e.css("visibility", "hidden"),
                  e
                );
              },
              update: function (e, t) {
                (i && !o.forcePlaceholderSize) ||
                  ((t.height() &&
                    (!o.forcePlaceholderSize ||
                      (r !== "tbody" && r !== "tr"))) ||
                    t.height(
                      n.currentItem.innerHeight() -
                        parseInt(n.currentItem.css("paddingTop") || 0, 10) -
                        parseInt(n.currentItem.css("paddingBottom") || 0, 10),
                    ),
                  t.width() ||
                    t.width(
                      n.currentItem.innerWidth() -
                        parseInt(n.currentItem.css("paddingLeft") || 0, 10) -
                        parseInt(n.currentItem.css("paddingRight") || 0, 10),
                    ));
              },
            })),
            (n.placeholder = te(
              o.placeholder.element.call(n.element, n.currentItem),
            )),
            n.currentItem.after(n.placeholder),
            o.placeholder.update(n, n.placeholder);
        },
        _createTrPlaceholder: function (e, t) {
          const n = this;
          e.children().each(function () {
            te("<td>&#160;</td>", n.document[0])
              .attr("colspan", te(this).attr("colspan") || 1)
              .appendTo(t);
          });
        },
        _contactContainers: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d = null;
          let h = null;
          for (t = this.containers.length - 1; t >= 0; t--) {
            if (
              !te.contains(this.currentItem[0], this.containers[t].element[0])
            ) {
              if (this._intersectsWith(this.containers[t].containerCache)) {
                if (
                  d &&
                  te.contains(this.containers[t].element[0], d.element[0])
                ) {
                  continue;
                }
                (d = this.containers[t]), (h = t);
              } else {
                this.containers[t].containerCache.over &&
                  (this.containers[t]._trigger("out", e, this._uiHash(this)),
                  (this.containers[t].containerCache.over = 0));
              }
            }
          }
          if (d) {
            if (this.containers.length === 1) {
              this.containers[h].containerCache.over ||
                (this.containers[h]._trigger("over", e, this._uiHash(this)),
                (this.containers[h].containerCache.over = 1));
            } else {
              for (
                i = 1e4,
                  r = null,
                  o = (c = d.floating || this._isFloating(this.currentItem))
                    ? "left"
                    : "top",
                  s = c ? "width" : "height",
                  u = c ? "pageX" : "pageY",
                  n = this.items.length - 1;
                n >= 0;
                n--
              ) {
                te.contains(
                  this.containers[h].element[0],
                  this.items[n].item[0],
                ) &&
                  this.items[n].item[0] !== this.currentItem[0] &&
                  ((a = this.items[n].item.offset()[o]),
                  (l = !1),
                  e[u] - a > this.items[n][s] / 2 && (l = !0),
                  Math.abs(e[u] - a) < i &&
                    ((i = Math.abs(e[u] - a)),
                    (r = this.items[n]),
                    (this.direction = l ? "up" : "down")));
              }
              if (!r && !this.options.dropOnEmpty) return;
              if (this.currentContainer === this.containers[h]) {
                return void (
                  this.currentContainer.containerCache.over ||
                  (this.containers[h]._trigger("over", e, this._uiHash()),
                  (this.currentContainer.containerCache.over = 1))
                );
              }
              r
                ? this._rearrange(e, r, null, !0)
                : this._rearrange(e, null, this.containers[h].element, !0),
                this._trigger("change", e, this._uiHash()),
                this.containers[h]._trigger("change", e, this._uiHash(this)),
                (this.currentContainer = this.containers[h]),
                this.options.placeholder.update(
                  this.currentContainer,
                  this.placeholder,
                ),
                (this.scrollParent = this.placeholder.scrollParent()),
                this.scrollParent[0] !== this.document[0] &&
                  this.scrollParent[0].tagName !== "HTML" &&
                  (this.overflowOffset = this.scrollParent.offset()),
                this.containers[h]._trigger("over", e, this._uiHash(this)),
                (this.containers[h].containerCache.over = 1);
            }
          }
        },
        _createHelper: function (e) {
          const t = this.options;
          const n =
            typeof t.helper === "function"
              ? te(t.helper.apply(this.element[0], [e, this.currentItem]))
              : t.helper === "clone"
                ? this.currentItem.clone()
                : this.currentItem;
          return (
            n.parents("body").length || this.appendTo[0].appendChild(n[0]),
            n[0] === this.currentItem[0] &&
              (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left"),
              }),
            (n[0].style.width && !t.forceHelperSize) ||
              n.width(this.currentItem.width()),
            (n[0].style.height && !t.forceHelperSize) ||
              n.height(this.currentItem.height()),
            n
          );
        },
        _adjustOffsetFromHelper: function (e) {
          typeof e === "string" && (e = e.split(" ")),
            Array.isArray(e) && (e = { left: +e[0], top: +e[1] || 0 }),
            "left" in e &&
              (this.offset.click.left = e.left + this.margins.left),
            "right" in e &&
              (this.offset.click.left =
                this.helperProportions.width - e.right + this.margins.left),
            "top" in e && (this.offset.click.top = e.top + this.margins.top),
            "bottom" in e &&
              (this.offset.click.top =
                this.helperProportions.height - e.bottom + this.margins.top);
        },
        _getParentOffset: function () {
          this.offsetParent = this.helper.offsetParent();
          let e = this.offsetParent.offset();
          return (
            this.cssPosition === "absolute" &&
              this.scrollParent[0] !== this.document[0] &&
              te.contains(this.scrollParent[0], this.offsetParent[0]) &&
              ((e.left += this.scrollParent.scrollLeft()),
              (e.top += this.scrollParent.scrollTop())),
            (this.offsetParent[0] === this.document[0].body ||
              (this.offsetParent[0].tagName &&
                this.offsetParent[0].tagName.toLowerCase() === "html" &&
                te.ui.ie)) &&
              (e = { top: 0, left: 0 }),
            {
              top:
                e.top +
                (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
              left:
                e.left +
                (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
            }
          );
        },
        _getRelativeOffset: function () {
          if (this.cssPosition !== "relative") return { top: 0, left: 0 };
          const e = this.currentItem.position();
          return {
            top:
              e.top -
              (parseInt(this.helper.css("top"), 10) || 0) +
              this.scrollParent.scrollTop(),
            left:
              e.left -
              (parseInt(this.helper.css("left"), 10) || 0) +
              this.scrollParent.scrollLeft(),
          };
        },
        _cacheMargins: function () {
          this.margins = {
            left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
            top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
          };
        },
        _cacheHelperProportions: function () {
          this.helperProportions = {
            width: this.helper.outerWidth(),
            height: this.helper.outerHeight(),
          };
        },
        _setContainment: function () {
          let e;
          let t;
          let n;
          const i = this.options;
          i.containment === "parent" &&
            (i.containment = this.helper[0].parentNode),
            (i.containment !== "document" && i.containment !== "window") ||
              (this.containment = [
                0 - this.offset.relative.left - this.offset.parent.left,
                0 - this.offset.relative.top - this.offset.parent.top,
                i.containment === "document"
                  ? this.document.width()
                  : this.window.width() -
                    this.helperProportions.width -
                    this.margins.left,
                (i.containment === "document"
                  ? this.document.height() ||
                    document.body.parentNode.scrollHeight
                  : this.window.height() ||
                    this.document[0].body.parentNode.scrollHeight) -
                  this.helperProportions.height -
                  this.margins.top,
              ]),
            /^(document|window|parent)$/.test(i.containment) ||
              ((e = te(i.containment)[0]),
              (t = te(i.containment).offset()),
              (n = te(e).css("overflow") !== "hidden"),
              (this.containment = [
                t.left +
                  (parseInt(te(e).css("borderLeftWidth"), 10) || 0) +
                  (parseInt(te(e).css("paddingLeft"), 10) || 0) -
                  this.margins.left,
                t.top +
                  (parseInt(te(e).css("borderTopWidth"), 10) || 0) +
                  (parseInt(te(e).css("paddingTop"), 10) || 0) -
                  this.margins.top,
                t.left +
                  (n ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) -
                  (parseInt(te(e).css("borderLeftWidth"), 10) || 0) -
                  (parseInt(te(e).css("paddingRight"), 10) || 0) -
                  this.helperProportions.width -
                  this.margins.left,
                t.top +
                  (n
                    ? Math.max(e.scrollHeight, e.offsetHeight)
                    : e.offsetHeight) -
                  (parseInt(te(e).css("borderTopWidth"), 10) || 0) -
                  (parseInt(te(e).css("paddingBottom"), 10) || 0) -
                  this.helperProportions.height -
                  this.margins.top,
              ]));
        },
        _convertPositionTo: function (e, t) {
          t || (t = this.position);
          const n = e === "absolute" ? 1 : -1;
          const i =
            this.cssPosition !== "absolute" ||
            (this.scrollParent[0] !== this.document[0] &&
              te.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent;
          const r = /(html|body)/i.test(i[0].tagName);
          return {
            top:
              t.top +
              this.offset.relative.top * n +
              this.offset.parent.top * n -
              (this.cssPosition === "fixed"
                ? -this.scrollParent.scrollTop()
                : r
                  ? 0
                  : i.scrollTop()) *
                n,
            left:
              t.left +
              this.offset.relative.left * n +
              this.offset.parent.left * n -
              (this.cssPosition === "fixed"
                ? -this.scrollParent.scrollLeft()
                : r
                  ? 0
                  : i.scrollLeft()) *
                n,
          };
        },
        _generatePosition: function (e) {
          let t;
          let n;
          const i = this.options;
          let r = e.pageX;
          let o = e.pageY;
          const s =
            this.cssPosition !== "absolute" ||
            (this.scrollParent[0] !== this.document[0] &&
              te.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent;
          const a = /(html|body)/i.test(s[0].tagName);
          return (
            this.cssPosition !== "relative" ||
              (this.scrollParent[0] !== this.document[0] &&
                this.scrollParent[0] !== this.offsetParent[0]) ||
              (this.offset.relative = this._getRelativeOffset()),
            this.originalPosition &&
              (this.containment &&
                (e.pageX - this.offset.click.left < this.containment[0] &&
                  (r = this.containment[0] + this.offset.click.left),
                e.pageY - this.offset.click.top < this.containment[1] &&
                  (o = this.containment[1] + this.offset.click.top),
                e.pageX - this.offset.click.left > this.containment[2] &&
                  (r = this.containment[2] + this.offset.click.left),
                e.pageY - this.offset.click.top > this.containment[3] &&
                  (o = this.containment[3] + this.offset.click.top)),
              i.grid &&
                ((t =
                  this.originalPageY +
                  Math.round((o - this.originalPageY) / i.grid[1]) * i.grid[1]),
                (o = this.containment
                  ? t - this.offset.click.top >= this.containment[1] &&
                    t - this.offset.click.top <= this.containment[3]
                    ? t
                    : t - this.offset.click.top >= this.containment[1]
                      ? t - i.grid[1]
                      : t + i.grid[1]
                  : t),
                (n =
                  this.originalPageX +
                  Math.round((r - this.originalPageX) / i.grid[0]) * i.grid[0]),
                (r = this.containment
                  ? n - this.offset.click.left >= this.containment[0] &&
                    n - this.offset.click.left <= this.containment[2]
                    ? n
                    : n - this.offset.click.left >= this.containment[0]
                      ? n - i.grid[0]
                      : n + i.grid[0]
                  : n))),
            {
              top:
                o -
                this.offset.click.top -
                this.offset.relative.top -
                this.offset.parent.top +
                (this.cssPosition === "fixed"
                  ? -this.scrollParent.scrollTop()
                  : a
                    ? 0
                    : s.scrollTop()),
              left:
                r -
                this.offset.click.left -
                this.offset.relative.left -
                this.offset.parent.left +
                (this.cssPosition === "fixed"
                  ? -this.scrollParent.scrollLeft()
                  : a
                    ? 0
                    : s.scrollLeft()),
            }
          );
        },
        _rearrange: function (e, t, n, i) {
          n
            ? n[0].appendChild(this.placeholder[0])
            : t.item[0].parentNode.insertBefore(
                this.placeholder[0],
                this.direction === "down" ? t.item[0] : t.item[0].nextSibling,
              ),
            (this.counter = this.counter ? ++this.counter : 1);
          const r = this.counter;
          this._delay(function () {
            r === this.counter && this.refreshPositions(!i);
          });
        },
        _clear: function (e, t) {
          function n(t, n, i) {
            return function (e) {
              i._trigger(t, e, n._uiHash(n));
            };
          }
          this.reverting = !1;
          let i;
          const r = [];
          if (
            (!this._noFinalSort &&
              this.currentItem.parent().length &&
              this.placeholder.before(this.currentItem),
            (this._noFinalSort = null),
            this.helper[0] === this.currentItem[0])
          ) {
            for (i in this._storedCSS) {
              (this._storedCSS[i] !== "auto" &&
                this._storedCSS[i] !== "static") ||
                (this._storedCSS[i] = "");
            }
            this.currentItem.css(this._storedCSS),
              this._removeClass(this.currentItem, "ui-sortable-helper");
          } else this.currentItem.show();
          for (
            this.fromOutside &&
              !t &&
              r.push(function (e) {
                this._trigger("receive", e, this._uiHash(this.fromOutside));
              }),
              (!this.fromOutside &&
                this.domPosition.prev ===
                  this.currentItem.prev().not(".ui-sortable-helper")[0] &&
                this.domPosition.parent === this.currentItem.parent()[0]) ||
                t ||
                r.push(function (e) {
                  this._trigger("update", e, this._uiHash());
                }),
              this !== this.currentContainer &&
                (t ||
                  (r.push(function (e) {
                    this._trigger("remove", e, this._uiHash());
                  }),
                  r.push(
                    function (t) {
                      return function (e) {
                        t._trigger("receive", e, this._uiHash(this));
                      };
                    }.call(this, this.currentContainer),
                  ),
                  r.push(
                    function (t) {
                      return function (e) {
                        t._trigger("update", e, this._uiHash(this));
                      };
                    }.call(this, this.currentContainer),
                  ))),
              i = this.containers.length - 1;
            i >= 0;
            i--
          ) {
            t || r.push(n("deactivate", this, this.containers[i])),
              this.containers[i].containerCache.over &&
                (r.push(n("out", this, this.containers[i])),
                (this.containers[i].containerCache.over = 0));
          }
          if (
            (this.storedCursor &&
              (this.document.find("body").css("cursor", this.storedCursor),
              this.storedStylesheet.remove()),
            this._storedOpacity &&
              this.helper.css("opacity", this._storedOpacity),
            this._storedZIndex &&
              this.helper.css(
                "zIndex",
                this._storedZIndex === "auto" ? "" : this._storedZIndex,
              ),
            (this.dragging = !1),
            t || this._trigger("beforeStop", e, this._uiHash()),
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.cancelHelperRemoval ||
              (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
              (this.helper = null)),
            !t)
          ) {
            for (i = 0; i < r.length; i++) r[i].call(this, e);
            this._trigger("stop", e, this._uiHash());
          }
          return (this.fromOutside = !1), !this.cancelHelperRemoval;
        },
        _trigger: function () {
          !1 === te.Widget.prototype._trigger.apply(this, arguments) &&
            this.cancel();
        },
        _uiHash: function (e) {
          const t = e || this;
          return {
            helper: t.helper,
            placeholder: t.placeholder || te([]),
            position: t.position,
            originalPosition: t.originalPosition,
            offset: t.positionAbs,
            item: t.currentItem,
            sender: e ? e.element : null,
          };
        },
      }),
      te.widget("ui.accordion", {
        version: "1.13.1",
        options: {
          active: 0,
          animate: {},
          classes: {
            "ui-accordion-header": "ui-corner-top",
            "ui-accordion-header-collapsed": "ui-corner-all",
            "ui-accordion-content": "ui-corner-bottom",
          },
          collapsible: !1,
          event: "click",
          header: function (e) {
            return e
              .find("> li > :first-child")
              .add(e.find("> :not(li)").even());
          },
          heightStyle: "auto",
          icons: {
            activeHeader: "ui-icon-triangle-1-s",
            header: "ui-icon-triangle-1-e",
          },
          activate: null,
          beforeActivate: null,
        },
        hideProps: {
          borderTopWidth: "hide",
          borderBottomWidth: "hide",
          paddingTop: "hide",
          paddingBottom: "hide",
          height: "hide",
        },
        showProps: {
          borderTopWidth: "show",
          borderBottomWidth: "show",
          paddingTop: "show",
          paddingBottom: "show",
          height: "show",
        },
        _create: function () {
          const e = this.options;
          (this.prevShow = this.prevHide = te()),
            this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
            this.element.attr("role", "tablist"),
            e.collapsible ||
              (!1 !== e.active && e.active != null) ||
              (e.active = 0),
            this._processPanels(),
            e.active < 0 && (e.active += this.headers.length),
            this._refresh();
        },
        _getCreateEventData: function () {
          return {
            header: this.active,
            panel: this.active.length ? this.active.next() : te(),
          };
        },
        _createIcons: function () {
          let e;
          let t;
          const n = this.options.icons;
          n &&
            ((e = te("<span>")),
            this._addClass(
              e,
              "ui-accordion-header-icon",
              "ui-icon " + n.header,
            ),
            e.prependTo(this.headers),
            (t = this.active.children(".ui-accordion-header-icon")),
            this._removeClass(t, n.header)
              ._addClass(t, null, n.activeHeader)
              ._addClass(this.headers, "ui-accordion-icons"));
        },
        _destroyIcons: function () {
          this._removeClass(this.headers, "ui-accordion-icons"),
            this.headers.children(".ui-accordion-header-icon").remove();
        },
        _destroy: function () {
          let e;
          this.element.removeAttr("role"),
            this.headers
              .removeAttr(
                "role aria-expanded aria-selected aria-controls tabIndex",
              )
              .removeUniqueId(),
            this._destroyIcons(),
            (e = this.headers
              .next()
              .css("display", "")
              .removeAttr("role aria-hidden aria-labelledby")
              .removeUniqueId()),
            this.options.heightStyle !== "content" && e.css("height", "");
        },
        _setOption: function (e, t) {
          e !== "active"
            ? (e === "event" &&
                (this.options.event &&
                  this._off(this.headers, this.options.event),
                this._setupEvents(t)),
              this._super(e, t),
              e !== "collapsible" ||
                t ||
                !1 !== this.options.active ||
                this._activate(0),
              e === "icons" && (this._destroyIcons(), t && this._createIcons()))
            : this._activate(t);
        },
        _setOptionDisabled: function (e) {
          this._super(e),
            this.element.attr("aria-disabled", e),
            this._toggleClass(null, "ui-state-disabled", !!e),
            this._toggleClass(
              this.headers.add(this.headers.next()),
              null,
              "ui-state-disabled",
              !!e,
            );
        },
        _keydown: function (e) {
          if (!e.altKey && !e.ctrlKey) {
            const t = te.ui.keyCode;
            const n = this.headers.length;
            const i = this.headers.index(e.target);
            let r = !1;
            switch (e.keyCode) {
              case t.RIGHT:
              case t.DOWN:
                r = this.headers[(i + 1) % n];
                break;
              case t.LEFT:
              case t.UP:
                r = this.headers[(i - 1 + n) % n];
                break;
              case t.SPACE:
              case t.ENTER:
                this._eventHandler(e);
                break;
              case t.HOME:
                r = this.headers[0];
                break;
              case t.END:
                r = this.headers[n - 1];
            }
            r &&
              (te(e.target).attr("tabIndex", -1),
              te(r).attr("tabIndex", 0),
              te(r).trigger("focus"),
              e.preventDefault());
          }
        },
        _panelKeyDown: function (e) {
          e.keyCode === te.ui.keyCode.UP &&
            e.ctrlKey &&
            te(e.currentTarget).prev().trigger("focus");
        },
        refresh: function () {
          const e = this.options;
          this._processPanels(),
            (!1 === e.active && !0 === e.collapsible) || !this.headers.length
              ? ((e.active = !1), (this.active = te()))
              : !1 === e.active
                ? this._activate(0)
                : this.active.length &&
                    !te.contains(this.element[0], this.active[0])
                  ? this.headers.length ===
                    this.headers.find(".ui-state-disabled").length
                    ? ((e.active = !1), (this.active = te()))
                    : this._activate(Math.max(0, e.active - 1))
                  : (e.active = this.headers.index(this.active)),
            this._destroyIcons(),
            this._refresh();
        },
        _processPanels: function () {
          const e = this.headers;
          const t = this.panels;
          typeof this.options.header === "function"
            ? (this.headers = this.options.header(this.element))
            : (this.headers = this.element.find(this.options.header)),
            this._addClass(
              this.headers,
              "ui-accordion-header ui-accordion-header-collapsed",
              "ui-state-default",
            ),
            (this.panels = this.headers
              .next()
              .filter(":not(.ui-accordion-content-active)")
              .hide()),
            this._addClass(
              this.panels,
              "ui-accordion-content",
              "ui-helper-reset ui-widget-content",
            ),
            t &&
              (this._off(e.not(this.headers)), this._off(t.not(this.panels)));
        },
        _refresh: function () {
          let n;
          const e = this.options;
          const t = e.heightStyle;
          const i = this.element.parent();
          (this.active = this._findActive(e.active)),
            this._addClass(
              this.active,
              "ui-accordion-header-active",
              "ui-state-active",
            )._removeClass(this.active, "ui-accordion-header-collapsed"),
            this._addClass(this.active.next(), "ui-accordion-content-active"),
            this.active.next().show(),
            this.headers
              .attr("role", "tab")
              .each(function () {
                const e = te(this);
                const t = e.uniqueId().attr("id");
                const n = e.next();
                const i = n.uniqueId().attr("id");
                e.attr("aria-controls", i), n.attr("aria-labelledby", t);
              })
              .next()
              .attr("role", "tabpanel"),
            this.headers
              .not(this.active)
              .attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1,
              })
              .next()
              .attr({ "aria-hidden": "true" })
              .hide(),
            this.active.length
              ? this.active
                  .attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0,
                  })
                  .next()
                  .attr({ "aria-hidden": "false" })
              : this.headers.eq(0).attr("tabIndex", 0),
            this._createIcons(),
            this._setupEvents(e.event),
            t === "fill"
              ? ((n = i.height()),
                this.element.siblings(":visible").each(function () {
                  const e = te(this);
                  const t = e.css("position");
                  t !== "absolute" && t !== "fixed" && (n -= e.outerHeight(!0));
                }),
                this.headers.each(function () {
                  n -= te(this).outerHeight(!0);
                }),
                this.headers
                  .next()
                  .each(function () {
                    te(this).height(
                      Math.max(
                        0,
                        n - te(this).innerHeight() + te(this).height(),
                      ),
                    );
                  })
                  .css("overflow", "auto"))
              : t === "auto" &&
                ((n = 0),
                this.headers
                  .next()
                  .each(function () {
                    const e = te(this).is(":visible");
                    e || te(this).show(),
                      (n = Math.max(n, te(this).css("height", "").height())),
                      e || te(this).hide();
                  })
                  .height(n));
        },
        _activate: function (e) {
          let t = this._findActive(e)[0];
          t !== this.active[0] &&
            ((t = t || this.active[0]),
            this._eventHandler({
              target: t,
              currentTarget: t,
              preventDefault: te.noop,
            }));
        },
        _findActive: function (e) {
          return typeof e === "number" ? this.headers.eq(e) : te();
        },
        _setupEvents: function (e) {
          const n = { keydown: "_keydown" };
          e &&
            te.each(e.split(" "), function (e, t) {
              n[t] = "_eventHandler";
            }),
            this._off(this.headers.add(this.headers.next())),
            this._on(this.headers, n),
            this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
            this._hoverable(this.headers),
            this._focusable(this.headers);
        },
        _eventHandler: function (e) {
          let t;
          let n;
          const i = this.options;
          const r = this.active;
          const o = te(e.currentTarget);
          const s = o[0] === r[0];
          const a = s && i.collapsible;
          const l = a ? te() : o.next();
          const c = r.next();
          const u = {
            oldHeader: r,
            oldPanel: c,
            newHeader: a ? te() : o,
            newPanel: l,
          };
          e.preventDefault(),
            (s && !i.collapsible) ||
              !1 === this._trigger("beforeActivate", e, u) ||
              ((i.active = !a && this.headers.index(o)),
              (this.active = s ? te() : o),
              this._toggle(u),
              this._removeClass(
                r,
                "ui-accordion-header-active",
                "ui-state-active",
              ),
              i.icons &&
                ((t = r.children(".ui-accordion-header-icon")),
                this._removeClass(t, null, i.icons.activeHeader)._addClass(
                  t,
                  null,
                  i.icons.header,
                )),
              s ||
                (this._removeClass(
                  o,
                  "ui-accordion-header-collapsed",
                )._addClass(o, "ui-accordion-header-active", "ui-state-active"),
                i.icons &&
                  ((n = o.children(".ui-accordion-header-icon")),
                  this._removeClass(n, null, i.icons.header)._addClass(
                    n,
                    null,
                    i.icons.activeHeader,
                  )),
                this._addClass(o.next(), "ui-accordion-content-active")));
        },
        _toggle: function (e) {
          const t = e.newPanel;
          const n = this.prevShow.length ? this.prevShow : e.oldPanel;
          this.prevShow.add(this.prevHide).stop(!0, !0),
            (this.prevShow = t),
            (this.prevHide = n),
            this.options.animate
              ? this._animate(t, n, e)
              : (n.hide(), t.show(), this._toggleComplete(e)),
            n.attr({ "aria-hidden": "true" }),
            n
              .prev()
              .attr({ "aria-selected": "false", "aria-expanded": "false" }),
            t.length && n.length
              ? n.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
              : t.length &&
                this.headers
                  .filter(function () {
                    return parseInt(te(this).attr("tabIndex"), 10) === 0;
                  })
                  .attr("tabIndex", -1),
            t.attr("aria-hidden", "false").prev().attr({
              "aria-selected": "true",
              "aria-expanded": "true",
              tabIndex: 0,
            });
        },
        _animate: function (e, n, t) {
          let i;
          let r;
          let o;
          const s = this;
          let a = 0;
          const l = e.css("box-sizing");
          const c = e.length && (!n.length || e.index() < n.index());
          const u = this.options.animate || {};
          const d = (c && u.down) || u;
          const h = function () {
            s._toggleComplete(t);
          };
          return (
            typeof d === "number" && (o = d),
            typeof d === "string" && (r = d),
            (r = r || d.easing || u.easing),
            (o = o || d.duration || u.duration),
            n.length
              ? e.length
                ? ((i = e.show().outerHeight()),
                  n.animate(this.hideProps, {
                    duration: o,
                    easing: r,
                    step: function (e, t) {
                      t.now = Math.round(e);
                    },
                  }),
                  void e.hide().animate(this.showProps, {
                    duration: o,
                    easing: r,
                    complete: h,
                    step: function (e, t) {
                      (t.now = Math.round(e)),
                        t.prop !== "height"
                          ? l === "content-box" && (a += t.now)
                          : s.options.heightStyle !== "content" &&
                            ((t.now = Math.round(i - n.outerHeight() - a)),
                            (a = 0));
                    },
                  }))
                : n.animate(this.hideProps, o, r, h)
              : e.animate(this.showProps, o, r, h)
          );
        },
        _toggleComplete: function (e) {
          const t = e.oldPanel;
          const n = t.prev();
          this._removeClass(t, "ui-accordion-content-active"),
            this._removeClass(n, "ui-accordion-header-active")._addClass(
              n,
              "ui-accordion-header-collapsed",
            ),
            t.length && (t.parent()[0].className = t.parent()[0].className),
            this._trigger("activate", null, e);
        },
      }),
      te.widget("ui.menu", {
        version: "1.13.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
          icons: { submenu: "ui-icon-caret-1-e" },
          items: "> *",
          menus: "ul",
          position: { my: "left top", at: "right top" },
          role: "menu",
          blur: null,
          focus: null,
          select: null,
        },
        _create: function () {
          (this.activeMenu = this.element),
            (this.mouseHandled = !1),
            (this.lastMousePosition = { x: null, y: null }),
            this.element
              .uniqueId()
              .attr({ role: this.options.role, tabIndex: 0 }),
            this._addClass("ui-menu", "ui-widget ui-widget-content"),
            this._on({
              "mousedown .ui-menu-item": function (e) {
                e.preventDefault(), this._activateItem(e);
              },
              "click .ui-menu-item": function (e) {
                const t = te(e.target);
                const n = te(te.ui.safeActiveElement(this.document[0]));
                !this.mouseHandled &&
                  t.not(".ui-state-disabled").length &&
                  (this.select(e),
                  e.isPropagationStopped() || (this.mouseHandled = !0),
                  t.has(".ui-menu").length
                    ? this.expand(e)
                    : !this.element.is(":focus") &&
                      n.closest(".ui-menu").length &&
                      (this.element.trigger("focus", [!0]),
                      this.active &&
                        this.active.parents(".ui-menu").length === 1 &&
                        clearTimeout(this.timer)));
              },
              "mouseenter .ui-menu-item": "_activateItem",
              "mousemove .ui-menu-item": "_activateItem",
              mouseleave: "collapseAll",
              "mouseleave .ui-menu": "collapseAll",
              focus: function (e, t) {
                const n = this.active || this._menuItems().first();
                t || this.focus(e, n);
              },
              blur: function (e) {
                this._delay(function () {
                  !te.contains(
                    this.element[0],
                    te.ui.safeActiveElement(this.document[0]),
                  ) && this.collapseAll(e);
                });
              },
              keydown: "_keydown",
            }),
            this.refresh(),
            this._on(this.document, {
              click: function (e) {
                this._closeOnDocumentClick(e) && this.collapseAll(e, !0),
                  (this.mouseHandled = !1);
              },
            });
        },
        _activateItem: function (e) {
          if (
            !this.previousFilter &&
            (e.clientX !== this.lastMousePosition.x ||
              e.clientY !== this.lastMousePosition.y)
          ) {
            this.lastMousePosition = { x: e.clientX, y: e.clientY };
            const t = te(e.target).closest(".ui-menu-item");
            const n = te(e.currentTarget);
            t[0] === n[0] &&
              (n.is(".ui-state-active") ||
                (this._removeClass(
                  n.siblings().children(".ui-state-active"),
                  null,
                  "ui-state-active",
                ),
                this.focus(e, n)));
          }
        },
        _destroy: function () {
          const e = this.element
            .find(".ui-menu-item")
            .removeAttr("role aria-disabled")
            .children(".ui-menu-item-wrapper")
            .removeUniqueId()
            .removeAttr("tabIndex role aria-haspopup");
          this.element
            .removeAttr("aria-activedescendant")
            .find(".ui-menu")
            .addBack()
            .removeAttr(
              "role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex",
            )
            .removeUniqueId()
            .show(),
            e.children().each(function () {
              const e = te(this);
              e.data("ui-menu-submenu-caret") && e.remove();
            });
        },
        _keydown: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o = !0;
          switch (e.keyCode) {
            case te.ui.keyCode.PAGE_UP:
              this.previousPage(e);
              break;
            case te.ui.keyCode.PAGE_DOWN:
              this.nextPage(e);
              break;
            case te.ui.keyCode.HOME:
              this._move("first", "first", e);
              break;
            case te.ui.keyCode.END:
              this._move("last", "last", e);
              break;
            case te.ui.keyCode.UP:
              this.previous(e);
              break;
            case te.ui.keyCode.DOWN:
              this.next(e);
              break;
            case te.ui.keyCode.LEFT:
              this.collapse(e);
              break;
            case te.ui.keyCode.RIGHT:
              this.active &&
                !this.active.is(".ui-state-disabled") &&
                this.expand(e);
              break;
            case te.ui.keyCode.ENTER:
            case te.ui.keyCode.SPACE:
              this._activate(e);
              break;
            case te.ui.keyCode.ESCAPE:
              this.collapse(e);
              break;
            default:
              (o = !1),
                (n = this.previousFilter || ""),
                (r = !1),
                (i =
                  e.keyCode >= 96 && e.keyCode <= 105
                    ? (e.keyCode - 96).toString()
                    : String.fromCharCode(e.keyCode)),
                clearTimeout(this.filterTimer),
                i === n ? (r = !0) : (i = n + i),
                (t = this._filterMenuItems(i)),
                (t =
                  r && t.index(this.active.next()) !== -1
                    ? this.active.nextAll(".ui-menu-item")
                    : t).length ||
                  ((i = String.fromCharCode(e.keyCode)),
                  (t = this._filterMenuItems(i))),
                t.length
                  ? (this.focus(e, t),
                    (this.previousFilter = i),
                    (this.filterTimer = this._delay(function () {
                      delete this.previousFilter;
                    }, 1e3)))
                  : delete this.previousFilter;
          }
          o && e.preventDefault();
        },
        _activate: function (e) {
          this.active &&
            !this.active.is(".ui-state-disabled") &&
            (this.active.children("[aria-haspopup='true']").length
              ? this.expand(e)
              : this.select(e));
        },
        refresh: function () {
          let e;
          let t;
          let n;
          let i;
          const r = this;
          const o = this.options.icons.submenu;
          const s = this.element.find(this.options.menus);
          this._toggleClass(
            "ui-menu-icons",
            null,
            !!this.element.find(".ui-icon").length,
          ),
            (t = s
              .filter(":not(.ui-menu)")
              .hide()
              .attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false",
              })
              .each(function () {
                const e = te(this);
                const t = e.prev();
                const n = te("<span>").data("ui-menu-submenu-caret", !0);
                r._addClass(n, "ui-menu-icon", "ui-icon " + o),
                  t.attr("aria-haspopup", "true").prepend(n),
                  e.attr("aria-labelledby", t.attr("id"));
              })),
            this._addClass(
              t,
              "ui-menu",
              "ui-widget ui-widget-content ui-front",
            ),
            (e = s.add(this.element).find(this.options.items))
              .not(".ui-menu-item")
              .each(function () {
                const e = te(this);
                r._isDivider(e) &&
                  r._addClass(e, "ui-menu-divider", "ui-widget-content");
              }),
            (i = (n = e.not(".ui-menu-item, .ui-menu-divider"))
              .children()
              .not(".ui-menu")
              .uniqueId()
              .attr({ tabIndex: -1, role: this._itemRole() })),
            this._addClass(n, "ui-menu-item")._addClass(
              i,
              "ui-menu-item-wrapper",
            ),
            e.filter(".ui-state-disabled").attr("aria-disabled", "true"),
            this.active &&
              !te.contains(this.element[0], this.active[0]) &&
              this.blur();
        },
        _itemRole: function () {
          return { menu: "menuitem", listbox: "option" }[this.options.role];
        },
        _setOption: function (e, t) {
          if (e === "icons") {
            const n = this.element.find(".ui-menu-icon");
            this._removeClass(n, null, this.options.icons.submenu)._addClass(
              n,
              null,
              t.submenu,
            );
          }
          this._super(e, t);
        },
        _setOptionDisabled: function (e) {
          this._super(e),
            this.element.attr("aria-disabled", String(e)),
            this._toggleClass(null, "ui-state-disabled", !!e);
        },
        focus: function (e, t) {
          let n, i, r;
          this.blur(e, e && e.type === "focus"),
            this._scrollIntoView(t),
            (this.active = t.first()),
            (i = this.active.children(".ui-menu-item-wrapper")),
            this._addClass(i, null, "ui-state-active"),
            this.options.role &&
              this.element.attr("aria-activedescendant", i.attr("id")),
            (r = this.active
              .parent()
              .closest(".ui-menu-item")
              .children(".ui-menu-item-wrapper")),
            this._addClass(r, null, "ui-state-active"),
            e && e.type === "keydown"
              ? this._close()
              : (this.timer = this._delay(function () {
                  this._close();
                }, this.delay)),
            (n = t.children(".ui-menu")).length &&
              e &&
              /^mouse/.test(e.type) &&
              this._startOpening(n),
            (this.activeMenu = t.parent()),
            this._trigger("focus", e, { item: t });
        },
        _scrollIntoView: function (e) {
          let t, n, i, r, o, s;
          this._hasScroll() &&
            ((t =
              parseFloat(te.css(this.activeMenu[0], "borderTopWidth")) || 0),
            (n = parseFloat(te.css(this.activeMenu[0], "paddingTop")) || 0),
            (i = e.offset().top - this.activeMenu.offset().top - t - n),
            (r = this.activeMenu.scrollTop()),
            (o = this.activeMenu.height()),
            (s = e.outerHeight()),
            i < 0
              ? this.activeMenu.scrollTop(r + i)
              : o < i + s && this.activeMenu.scrollTop(r + i - o + s));
        },
        blur: function (e, t) {
          t || clearTimeout(this.timer),
            this.active &&
              (this._removeClass(
                this.active.children(".ui-menu-item-wrapper"),
                null,
                "ui-state-active",
              ),
              this._trigger("blur", e, { item: this.active }),
              (this.active = null));
        },
        _startOpening: function (e) {
          clearTimeout(this.timer),
            e.attr("aria-hidden") === "true" &&
              (this.timer = this._delay(function () {
                this._close(), this._open(e);
              }, this.delay));
        },
        _open: function (e) {
          const t = te.extend({ of: this.active }, this.options.position);
          clearTimeout(this.timer),
            this.element
              .find(".ui-menu")
              .not(e.parents(".ui-menu"))
              .hide()
              .attr("aria-hidden", "true"),
            e
              .show()
              .removeAttr("aria-hidden")
              .attr("aria-expanded", "true")
              .position(t);
        },
        collapseAll: function (t, n) {
          clearTimeout(this.timer),
            (this.timer = this._delay(
              function () {
                let e = n
                  ? this.element
                  : te(t && t.target).closest(this.element.find(".ui-menu"));
                e.length || (e = this.element),
                  this._close(e),
                  this.blur(t),
                  this._removeClass(
                    e.find(".ui-state-active"),
                    null,
                    "ui-state-active",
                  ),
                  (this.activeMenu = e);
              },
              n ? 0 : this.delay,
            ));
        },
        _close: function (e) {
          e || (e = this.active ? this.active.parent() : this.element),
            e
              .find(".ui-menu")
              .hide()
              .attr("aria-hidden", "true")
              .attr("aria-expanded", "false");
        },
        _closeOnDocumentClick: function (e) {
          return !te(e.target).closest(".ui-menu").length;
        },
        _isDivider: function (e) {
          return !/[^\-\u2014\u2013\s]/.test(e.text());
        },
        collapse: function (e) {
          const t =
            this.active &&
            this.active.parent().closest(".ui-menu-item", this.element);
          t && t.length && (this._close(), this.focus(e, t));
        },
        expand: function (e) {
          const t =
            this.active &&
            this._menuItems(this.active.children(".ui-menu")).first();
          t &&
            t.length &&
            (this._open(t.parent()),
            this._delay(function () {
              this.focus(e, t);
            }));
        },
        next: function (e) {
          this._move("next", "first", e);
        },
        previous: function (e) {
          this._move("prev", "last", e);
        },
        isFirstItem: function () {
          return this.active && !this.active.prevAll(".ui-menu-item").length;
        },
        isLastItem: function () {
          return this.active && !this.active.nextAll(".ui-menu-item").length;
        },
        _menuItems: function (e) {
          return (e || this.element)
            .find(this.options.items)
            .filter(".ui-menu-item");
        },
        _move: function (e, t, n) {
          let i;
          this.active &&
            (i =
              e === "first" || e === "last"
                ? this.active[e === "first" ? "prevAll" : "nextAll"](
                    ".ui-menu-item",
                  ).last()
                : this.active[e + "All"](".ui-menu-item").first()),
            (i && i.length && this.active) ||
              (i = this._menuItems(this.activeMenu)[t]()),
            this.focus(n, i);
        },
        nextPage: function (e) {
          let t, n, i;
          this.active
            ? this.isLastItem() ||
              (this._hasScroll()
                ? ((n = this.active.offset().top),
                  (i = this.element.innerHeight()),
                  te.fn.jquery.indexOf("3.2.") === 0 &&
                    (i +=
                      this.element[0].offsetHeight -
                      this.element.outerHeight()),
                  this.active.nextAll(".ui-menu-item").each(function () {
                    return (t = te(this)).offset().top - n - i < 0;
                  }),
                  this.focus(e, t))
                : this.focus(
                    e,
                    this._menuItems(this.activeMenu)[
                      this.active ? "last" : "first"
                    ](),
                  ))
            : this.next(e);
        },
        previousPage: function (e) {
          let t, n, i;
          this.active
            ? this.isFirstItem() ||
              (this._hasScroll()
                ? ((n = this.active.offset().top),
                  (i = this.element.innerHeight()),
                  te.fn.jquery.indexOf("3.2.") === 0 &&
                    (i +=
                      this.element[0].offsetHeight -
                      this.element.outerHeight()),
                  this.active.prevAll(".ui-menu-item").each(function () {
                    return (t = te(this)).offset().top - n + i > 0;
                  }),
                  this.focus(e, t))
                : this.focus(e, this._menuItems(this.activeMenu).first()))
            : this.next(e);
        },
        _hasScroll: function () {
          return this.element.outerHeight() < this.element.prop("scrollHeight");
        },
        select: function (e) {
          this.active = this.active || te(e.target).closest(".ui-menu-item");
          const t = { item: this.active };
          this.active.has(".ui-menu").length || this.collapseAll(e, !0),
            this._trigger("select", e, t);
        },
        _filterMenuItems: function (e) {
          const t = e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
          const n = new RegExp("^" + t, "i");
          return this.activeMenu
            .find(this.options.items)
            .filter(".ui-menu-item")
            .filter(function () {
              return n.test(
                String.prototype.trim.call(
                  te(this).children(".ui-menu-item-wrapper").text(),
                ),
              );
            });
        },
      });
    te.widget("ui.autocomplete", {
      version: "1.13.1",
      defaultElement: "<input>",
      options: {
        appendTo: null,
        autoFocus: !1,
        delay: 300,
        minLength: 1,
        position: { my: "left top", at: "left bottom", collision: "none" },
        source: null,
        change: null,
        close: null,
        focus: null,
        open: null,
        response: null,
        search: null,
        select: null,
      },
      requestIndex: 0,
      pending: 0,
      liveRegionTimer: null,
      _create: function () {
        let n;
        let i;
        let r;
        const e = this.element[0].nodeName.toLowerCase();
        const t = e === "textarea";
        const o = e === "input";
        (this.isMultiLine = t || (!o && this._isContentEditable(this.element))),
          (this.valueMethod = this.element[t || o ? "val" : "text"]),
          (this.isNewMenu = !0),
          this._addClass("ui-autocomplete-input"),
          this.element.attr("autocomplete", "off"),
          this._on(this.element, {
            keydown: function (e) {
              if (this.element.prop("readOnly")) i = r = n = !0;
              else {
                i = r = n = !1;
                const t = te.ui.keyCode;
                switch (e.keyCode) {
                  case t.PAGE_UP:
                    (n = !0), this._move("previousPage", e);
                    break;
                  case t.PAGE_DOWN:
                    (n = !0), this._move("nextPage", e);
                    break;
                  case t.UP:
                    (n = !0), this._keyEvent("previous", e);
                    break;
                  case t.DOWN:
                    (n = !0), this._keyEvent("next", e);
                    break;
                  case t.ENTER:
                    this.menu.active &&
                      ((n = !0), e.preventDefault(), this.menu.select(e));
                    break;
                  case t.TAB:
                    this.menu.active && this.menu.select(e);
                    break;
                  case t.ESCAPE:
                    this.menu.element.is(":visible") &&
                      (this.isMultiLine || this._value(this.term),
                      this.close(e),
                      e.preventDefault());
                    break;
                  default:
                    (i = !0), this._searchTimeout(e);
                }
              }
            },
            keypress: function (e) {
              if (n) {
                return (
                  (n = !1),
                  void (
                    (this.isMultiLine && !this.menu.element.is(":visible")) ||
                    e.preventDefault()
                  )
                );
              }
              if (!i) {
                const t = te.ui.keyCode;
                switch (e.keyCode) {
                  case t.PAGE_UP:
                    this._move("previousPage", e);
                    break;
                  case t.PAGE_DOWN:
                    this._move("nextPage", e);
                    break;
                  case t.UP:
                    this._keyEvent("previous", e);
                    break;
                  case t.DOWN:
                    this._keyEvent("next", e);
                }
              }
            },
            input: function (e) {
              if (r) return (r = !1), void e.preventDefault();
              this._searchTimeout(e);
            },
            focus: function () {
              (this.selectedItem = null), (this.previous = this._value());
            },
            blur: function (e) {
              clearTimeout(this.searching), this.close(e), this._change(e);
            },
          }),
          this._initSource(),
          (this.menu = te("<ul>")
            .appendTo(this._appendTo())
            .menu({ role: null })
            .hide()
            .attr({ unselectable: "on" })
            .menu("instance")),
          this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
          this._on(this.menu.element, {
            mousedown: function (e) {
              e.preventDefault();
            },
            menufocus: function (e, t) {
              let n, i;
              if (
                this.isNewMenu &&
                ((this.isNewMenu = !1),
                e.originalEvent && /^mouse/.test(e.originalEvent.type))
              ) {
                return (
                  this.menu.blur(),
                  void this.document.one("mousemove", function () {
                    te(e.target).trigger(e.originalEvent);
                  })
                );
              }
              (i = t.item.data("ui-autocomplete-item")),
                !1 !== this._trigger("focus", e, { item: i }) &&
                  e.originalEvent &&
                  /^key/.test(e.originalEvent.type) &&
                  this._value(i.value),
                (n = t.item.attr("aria-label") || i.value) &&
                  String.prototype.trim.call(n).length &&
                  (clearTimeout(this.liveRegionTimer),
                  (this.liveRegionTimer = this._delay(function () {
                    this.liveRegion.html(te("<div>").text(n));
                  }, 100)));
            },
            menuselect: function (e, t) {
              const n = t.item.data("ui-autocomplete-item");
              const i = this.previous;
              this.element[0] !== te.ui.safeActiveElement(this.document[0]) &&
                (this.element.trigger("focus"),
                (this.previous = i),
                this._delay(function () {
                  (this.previous = i), (this.selectedItem = n);
                })),
                !1 !== this._trigger("select", e, { item: n }) &&
                  this._value(n.value),
                (this.term = this._value()),
                this.close(e),
                (this.selectedItem = n);
            },
          }),
          (this.liveRegion = te("<div>", {
            role: "status",
            "aria-live": "assertive",
            "aria-relevant": "additions",
          }).appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _destroy: function () {
        clearTimeout(this.searching),
          this.element.removeAttr("autocomplete"),
          this.menu.element.remove(),
          this.liveRegion.remove();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          e === "source" && this._initSource(),
          e === "appendTo" && this.menu.element.appendTo(this._appendTo()),
          e === "disabled" && t && this.xhr && this.xhr.abort();
      },
      _isEventTargetInWidget: function (e) {
        const t = this.menu.element[0];
        return (
          e.target === this.element[0] ||
          e.target === t ||
          te.contains(t, e.target)
        );
      },
      _closeOnClickOutside: function (e) {
        this._isEventTargetInWidget(e) || this.close();
      },
      _appendTo: function () {
        let e = this.options.appendTo;
        return (
          e &&
            (e = e.jquery || e.nodeType ? te(e) : this.document.find(e).eq(0)),
          (e && e[0]) || (e = this.element.closest(".ui-front, dialog")),
          e.length || (e = this.document[0].body),
          e
        );
      },
      _initSource: function () {
        let n;
        let i;
        const r = this;
        Array.isArray(this.options.source)
          ? ((n = this.options.source),
            (this.source = function (e, t) {
              t(te.ui.autocomplete.filter(n, e.term));
            }))
          : typeof this.options.source === "string"
            ? ((i = this.options.source),
              (this.source = function (e, t) {
                r.xhr && r.xhr.abort(),
                  (r.xhr = te.ajax({
                    url: i,
                    data: e,
                    dataType: "json",
                    success: function (e) {
                      t(e);
                    },
                    error: function () {
                      t([]);
                    },
                  }));
              }))
            : (this.source = this.options.source);
      },
      _searchTimeout: function (i) {
        clearTimeout(this.searching),
          (this.searching = this._delay(function () {
            const e = this.term === this._value();
            const t = this.menu.element.is(":visible");
            const n = i.altKey || i.ctrlKey || i.metaKey || i.shiftKey;
            (e && (!e || t || n)) ||
              ((this.selectedItem = null), this.search(null, i));
          }, this.options.delay));
      },
      search: function (e, t) {
        return (
          (e = e != null ? e : this._value()),
          (this.term = this._value()),
          e.length < this.options.minLength
            ? this.close(t)
            : !1 !== this._trigger("search", t)
              ? this._search(e)
              : void 0
        );
      },
      _search: function (e) {
        this.pending++,
          this._addClass("ui-autocomplete-loading"),
          (this.cancelSearch = !1),
          this.source({ term: e }, this._response());
      },
      _response: function () {
        const t = ++this.requestIndex;
        return function (e) {
          t === this.requestIndex && this.__response(e),
            this.pending--,
            this.pending || this._removeClass("ui-autocomplete-loading");
        }.bind(this);
      },
      __response: function (e) {
        e && (e = this._normalize(e)),
          this._trigger("response", null, { content: e }),
          !this.options.disabled && e && e.length && !this.cancelSearch
            ? (this._suggest(e), this._trigger("open"))
            : this._close();
      },
      close: function (e) {
        (this.cancelSearch = !0), this._close(e);
      },
      _close: function (e) {
        this._off(this.document, "mousedown"),
          this.menu.element.is(":visible") &&
            (this.menu.element.hide(),
            this.menu.blur(),
            (this.isNewMenu = !0),
            this._trigger("close", e));
      },
      _change: function (e) {
        this.previous !== this._value() &&
          this._trigger("change", e, { item: this.selectedItem });
      },
      _normalize: function (e) {
        return e.length && e[0].label && e[0].value
          ? e
          : te.map(e, function (e) {
              return typeof e === "string"
                ? { label: e, value: e }
                : te.extend({}, e, {
                    label: e.label || e.value,
                    value: e.value || e.label,
                  });
            });
      },
      _suggest: function (e) {
        const t = this.menu.element.empty();
        this._renderMenu(t, e),
          (this.isNewMenu = !0),
          this.menu.refresh(),
          t.show(),
          this._resizeMenu(),
          t.position(te.extend({ of: this.element }, this.options.position)),
          this.options.autoFocus && this.menu.next(),
          this._on(this.document, { mousedown: "_closeOnClickOutside" });
      },
      _resizeMenu: function () {
        const e = this.menu.element;
        e.outerWidth(
          Math.max(e.width("").outerWidth() + 1, this.element.outerWidth()),
        );
      },
      _renderMenu: function (n, e) {
        const i = this;
        te.each(e, function (e, t) {
          i._renderItemData(n, t);
        });
      },
      _renderItemData: function (e, t) {
        return this._renderItem(e, t).data("ui-autocomplete-item", t);
      },
      _renderItem: function (e, t) {
        return te("<li>").append(te("<div>").text(t.label)).appendTo(e);
      },
      _move: function (e, t) {
        if (this.menu.element.is(":visible")) {
          return (this.menu.isFirstItem() && /^previous/.test(e)) ||
            (this.menu.isLastItem() && /^next/.test(e))
            ? (this.isMultiLine || this._value(this.term),
              void this.menu.blur())
            : void this.menu[e](t);
        }
        this.search(null, t);
      },
      widget: function () {
        return this.menu.element;
      },
      _value: function () {
        return this.valueMethod.apply(this.element, arguments);
      },
      _keyEvent: function (e, t) {
        (this.isMultiLine && !this.menu.element.is(":visible")) ||
          (this._move(e, t), t.preventDefault());
      },
      _isContentEditable: function (e) {
        if (!e.length) return !1;
        const t = e.prop("contentEditable");
        return t === "inherit"
          ? this._isContentEditable(e.parent())
          : t === "true";
      },
    }),
      te.extend(te.ui.autocomplete, {
        escapeRegex: function (e) {
          return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function (e, t) {
          const n = new RegExp(te.ui.autocomplete.escapeRegex(t), "i");
          return te.grep(e, function (e) {
            return n.test(e.label || e.value || e);
          });
        },
      }),
      te.widget("ui.autocomplete", te.ui.autocomplete, {
        options: {
          messages: {
            noResults: "No search results.",
            results: function (e) {
              return (
                e +
                (e > 1 ? " results are" : " result is") +
                " available, use up and down arrow keys to navigate."
              );
            },
          },
        },
        __response: function (e) {
          let t;
          this._superApply(arguments),
            this.options.disabled ||
              this.cancelSearch ||
              ((t =
                e && e.length
                  ? this.options.messages.results(e.length)
                  : this.options.messages.noResults),
              clearTimeout(this.liveRegionTimer),
              (this.liveRegionTimer = this._delay(function () {
                this.liveRegion.html(te("<div>").text(t));
              }, 100)));
        },
      });
    te.ui.autocomplete;
    const _ = /ui-corner-([a-z]){2,6}/g;
    te.widget("ui.controlgroup", {
      version: "1.13.1",
      defaultElement: "<div>",
      options: {
        direction: "horizontal",
        disabled: null,
        onlyVisible: !0,
        items: {
          button:
            "input[type=button], input[type=submit], input[type=reset], button, a",
          controlgroupLabel: ".ui-controlgroup-label",
          checkboxradio: "input[type='checkbox'], input[type='radio']",
          selectmenu: "select",
          spinner: ".ui-spinner-input",
        },
      },
      _create: function () {
        this._enhance();
      },
      _enhance: function () {
        this.element.attr("role", "toolbar"), this.refresh();
      },
      _destroy: function () {
        this._callChildMethod("destroy"),
          this.childWidgets.removeData("ui-controlgroup-data"),
          this.element.removeAttr("role"),
          this.options.items.controlgroupLabel &&
            this.element
              .find(this.options.items.controlgroupLabel)
              .find(".ui-controlgroup-label-contents")
              .contents()
              .unwrap();
      },
      _initWidgets: function () {
        const s = this;
        let a = [];
        te.each(this.options.items, function (r, e) {
          let t;
          let o = {};
          if (e) {
            return r === "controlgroupLabel"
              ? ((t = s.element.find(e)).each(function () {
                  const e = te(this);
                  e.children(".ui-controlgroup-label-contents").length ||
                    e
                      .contents()
                      .wrapAll(
                        "<span class='ui-controlgroup-label-contents'></span>",
                      );
                }),
                s._addClass(
                  t,
                  null,
                  "ui-widget ui-widget-content ui-state-default",
                ),
                void (a = a.concat(t.get())))
              : void (
                  te.fn[r] &&
                  ((o = s["_" + r + "Options"]
                    ? s["_" + r + "Options"]("middle")
                    : { classes: {} }),
                  s.element.find(e).each(function () {
                    const e = te(this);
                    let t = e[r]("instance");
                    const n = te.widget.extend({}, o);
                    if (r !== "button" || !e.parent(".ui-spinner").length) {
                      t || (t = e[r]()[r]("instance")),
                        t &&
                          (n.classes = s._resolveClassesValues(n.classes, t)),
                        e[r](n);
                      const i = e[r]("widget");
                      te.data(
                        i[0],
                        "ui-controlgroup-data",
                        t || e[r]("instance"),
                      ),
                        a.push(i[0]);
                    }
                  }))
                );
          }
        }),
          (this.childWidgets = te(te.uniqueSort(a))),
          this._addClass(this.childWidgets, "ui-controlgroup-item");
      },
      _callChildMethod: function (t) {
        this.childWidgets.each(function () {
          const e = te(this).data("ui-controlgroup-data");
          e && e[t] && e[t]();
        });
      },
      _updateCornerClass: function (e, t) {
        const n =
          "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all";
        const i = this._buildSimpleOptions(t, "label").classes.label;
        this._removeClass(e, null, n), this._addClass(e, null, i);
      },
      _buildSimpleOptions: function (e, t) {
        const n = this.options.direction === "vertical";
        const i = { classes: {} };
        return (
          (i.classes[t] = {
            middle: "",
            first: "ui-corner-" + (n ? "top" : "left"),
            last: "ui-corner-" + (n ? "bottom" : "right"),
            only: "ui-corner-all",
          }[e]),
          i
        );
      },
      _spinnerOptions: function (e) {
        const t = this._buildSimpleOptions(e, "ui-spinner");
        return (
          (t.classes["ui-spinner-up"] = ""),
          (t.classes["ui-spinner-down"] = ""),
          t
        );
      },
      _buttonOptions: function (e) {
        return this._buildSimpleOptions(e, "ui-button");
      },
      _checkboxradioOptions: function (e) {
        return this._buildSimpleOptions(e, "ui-checkboxradio-label");
      },
      _selectmenuOptions: function (e) {
        const t = this.options.direction === "vertical";
        return {
          width: !!t && "auto",
          classes: {
            middle: {
              "ui-selectmenu-button-open": "",
              "ui-selectmenu-button-closed": "",
            },
            first: {
              "ui-selectmenu-button-open": "ui-corner-" + (t ? "top" : "tl"),
              "ui-selectmenu-button-closed":
                "ui-corner-" + (t ? "top" : "left"),
            },
            last: {
              "ui-selectmenu-button-open": t ? "" : "ui-corner-tr",
              "ui-selectmenu-button-closed":
                "ui-corner-" + (t ? "bottom" : "right"),
            },
            only: {
              "ui-selectmenu-button-open": "ui-corner-top",
              "ui-selectmenu-button-closed": "ui-corner-all",
            },
          }[e],
        };
      },
      _resolveClassesValues: function (n, i) {
        const r = {};
        return (
          te.each(n, function (e) {
            let t = i.options.classes[e] || "";
            (t = String.prototype.trim.call(t.replace(_, ""))),
              (r[e] = (t + " " + n[e]).replace(/\s+/g, " "));
          }),
          r
        );
      },
      _setOption: function (e, t) {
        e === "direction" &&
          this._removeClass("ui-controlgroup-" + this.options.direction),
          this._super(e, t),
          e !== "disabled"
            ? this.refresh()
            : this._callChildMethod(t ? "disable" : "enable");
      },
      refresh: function () {
        let r;
        const o = this;
        this._addClass(
          "ui-controlgroup ui-controlgroup-" + this.options.direction,
        ),
          this.options.direction === "horizontal" &&
            this._addClass(null, "ui-helper-clearfix"),
          this._initWidgets(),
          (r = this.childWidgets),
          this.options.onlyVisible && (r = r.filter(":visible")),
          r.length &&
            (te.each(["first", "last"], function (e, t) {
              const n = r[t]().data("ui-controlgroup-data");
              if (n && o["_" + n.widgetName + "Options"]) {
                const i = o["_" + n.widgetName + "Options"](
                  r.length === 1 ? "only" : t,
                );
                (i.classes = o._resolveClassesValues(i.classes, n)),
                  n.element[n.widgetName](i);
              } else o._updateCornerClass(r[t](), t);
            }),
            this._callChildMethod("refresh"));
      },
    });
    te.widget("ui.checkboxradio", [
      te.ui.formResetMixin,
      {
        version: "1.13.1",
        options: {
          disabled: null,
          label: null,
          icon: !0,
          classes: {
            "ui-checkboxradio-label": "ui-corner-all",
            "ui-checkboxradio-icon": "ui-corner-all",
          },
        },
        _getCreateOptions: function () {
          let e;
          let t;
          const n = this;
          const i = this._super() || {};
          return (
            this._readType(),
            (t = this.element.labels()),
            (this.label = te(t[t.length - 1])),
            this.label.length ||
              te.error("No label found for checkboxradio widget"),
            (this.originalLabel = ""),
            this.label
              .contents()
              .not(this.element[0])
              .each(function () {
                n.originalLabel +=
                  this.nodeType === 3 ? te(this).text() : this.outerHTML;
              }),
            this.originalLabel && (i.label = this.originalLabel),
            (e = this.element[0].disabled) != null && (i.disabled = e),
            i
          );
        },
        _create: function () {
          const e = this.element[0].checked;
          this._bindFormResetHandler(),
            this.options.disabled == null &&
              (this.options.disabled = this.element[0].disabled),
            this._setOption("disabled", this.options.disabled),
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
            this._addClass(
              this.label,
              "ui-checkboxradio-label",
              "ui-button ui-widget",
            ),
            this.type === "radio" &&
              this._addClass(this.label, "ui-checkboxradio-radio-label"),
            this.options.label && this.options.label !== this.originalLabel
              ? this._updateLabel()
              : this.originalLabel && (this.options.label = this.originalLabel),
            this._enhance(),
            e &&
              this._addClass(
                this.label,
                "ui-checkboxradio-checked",
                "ui-state-active",
              ),
            this._on({
              change: "_toggleClasses",
              focus: function () {
                this._addClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus",
                );
              },
              blur: function () {
                this._removeClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus",
                );
              },
            });
        },
        _readType: function () {
          const e = this.element[0].nodeName.toLowerCase();
          (this.type = this.element[0].type),
            (e === "input" && /radio|checkbox/.test(this.type)) ||
              te.error(
                "Can't create checkboxradio on element.nodeName=" +
                  e +
                  " and element.type=" +
                  this.type,
              );
        },
        _enhance: function () {
          this._updateIcon(this.element[0].checked);
        },
        widget: function () {
          return this.label;
        },
        _getRadioGroup: function () {
          const e = this.element[0].name;
          const t = "input[name='" + te.escapeSelector(e) + "']";
          return e
            ? (this.form.length
                ? te(this.form[0].elements).filter(t)
                : te(t).filter(function () {
                    return te(this)._form().length === 0;
                  })
              ).not(this.element)
            : te([]);
        },
        _toggleClasses: function () {
          const e = this.element[0].checked;
          this._toggleClass(
            this.label,
            "ui-checkboxradio-checked",
            "ui-state-active",
            e,
          ),
            this.options.icon &&
              this.type === "checkbox" &&
              this._toggleClass(
                this.icon,
                null,
                "ui-icon-check ui-state-checked",
                e,
              )._toggleClass(this.icon, null, "ui-icon-blank", !e),
            this.type === "radio" &&
              this._getRadioGroup().each(function () {
                const e = te(this).checkboxradio("instance");
                e &&
                  e._removeClass(
                    e.label,
                    "ui-checkboxradio-checked",
                    "ui-state-active",
                  );
              });
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.icon && (this.icon.remove(), this.iconSpace.remove());
        },
        _setOption: function (e, t) {
          if (e !== "label" || t) {
            if ((this._super(e, t), e === "disabled")) {
              return (
                this._toggleClass(this.label, null, "ui-state-disabled", t),
                void (this.element[0].disabled = t)
              );
            }
            this.refresh();
          }
        },
        _updateIcon: function (e) {
          let t = "ui-icon ui-icon-background ";
          this.options.icon
            ? (this.icon ||
                ((this.icon = te("<span>")),
                (this.iconSpace = te("<span> </span>")),
                this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
              this.type === "checkbox"
                ? ((t += e
                    ? "ui-icon-check ui-state-checked"
                    : "ui-icon-blank"),
                  this._removeClass(
                    this.icon,
                    null,
                    e ? "ui-icon-blank" : "ui-icon-check",
                  ))
                : (t += "ui-icon-blank"),
              this._addClass(this.icon, "ui-checkboxradio-icon", t),
              e ||
                this._removeClass(
                  this.icon,
                  null,
                  "ui-icon-check ui-state-checked",
                ),
              this.icon.prependTo(this.label).after(this.iconSpace))
            : this.icon !== undefined &&
              (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
        },
        _updateLabel: function () {
          let e = this.label.contents().not(this.element[0]);
          this.icon && (e = e.not(this.icon[0])),
            this.iconSpace && (e = e.not(this.iconSpace[0])),
            e.remove(),
            this.label.append(this.options.label);
        },
        refresh: function () {
          const e = this.element[0].checked;
          const t = this.element[0].disabled;
          this._updateIcon(e),
            this._toggleClass(
              this.label,
              "ui-checkboxradio-checked",
              "ui-state-active",
              e,
            ),
            this.options.label !== null && this._updateLabel(),
            t !== this.options.disabled && this._setOptions({ disabled: t });
        },
      },
    ]);
    let x;
    te.ui.checkboxradio;
    te.widget("ui.button", {
      version: "1.13.1",
      defaultElement: "<button>",
      options: {
        classes: { "ui-button": "ui-corner-all" },
        disabled: null,
        icon: null,
        iconPosition: "beginning",
        label: null,
        showLabel: !0,
      },
      _getCreateOptions: function () {
        let e;
        const t = this._super() || {};
        return (
          (this.isInput = this.element.is("input")),
          (e = this.element[0].disabled) != null && (t.disabled = e),
          (this.originalLabel = this.isInput
            ? this.element.val()
            : this.element.html()),
          this.originalLabel && (t.label = this.originalLabel),
          t
        );
      },
      _create: function () {
        !this.option.showLabel & !this.options.icon &&
          (this.options.showLabel = !0),
          this.options.disabled == null &&
            (this.options.disabled = this.element[0].disabled || !1),
          (this.hasTitle = !!this.element.attr("title")),
          this.options.label &&
            this.options.label !== this.originalLabel &&
            (this.isInput
              ? this.element.val(this.options.label)
              : this.element.html(this.options.label)),
          this._addClass("ui-button", "ui-widget"),
          this._setOption("disabled", this.options.disabled),
          this._enhance(),
          this.element.is("a") &&
            this._on({
              keyup: function (e) {
                e.keyCode === te.ui.keyCode.SPACE &&
                  (e.preventDefault(),
                  this.element[0].click
                    ? this.element[0].click()
                    : this.element.trigger("click"));
              },
            });
      },
      _enhance: function () {
        this.element.is("button") || this.element.attr("role", "button"),
          this.options.icon &&
            (this._updateIcon("icon", this.options.icon),
            this._updateTooltip());
      },
      _updateTooltip: function () {
        (this.title = this.element.attr("title")),
          this.options.showLabel ||
            this.title ||
            this.element.attr("title", this.options.label);
      },
      _updateIcon: function (e, t) {
        const n = e !== "iconPosition";
        const i = n ? this.options.iconPosition : t;
        const r = i === "top" || i === "bottom";
        this.icon
          ? n && this._removeClass(this.icon, null, this.options.icon)
          : ((this.icon = te("<span>")),
            this._addClass(this.icon, "ui-button-icon", "ui-icon"),
            this.options.showLabel || this._addClass("ui-button-icon-only")),
          n && this._addClass(this.icon, null, t),
          this._attachIcon(i),
          r
            ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
              this.iconSpace && this.iconSpace.remove())
            : (this.iconSpace ||
                ((this.iconSpace = te("<span> </span>")),
                this._addClass(this.iconSpace, "ui-button-icon-space")),
              this._removeClass(this.icon, null, "ui-wiget-icon-block"),
              this._attachIconSpace(i));
      },
      _destroy: function () {
        this.element.removeAttr("role"),
          this.icon && this.icon.remove(),
          this.iconSpace && this.iconSpace.remove(),
          this.hasTitle || this.element.removeAttr("title");
      },
      _attachIconSpace: function (e) {
        this.icon[/^(?:end|bottom)/.test(e) ? "before" : "after"](
          this.iconSpace,
        );
      },
      _attachIcon: function (e) {
        this.element[/^(?:end|bottom)/.test(e) ? "append" : "prepend"](
          this.icon,
        );
      },
      _setOptions: function (e) {
        const t =
          e.showLabel === undefined ? this.options.showLabel : e.showLabel;
        const n = e.icon === undefined ? this.options.icon : e.icon;
        t || n || (e.showLabel = !0), this._super(e);
      },
      _setOption: function (e, t) {
        e === "icon" &&
          (t
            ? this._updateIcon(e, t)
            : this.icon &&
              (this.icon.remove(), this.iconSpace && this.iconSpace.remove())),
          e === "iconPosition" && this._updateIcon(e, t),
          e === "showLabel" &&
            (this._toggleClass("ui-button-icon-only", null, !t),
            this._updateTooltip()),
          e === "label" &&
            (this.isInput
              ? this.element.val(t)
              : (this.element.html(t),
                this.icon &&
                  (this._attachIcon(this.options.iconPosition),
                  this._attachIconSpace(this.options.iconPosition)))),
          this._super(e, t),
          e === "disabled" &&
            (this._toggleClass(null, "ui-state-disabled", t),
            (this.element[0].disabled = t) && this.element.trigger("blur"));
      },
      refresh: function () {
        const e = this.element.is("input, button")
          ? this.element[0].disabled
          : this.element.hasClass("ui-button-disabled");
        e !== this.options.disabled && this._setOptions({ disabled: e }),
          this._updateTooltip();
      },
    }),
      !1 !== te.uiBackCompat &&
        (te.widget("ui.button", te.ui.button, {
          options: { text: !0, icons: { primary: null, secondary: null } },
          _create: function () {
            this.options.showLabel &&
              !this.options.text &&
              (this.options.showLabel = this.options.text),
              !this.options.showLabel &&
                this.options.text &&
                (this.options.text = this.options.showLabel),
              this.options.icon ||
              (!this.options.icons.primary && !this.options.icons.secondary)
                ? this.options.icon &&
                  (this.options.icons.primary = this.options.icon)
                : this.options.icons.primary
                  ? (this.options.icon = this.options.icons.primary)
                  : ((this.options.icon = this.options.icons.secondary),
                    (this.options.iconPosition = "end")),
              this._super();
          },
          _setOption: function (e, t) {
            e !== "text"
              ? (e === "showLabel" && (this.options.text = t),
                e === "icon" && (this.options.icons.primary = t),
                e === "icons" &&
                  (t.primary
                    ? (this._super("icon", t.primary),
                      this._super("iconPosition", "beginning"))
                    : t.secondary &&
                      (this._super("icon", t.secondary),
                      this._super("iconPosition", "end"))),
                this._superApply(arguments))
              : this._super("showLabel", t);
          },
        }),
        (te.fn.button =
          ((x = te.fn.button),
          function (r) {
            const e = typeof r === "string";
            const o = Array.prototype.slice.call(arguments, 1);
            let s = this;
            return (
              e
                ? this.length || r !== "instance"
                  ? this.each(function () {
                      let e;
                      const t = te(this).attr("type");
                      const n =
                        t !== "checkbox" && t !== "radio"
                          ? "button"
                          : "checkboxradio";
                      const i = te.data(this, "ui-" + n);
                      return r === "instance"
                        ? ((s = i), !1)
                        : i
                          ? typeof i[r] !== "function" || r.charAt(0) === "_"
                            ? te.error(
                                "no such method '" +
                                  r +
                                  "' for button widget instance",
                              )
                            : (e = i[r].apply(i, o)) !== i && e !== undefined
                              ? ((s = e && e.jquery ? s.pushStack(e.get()) : e),
                                !1)
                              : void 0
                          : te.error(
                              "cannot call methods on button prior to initialization; attempted to call method '" +
                                r +
                                "'",
                            );
                    })
                  : (s = undefined)
                : (o.length &&
                    (r = te.widget.extend.apply(null, [r].concat(o))),
                  this.each(function () {
                    const e = te(this).attr("type");
                    const t =
                      e !== "checkbox" && e !== "radio"
                        ? "button"
                        : "checkboxradio";
                    const n = te.data(this, "ui-" + t);
                    if (n) n.option(r || {}), n._init && n._init();
                    else {
                      if (t === "button") return void x.call(te(this), r);
                      te(this).checkboxradio(te.extend({ icon: !1 }, r));
                    }
                  })),
              s
            );
          })),
        (te.fn.buttonset = function (e, t, n) {
          return (
            te.ui.controlgroup || te.error("Controlgroup widget missing"),
            e === "option" && t === "items" && n
              ? this.controlgroup.apply(this, [
                  arguments[0],
                  "items.button",
                  arguments[2],
                ])
              : arguments[0] === "option" && arguments[1] === "items"
                ? this.controlgroup.apply(this, [arguments[0], "items.button"])
                : (typeof arguments[0] === "object" &&
                    arguments[0].items &&
                    (arguments[0].items = { button: arguments[0].items }),
                  this.controlgroup.apply(this, arguments))
          );
        }));
    let w;
    te.ui.button;
    te.extend(te.ui, { datepicker: { version: "1.13.1" } }),
      te.extend(e.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function () {
          return this.dpDiv;
        },
        setDefaults: function (e) {
          return d(this._defaults, e || {}), this;
        },
        _attachDatepicker: function (e, t) {
          let n, i, r;
          (i = (n = e.nodeName.toLowerCase()) === "div" || n === "span"),
            e.id || ((this.uuid += 1), (e.id = "dp" + this.uuid)),
            ((r = this._newInst(te(e), i)).settings = te.extend({}, t || {})),
            n === "input"
              ? this._connectDatepicker(e, r)
              : i && this._inlineDatepicker(e, r);
        },
        _newInst: function (e, t) {
          return {
            id: e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
            input: e,
            selectedDay: 0,
            selectedMonth: 0,
            selectedYear: 0,
            drawMonth: 0,
            drawYear: 0,
            inline: t,
            dpDiv: t
              ? n(
                  te(
                    "<div class='" +
                      this._inlineClass +
                      " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>",
                  ),
                )
              : this.dpDiv,
          };
        },
        _connectDatepicker: function (e, t) {
          const n = te(e);
          (t.append = te([])),
            (t.trigger = te([])),
            n.hasClass(this.markerClassName) ||
              (this._attachments(n, t),
              n
                .addClass(this.markerClassName)
                .on("keydown", this._doKeyDown)
                .on("keypress", this._doKeyPress)
                .on("keyup", this._doKeyUp),
              this._autoSize(t),
              te.data(e, "datepicker", t),
              t.settings.disabled && this._disableDatepicker(e));
        },
        _attachments: function (e, t) {
          let n;
          let i;
          let r;
          const o = this._get(t, "appendText");
          const s = this._get(t, "isRTL");
          t.append && t.append.remove(),
            o &&
              ((t.append = te("<span>").addClass(this._appendClass).text(o)),
              e[s ? "before" : "after"](t.append)),
            e.off("focus", this._showDatepicker),
            t.trigger && t.trigger.remove(),
            ((n = this._get(t, "showOn")) !== "focus" && n !== "both") ||
              e.on("focus", this._showDatepicker),
            (n !== "button" && n !== "both") ||
              ((i = this._get(t, "buttonText")),
              (r = this._get(t, "buttonImage")),
              this._get(t, "buttonImageOnly")
                ? (t.trigger = te("<img>")
                    .addClass(this._triggerClass)
                    .attr({ src: r, alt: i, title: i }))
                : ((t.trigger = te("<button type='button'>").addClass(
                    this._triggerClass,
                  )),
                  r
                    ? t.trigger.html(
                        te("<img>").attr({ src: r, alt: i, title: i }),
                      )
                    : t.trigger.text(i)),
              e[s ? "before" : "after"](t.trigger),
              t.trigger.on("click", function () {
                return (
                  te.datepicker._datepickerShowing &&
                  te.datepicker._lastInput === e[0]
                    ? te.datepicker._hideDatepicker()
                    : (te.datepicker._datepickerShowing &&
                        te.datepicker._lastInput !== e[0] &&
                        te.datepicker._hideDatepicker(),
                      te.datepicker._showDatepicker(e[0])),
                  !1
                );
              }));
        },
        _autoSize: function (e) {
          if (this._get(e, "autoSize") && !e.inline) {
            let t;
            let n;
            let i;
            let r;
            const o = new Date(2009, 11, 20);
            const s = this._get(e, "dateFormat");
            s.match(/[DM]/) &&
              ((t = function (e) {
                for (r = i = n = 0; r < e.length; r++) {
                  e[r].length > n && ((n = e[r].length), (i = r));
                }
                return i;
              }),
              o.setMonth(
                t(
                  this._get(
                    e,
                    s.match(/MM/) ? "monthNames" : "monthNamesShort",
                  ),
                ),
              ),
              o.setDate(
                t(this._get(e, s.match(/DD/) ? "dayNames" : "dayNamesShort")) +
                  20 -
                  o.getDay(),
              )),
              e.input.attr("size", this._formatDate(e, o).length);
          }
        },
        _inlineDatepicker: function (e, t) {
          const n = te(e);
          n.hasClass(this.markerClassName) ||
            (n.addClass(this.markerClassName).append(t.dpDiv),
            te.data(e, "datepicker", t),
            this._setDate(t, this._getDefaultDate(t), !0),
            this._updateDatepicker(t),
            this._updateAlternate(t),
            t.settings.disabled && this._disableDatepicker(e),
            t.dpDiv.css("display", "block"));
        },
        _dialogDatepicker: function (e, t, n, i, r) {
          let o;
          let s;
          let a;
          let l;
          let c;
          let u = this._dialogInst;
          return (
            u ||
              ((this.uuid += 1),
              (o = "dp" + this.uuid),
              (this._dialogInput = te(
                "<input type='text' id='" +
                  o +
                  "' style='position: absolute; top: -100px; width: 0px;'/>",
              )),
              this._dialogInput.on("keydown", this._doKeyDown),
              te("body").append(this._dialogInput),
              ((u = this._dialogInst =
                this._newInst(this._dialogInput, !1)).settings = {}),
              te.data(this._dialogInput[0], "datepicker", u)),
            d(u.settings, i || {}),
            (t = t && t.constructor === Date ? this._formatDate(u, t) : t),
            this._dialogInput.val(t),
            (this._pos = r ? (r.length ? r : [r.pageX, r.pageY]) : null),
            this._pos ||
              ((s = document.documentElement.clientWidth),
              (a = document.documentElement.clientHeight),
              (l =
                document.documentElement.scrollLeft ||
                document.body.scrollLeft),
              (c =
                document.documentElement.scrollTop || document.body.scrollTop),
              (this._pos = [s / 2 - 100 + l, a / 2 - 150 + c])),
            this._dialogInput
              .css("left", this._pos[0] + 20 + "px")
              .css("top", this._pos[1] + "px"),
            (u.settings.onSelect = n),
            (this._inDialog = !0),
            this.dpDiv.addClass(this._dialogClass),
            this._showDatepicker(this._dialogInput[0]),
            te.blockUI && te.blockUI(this.dpDiv),
            te.data(this._dialogInput[0], "datepicker", u),
            this
          );
        },
        _destroyDatepicker: function (e) {
          let t;
          const n = te(e);
          const i = te.data(e, "datepicker");
          n.hasClass(this.markerClassName) &&
            ((t = e.nodeName.toLowerCase()),
            te.removeData(e, "datepicker"),
            t === "input"
              ? (i.append.remove(),
                i.trigger.remove(),
                n
                  .removeClass(this.markerClassName)
                  .off("focus", this._showDatepicker)
                  .off("keydown", this._doKeyDown)
                  .off("keypress", this._doKeyPress)
                  .off("keyup", this._doKeyUp))
              : (t !== "div" && t !== "span") ||
                n.removeClass(this.markerClassName).empty(),
            w === i && ((w = null), (this._curInst = null)));
        },
        _enableDatepicker: function (t) {
          let e;
          let n;
          const i = te(t);
          const r = te.data(t, "datepicker");
          i.hasClass(this.markerClassName) &&
            ((e = t.nodeName.toLowerCase()) === "input"
              ? ((t.disabled = !1),
                r.trigger
                  .filter("button")
                  .each(function () {
                    this.disabled = !1;
                  })
                  .end()
                  .filter("img")
                  .css({ opacity: "1.0", cursor: "" }))
              : (e !== "div" && e !== "span") ||
                ((n = i.children("." + this._inlineClass))
                  .children()
                  .removeClass("ui-state-disabled"),
                n
                  .find("select.ui-datepicker-month, select.ui-datepicker-year")
                  .prop("disabled", !1)),
            (this._disabledInputs = te.map(this._disabledInputs, function (e) {
              return e === t ? null : e;
            })));
        },
        _disableDatepicker: function (t) {
          let e;
          let n;
          const i = te(t);
          const r = te.data(t, "datepicker");
          i.hasClass(this.markerClassName) &&
            ((e = t.nodeName.toLowerCase()) === "input"
              ? ((t.disabled = !0),
                r.trigger
                  .filter("button")
                  .each(function () {
                    this.disabled = !0;
                  })
                  .end()
                  .filter("img")
                  .css({ opacity: "0.5", cursor: "default" }))
              : (e !== "div" && e !== "span") ||
                ((n = i.children("." + this._inlineClass))
                  .children()
                  .addClass("ui-state-disabled"),
                n
                  .find("select.ui-datepicker-month, select.ui-datepicker-year")
                  .prop("disabled", !0)),
            (this._disabledInputs = te.map(this._disabledInputs, function (e) {
              return e === t ? null : e;
            })),
            (this._disabledInputs[this._disabledInputs.length] = t));
        },
        _isDisabledDatepicker: function (e) {
          if (!e) return !1;
          for (let t = 0; t < this._disabledInputs.length; t++) {
            if (this._disabledInputs[t] === e) return !0;
          }
          return !1;
        },
        _getInst: function (e) {
          try {
            return te.data(e, "datepicker");
          } catch (t) {
            throw "Missing instance data for this datepicker";
          }
        },
        _optionDatepicker: function (e, t, n) {
          let i;
          let r;
          let o;
          let s;
          const a = this._getInst(e);
          if (arguments.length === 2 && typeof t === "string") {
            return t === "defaults"
              ? te.extend({}, te.datepicker._defaults)
              : a
                ? t === "all"
                  ? te.extend({}, a.settings)
                  : this._get(a, t)
                : null;
          }
          (i = t || {}),
            typeof t === "string" && ((i = {})[t] = n),
            a &&
              (this._curInst === a && this._hideDatepicker(),
              (r = this._getDateDatepicker(e, !0)),
              (o = this._getMinMaxDate(a, "min")),
              (s = this._getMinMaxDate(a, "max")),
              d(a.settings, i),
              o !== null &&
                i.dateFormat !== undefined &&
                i.minDate === undefined &&
                (a.settings.minDate = this._formatDate(a, o)),
              s !== null &&
                i.dateFormat !== undefined &&
                i.maxDate === undefined &&
                (a.settings.maxDate = this._formatDate(a, s)),
              "disabled" in i &&
                (i.disabled
                  ? this._disableDatepicker(e)
                  : this._enableDatepicker(e)),
              this._attachments(te(e), a),
              this._autoSize(a),
              this._setDate(a, r),
              this._updateAlternate(a),
              this._updateDatepicker(a));
        },
        _changeDatepicker: function (e, t, n) {
          this._optionDatepicker(e, t, n);
        },
        _refreshDatepicker: function (e) {
          const t = this._getInst(e);
          t && this._updateDatepicker(t);
        },
        _setDateDatepicker: function (e, t) {
          const n = this._getInst(e);
          n &&
            (this._setDate(n, t),
            this._updateDatepicker(n),
            this._updateAlternate(n));
        },
        _getDateDatepicker: function (e, t) {
          const n = this._getInst(e);
          return (
            n && !n.inline && this._setDateFromField(n, t),
            n ? this._getDate(n) : null
          );
        },
        _doKeyDown: function (e) {
          let t;
          let n;
          let i;
          const r = te.datepicker._getInst(e.target);
          let o = !0;
          const s = r.dpDiv.is(".ui-datepicker-rtl");
          if (((r._keyEvent = !0), te.datepicker._datepickerShowing)) {
            switch (e.keyCode) {
              case 9:
                te.datepicker._hideDatepicker(), (o = !1);
                break;
              case 13:
                return (
                  (i = te(
                    "td." +
                      te.datepicker._dayOverClass +
                      ":not(." +
                      te.datepicker._currentClass +
                      ")",
                    r.dpDiv,
                  ))[0] &&
                    te.datepicker._selectDay(
                      e.target,
                      r.selectedMonth,
                      r.selectedYear,
                      i[0],
                    ),
                  (t = te.datepicker._get(r, "onSelect"))
                    ? ((n = te.datepicker._formatDate(r)),
                      t.apply(r.input ? r.input[0] : null, [n, r]))
                    : te.datepicker._hideDatepicker(),
                  !1
                );
              case 27:
                te.datepicker._hideDatepicker();
                break;
              case 33:
                te.datepicker._adjustDate(
                  e.target,
                  e.ctrlKey
                    ? -te.datepicker._get(r, "stepBigMonths")
                    : -te.datepicker._get(r, "stepMonths"),
                  "M",
                );
                break;
              case 34:
                te.datepicker._adjustDate(
                  e.target,
                  e.ctrlKey
                    ? +te.datepicker._get(r, "stepBigMonths")
                    : +te.datepicker._get(r, "stepMonths"),
                  "M",
                );
                break;
              case 35:
                (e.ctrlKey || e.metaKey) && te.datepicker._clearDate(e.target),
                  (o = e.ctrlKey || e.metaKey);
                break;
              case 36:
                (e.ctrlKey || e.metaKey) && te.datepicker._gotoToday(e.target),
                  (o = e.ctrlKey || e.metaKey);
                break;
              case 37:
                (e.ctrlKey || e.metaKey) &&
                  te.datepicker._adjustDate(e.target, s ? 1 : -1, "D"),
                  (o = e.ctrlKey || e.metaKey),
                  e.originalEvent.altKey &&
                    te.datepicker._adjustDate(
                      e.target,
                      e.ctrlKey
                        ? -te.datepicker._get(r, "stepBigMonths")
                        : -te.datepicker._get(r, "stepMonths"),
                      "M",
                    );
                break;
              case 38:
                (e.ctrlKey || e.metaKey) &&
                  te.datepicker._adjustDate(e.target, -7, "D"),
                  (o = e.ctrlKey || e.metaKey);
                break;
              case 39:
                (e.ctrlKey || e.metaKey) &&
                  te.datepicker._adjustDate(e.target, s ? -1 : 1, "D"),
                  (o = e.ctrlKey || e.metaKey),
                  e.originalEvent.altKey &&
                    te.datepicker._adjustDate(
                      e.target,
                      e.ctrlKey
                        ? +te.datepicker._get(r, "stepBigMonths")
                        : +te.datepicker._get(r, "stepMonths"),
                      "M",
                    );
                break;
              case 40:
                (e.ctrlKey || e.metaKey) &&
                  te.datepicker._adjustDate(e.target, 7, "D"),
                  (o = e.ctrlKey || e.metaKey);
                break;
              default:
                o = !1;
            }
          } else {
            e.keyCode === 36 && e.ctrlKey
              ? te.datepicker._showDatepicker(this)
              : (o = !1);
          }
          o && (e.preventDefault(), e.stopPropagation());
        },
        _doKeyPress: function (e) {
          let t;
          let n;
          const i = te.datepicker._getInst(e.target);
          if (te.datepicker._get(i, "constrainInput")) {
            return (
              (t = te.datepicker._possibleChars(
                te.datepicker._get(i, "dateFormat"),
              )),
              (n = String.fromCharCode(
                e.charCode == null ? e.keyCode : e.charCode,
              )),
              e.ctrlKey || e.metaKey || n < " " || !t || t.indexOf(n) > -1
            );
          }
        },
        _doKeyUp: function (e) {
          const t = te.datepicker._getInst(e.target);
          if (t.input.val() !== t.lastVal) {
            try {
              te.datepicker.parseDate(
                te.datepicker._get(t, "dateFormat"),
                t.input ? t.input.val() : null,
                te.datepicker._getFormatConfig(t),
              ) &&
                (te.datepicker._setDateFromField(t),
                te.datepicker._updateAlternate(t),
                te.datepicker._updateDatepicker(t));
            } catch (n) {}
          }
          return !0;
        },
        _showDatepicker: function (e) {
          let t, n, i, r, o, s, a;
          ((e = e.target || e).nodeName.toLowerCase() !== "input" &&
            (e = te("input", e.parentNode)[0]),
          te.datepicker._isDisabledDatepicker(e) ||
            te.datepicker._lastInput === e) ||
            ((t = te.datepicker._getInst(e)),
            te.datepicker._curInst &&
              te.datepicker._curInst !== t &&
              (te.datepicker._curInst.dpDiv.stop(!0, !0),
              t &&
                te.datepicker._datepickerShowing &&
                te.datepicker._hideDatepicker(te.datepicker._curInst.input[0])),
            !1 !==
              (i = (n = te.datepicker._get(t, "beforeShow"))
                ? n.apply(e, [e, t])
                : {}) &&
              (d(t.settings, i),
              (t.lastVal = null),
              (te.datepicker._lastInput = e),
              te.datepicker._setDateFromField(t),
              te.datepicker._inDialog && (e.value = ""),
              te.datepicker._pos ||
                ((te.datepicker._pos = te.datepicker._findPos(e)),
                (te.datepicker._pos[1] += e.offsetHeight)),
              (r = !1),
              te(e)
                .parents()
                .each(function () {
                  return !(r |= te(this).css("position") === "fixed");
                }),
              (o = { left: te.datepicker._pos[0], top: te.datepicker._pos[1] }),
              (te.datepicker._pos = null),
              t.dpDiv.empty(),
              t.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px",
              }),
              te.datepicker._updateDatepicker(t),
              (o = te.datepicker._checkOffset(t, o, r)),
              t.dpDiv.css({
                position:
                  te.datepicker._inDialog && te.blockUI
                    ? "static"
                    : r
                      ? "fixed"
                      : "absolute",
                display: "none",
                left: o.left + "px",
                top: o.top + "px",
              }),
              t.inline ||
                ((s = te.datepicker._get(t, "showAnim")),
                (a = te.datepicker._get(t, "duration")),
                t.dpDiv.css("z-index", c(te(e)) + 1),
                (te.datepicker._datepickerShowing = !0),
                te.effects && te.effects.effect[s]
                  ? t.dpDiv.show(s, te.datepicker._get(t, "showOptions"), a)
                  : t.dpDiv[s || "show"](s ? a : null),
                te.datepicker._shouldFocusInput(t) && t.input.trigger("focus"),
                (te.datepicker._curInst = t))));
        },
        _updateDatepicker: function (e) {
          (this.maxRows = 4),
            (w = e).dpDiv.empty().append(this._generateHTML(e)),
            this._attachHandlers(e);
          let t;
          const n = this._getNumberOfMonths(e);
          const i = n[1];
          const r = 17;
          const o = e.dpDiv.find("." + this._dayOverClass + " a");
          const s = te.datepicker._get(e, "onUpdateDatepicker");
          o.length > 0 && a.apply(o.get(0)),
            e.dpDiv
              .removeClass(
                "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4",
              )
              .width(""),
            i > 1 &&
              e.dpDiv
                .addClass("ui-datepicker-multi-" + i)
                .css("width", r * i + "em"),
            e.dpDiv[(n[0] !== 1 || n[1] !== 1 ? "add" : "remove") + "Class"](
              "ui-datepicker-multi",
            ),
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"](
              "ui-datepicker-rtl",
            ),
            e === te.datepicker._curInst &&
              te.datepicker._datepickerShowing &&
              te.datepicker._shouldFocusInput(e) &&
              e.input.trigger("focus"),
            e.yearshtml &&
              ((t = e.yearshtml),
              setTimeout(function () {
                t === e.yearshtml &&
                  e.yearshtml &&
                  e.dpDiv
                    .find("select.ui-datepicker-year")
                    .first()
                    .replaceWith(e.yearshtml),
                  (t = e.yearshtml = null);
              }, 0)),
            s && s.apply(e.input ? e.input[0] : null, [e]);
        },
        _shouldFocusInput: function (e) {
          return (
            e.input &&
            e.input.is(":visible") &&
            !e.input.is(":disabled") &&
            !e.input.is(":focus")
          );
        },
        _checkOffset: function (e, t, n) {
          const i = e.dpDiv.outerWidth();
          const r = e.dpDiv.outerHeight();
          const o = e.input ? e.input.outerWidth() : 0;
          const s = e.input ? e.input.outerHeight() : 0;
          const a =
            document.documentElement.clientWidth +
            (n ? 0 : te(document).scrollLeft());
          const l =
            document.documentElement.clientHeight +
            (n ? 0 : te(document).scrollTop());
          return (
            (t.left -= this._get(e, "isRTL") ? i - o : 0),
            (t.left -=
              n && t.left === e.input.offset().left
                ? te(document).scrollLeft()
                : 0),
            (t.top -=
              n && t.top === e.input.offset().top + s
                ? te(document).scrollTop()
                : 0),
            (t.left -= Math.min(
              t.left,
              t.left + i > a && i < a ? Math.abs(t.left + i - a) : 0,
            )),
            (t.top -= Math.min(
              t.top,
              t.top + r > l && r < l ? Math.abs(r + s) : 0,
            )),
            t
          );
        },
        _findPos: function (e) {
          for (
            var t, n = this._getInst(e), i = this._get(n, "isRTL");
            e &&
            (e.type === "hidden" ||
              e.nodeType !== 1 ||
              te.expr.pseudos.hidden(e));

          ) {
            e = e[i ? "previousSibling" : "nextSibling"];
          }
          return [(t = te(e).offset()).left, t.top];
        },
        _hideDatepicker: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = this._curInst;
          !o ||
            (e && o !== te.data(e, "datepicker")) ||
            (this._datepickerShowing &&
              ((t = this._get(o, "showAnim")),
              (n = this._get(o, "duration")),
              (i = function () {
                te.datepicker._tidyDialog(o);
              }),
              te.effects && (te.effects.effect[t] || te.effects[t])
                ? o.dpDiv.hide(t, te.datepicker._get(o, "showOptions"), n, i)
                : o.dpDiv[
                    t === "slideDown"
                      ? "slideUp"
                      : t === "fadeIn"
                        ? "fadeOut"
                        : "hide"
                  ](t ? n : null, i),
              t || i(),
              (this._datepickerShowing = !1),
              (r = this._get(o, "onClose")) &&
                r.apply(o.input ? o.input[0] : null, [
                  o.input ? o.input.val() : "",
                  o,
                ]),
              (this._lastInput = null),
              this._inDialog &&
                (this._dialogInput.css({
                  position: "absolute",
                  left: "0",
                  top: "-100px",
                }),
                te.blockUI && (te.unblockUI(), te("body").append(this.dpDiv))),
              (this._inDialog = !1)));
        },
        _tidyDialog: function (e) {
          e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
        },
        _checkExternalClick: function (e) {
          if (te.datepicker._curInst) {
            const t = te(e.target);
            const n = te.datepicker._getInst(t[0]);
            ((t[0].id === te.datepicker._mainDivId ||
              t.parents("#" + te.datepicker._mainDivId).length !== 0 ||
              t.hasClass(te.datepicker.markerClassName) ||
              t.closest("." + te.datepicker._triggerClass).length ||
              !te.datepicker._datepickerShowing ||
              (te.datepicker._inDialog && te.blockUI)) &&
              (!t.hasClass(te.datepicker.markerClassName) ||
                te.datepicker._curInst === n)) ||
              te.datepicker._hideDatepicker();
          }
        },
        _adjustDate: function (e, t, n) {
          const i = te(e);
          const r = this._getInst(i[0]);
          this._isDisabledDatepicker(i[0]) ||
            (this._adjustInstDate(r, t, n), this._updateDatepicker(r));
        },
        _gotoToday: function (e) {
          let t;
          const n = te(e);
          const i = this._getInst(n[0]);
          this._get(i, "gotoCurrent") && i.currentDay
            ? ((i.selectedDay = i.currentDay),
              (i.drawMonth = i.selectedMonth = i.currentMonth),
              (i.drawYear = i.selectedYear = i.currentYear))
            : ((t = new Date()),
              (i.selectedDay = t.getDate()),
              (i.drawMonth = i.selectedMonth = t.getMonth()),
              (i.drawYear = i.selectedYear = t.getFullYear())),
            this._notifyChange(i),
            this._adjustDate(n);
        },
        _selectMonthYear: function (e, t, n) {
          const i = te(e);
          const r = this._getInst(i[0]);
          (r["selected" + (n === "M" ? "Month" : "Year")] = r[
            "draw" + (n === "M" ? "Month" : "Year")
          ] =
            parseInt(t.options[t.selectedIndex].value, 10)),
            this._notifyChange(r),
            this._adjustDate(i);
        },
        _selectDay: function (e, t, n, i) {
          let r;
          const o = te(e);
          te(i).hasClass(this._unselectableClass) ||
            this._isDisabledDatepicker(o[0]) ||
            (((r = this._getInst(o[0])).selectedDay = r.currentDay =
              parseInt(te("a", i).attr("data-date"))),
            (r.selectedMonth = r.currentMonth = t),
            (r.selectedYear = r.currentYear = n),
            this._selectDate(
              e,
              this._formatDate(r, r.currentDay, r.currentMonth, r.currentYear),
            ));
        },
        _clearDate: function (e) {
          const t = te(e);
          this._selectDate(t, "");
        },
        _selectDate: function (e, t) {
          let n;
          const i = te(e);
          const r = this._getInst(i[0]);
          (t = t != null ? t : this._formatDate(r)),
            r.input && r.input.val(t),
            this._updateAlternate(r),
            (n = this._get(r, "onSelect"))
              ? n.apply(r.input ? r.input[0] : null, [t, r])
              : r.input && r.input.trigger("change"),
            r.inline
              ? this._updateDatepicker(r)
              : (this._hideDatepicker(),
                (this._lastInput = r.input[0]),
                typeof r.input[0] !== "object" && r.input.trigger("focus"),
                (this._lastInput = null));
        },
        _updateAlternate: function (e) {
          let t;
          let n;
          let i;
          const r = this._get(e, "altField");
          r &&
            ((t = this._get(e, "altFormat") || this._get(e, "dateFormat")),
            (n = this._getDate(e)),
            (i = this.formatDate(t, n, this._getFormatConfig(e))),
            te(document).find(r).val(i));
        },
        noWeekends: function (e) {
          const t = e.getDay();
          return [t > 0 && t < 6, ""];
        },
        iso8601Week: function (e) {
          let t;
          const n = new Date(e.getTime());
          return (
            n.setDate(n.getDate() + 4 - (n.getDay() || 7)),
            (t = n.getTime()),
            n.setMonth(0),
            n.setDate(1),
            Math.floor(Math.round((t - n) / 864e5) / 7) + 1
          );
        },
        parseDate: function (n, o, e) {
          if (n == null || o == null) throw "Invalid arguments";
          if ((o = typeof o === "object" ? o.toString() : o + "") === "") {
            return null;
          }
          let i;
          let t;
          let r;
          let s;
          let a = 0;
          const l =
            (e ? e.shortYearCutoff : null) || this._defaults.shortYearCutoff;
          const c =
            typeof l !== "string"
              ? l
              : (new Date().getFullYear() % 100) + parseInt(l, 10);
          const u =
            (e ? e.dayNamesShort : null) || this._defaults.dayNamesShort;
          const d = (e ? e.dayNames : null) || this._defaults.dayNames;
          const h =
            (e ? e.monthNamesShort : null) || this._defaults.monthNamesShort;
          const p = (e ? e.monthNames : null) || this._defaults.monthNames;
          let f = -1;
          let g = -1;
          let m = -1;
          let v = -1;
          let y = !1;
          const b = function (e) {
            const t = i + 1 < n.length && n.charAt(i + 1) === e;
            return t && i++, t;
          };
          const _ = function (e) {
            const t = b(e);
            const n =
              e === "@"
                ? 14
                : e === "!"
                  ? 20
                  : e === "y" && t
                    ? 4
                    : e === "o"
                      ? 3
                      : 2;
            const i = new RegExp("^\\d{" + (e === "y" ? n : 1) + "," + n + "}");
            const r = o.substring(a).match(i);
            if (!r) throw "Missing number at position " + a;
            return (a += r[0].length), parseInt(r[0], 10);
          };
          const x = function (e, t, n) {
            let i = -1;
            const r = te
              .map(b(e) ? n : t, function (e, t) {
                return [[t, e]];
              })
              .sort(function (e, t) {
                return -(e[1].length - t[1].length);
              });
            if (
              (te.each(r, function (e, t) {
                const n = t[1];
                if (o.substr(a, n.length).toLowerCase() === n.toLowerCase()) {
                  return (i = t[0]), (a += n.length), !1;
                }
              }),
              i !== -1)
            ) {
              return i + 1;
            }
            throw "Unknown name at position " + a;
          };
          const w = function () {
            if (o.charAt(a) !== n.charAt(i)) {
              throw "Unexpected literal at position " + a;
            }
            a++;
          };
          for (i = 0; i < n.length; i++) {
            if (y) n.charAt(i) !== "'" || b("'") ? w() : (y = !1);
            else {
              switch (n.charAt(i)) {
                case "d":
                  m = _("d");
                  break;
                case "D":
                  x("D", u, d);
                  break;
                case "o":
                  v = _("o");
                  break;
                case "m":
                  g = _("m");
                  break;
                case "M":
                  g = x("M", h, p);
                  break;
                case "y":
                  f = _("y");
                  break;
                case "@":
                  (f = (s = new Date(_("@"))).getFullYear()),
                    (g = s.getMonth() + 1),
                    (m = s.getDate());
                  break;
                case "!":
                  (f = (s = new Date(
                    (_("!") - this._ticksTo1970) / 1e4,
                  )).getFullYear()),
                    (g = s.getMonth() + 1),
                    (m = s.getDate());
                  break;
                case "'":
                  b("'") ? w() : (y = !0);
                  break;
                default:
                  w();
              }
            }
          }
          if (a < o.length && ((r = o.substr(a)), !/^\s+/.test(r))) {
            throw "Extra/unparsed characters found in date: " + r;
          }
          if (
            (f === -1
              ? (f = new Date().getFullYear())
              : f < 100 &&
                (f +=
                  new Date().getFullYear() -
                  (new Date().getFullYear() % 100) +
                  (f <= c ? 0 : -100)),
            v > -1)
          ) {
            for (g = 1, m = v; ; ) {
              if (m <= (t = this._getDaysInMonth(f, g - 1))) break;
              g++, (m -= t);
            }
          }
          if (
            (s = this._daylightSavingAdjust(
              new Date(f, g - 1, m),
            )).getFullYear() !== f ||
            s.getMonth() + 1 !== g ||
            s.getDate() !== m
          ) {
            throw "Invalid date";
          }
          return s;
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970:
          24 *
          (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) *
          60 *
          60 *
          1e7,
        formatDate: function (n, e, t) {
          if (!e) return "";
          let i;
          const r =
            (t ? t.dayNamesShort : null) || this._defaults.dayNamesShort;
          const o = (t ? t.dayNames : null) || this._defaults.dayNames;
          const s =
            (t ? t.monthNamesShort : null) || this._defaults.monthNamesShort;
          const a = (t ? t.monthNames : null) || this._defaults.monthNames;
          const l = function (e) {
            const t = i + 1 < n.length && n.charAt(i + 1) === e;
            return t && i++, t;
          };
          const c = function (e, t, n) {
            let i = "" + t;
            if (l(e)) for (; i.length < n; ) i = "0" + i;
            return i;
          };
          const u = function (e, t, n, i) {
            return l(e) ? i[t] : n[t];
          };
          let d = "";
          let h = !1;
          if (e) {
            for (i = 0; i < n.length; i++) {
              if (h) {
                n.charAt(i) !== "'" || l("'") ? (d += n.charAt(i)) : (h = !1);
              } else {
                switch (n.charAt(i)) {
                  case "d":
                    d += c("d", e.getDate(), 2);
                    break;
                  case "D":
                    d += u("D", e.getDay(), r, o);
                    break;
                  case "o":
                    d += c(
                      "o",
                      Math.round(
                        (new Date(
                          e.getFullYear(),
                          e.getMonth(),
                          e.getDate(),
                        ).getTime() -
                          new Date(e.getFullYear(), 0, 0).getTime()) /
                          864e5,
                      ),
                      3,
                    );
                    break;
                  case "m":
                    d += c("m", e.getMonth() + 1, 2);
                    break;
                  case "M":
                    d += u("M", e.getMonth(), s, a);
                    break;
                  case "y":
                    d += l("y")
                      ? e.getFullYear()
                      : (e.getFullYear() % 100 < 10 ? "0" : "") +
                        (e.getFullYear() % 100);
                    break;
                  case "@":
                    d += e.getTime();
                    break;
                  case "!":
                    d += 1e4 * e.getTime() + this._ticksTo1970;
                    break;
                  case "'":
                    l("'") ? (d += "'") : (h = !0);
                    break;
                  default:
                    d += n.charAt(i);
                }
              }
            }
          }
          return d;
        },
        _possibleChars: function (n) {
          let i;
          let e = "";
          let t = !1;
          const r = function (e) {
            const t = i + 1 < n.length && n.charAt(i + 1) === e;
            return t && i++, t;
          };
          for (i = 0; i < n.length; i++) {
            if (t) {
              n.charAt(i) !== "'" || r("'") ? (e += n.charAt(i)) : (t = !1);
            } else {
              switch (n.charAt(i)) {
                case "d":
                case "m":
                case "y":
                case "@":
                  e += "0123456789";
                  break;
                case "D":
                case "M":
                  return null;
                case "'":
                  r("'") ? (e += "'") : (t = !0);
                  break;
                default:
                  e += n.charAt(i);
              }
            }
          }
          return e;
        },
        _get: function (e, t) {
          return e.settings[t] !== undefined
            ? e.settings[t]
            : this._defaults[t];
        },
        _setDateFromField: function (e, t) {
          if (e.input.val() !== e.lastVal) {
            const n = this._get(e, "dateFormat");
            let i = (e.lastVal = e.input ? e.input.val() : null);
            const r = this._getDefaultDate(e);
            let o = r;
            const s = this._getFormatConfig(e);
            try {
              o = this.parseDate(n, i, s) || r;
            } catch (event) {
              i = t ? "" : i;
            }
            (e.selectedDay = o.getDate()),
              (e.drawMonth = e.selectedMonth = o.getMonth()),
              (e.drawYear = e.selectedYear = o.getFullYear()),
              (e.currentDay = i ? o.getDate() : 0),
              (e.currentMonth = i ? o.getMonth() : 0),
              (e.currentYear = i ? o.getFullYear() : 0),
              this._adjustInstDate(e);
          }
        },
        _getDefaultDate: function (e) {
          return this._restrictMinMax(
            e,
            this._determineDate(e, this._get(e, "defaultDate"), new Date()),
          );
        },
        _determineDate: function (l, e, t) {
          const n = function (e) {
            const t = new Date();
            return t.setDate(t.getDate() + e), t;
          };
          let i =
            e == null || e === ""
              ? t
              : typeof e === "string"
                ? (function (e) {
                    try {
                      return te.datepicker.parseDate(
                        te.datepicker._get(l, "dateFormat"),
                        e,
                        te.datepicker._getFormatConfig(l),
                      );
                    } catch (a) {}
                    for (
                      var t =
                          (e.toLowerCase().match(/^c/)
                            ? te.datepicker._getDate(l)
                            : null) || new Date(),
                        n = t.getFullYear(),
                        i = t.getMonth(),
                        r = t.getDate(),
                        o = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                        s = o.exec(e);
                      s;

                    ) {
                      switch (s[2] || "d") {
                        case "d":
                        case "D":
                          r += parseInt(s[1], 10);
                          break;
                        case "w":
                        case "W":
                          r += 7 * parseInt(s[1], 10);
                          break;
                        case "m":
                        case "M":
                          (i += parseInt(s[1], 10)),
                            (r = Math.min(
                              r,
                              te.datepicker._getDaysInMonth(n, i),
                            ));
                          break;
                        case "y":
                        case "Y":
                          (n += parseInt(s[1], 10)),
                            (r = Math.min(
                              r,
                              te.datepicker._getDaysInMonth(n, i),
                            ));
                      }
                      s = o.exec(e);
                    }
                    return new Date(n, i, r);
                  })(e)
                : typeof e === "number"
                  ? isNaN(e)
                    ? t
                    : n(e)
                  : new Date(e.getTime());
          return (
            (i = i && i.toString() === "Invalid Date" ? t : i) &&
              (i.setHours(0),
              i.setMinutes(0),
              i.setSeconds(0),
              i.setMilliseconds(0)),
            this._daylightSavingAdjust(i)
          );
        },
        _daylightSavingAdjust: function (e) {
          return e
            ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
            : null;
        },
        _setDate: function (e, t, n) {
          const i = !t;
          const r = e.selectedMonth;
          const o = e.selectedYear;
          const s = this._restrictMinMax(
            e,
            this._determineDate(e, t, new Date()),
          );
          (e.selectedDay = e.currentDay = s.getDate()),
            (e.drawMonth = e.selectedMonth = e.currentMonth = s.getMonth()),
            (e.drawYear = e.selectedYear = e.currentYear = s.getFullYear()),
            (r === e.selectedMonth && o === e.selectedYear) ||
              n ||
              this._notifyChange(e),
            this._adjustInstDate(e),
            e.input && e.input.val(i ? "" : this._formatDate(e));
        },
        _getDate: function (e) {
          return !e.currentYear || (e.input && e.input.val() === "")
            ? null
            : this._daylightSavingAdjust(
                new Date(e.currentYear, e.currentMonth, e.currentDay),
              );
        },
        _attachHandlers: function (e) {
          const t = this._get(e, "stepMonths");
          const n = "#" + e.id.replace(/\\\\/g, "\\");
          e.dpDiv.find("[data-handler]").map(function () {
            const e = {
              prev: function () {
                te.datepicker._adjustDate(n, -t, "M");
              },
              next: function () {
                te.datepicker._adjustDate(n, +t, "M");
              },
              hide: function () {
                te.datepicker._hideDatepicker();
              },
              today: function () {
                te.datepicker._gotoToday(n);
              },
              selectDay: function () {
                return (
                  te.datepicker._selectDay(
                    n,
                    +this.getAttribute("data-month"),
                    +this.getAttribute("data-year"),
                    this,
                  ),
                  !1
                );
              },
              selectMonth: function () {
                return te.datepicker._selectMonthYear(n, this, "M"), !1;
              },
              selectYear: function () {
                return te.datepicker._selectMonthYear(n, this, "Y"), !1;
              },
            };
            te(this).on(
              this.getAttribute("data-event"),
              e[this.getAttribute("data-handler")],
            );
          });
        },
        _generateHTML: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          let p;
          let f;
          let g;
          let m;
          let v;
          let y;
          let b;
          let _;
          let x;
          let w;
          let C;
          let k;
          let S;
          let T;
          let D;
          let j;
          let N;
          let E;
          let I;
          let A;
          let M;
          let O;
          let P;
          let F;
          let L;
          let H;
          let R;
          const $ = new Date();
          const q = this._daylightSavingAdjust(
            new Date($.getFullYear(), $.getMonth(), $.getDate()),
          );
          const z = this._get(e, "isRTL");
          const W = this._get(e, "showButtonPanel");
          const B = this._get(e, "hideIfNoPrevNext");
          const U = this._get(e, "navigationAsDateFormat");
          const V = this._getNumberOfMonths(e);
          const K = this._get(e, "showCurrentAtPos");
          const Y = this._get(e, "stepMonths");
          const X = V[0] !== 1 || V[1] !== 1;
          const G = this._daylightSavingAdjust(
            e.currentDay
              ? new Date(e.currentYear, e.currentMonth, e.currentDay)
              : new Date(9999, 9, 9),
          );
          const Q = this._getMinMaxDate(e, "min");
          const J = this._getMinMaxDate(e, "max");
          let Z = e.drawMonth - K;
          let ee = e.drawYear;
          if ((Z < 0 && ((Z += 12), ee--), J)) {
            for (
              t = this._daylightSavingAdjust(
                new Date(
                  J.getFullYear(),
                  J.getMonth() - V[0] * V[1] + 1,
                  J.getDate(),
                ),
              ),
                t = Q && t < Q ? Q : t;
              this._daylightSavingAdjust(new Date(ee, Z, 1)) > t;

            ) {
              --Z < 0 && ((Z = 11), ee--);
            }
          }
          for (
            e.drawMonth = Z,
              e.drawYear = ee,
              n = this._get(e, "prevText"),
              n = U
                ? this.formatDate(
                    n,
                    this._daylightSavingAdjust(new Date(ee, Z - Y, 1)),
                    this._getFormatConfig(e),
                  )
                : n,
              i = this._canAdjustMonth(e, -1, ee, Z)
                ? te("<a>")
                    .attr({
                      class: "ui-datepicker-prev ui-corner-all",
                      "data-handler": "prev",
                      "data-event": "click",
                      title: n,
                    })
                    .append(
                      te("<span>")
                        .addClass(
                          "ui-icon ui-icon-circle-triangle-" + (z ? "e" : "w"),
                        )
                        .text(n),
                    )[0].outerHTML
                : B
                  ? ""
                  : te("<a>")
                      .attr({
                        class:
                          "ui-datepicker-prev ui-corner-all ui-state-disabled",
                        title: n,
                      })
                      .append(
                        te("<span>")
                          .addClass(
                            "ui-icon ui-icon-circle-triangle-" +
                              (z ? "e" : "w"),
                          )
                          .text(n),
                      )[0].outerHTML,
              r = this._get(e, "nextText"),
              r = U
                ? this.formatDate(
                    r,
                    this._daylightSavingAdjust(new Date(ee, Z + Y, 1)),
                    this._getFormatConfig(e),
                  )
                : r,
              o = this._canAdjustMonth(e, 1, ee, Z)
                ? te("<a>")
                    .attr({
                      class: "ui-datepicker-next ui-corner-all",
                      "data-handler": "next",
                      "data-event": "click",
                      title: r,
                    })
                    .append(
                      te("<span>")
                        .addClass(
                          "ui-icon ui-icon-circle-triangle-" + (z ? "w" : "e"),
                        )
                        .text(r),
                    )[0].outerHTML
                : B
                  ? ""
                  : te("<a>")
                      .attr({
                        class:
                          "ui-datepicker-next ui-corner-all ui-state-disabled",
                        title: r,
                      })
                      .append(
                        te("<span>")
                          .attr(
                            "class",
                            "ui-icon ui-icon-circle-triangle-" +
                              (z ? "w" : "e"),
                          )
                          .text(r),
                      )[0].outerHTML,
              s = this._get(e, "currentText"),
              a = this._get(e, "gotoCurrent") && e.currentDay ? G : q,
              s = U ? this.formatDate(s, a, this._getFormatConfig(e)) : s,
              l = "",
              e.inline ||
                (l = te("<button>")
                  .attr({
                    type: "button",
                    class:
                      "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all",
                    "data-handler": "hide",
                    "data-event": "click",
                  })
                  .text(this._get(e, "closeText"))[0].outerHTML),
              c = "",
              W &&
                (c = te(
                  "<div class='ui-datepicker-buttonpane ui-widget-content'>",
                )
                  .append(z ? l : "")
                  .append(
                    this._isInRange(e, a)
                      ? te("<button>")
                          .attr({
                            type: "button",
                            class:
                              "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all",
                            "data-handler": "today",
                            "data-event": "click",
                          })
                          .text(s)
                      : "",
                  )
                  .append(z ? "" : l)[0].outerHTML),
              u = parseInt(this._get(e, "firstDay"), 10),
              u = isNaN(u) ? 0 : u,
              d = this._get(e, "showWeek"),
              h = this._get(e, "dayNames"),
              p = this._get(e, "dayNamesMin"),
              f = this._get(e, "monthNames"),
              g = this._get(e, "monthNamesShort"),
              m = this._get(e, "beforeShowDay"),
              v = this._get(e, "showOtherMonths"),
              y = this._get(e, "selectOtherMonths"),
              b = this._getDefaultDate(e),
              _ = "",
              w = 0;
            w < V[0];
            w++
          ) {
            for (C = "", this.maxRows = 4, k = 0; k < V[1]; k++) {
              if (
                ((S = this._daylightSavingAdjust(
                  new Date(ee, Z, e.selectedDay),
                )),
                (T = " ui-corner-all"),
                (D = ""),
                X)
              ) {
                if (((D += "<div class='ui-datepicker-group"), V[1] > 1)) {
                  switch (k) {
                    case 0:
                      (D += " ui-datepicker-group-first"),
                        (T = " ui-corner-" + (z ? "right" : "left"));
                      break;
                    case V[1] - 1:
                      (D += " ui-datepicker-group-last"),
                        (T = " ui-corner-" + (z ? "left" : "right"));
                      break;
                    default:
                      (D += " ui-datepicker-group-middle"), (T = "");
                  }
                }
                D += "'>";
              }
              for (
                D +=
                  "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                  T +
                  "'>" +
                  (/all|left/.test(T) && w === 0 ? (z ? o : i) : "") +
                  (/all|right/.test(T) && w === 0 ? (z ? i : o) : "") +
                  this._generateMonthYearHeader(
                    e,
                    Z,
                    ee,
                    Q,
                    J,
                    w > 0 || k > 0,
                    f,
                    g,
                  ) +
                  "</div><table class='ui-datepicker-calendar'><thead><tr>",
                  j = d
                    ? "<th class='ui-datepicker-week-col'>" +
                      this._get(e, "weekHeader") +
                      "</th>"
                    : "",
                  x = 0;
                x < 7;
                x++
              ) {
                j +=
                  "<th scope='col'" +
                  ((x + u + 6) % 7 >= 5
                    ? " class='ui-datepicker-week-end'"
                    : "") +
                  "><span title='" +
                  h[(N = (x + u) % 7)] +
                  "'>" +
                  p[N] +
                  "</span></th>";
              }
              for (
                D += j + "</tr></thead><tbody>",
                  E = this._getDaysInMonth(ee, Z),
                  ee === e.selectedYear &&
                    Z === e.selectedMonth &&
                    (e.selectedDay = Math.min(e.selectedDay, E)),
                  I = (this._getFirstDayOfMonth(ee, Z) - u + 7) % 7,
                  A = Math.ceil((I + E) / 7),
                  M = X && this.maxRows > A ? this.maxRows : A,
                  this.maxRows = M,
                  O = this._daylightSavingAdjust(new Date(ee, Z, 1 - I)),
                  P = 0;
                P < M;
                P++
              ) {
                for (
                  D += "<tr>",
                    F = d
                      ? "<td class='ui-datepicker-week-col'>" +
                        this._get(e, "calculateWeek")(O) +
                        "</td>"
                      : "",
                    x = 0;
                  x < 7;
                  x++
                ) {
                  (L = m
                    ? m.apply(e.input ? e.input[0] : null, [O])
                    : [!0, ""]),
                    (R =
                      ((H = O.getMonth() !== Z) && !y) ||
                      !L[0] ||
                      (Q && O < Q) ||
                      (J && J < O)),
                    (F +=
                      "<td class='" +
                      ((x + u + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") +
                      (H ? " ui-datepicker-other-month" : "") +
                      ((O.getTime() === S.getTime() &&
                        Z === e.selectedMonth &&
                        e._keyEvent) ||
                      (b.getTime() === O.getTime() &&
                        b.getTime() === S.getTime())
                        ? " " + this._dayOverClass
                        : "") +
                      (R
                        ? " " + this._unselectableClass + " ui-state-disabled"
                        : "") +
                      (H && !v
                        ? ""
                        : " " +
                          L[1] +
                          (O.getTime() === G.getTime()
                            ? " " + this._currentClass
                            : "") +
                          (O.getTime() === q.getTime()
                            ? " ui-datepicker-today"
                            : "")) +
                      "'" +
                      ((H && !v) || !L[2]
                        ? ""
                        : " title='" + L[2].replace(/'/g, "&#39;") + "'") +
                      (R
                        ? ""
                        : " data-handler='selectDay' data-event='click' data-month='" +
                          O.getMonth() +
                          "' data-year='" +
                          O.getFullYear() +
                          "'") +
                      ">" +
                      (H && !v
                        ? "&#xa0;"
                        : R
                          ? "<span class='ui-state-default'>" +
                            O.getDate() +
                            "</span>"
                          : "<a class='ui-state-default" +
                            (O.getTime() === q.getTime()
                              ? " ui-state-highlight"
                              : "") +
                            (O.getTime() === G.getTime()
                              ? " ui-state-active"
                              : "") +
                            (H ? " ui-priority-secondary" : "") +
                            "' href='#' aria-current='" +
                            (O.getTime() === G.getTime() ? "true" : "false") +
                            "' data-date='" +
                            O.getDate() +
                            "'>" +
                            O.getDate() +
                            "</a>") +
                      "</td>"),
                    O.setDate(O.getDate() + 1),
                    (O = this._daylightSavingAdjust(O));
                }
                D += F + "</tr>";
              }
              ++Z > 11 && ((Z = 0), ee++),
                (C += D +=
                  "</tbody></table>" +
                  (X
                    ? "</div>" +
                      (V[0] > 0 && k === V[1] - 1
                        ? "<div class='ui-datepicker-row-break'></div>"
                        : "")
                    : ""));
            }
            _ += C;
          }
          return (_ += c), (e._keyEvent = !1), _;
        },
        _generateMonthYearHeader: function (e, t, n, i, r, o, s, a) {
          let l;
          let c;
          let u;
          let d;
          let h;
          let p;
          let f;
          let g;
          const m = this._get(e, "changeMonth");
          const v = this._get(e, "changeYear");
          const y = this._get(e, "showMonthAfterYear");
          const b = this._get(e, "selectMonthLabel");
          const _ = this._get(e, "selectYearLabel");
          let x = "<div class='ui-datepicker-title'>";
          let w = "";
          if (o || !m) {
            w += "<span class='ui-datepicker-month'>" + s[t] + "</span>";
          } else {
            for (
              l = i && i.getFullYear() === n,
                c = r && r.getFullYear() === n,
                w +=
                  "<select class='ui-datepicker-month' aria-label='" +
                  b +
                  "' data-handler='selectMonth' data-event='change'>",
                u = 0;
              u < 12;
              u++
            ) {
              (!l || u >= i.getMonth()) &&
                (!c || u <= r.getMonth()) &&
                (w +=
                  "<option value='" +
                  u +
                  "'" +
                  (u === t ? " selected='selected'" : "") +
                  ">" +
                  a[u] +
                  "</option>");
            }
            w += "</select>";
          }
          if ((y || (x += w + (!o && m && v ? "" : "&#xa0;")), !e.yearshtml)) {
            if (((e.yearshtml = ""), o || !v)) {
              x += "<span class='ui-datepicker-year'>" + n + "</span>";
            } else {
              for (
                d = this._get(e, "yearRange").split(":"),
                  h = new Date().getFullYear(),
                  f = (p = function (e) {
                    const t = e.match(/c[+\-].*/)
                      ? n + parseInt(e.substring(1), 10)
                      : e.match(/[+\-].*/)
                        ? h + parseInt(e, 10)
                        : parseInt(e, 10);
                    return isNaN(t) ? h : t;
                  })(d[0]),
                  g = Math.max(f, p(d[1] || "")),
                  f = i ? Math.max(f, i.getFullYear()) : f,
                  g = r ? Math.min(g, r.getFullYear()) : g,
                  e.yearshtml +=
                    "<select class='ui-datepicker-year' aria-label='" +
                    _ +
                    "' data-handler='selectYear' data-event='change'>";
                f <= g;
                f++
              ) {
                e.yearshtml +=
                  "<option value='" +
                  f +
                  "'" +
                  (f === n ? " selected='selected'" : "") +
                  ">" +
                  f +
                  "</option>";
              }
              (e.yearshtml += "</select>"),
                (x += e.yearshtml),
                (e.yearshtml = null);
            }
          }
          return (
            (x += this._get(e, "yearSuffix")),
            y && (x += (!o && m && v ? "" : "&#xa0;") + w),
            (x += "</div>")
          );
        },
        _adjustInstDate: function (e, t, n) {
          const i = e.selectedYear + (n === "Y" ? t : 0);
          const r = e.selectedMonth + (n === "M" ? t : 0);
          const o =
            Math.min(e.selectedDay, this._getDaysInMonth(i, r)) +
            (n === "D" ? t : 0);
          const s = this._restrictMinMax(
            e,
            this._daylightSavingAdjust(new Date(i, r, o)),
          );
          (e.selectedDay = s.getDate()),
            (e.drawMonth = e.selectedMonth = s.getMonth()),
            (e.drawYear = e.selectedYear = s.getFullYear()),
            (n !== "M" && n !== "Y") || this._notifyChange(e);
        },
        _restrictMinMax: function (e, t) {
          const n = this._getMinMaxDate(e, "min");
          const i = this._getMinMaxDate(e, "max");
          const r = n && t < n ? n : t;
          return i && i < r ? i : r;
        },
        _notifyChange: function (e) {
          const t = this._get(e, "onChangeMonthYear");
          t &&
            t.apply(e.input ? e.input[0] : null, [
              e.selectedYear,
              e.selectedMonth + 1,
              e,
            ]);
        },
        _getNumberOfMonths: function (e) {
          const t = this._get(e, "numberOfMonths");
          return t == null ? [1, 1] : typeof t === "number" ? [1, t] : t;
        },
        _getMinMaxDate: function (e, t) {
          return this._determineDate(e, this._get(e, t + "Date"), null);
        },
        _getDaysInMonth: function (e, t) {
          return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate();
        },
        _getFirstDayOfMonth: function (e, t) {
          return new Date(e, t, 1).getDay();
        },
        _canAdjustMonth: function (e, t, n, i) {
          const r = this._getNumberOfMonths(e);
          const o = this._daylightSavingAdjust(
            new Date(n, i + (t < 0 ? t : r[0] * r[1]), 1),
          );
          return (
            t < 0 &&
              o.setDate(this._getDaysInMonth(o.getFullYear(), o.getMonth())),
            this._isInRange(e, o)
          );
        },
        _isInRange: function (e, t) {
          let n;
          let i;
          const r = this._getMinMaxDate(e, "min");
          const o = this._getMinMaxDate(e, "max");
          let s = null;
          let a = null;
          const l = this._get(e, "yearRange");
          return (
            l &&
              ((n = l.split(":")),
              (i = new Date().getFullYear()),
              (s = parseInt(n[0], 10)),
              (a = parseInt(n[1], 10)),
              n[0].match(/[+\-].*/) && (s += i),
              n[1].match(/[+\-].*/) && (a += i)),
            (!r || t.getTime() >= r.getTime()) &&
              (!o || t.getTime() <= o.getTime()) &&
              (!s || t.getFullYear() >= s) &&
              (!a || t.getFullYear() <= a)
          );
        },
        _getFormatConfig: function (e) {
          let t = this._get(e, "shortYearCutoff");
          return {
            shortYearCutoff: (t =
              typeof t !== "string"
                ? t
                : (new Date().getFullYear() % 100) + parseInt(t, 10)),
            dayNamesShort: this._get(e, "dayNamesShort"),
            dayNames: this._get(e, "dayNames"),
            monthNamesShort: this._get(e, "monthNamesShort"),
            monthNames: this._get(e, "monthNames"),
          };
        },
        _formatDate: function (e, t, n, i) {
          t ||
            ((e.currentDay = e.selectedDay),
            (e.currentMonth = e.selectedMonth),
            (e.currentYear = e.selectedYear));
          const r = t
            ? typeof t === "object"
              ? t
              : this._daylightSavingAdjust(new Date(i, n, t))
            : this._daylightSavingAdjust(
                new Date(e.currentYear, e.currentMonth, e.currentDay),
              );
          return this.formatDate(
            this._get(e, "dateFormat"),
            r,
            this._getFormatConfig(e),
          );
        },
      }),
      (te.fn.datepicker = function (e, t) {
        if (!this.length) return this;
        te.datepicker.initialized ||
          (te(document).on("mousedown", te.datepicker._checkExternalClick),
          (te.datepicker.initialized = !0)),
          te("#" + te.datepicker._mainDivId).length === 0 &&
            te("body").append(te.datepicker.dpDiv);
        const n = Array.prototype.slice.call(arguments, 1);
        return typeof e !== "string" ||
          (e !== "isDisabled" && e !== "getDate" && e !== "widget")
          ? e === "option" && arguments.length === 2 && typeof t === "string"
            ? te.datepicker["_" + e + "Datepicker"].apply(
                te.datepicker,
                [this[0]].concat(n),
              )
            : this.each(function () {
                typeof e === "string"
                  ? te.datepicker["_" + e + "Datepicker"].apply(
                      te.datepicker,
                      [this].concat(n),
                    )
                  : te.datepicker._attachDatepicker(this, e);
              })
          : te.datepicker["_" + e + "Datepicker"].apply(
              te.datepicker,
              [this[0]].concat(n),
            );
      }),
      (te.datepicker = new e()),
      (te.datepicker.initialized = !1),
      (te.datepicker.uuid = new Date().getTime()),
      (te.datepicker.version = "1.13.1");
    te.datepicker;
    te.widget("ui.dialog", {
      version: "1.13.1",
      options: {
        appendTo: "body",
        autoOpen: !0,
        buttons: [],
        classes: {
          "ui-dialog": "ui-corner-all",
          "ui-dialog-titlebar": "ui-corner-all",
        },
        closeOnEscape: !0,
        closeText: "Close",
        draggable: !0,
        hide: null,
        height: "auto",
        maxHeight: null,
        maxWidth: null,
        minHeight: 150,
        minWidth: 150,
        modal: !1,
        position: {
          my: "center",
          at: "center",
          of: window,
          collision: "fit",
          using: function (e) {
            const t = te(this).css(e).offset().top;
            t < 0 && te(this).css("top", e.top - t);
          },
        },
        resizable: !0,
        show: null,
        title: null,
        width: 300,
        beforeClose: null,
        close: null,
        drag: null,
        dragStart: null,
        dragStop: null,
        focus: null,
        open: null,
        resize: null,
        resizeStart: null,
        resizeStop: null,
      },
      sizeRelatedOptions: {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0,
      },
      resizableRelatedOptions: {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
      },
      _create: function () {
        (this.originalCss = {
          display: this.element[0].style.display,
          width: this.element[0].style.width,
          minHeight: this.element[0].style.minHeight,
          maxHeight: this.element[0].style.maxHeight,
          height: this.element[0].style.height,
        }),
          (this.originalPosition = {
            parent: this.element.parent(),
            index: this.element.parent().children().index(this.element),
          }),
          (this.originalTitle = this.element.attr("title")),
          this.options.title == null &&
            this.originalTitle != null &&
            (this.options.title = this.originalTitle),
          this.options.disabled && (this.options.disabled = !1),
          this._createWrapper(),
          this.element.show().removeAttr("title").appendTo(this.uiDialog),
          this._addClass("ui-dialog-content", "ui-widget-content"),
          this._createTitlebar(),
          this._createButtonPane(),
          this.options.draggable && te.fn.draggable && this._makeDraggable(),
          this.options.resizable && te.fn.resizable && this._makeResizable(),
          (this._isOpen = !1),
          this._trackFocus();
      },
      _init: function () {
        this.options.autoOpen && this.open();
      },
      _appendTo: function () {
        const e = this.options.appendTo;
        return e && (e.jquery || e.nodeType)
          ? te(e)
          : this.document.find(e || "body").eq(0);
      },
      _destroy: function () {
        let e;
        const t = this.originalPosition;
        this._untrackInstance(),
          this._destroyOverlay(),
          this.element.removeUniqueId().css(this.originalCss).detach(),
          this.uiDialog.remove(),
          this.originalTitle && this.element.attr("title", this.originalTitle),
          (e = t.parent.children().eq(t.index)).length &&
          e[0] !== this.element[0]
            ? e.before(this.element)
            : t.parent.append(this.element);
      },
      widget: function () {
        return this.uiDialog;
      },
      disable: te.noop,
      enable: te.noop,
      close: function (e) {
        const t = this;
        this._isOpen &&
          !1 !== this._trigger("beforeClose", e) &&
          ((this._isOpen = !1),
          (this._focusedElement = null),
          this._destroyOverlay(),
          this._untrackInstance(),
          this.opener.filter(":focusable").trigger("focus").length ||
            te.ui.safeBlur(te.ui.safeActiveElement(this.document[0])),
          this._hide(this.uiDialog, this.options.hide, function () {
            t._trigger("close", e);
          }));
      },
      isOpen: function () {
        return this._isOpen;
      },
      moveToTop: function () {
        this._moveToTop();
      },
      _moveToTop: function (e, t) {
        let n = !1;
        const i = this.uiDialog
          .siblings(".ui-front:visible")
          .map(function () {
            return +te(this).css("z-index");
          })
          .get();
        const r = Math.max.apply(null, i);
        return (
          r >= +this.uiDialog.css("z-index") &&
            (this.uiDialog.css("z-index", r + 1), (n = !0)),
          n && !t && this._trigger("focus", e),
          n
        );
      },
      open: function () {
        const e = this;
        this._isOpen
          ? this._moveToTop() && this._focusTabbable()
          : ((this._isOpen = !0),
            (this.opener = te(te.ui.safeActiveElement(this.document[0]))),
            this._size(),
            this._position(),
            this._createOverlay(),
            this._moveToTop(null, !0),
            this.overlay &&
              this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
            this._show(this.uiDialog, this.options.show, function () {
              e._focusTabbable(), e._trigger("focus");
            }),
            this._makeFocusTarget(),
            this._trigger("open"));
      },
      _focusTabbable: function () {
        let e = this._focusedElement;
        e || (e = this.element.find("[autofocus]")),
          e.length || (e = this.element.find(":tabbable")),
          e.length || (e = this.uiDialogButtonPane.find(":tabbable")),
          e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")),
          e.length || (e = this.uiDialog),
          e.eq(0).trigger("focus");
      },
      _restoreTabbableFocus: function () {
        const e = te.ui.safeActiveElement(this.document[0]);
        this.uiDialog[0] === e ||
          te.contains(this.uiDialog[0], e) ||
          this._focusTabbable();
      },
      _keepFocus: function (e) {
        e.preventDefault(),
          this._restoreTabbableFocus(),
          this._delay(this._restoreTabbableFocus);
      },
      _createWrapper: function () {
        (this.uiDialog = te("<div>")
          .hide()
          .attr({ tabIndex: -1, role: "dialog" })
          .appendTo(this._appendTo())),
          this._addClass(
            this.uiDialog,
            "ui-dialog",
            "ui-widget ui-widget-content ui-front",
          ),
          this._on(this.uiDialog, {
            keydown: function (e) {
              if (
                this.options.closeOnEscape &&
                !e.isDefaultPrevented() &&
                e.keyCode &&
                e.keyCode === te.ui.keyCode.ESCAPE
              ) {
                return e.preventDefault(), void this.close(e);
              }
              if (e.keyCode === te.ui.keyCode.TAB && !e.isDefaultPrevented()) {
                const t = this.uiDialog.find(":tabbable");
                const n = t.first();
                const i = t.last();
                (e.target !== i[0] && e.target !== this.uiDialog[0]) ||
                e.shiftKey
                  ? (e.target !== n[0] && e.target !== this.uiDialog[0]) ||
                    !e.shiftKey ||
                    (this._delay(function () {
                      i.trigger("focus");
                    }),
                    e.preventDefault())
                  : (this._delay(function () {
                      n.trigger("focus");
                    }),
                    e.preventDefault());
              }
            },
            mousedown: function (e) {
              this._moveToTop(e) && this._focusTabbable();
            },
          }),
          this.element.find("[aria-describedby]").length ||
            this.uiDialog.attr({
              "aria-describedby": this.element.uniqueId().attr("id"),
            });
      },
      _createTitlebar: function () {
        let e;
        (this.uiDialogTitlebar = te("<div>")),
          this._addClass(
            this.uiDialogTitlebar,
            "ui-dialog-titlebar",
            "ui-widget-header ui-helper-clearfix",
          ),
          this._on(this.uiDialogTitlebar, {
            mousedown: function (e) {
              te(e.target).closest(".ui-dialog-titlebar-close") ||
                this.uiDialog.trigger("focus");
            },
          }),
          (this.uiDialogTitlebarClose = te("<button type='button'></button>")
            .button({
              label: te("<a>").text(this.options.closeText).html(),
              icon: "ui-icon-closethick",
              showLabel: !1,
            })
            .appendTo(this.uiDialogTitlebar)),
          this._addClass(
            this.uiDialogTitlebarClose,
            "ui-dialog-titlebar-close",
          ),
          this._on(this.uiDialogTitlebarClose, {
            click: function (e) {
              e.preventDefault(), this.close(e);
            },
          }),
          (e = te("<span>").uniqueId().prependTo(this.uiDialogTitlebar)),
          this._addClass(e, "ui-dialog-title"),
          this._title(e),
          this.uiDialogTitlebar.prependTo(this.uiDialog),
          this.uiDialog.attr({ "aria-labelledby": e.attr("id") });
      },
      _title: function (e) {
        this.options.title ? e.text(this.options.title) : e.html("&#160;");
      },
      _createButtonPane: function () {
        (this.uiDialogButtonPane = te("<div>")),
          this._addClass(
            this.uiDialogButtonPane,
            "ui-dialog-buttonpane",
            "ui-widget-content ui-helper-clearfix",
          ),
          (this.uiButtonSet = te("<div>").appendTo(this.uiDialogButtonPane)),
          this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
          this._createButtons();
      },
      _createButtons: function () {
        const r = this;
        const e = this.options.buttons;
        this.uiDialogButtonPane.remove(),
          this.uiButtonSet.empty(),
          te.isEmptyObject(e) || (Array.isArray(e) && !e.length)
            ? this._removeClass(this.uiDialog, "ui-dialog-buttons")
            : (te.each(e, function (e, t) {
                let n, i;
                (t = typeof t === "function" ? { click: t, text: e } : t),
                  (t = te.extend({ type: "button" }, t)),
                  (n = t.click),
                  (i = {
                    icon: t.icon,
                    iconPosition: t.iconPosition,
                    showLabel: t.showLabel,
                    icons: t.icons,
                    text: t.text,
                  }),
                  delete t.click,
                  delete t.icon,
                  delete t.iconPosition,
                  delete t.showLabel,
                  delete t.icons,
                  typeof t.text === "boolean" && delete t.text,
                  te("<button></button>", t)
                    .button(i)
                    .appendTo(r.uiButtonSet)
                    .on("click", function () {
                      n.apply(r.element[0], arguments);
                    });
              }),
              this._addClass(this.uiDialog, "ui-dialog-buttons"),
              this.uiDialogButtonPane.appendTo(this.uiDialog));
      },
      _makeDraggable: function () {
        function r(e) {
          return { position: e.position, offset: e.offset };
        }
        const o = this;
        const s = this.options;
        this.uiDialog.draggable({
          cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
          handle: ".ui-dialog-titlebar",
          containment: "document",
          start: function (e, t) {
            o._addClass(te(this), "ui-dialog-dragging"),
              o._blockFrames(),
              o._trigger("dragStart", e, r(t));
          },
          drag: function (e, t) {
            o._trigger("drag", e, r(t));
          },
          stop: function (e, t) {
            const n = t.offset.left - o.document.scrollLeft();
            const i = t.offset.top - o.document.scrollTop();
            (s.position = {
              my: "left top",
              at:
                "left" +
                (n >= 0 ? "+" : "") +
                n +
                " top" +
                (i >= 0 ? "+" : "") +
                i,
              of: o.window,
            }),
              o._removeClass(te(this), "ui-dialog-dragging"),
              o._unblockFrames(),
              o._trigger("dragStop", e, r(t));
          },
        });
      },
      _makeResizable: function () {
        function o(e) {
          return {
            originalPosition: e.originalPosition,
            originalSize: e.originalSize,
            position: e.position,
            size: e.size,
          };
        }
        const s = this;
        const a = this.options;
        const e = a.resizable;
        const t = this.uiDialog.css("position");
        const n = typeof e === "string" ? e : "n,e,s,w,se,sw,ne,nw";
        this.uiDialog
          .resizable({
            cancel: ".ui-dialog-content",
            containment: "document",
            alsoResize: this.element,
            maxWidth: a.maxWidth,
            maxHeight: a.maxHeight,
            minWidth: a.minWidth,
            minHeight: this._minHeight(),
            handles: n,
            start: function (e, t) {
              s._addClass(te(this), "ui-dialog-resizing"),
                s._blockFrames(),
                s._trigger("resizeStart", e, o(t));
            },
            resize: function (e, t) {
              s._trigger("resize", e, o(t));
            },
            stop: function (e, t) {
              const n = s.uiDialog.offset();
              const i = n.left - s.document.scrollLeft();
              const r = n.top - s.document.scrollTop();
              (a.height = s.uiDialog.height()),
                (a.width = s.uiDialog.width()),
                (a.position = {
                  my: "left top",
                  at:
                    "left" +
                    (i >= 0 ? "+" : "") +
                    i +
                    " top" +
                    (r >= 0 ? "+" : "") +
                    r,
                  of: s.window,
                }),
                s._removeClass(te(this), "ui-dialog-resizing"),
                s._unblockFrames(),
                s._trigger("resizeStop", e, o(t));
            },
          })
          .css("position", t);
      },
      _trackFocus: function () {
        this._on(this.widget(), {
          focusin: function (e) {
            this._makeFocusTarget(), (this._focusedElement = te(e.target));
          },
        });
      },
      _makeFocusTarget: function () {
        this._untrackInstance(), this._trackingInstances().unshift(this);
      },
      _untrackInstance: function () {
        const e = this._trackingInstances();
        const t = te.inArray(this, e);
        t !== -1 && e.splice(t, 1);
      },
      _trackingInstances: function () {
        let e = this.document.data("ui-dialog-instances");
        return e || ((e = []), this.document.data("ui-dialog-instances", e)), e;
      },
      _minHeight: function () {
        const e = this.options;
        return e.height === "auto"
          ? e.minHeight
          : Math.min(e.minHeight, e.height);
      },
      _position: function () {
        const e = this.uiDialog.is(":visible");
        e || this.uiDialog.show(),
          this.uiDialog.position(this.options.position),
          e || this.uiDialog.hide();
      },
      _setOptions: function (e) {
        const n = this;
        let i = !1;
        const r = {};
        te.each(e, function (e, t) {
          n._setOption(e, t),
            e in n.sizeRelatedOptions && (i = !0),
            e in n.resizableRelatedOptions && (r[e] = t);
        }),
          i && (this._size(), this._position()),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", r);
      },
      _setOption: function (e, t) {
        let n;
        let i;
        const r = this.uiDialog;
        e !== "disabled" &&
          (this._super(e, t),
          e === "appendTo" && this.uiDialog.appendTo(this._appendTo()),
          e === "buttons" && this._createButtons(),
          e === "closeText" &&
            this.uiDialogTitlebarClose.button({
              label: te("<a>")
                .text("" + this.options.closeText)
                .html(),
            }),
          e === "draggable" &&
            ((n = r.is(":data(ui-draggable)")) && !t && r.draggable("destroy"),
            !n && t && this._makeDraggable()),
          e === "position" && this._position(),
          e === "resizable" &&
            ((i = r.is(":data(ui-resizable)")) && !t && r.resizable("destroy"),
            i && typeof t === "string" && r.resizable("option", "handles", t),
            i || !1 === t || this._makeResizable()),
          e === "title" &&
            this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
      },
      _size: function () {
        let e;
        let t;
        let n;
        const i = this.options;
        this.element
          .show()
          .css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }),
          i.minWidth > i.width && (i.width = i.minWidth),
          (e = this.uiDialog
            .css({ height: "auto", width: i.width })
            .outerHeight()),
          (t = Math.max(0, i.minHeight - e)),
          (n =
            typeof i.maxHeight === "number"
              ? Math.max(0, i.maxHeight - e)
              : "none"),
          i.height === "auto"
            ? this.element.css({ minHeight: t, maxHeight: n, height: "auto" })
            : this.element.height(Math.max(0, i.height - e)),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", "minHeight", this._minHeight());
      },
      _blockFrames: function () {
        this.iframeBlocks = this.document.find("iframe").map(function () {
          const e = te(this);
          return te("<div>")
            .css({
              position: "absolute",
              width: e.outerWidth(),
              height: e.outerHeight(),
            })
            .appendTo(e.parent())
            .offset(e.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _allowInteraction: function (e) {
        return (
          !!te(e.target).closest(".ui-dialog").length ||
          !!te(e.target).closest(".ui-datepicker").length
        );
      },
      _createOverlay: function () {
        if (this.options.modal) {
          const n = te.fn.jquery.substring(0, 4);
          let i = !0;
          this._delay(function () {
            i = !1;
          }),
            this.document.data("ui-dialog-overlays") ||
              this.document.on(
                "focusin.ui-dialog",
                function (e) {
                  if (!i) {
                    const t = this._trackingInstances()[0];
                    t._allowInteraction(e) ||
                      (e.preventDefault(),
                      t._focusTabbable(),
                      (n !== "3.4." && n !== "3.5.") ||
                        t._delay(t._restoreTabbableFocus));
                  }
                }.bind(this),
              ),
            (this.overlay = te("<div>").appendTo(this._appendTo())),
            this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
            this._on(this.overlay, { mousedown: "_keepFocus" }),
            this.document.data(
              "ui-dialog-overlays",
              (this.document.data("ui-dialog-overlays") || 0) + 1,
            );
        }
      },
      _destroyOverlay: function () {
        if (this.options.modal && this.overlay) {
          const e = this.document.data("ui-dialog-overlays") - 1;
          e
            ? this.document.data("ui-dialog-overlays", e)
            : (this.document.off("focusin.ui-dialog"),
              this.document.removeData("ui-dialog-overlays")),
            this.overlay.remove(),
            (this.overlay = null);
        }
      },
    }),
      !1 !== te.uiBackCompat &&
        te.widget("ui.dialog", te.ui.dialog, {
          options: { dialogClass: "" },
          _createWrapper: function () {
            this._super(), this.uiDialog.addClass(this.options.dialogClass);
          },
          _setOption: function (e, t) {
            e === "dialogClass" &&
              this.uiDialog.removeClass(this.options.dialogClass).addClass(t),
              this._superApply(arguments);
          },
        });
    te.ui.dialog,
      te.widget("ui.progressbar", {
        version: "1.13.1",
        options: {
          classes: {
            "ui-progressbar": "ui-corner-all",
            "ui-progressbar-value": "ui-corner-left",
            "ui-progressbar-complete": "ui-corner-right",
          },
          max: 100,
          value: 0,
          change: null,
          complete: null,
        },
        min: 0,
        _create: function () {
          (this.oldValue = this.options.value = this._constrainedValue()),
            this.element.attr({
              role: "progressbar",
              "aria-valuemin": this.min,
            }),
            this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
            (this.valueDiv = te("<div>").appendTo(this.element)),
            this._addClass(
              this.valueDiv,
              "ui-progressbar-value",
              "ui-widget-header",
            ),
            this._refreshValue();
        },
        _destroy: function () {
          this.element.removeAttr(
            "role aria-valuemin aria-valuemax aria-valuenow",
          ),
            this.valueDiv.remove();
        },
        value: function (e) {
          if (e === undefined) return this.options.value;
          (this.options.value = this._constrainedValue(e)),
            this._refreshValue();
        },
        _constrainedValue: function (e) {
          return (
            e === undefined && (e = this.options.value),
            (this.indeterminate = !1 === e),
            typeof e !== "number" && (e = 0),
            !this.indeterminate &&
              Math.min(this.options.max, Math.max(this.min, e))
          );
        },
        _setOptions: function (e) {
          const t = e.value;
          delete e.value,
            this._super(e),
            (this.options.value = this._constrainedValue(t)),
            this._refreshValue();
        },
        _setOption: function (e, t) {
          e === "max" && (t = Math.max(this.min, t)), this._super(e, t);
        },
        _setOptionDisabled: function (e) {
          this._super(e),
            this.element.attr("aria-disabled", e),
            this._toggleClass(null, "ui-state-disabled", !!e);
        },
        _percentage: function () {
          return this.indeterminate
            ? 100
            : (100 * (this.options.value - this.min)) /
                (this.options.max - this.min);
        },
        _refreshValue: function () {
          const e = this.options.value;
          const t = this._percentage();
          this.valueDiv
            .toggle(this.indeterminate || e > this.min)
            .width(t.toFixed(0) + "%"),
            this._toggleClass(
              this.valueDiv,
              "ui-progressbar-complete",
              null,
              e === this.options.max,
            )._toggleClass(
              "ui-progressbar-indeterminate",
              null,
              this.indeterminate,
            ),
            this.indeterminate
              ? (this.element.removeAttr("aria-valuenow"),
                this.overlayDiv ||
                  ((this.overlayDiv = te("<div>").appendTo(this.valueDiv)),
                  this._addClass(this.overlayDiv, "ui-progressbar-overlay")))
              : (this.element.attr({
                  "aria-valuemax": this.options.max,
                  "aria-valuenow": e,
                }),
                this.overlayDiv &&
                  (this.overlayDiv.remove(), (this.overlayDiv = null))),
            this.oldValue !== e &&
              ((this.oldValue = e), this._trigger("change")),
            e === this.options.max && this._trigger("complete");
        },
      }),
      te.widget("ui.selectmenu", [
        te.ui.formResetMixin,
        {
          version: "1.13.1",
          defaultElement: "<select>",
          options: {
            appendTo: null,
            classes: {
              "ui-selectmenu-button-open": "ui-corner-top",
              "ui-selectmenu-button-closed": "ui-corner-all",
            },
            disabled: null,
            icons: { button: "ui-icon-triangle-1-s" },
            position: { my: "left top", at: "left bottom", collision: "none" },
            width: !1,
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null,
          },
          _create: function () {
            const e = this.element.uniqueId().attr("id");
            (this.ids = {
              element: e,
              button: e + "-button",
              menu: e + "-menu",
            }),
              this._drawButton(),
              this._drawMenu(),
              this._bindFormResetHandler(),
              (this._rendered = !1),
              (this.menuItems = te());
          },
          _drawButton: function () {
            let e;
            const t = this;
            const n = this._parseOption(
              this.element.find("option:selected"),
              this.element[0].selectedIndex,
            );
            (this.labels = this.element.labels().attr("for", this.ids.button)),
              this._on(this.labels, {
                click: function (e) {
                  this.button.trigger("focus"), e.preventDefault();
                },
              }),
              this.element.hide(),
              (this.button = te("<span>", {
                tabindex: this.options.disabled ? -1 : 0,
                id: this.ids.button,
                role: "combobox",
                "aria-expanded": "false",
                "aria-autocomplete": "list",
                "aria-owns": this.ids.menu,
                "aria-haspopup": "true",
                title: this.element.attr("title"),
              }).insertAfter(this.element)),
              this._addClass(
                this.button,
                "ui-selectmenu-button ui-selectmenu-button-closed",
                "ui-button ui-widget",
              ),
              (e = te("<span>").appendTo(this.button)),
              this._addClass(
                e,
                "ui-selectmenu-icon",
                "ui-icon " + this.options.icons.button,
              ),
              (this.buttonItem = this._renderButtonItem(n).appendTo(
                this.button,
              )),
              !1 !== this.options.width && this._resizeButton(),
              this._on(this.button, this._buttonEvents),
              this.button.one("focusin", function () {
                t._rendered || t._refreshMenu();
              });
          },
          _drawMenu: function () {
            const i = this;
            (this.menu = te("<ul>", {
              "aria-hidden": "true",
              "aria-labelledby": this.ids.button,
              id: this.ids.menu,
            })),
              (this.menuWrap = te("<div>").append(this.menu)),
              this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
              this.menuWrap.appendTo(this._appendTo()),
              (this.menuInstance = this.menu
                .menu({
                  classes: { "ui-menu": "ui-corner-bottom" },
                  role: "listbox",
                  select: function (e, t) {
                    e.preventDefault(),
                      i._setSelection(),
                      i._select(t.item.data("ui-selectmenu-item"), e);
                  },
                  focus: function (e, t) {
                    const n = t.item.data("ui-selectmenu-item");
                    i.focusIndex != null &&
                      n.index !== i.focusIndex &&
                      (i._trigger("focus", e, { item: n }),
                      i.isOpen || i._select(n, e)),
                      (i.focusIndex = n.index),
                      i.button.attr(
                        "aria-activedescendant",
                        i.menuItems.eq(n.index).attr("id"),
                      );
                  },
                })
                .menu("instance")),
              this.menuInstance._off(this.menu, "mouseleave"),
              (this.menuInstance._closeOnDocumentClick = function () {
                return !1;
              }),
              (this.menuInstance._isDivider = function () {
                return !1;
              });
          },
          refresh: function () {
            this._refreshMenu(),
              this.buttonItem.replaceWith(
                (this.buttonItem = this._renderButtonItem(
                  this._getSelectedItem().data("ui-selectmenu-item") || {},
                )),
              ),
              this.options.width === null && this._resizeButton();
          },
          _refreshMenu: function () {
            let e;
            const t = this.element.find("option");
            this.menu.empty(),
              this._parseOptions(t),
              this._renderMenu(this.menu, this.items),
              this.menuInstance.refresh(),
              (this.menuItems = this.menu
                .find("li")
                .not(".ui-selectmenu-optgroup")
                .find(".ui-menu-item-wrapper")),
              (this._rendered = !0),
              t.length &&
                ((e = this._getSelectedItem()),
                this.menuInstance.focus(null, e),
                this._setAria(e.data("ui-selectmenu-item")),
                this._setOption("disabled", this.element.prop("disabled")));
          },
          open: function (e) {
            this.options.disabled ||
              (this._rendered
                ? (this._removeClass(
                    this.menu.find(".ui-state-active"),
                    null,
                    "ui-state-active",
                  ),
                  this.menuInstance.focus(null, this._getSelectedItem()))
                : this._refreshMenu(),
              this.menuItems.length &&
                ((this.isOpen = !0),
                this._toggleAttr(),
                this._resizeMenu(),
                this._position(),
                this._on(this.document, this._documentClick),
                this._trigger("open", e)));
          },
          _position: function () {
            this.menuWrap.position(
              te.extend({ of: this.button }, this.options.position),
            );
          },
          close: function (e) {
            this.isOpen &&
              ((this.isOpen = !1),
              this._toggleAttr(),
              (this.range = null),
              this._off(this.document),
              this._trigger("close", e));
          },
          widget: function () {
            return this.button;
          },
          menuWidget: function () {
            return this.menu;
          },
          _renderButtonItem: function (e) {
            const t = te("<span>");
            return (
              this._setText(t, e.label),
              this._addClass(t, "ui-selectmenu-text"),
              t
            );
          },
          _renderMenu: function (i, e) {
            const r = this;
            let o = "";
            te.each(e, function (e, t) {
              let n;
              t.optgroup !== o &&
                ((n = te("<li>", { text: t.optgroup })),
                r._addClass(
                  n,
                  "ui-selectmenu-optgroup",
                  "ui-menu-divider" +
                    (t.element.parent("optgroup").prop("disabled")
                      ? " ui-state-disabled"
                      : ""),
                ),
                n.appendTo(i),
                (o = t.optgroup)),
                r._renderItemData(i, t);
            });
          },
          _renderItemData: function (e, t) {
            return this._renderItem(e, t).data("ui-selectmenu-item", t);
          },
          _renderItem: function (e, t) {
            const n = te("<li>");
            const i = te("<div>", { title: t.element.attr("title") });
            return (
              t.disabled && this._addClass(n, null, "ui-state-disabled"),
              this._setText(i, t.label),
              n.append(i).appendTo(e)
            );
          },
          _setText: function (e, t) {
            t ? e.text(t) : e.html("&#160;");
          },
          _move: function (e, t) {
            let n;
            let i;
            let r = ".ui-menu-item";
            this.isOpen
              ? (n = this.menuItems.eq(this.focusIndex).parent("li"))
              : ((n = this.menuItems
                  .eq(this.element[0].selectedIndex)
                  .parent("li")),
                (r += ":not(.ui-state-disabled)")),
              (i =
                e === "first" || e === "last"
                  ? n[e === "first" ? "prevAll" : "nextAll"](r).eq(-1)
                  : n[e + "All"](r).eq(0)).length &&
                this.menuInstance.focus(t, i);
          },
          _getSelectedItem: function () {
            return this.menuItems
              .eq(this.element[0].selectedIndex)
              .parent("li");
          },
          _toggle: function (e) {
            this[this.isOpen ? "close" : "open"](e);
          },
          _setSelection: function () {
            let e;
            this.range &&
              (window.getSelection
                ? ((e = window.getSelection()).removeAllRanges(),
                  e.addRange(this.range))
                : this.range.select(),
              this.button.focus());
          },
          _documentClick: {
            mousedown: function (e) {
              this.isOpen &&
                (te(e.target).closest(
                  ".ui-selectmenu-menu, #" + te.escapeSelector(this.ids.button),
                ).length ||
                  this.close(e));
            },
          },
          _buttonEvents: {
            mousedown: function () {
              let e;
              window.getSelection
                ? (e = window.getSelection()).rangeCount &&
                  (this.range = e.getRangeAt(0))
                : (this.range = document.selection.createRange());
            },
            click: function (e) {
              this._setSelection(), this._toggle(e);
            },
            keydown: function (e) {
              let t = !0;
              switch (e.keyCode) {
                case te.ui.keyCode.TAB:
                case te.ui.keyCode.ESCAPE:
                  this.close(e), (t = !1);
                  break;
                case te.ui.keyCode.ENTER:
                  this.isOpen && this._selectFocusedItem(e);
                  break;
                case te.ui.keyCode.UP:
                  e.altKey ? this._toggle(e) : this._move("prev", e);
                  break;
                case te.ui.keyCode.DOWN:
                  e.altKey ? this._toggle(e) : this._move("next", e);
                  break;
                case te.ui.keyCode.SPACE:
                  this.isOpen ? this._selectFocusedItem(e) : this._toggle(e);
                  break;
                case te.ui.keyCode.LEFT:
                  this._move("prev", e);
                  break;
                case te.ui.keyCode.RIGHT:
                  this._move("next", e);
                  break;
                case te.ui.keyCode.HOME:
                case te.ui.keyCode.PAGE_UP:
                  this._move("first", e);
                  break;
                case te.ui.keyCode.END:
                case te.ui.keyCode.PAGE_DOWN:
                  this._move("last", e);
                  break;
                default:
                  this.menu.trigger(e), (t = !1);
              }
              t && e.preventDefault();
            },
          },
          _selectFocusedItem: function (e) {
            const t = this.menuItems.eq(this.focusIndex).parent("li");
            t.hasClass("ui-state-disabled") ||
              this._select(t.data("ui-selectmenu-item"), e);
          },
          _select: function (e, t) {
            const n = this.element[0].selectedIndex;
            (this.element[0].selectedIndex = e.index),
              this.buttonItem.replaceWith(
                (this.buttonItem = this._renderButtonItem(e)),
              ),
              this._setAria(e),
              this._trigger("select", t, { item: e }),
              e.index !== n && this._trigger("change", t, { item: e }),
              this.close(t);
          },
          _setAria: function (e) {
            const t = this.menuItems.eq(e.index).attr("id");
            this.button.attr({
              "aria-labelledby": t,
              "aria-activedescendant": t,
            }),
              this.menu.attr("aria-activedescendant", t);
          },
          _setOption: function (e, t) {
            if (e === "icons") {
              const n = this.button.find("span.ui-icon");
              this._removeClass(n, null, this.options.icons.button)._addClass(
                n,
                null,
                t.button,
              );
            }
            this._super(e, t),
              e === "appendTo" && this.menuWrap.appendTo(this._appendTo()),
              e === "width" && this._resizeButton();
          },
          _setOptionDisabled: function (e) {
            this._super(e),
              this.menuInstance.option("disabled", e),
              this.button.attr("aria-disabled", e),
              this._toggleClass(this.button, null, "ui-state-disabled", e),
              this.element.prop("disabled", e),
              e
                ? (this.button.attr("tabindex", -1), this.close())
                : this.button.attr("tabindex", 0);
          },
          _appendTo: function () {
            let e = this.options.appendTo;
            return (
              e &&
                (e =
                  e.jquery || e.nodeType ? te(e) : this.document.find(e).eq(0)),
              (e && e[0]) || (e = this.element.closest(".ui-front, dialog")),
              e.length || (e = this.document[0].body),
              e
            );
          },
          _toggleAttr: function () {
            this.button.attr("aria-expanded", this.isOpen),
              this._removeClass(
                this.button,
                "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"),
              )
                ._addClass(
                  this.button,
                  "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"),
                )
                ._toggleClass(
                  this.menuWrap,
                  "ui-selectmenu-open",
                  null,
                  this.isOpen,
                ),
              this.menu.attr("aria-hidden", !this.isOpen);
          },
          _resizeButton: function () {
            let e = this.options.width;
            !1 !== e
              ? (e === null &&
                  ((e = this.element.show().outerWidth()), this.element.hide()),
                this.button.outerWidth(e))
              : this.button.css("width", "");
          },
          _resizeMenu: function () {
            this.menu.outerWidth(
              Math.max(
                this.button.outerWidth(),
                this.menu.width("").outerWidth() + 1,
              ),
            );
          },
          _getCreateOptions: function () {
            const e = this._super();
            return (e.disabled = this.element.prop("disabled")), e;
          },
          _parseOptions: function (e) {
            const n = this;
            const i = [];
            e.each(function (e, t) {
              t.hidden || i.push(n._parseOption(te(t), e));
            }),
              (this.items = i);
          },
          _parseOption: function (e, t) {
            const n = e.parent("optgroup");
            return {
              element: e,
              index: t,
              value: e.val(),
              label: e.text(),
              optgroup: n.attr("label") || "",
              disabled: n.prop("disabled") || e.prop("disabled"),
            };
          },
          _destroy: function () {
            this._unbindFormResetHandler(),
              this.menuWrap.remove(),
              this.button.remove(),
              this.element.show(),
              this.element.removeUniqueId(),
              this.labels.attr("for", this.ids.element);
          },
        },
      ]),
      te.widget("ui.slider", te.ui.mouse, {
        version: "1.13.1",
        widgetEventPrefix: "slide",
        options: {
          animate: !1,
          classes: {
            "ui-slider": "ui-corner-all",
            "ui-slider-handle": "ui-corner-all",
            "ui-slider-range": "ui-corner-all ui-widget-header",
          },
          distance: 0,
          max: 100,
          min: 0,
          orientation: "horizontal",
          range: !1,
          step: 1,
          value: 0,
          values: null,
          change: null,
          slide: null,
          start: null,
          stop: null,
        },
        numPages: 5,
        _create: function () {
          (this._keySliding = !1),
            (this._mouseSliding = !1),
            (this._animateOff = !0),
            (this._handleIndex = null),
            this._detectOrientation(),
            this._mouseInit(),
            this._calculateNewMax(),
            this._addClass(
              "ui-slider ui-slider-" + this.orientation,
              "ui-widget ui-widget-content",
            ),
            this._refresh(),
            (this._animateOff = !1);
        },
        _refresh: function () {
          this._createRange(),
            this._createHandles(),
            this._setupEvents(),
            this._refreshValue();
        },
        _createHandles: function () {
          let e;
          let t;
          const n = this.options;
          let i = this.element.find(".ui-slider-handle");
          const r = "<span tabindex='0'></span>";
          const o = [];
          for (
            t = (n.values && n.values.length) || 1,
              i.length > t && (i.slice(t).remove(), (i = i.slice(0, t))),
              e = i.length;
            e < t;
            e++
          ) {
            o.push(r);
          }
          (this.handles = i.add(te(o.join("")).appendTo(this.element))),
            this._addClass(
              this.handles,
              "ui-slider-handle",
              "ui-state-default",
            ),
            (this.handle = this.handles.eq(0)),
            this.handles.each(function (e) {
              te(this).data("ui-slider-handle-index", e).attr("tabIndex", 0);
            });
        },
        _createRange: function () {
          const e = this.options;
          e.range
            ? (!0 === e.range &&
                (e.values
                  ? e.values.length && e.values.length !== 2
                    ? (e.values = [e.values[0], e.values[0]])
                    : Array.isArray(e.values) && (e.values = e.values.slice(0))
                  : (e.values = [this._valueMin(), this._valueMin()])),
              this.range && this.range.length
                ? (this._removeClass(
                    this.range,
                    "ui-slider-range-min ui-slider-range-max",
                  ),
                  this.range.css({ left: "", bottom: "" }))
                : ((this.range = te("<div>").appendTo(this.element)),
                  this._addClass(this.range, "ui-slider-range")),
              (e.range !== "min" && e.range !== "max") ||
                this._addClass(this.range, "ui-slider-range-" + e.range))
            : (this.range && this.range.remove(), (this.range = null));
        },
        _setupEvents: function () {
          this._off(this.handles),
            this._on(this.handles, this._handleEvents),
            this._hoverable(this.handles),
            this._focusable(this.handles);
        },
        _destroy: function () {
          this.handles.remove(),
            this.range && this.range.remove(),
            this._mouseDestroy();
        },
        _mouseCapture: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          const l = this;
          const c = this.options;
          return (
            !c.disabled &&
            ((this.elementSize = {
              width: this.element.outerWidth(),
              height: this.element.outerHeight(),
            }),
            (this.elementOffset = this.element.offset()),
            (t = { x: e.pageX, y: e.pageY }),
            (n = this._normValueFromMouse(t)),
            (i = this._valueMax() - this._valueMin() + 1),
            this.handles.each(function (e) {
              const t = Math.abs(n - l.values(e));
              (t < i ||
                (i === t &&
                  (e === l._lastChangedValue || l.values(e) === c.min))) &&
                ((i = t), (r = te(this)), (o = e));
            }),
            !1 !== this._start(e, o) &&
              ((this._mouseSliding = !0),
              (this._handleIndex = o),
              this._addClass(r, null, "ui-state-active"),
              r.trigger("focus"),
              (s = r.offset()),
              (a = !te(e.target).parents().addBack().is(".ui-slider-handle")),
              (this._clickOffset = a
                ? { left: 0, top: 0 }
                : {
                    left: e.pageX - s.left - r.width() / 2,
                    top:
                      e.pageY -
                      s.top -
                      r.height() / 2 -
                      (parseInt(r.css("borderTopWidth"), 10) || 0) -
                      (parseInt(r.css("borderBottomWidth"), 10) || 0) +
                      (parseInt(r.css("marginTop"), 10) || 0),
                  }),
              this.handles.hasClass("ui-state-hover") || this._slide(e, o, n),
              (this._animateOff = !0)))
          );
        },
        _mouseStart: function () {
          return !0;
        },
        _mouseDrag: function (e) {
          const t = { x: e.pageX, y: e.pageY };
          const n = this._normValueFromMouse(t);
          return this._slide(e, this._handleIndex, n), !1;
        },
        _mouseStop: function (e) {
          return (
            this._removeClass(this.handles, null, "ui-state-active"),
            (this._mouseSliding = !1),
            this._stop(e, this._handleIndex),
            this._change(e, this._handleIndex),
            (this._handleIndex = null),
            (this._clickOffset = null),
            (this._animateOff = !1)
          );
        },
        _detectOrientation: function () {
          this.orientation =
            this.options.orientation === "vertical" ? "vertical" : "horizontal";
        },
        _normValueFromMouse: function (e) {
          let t, n, i, r, o;
          return (
            this.orientation === "horizontal"
              ? ((t = this.elementSize.width),
                (n =
                  e.x -
                  this.elementOffset.left -
                  (this._clickOffset ? this._clickOffset.left : 0)))
              : ((t = this.elementSize.height),
                (n =
                  e.y -
                  this.elementOffset.top -
                  (this._clickOffset ? this._clickOffset.top : 0))),
            (i = n / t) > 1 && (i = 1),
            i < 0 && (i = 0),
            this.orientation === "vertical" && (i = 1 - i),
            (r = this._valueMax() - this._valueMin()),
            (o = this._valueMin() + i * r),
            this._trimAlignValue(o)
          );
        },
        _uiHash: function (e, t, n) {
          const i = {
            handle: this.handles[e],
            handleIndex: e,
            value: t !== undefined ? t : this.value(),
          };
          return (
            this._hasMultipleValues() &&
              ((i.value = t !== undefined ? t : this.values(e)),
              (i.values = n || this.values())),
            i
          );
        },
        _hasMultipleValues: function () {
          return this.options.values && this.options.values.length;
        },
        _start: function (e, t) {
          return this._trigger("start", e, this._uiHash(t));
        },
        _slide: function (e, t, n) {
          let i;
          let r = this.value();
          const o = this.values();
          this._hasMultipleValues() &&
            ((i = this.values(t ? 0 : 1)),
            (r = this.values(t)),
            this.options.values.length === 2 &&
              !0 === this.options.range &&
              (n = t === 0 ? Math.min(i, n) : Math.max(i, n)),
            (o[t] = n)),
            n !== r &&
              !1 !== this._trigger("slide", e, this._uiHash(t, n, o)) &&
              (this._hasMultipleValues() ? this.values(t, n) : this.value(n));
        },
        _stop: function (e, t) {
          this._trigger("stop", e, this._uiHash(t));
        },
        _change: function (e, t) {
          this._keySliding ||
            this._mouseSliding ||
            ((this._lastChangedValue = t),
            this._trigger("change", e, this._uiHash(t)));
        },
        value: function (e) {
          return arguments.length
            ? ((this.options.value = this._trimAlignValue(e)),
              this._refreshValue(),
              void this._change(null, 0))
            : this._value();
        },
        values: function (e, t) {
          let n, i, r;
          if (arguments.length > 1) {
            return (
              (this.options.values[e] = this._trimAlignValue(t)),
              this._refreshValue(),
              void this._change(null, e)
            );
          }
          if (!arguments.length) return this._values();
          if (!Array.isArray(arguments[0])) {
            return this._hasMultipleValues() ? this._values(e) : this.value();
          }
          for (
            n = this.options.values, i = arguments[0], r = 0;
            r < n.length;
            r += 1
          ) {
            (n[r] = this._trimAlignValue(i[r])), this._change(null, r);
          }
          this._refreshValue();
        },
        _setOption: function (e, t) {
          let n;
          let i = 0;
          switch (
            (e === "range" &&
              !0 === this.options.range &&
              (t === "min"
                ? ((this.options.value = this._values(0)),
                  (this.options.values = null))
                : t === "max" &&
                  ((this.options.value = this._values(
                    this.options.values.length - 1,
                  )),
                  (this.options.values = null))),
            Array.isArray(this.options.values) &&
              (i = this.options.values.length),
            this._super(e, t),
            e)
          ) {
            case "orientation":
              this._detectOrientation(),
                this._removeClass(
                  "ui-slider-horizontal ui-slider-vertical",
                )._addClass("ui-slider-" + this.orientation),
                this._refreshValue(),
                this.options.range && this._refreshRange(t),
                this.handles.css(t === "horizontal" ? "bottom" : "left", "");
              break;
            case "value":
              (this._animateOff = !0),
                this._refreshValue(),
                this._change(null, 0),
                (this._animateOff = !1);
              break;
            case "values":
              for (
                this._animateOff = !0, this._refreshValue(), n = i - 1;
                n >= 0;
                n--
              ) {
                this._change(null, n);
              }
              this._animateOff = !1;
              break;
            case "step":
            case "min":
            case "max":
              (this._animateOff = !0),
                this._calculateNewMax(),
                this._refreshValue(),
                (this._animateOff = !1);
              break;
            case "range":
              (this._animateOff = !0), this._refresh(), (this._animateOff = !1);
          }
        },
        _setOptionDisabled: function (e) {
          this._super(e), this._toggleClass(null, "ui-state-disabled", !!e);
        },
        _value: function () {
          let e = this.options.value;
          return (e = this._trimAlignValue(e));
        },
        _values: function (e) {
          let t, n, i;
          if (arguments.length) {
            return (t = this.options.values[e]), (t = this._trimAlignValue(t));
          }
          if (this._hasMultipleValues()) {
            for (n = this.options.values.slice(), i = 0; i < n.length; i += 1) {
              n[i] = this._trimAlignValue(n[i]);
            }
            return n;
          }
          return [];
        },
        _trimAlignValue: function (e) {
          if (e <= this._valueMin()) return this._valueMin();
          if (e >= this._valueMax()) return this._valueMax();
          const t = this.options.step > 0 ? this.options.step : 1;
          const n = (e - this._valueMin()) % t;
          let i = e - n;
          return (
            2 * Math.abs(n) >= t && (i += n > 0 ? t : -t),
            parseFloat(i.toFixed(5))
          );
        },
        _calculateNewMax: function () {
          let e = this.options.max;
          const t = this._valueMin();
          const n = this.options.step;
          (e = Math.round((e - t) / n) * n + t) > this.options.max && (e -= n),
            (this.max = parseFloat(e.toFixed(this._precision())));
        },
        _precision: function () {
          let e = this._precisionOf(this.options.step);
          return (
            this.options.min !== null &&
              (e = Math.max(e, this._precisionOf(this.options.min))),
            e
          );
        },
        _precisionOf: function (e) {
          const t = e.toString();
          const n = t.indexOf(".");
          return n === -1 ? 0 : t.length - n - 1;
        },
        _valueMin: function () {
          return this.options.min;
        },
        _valueMax: function () {
          return this.max;
        },
        _refreshRange: function (e) {
          e === "vertical" && this.range.css({ width: "", left: "" }),
            e === "horizontal" && this.range.css({ height: "", bottom: "" });
        },
        _refreshValue: function () {
          let t;
          let n;
          let e;
          let i;
          let r;
          const o = this.options.range;
          const s = this.options;
          const a = this;
          const l = !this._animateOff && s.animate;
          const c = {};
          this._hasMultipleValues()
            ? this.handles.each(function (e) {
                (n =
                  ((a.values(e) - a._valueMin()) /
                    (a._valueMax() - a._valueMin())) *
                  100),
                  (c[a.orientation === "horizontal" ? "left" : "bottom"] =
                    n + "%"),
                  te(this).stop(1, 1)[l ? "animate" : "css"](c, s.animate),
                  !0 === a.options.range &&
                    (a.orientation === "horizontal"
                      ? (e === 0 &&
                          a.range
                            .stop(1, 1)
                            [
                              l ? "animate" : "css"
                            ]({ left: n + "%" }, s.animate),
                        e === 1 &&
                          a.range[l ? "animate" : "css"](
                            { width: n - t + "%" },
                            { queue: !1, duration: s.animate },
                          ))
                      : (e === 0 &&
                          a.range
                            .stop(1, 1)
                            [
                              l ? "animate" : "css"
                            ]({ bottom: n + "%" }, s.animate),
                        e === 1 &&
                          a.range[l ? "animate" : "css"](
                            { height: n - t + "%" },
                            { queue: !1, duration: s.animate },
                          ))),
                  (t = n);
              })
            : ((e = this.value()),
              (i = this._valueMin()),
              (r = this._valueMax()),
              (n = r !== i ? ((e - i) / (r - i)) * 100 : 0),
              (c[this.orientation === "horizontal" ? "left" : "bottom"] =
                n + "%"),
              this.handle.stop(1, 1)[l ? "animate" : "css"](c, s.animate),
              o === "min" &&
                this.orientation === "horizontal" &&
                this.range
                  .stop(1, 1)
                  [l ? "animate" : "css"]({ width: n + "%" }, s.animate),
              o === "max" &&
                this.orientation === "horizontal" &&
                this.range
                  .stop(1, 1)
                  [l ? "animate" : "css"]({ width: 100 - n + "%" }, s.animate),
              o === "min" &&
                this.orientation === "vertical" &&
                this.range
                  .stop(1, 1)
                  [l ? "animate" : "css"]({ height: n + "%" }, s.animate),
              o === "max" &&
                this.orientation === "vertical" &&
                this.range
                  .stop(1, 1)
                  [
                    l ? "animate" : "css"
                  ]({ height: 100 - n + "%" }, s.animate));
        },
        _handleEvents: {
          keydown: function (e) {
            let t;
            let n;
            let i;
            const r = te(e.target).data("ui-slider-handle-index");
            switch (e.keyCode) {
              case te.ui.keyCode.HOME:
              case te.ui.keyCode.END:
              case te.ui.keyCode.PAGE_UP:
              case te.ui.keyCode.PAGE_DOWN:
              case te.ui.keyCode.UP:
              case te.ui.keyCode.RIGHT:
              case te.ui.keyCode.DOWN:
              case te.ui.keyCode.LEFT:
                if (
                  (e.preventDefault(),
                  !this._keySliding &&
                    ((this._keySliding = !0),
                    this._addClass(te(e.target), null, "ui-state-active"),
                    !1 === this._start(e, r)))
                ) {
                  return;
                }
            }
            switch (
              ((i = this.options.step),
              (t = n =
                this._hasMultipleValues() ? this.values(r) : this.value()),
              e.keyCode)
            ) {
              case te.ui.keyCode.HOME:
                n = this._valueMin();
                break;
              case te.ui.keyCode.END:
                n = this._valueMax();
                break;
              case te.ui.keyCode.PAGE_UP:
                n = this._trimAlignValue(
                  t + (this._valueMax() - this._valueMin()) / this.numPages,
                );
                break;
              case te.ui.keyCode.PAGE_DOWN:
                n = this._trimAlignValue(
                  t - (this._valueMax() - this._valueMin()) / this.numPages,
                );
                break;
              case te.ui.keyCode.UP:
              case te.ui.keyCode.RIGHT:
                if (t === this._valueMax()) return;
                n = this._trimAlignValue(t + i);
                break;
              case te.ui.keyCode.DOWN:
              case te.ui.keyCode.LEFT:
                if (t === this._valueMin()) return;
                n = this._trimAlignValue(t - i);
            }
            this._slide(e, r, n);
          },
          keyup: function (e) {
            const t = te(e.target).data("ui-slider-handle-index");
            this._keySliding &&
              ((this._keySliding = !1),
              this._stop(e, t),
              this._change(e, t),
              this._removeClass(te(e.target), null, "ui-state-active"));
          },
        },
      });
    te.widget("ui.spinner", {
      version: "1.13.1",
      defaultElement: "<input>",
      widgetEventPrefix: "spin",
      options: {
        classes: {
          "ui-spinner": "ui-corner-all",
          "ui-spinner-down": "ui-corner-br",
          "ui-spinner-up": "ui-corner-tr",
        },
        culture: null,
        icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
        incremental: !0,
        max: null,
        min: null,
        numberFormat: null,
        page: 10,
        step: 1,
        change: null,
        spin: null,
        start: null,
        stop: null,
      },
      _create: function () {
        this._setOption("max", this.options.max),
          this._setOption("min", this.options.min),
          this._setOption("step", this.options.step),
          this.value() !== "" && this._value(this.element.val(), !0),
          this._draw(),
          this._on(this._events),
          this._refresh(),
          this._on(this.window, {
            beforeunload: function () {
              this.element.removeAttr("autocomplete");
            },
          });
      },
      _getCreateOptions: function () {
        const i = this._super();
        const r = this.element;
        return (
          te.each(["min", "max", "step"], function (e, t) {
            const n = r.attr(t);
            n != null && n.length && (i[t] = n);
          }),
          i
        );
      },
      _events: {
        keydown: function (e) {
          this._start(e) && this._keydown(e) && e.preventDefault();
        },
        keyup: "_stop",
        focus: function () {
          this.previous = this.element.val();
        },
        blur: function (e) {
          this.cancelBlur
            ? delete this.cancelBlur
            : (this._stop(),
              this._refresh(),
              this.previous !== this.element.val() &&
                this._trigger("change", e));
        },
        mousewheel: function (e, t) {
          const n = te.ui.safeActiveElement(this.document[0]);
          if (this.element[0] === n && t) {
            if (!this.spinning && !this._start(e)) return !1;
            this._spin((t > 0 ? 1 : -1) * this.options.step, e),
              clearTimeout(this.mousewheelTimer),
              (this.mousewheelTimer = this._delay(function () {
                this.spinning && this._stop(e);
              }, 100)),
              e.preventDefault();
          }
        },
        "mousedown .ui-spinner-button": function (e) {
          function t() {
            this.element[0] === te.ui.safeActiveElement(this.document[0]) ||
              (this.element.trigger("focus"),
              (this.previous = n),
              this._delay(function () {
                this.previous = n;
              }));
          }
          let n;
          (n =
            this.element[0] === te.ui.safeActiveElement(this.document[0])
              ? this.previous
              : this.element.val()),
            e.preventDefault(),
            t.call(this),
            (this.cancelBlur = !0),
            this._delay(function () {
              delete this.cancelBlur, t.call(this);
            }),
            !1 !== this._start(e) &&
              this._repeat(
                null,
                te(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                e,
              );
        },
        "mouseup .ui-spinner-button": "_stop",
        "mouseenter .ui-spinner-button": function (e) {
          if (te(e.currentTarget).hasClass("ui-state-active")) {
            return (
              !1 !== this._start(e) &&
              void this._repeat(
                null,
                te(e.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                e,
              )
            );
          }
        },
        "mouseleave .ui-spinner-button": "_stop",
      },
      _enhance: function () {
        this.uiSpinner = this.element
          .attr("autocomplete", "off")
          .wrap("<span>")
          .parent()
          .append("<a></a><a></a>");
      },
      _draw: function () {
        this._enhance(),
          this._addClass(
            this.uiSpinner,
            "ui-spinner",
            "ui-widget ui-widget-content",
          ),
          this._addClass("ui-spinner-input"),
          this.element.attr("role", "spinbutton"),
          (this.buttons = this.uiSpinner
            .children("a")
            .attr("tabIndex", -1)
            .attr("aria-hidden", !0)
            .button({ classes: { "ui-button": "" } })),
          this._removeClass(this.buttons, "ui-corner-all"),
          this._addClass(
            this.buttons.first(),
            "ui-spinner-button ui-spinner-up",
          ),
          this._addClass(
            this.buttons.last(),
            "ui-spinner-button ui-spinner-down",
          ),
          this.buttons
            .first()
            .button({ icon: this.options.icons.up, showLabel: !1 }),
          this.buttons
            .last()
            .button({ icon: this.options.icons.down, showLabel: !1 }),
          this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) &&
            this.uiSpinner.height() > 0 &&
            this.uiSpinner.height(this.uiSpinner.height());
      },
      _keydown: function (e) {
        const t = this.options;
        const n = te.ui.keyCode;
        switch (e.keyCode) {
          case n.UP:
            return this._repeat(null, 1, e), !0;
          case n.DOWN:
            return this._repeat(null, -1, e), !0;
          case n.PAGE_UP:
            return this._repeat(null, t.page, e), !0;
          case n.PAGE_DOWN:
            return this._repeat(null, -t.page, e), !0;
        }
        return !1;
      },
      _start: function (e) {
        return (
          !(!this.spinning && !1 === this._trigger("start", e)) &&
          (this.counter || (this.counter = 1), (this.spinning = !0))
        );
      },
      _repeat: function (e, t, n) {
        (e = e || 500),
          clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            this._repeat(40, t, n);
          }, e)),
          this._spin(t * this.options.step, n);
      },
      _spin: function (e, t) {
        let n = this.value() || 0;
        this.counter || (this.counter = 1),
          (n = this._adjustValue(n + e * this._increment(this.counter))),
          (this.spinning && !1 === this._trigger("spin", t, { value: n })) ||
            (this._value(n), this.counter++);
      },
      _increment: function (e) {
        const t = this.options.incremental;
        return t
          ? typeof t === "function"
            ? t(e)
            : Math.floor((e * e * e) / 5e4 - (e * e) / 500 + (17 * e) / 200 + 1)
          : 1;
      },
      _precision: function () {
        let e = this._precisionOf(this.options.step);
        return (
          this.options.min !== null &&
            (e = Math.max(e, this._precisionOf(this.options.min))),
          e
        );
      },
      _precisionOf: function (e) {
        const t = e.toString();
        const n = t.indexOf(".");
        return n === -1 ? 0 : t.length - n - 1;
      },
      _adjustValue: function (e) {
        let t;
        let n;
        const i = this.options;
        return (
          (n = e - (t = i.min !== null ? i.min : 0)),
          (e = t + (n = Math.round(n / i.step) * i.step)),
          (e = parseFloat(e.toFixed(this._precision()))),
          i.max !== null && e > i.max
            ? i.max
            : i.min !== null && e < i.min
              ? i.min
              : e
        );
      },
      _stop: function (e) {
        this.spinning &&
          (clearTimeout(this.timer),
          clearTimeout(this.mousewheelTimer),
          (this.counter = 0),
          (this.spinning = !1),
          this._trigger("stop", e));
      },
      _setOption: function (e, t) {
        let n, i, r;
        if (e === "culture" || e === "numberFormat") {
          return (
            (n = this._parse(this.element.val())),
            (this.options[e] = t),
            void this.element.val(this._format(n))
          );
        }
        (e !== "max" && e !== "min" && e !== "step") ||
          (typeof t === "string" && (t = this._parse(t))),
          e === "icons" &&
            ((i = this.buttons.first().find(".ui-icon")),
            this._removeClass(i, null, this.options.icons.up),
            this._addClass(i, null, t.up),
            (r = this.buttons.last().find(".ui-icon")),
            this._removeClass(r, null, this.options.icons.down),
            this._addClass(r, null, t.down)),
          this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!e),
          this.element.prop("disabled", !!e),
          this.buttons.button(e ? "disable" : "enable");
      },
      _setOptions: t(function (e) {
        this._super(e);
      }),
      _parse: function (e) {
        return (
          typeof e === "string" &&
            e !== "" &&
            (e =
              window.Globalize && this.options.numberFormat
                ? Globalize.parseFloat(e, 10, this.options.culture)
                : +e),
          e === "" || isNaN(e) ? null : e
        );
      },
      _format: function (e) {
        return e === ""
          ? ""
          : window.Globalize && this.options.numberFormat
            ? Globalize.format(
                e,
                this.options.numberFormat,
                this.options.culture,
              )
            : e;
      },
      _refresh: function () {
        this.element.attr({
          "aria-valuemin": this.options.min,
          "aria-valuemax": this.options.max,
          "aria-valuenow": this._parse(this.element.val()),
        });
      },
      isValid: function () {
        const e = this.value();
        return e !== null && e === this._adjustValue(e);
      },
      _value: function (e, t) {
        let n;
        e !== "" &&
          (n = this._parse(e)) !== null &&
          (t || (n = this._adjustValue(n)), (e = this._format(n))),
          this.element.val(e),
          this._refresh();
      },
      _destroy: function () {
        this.element
          .prop("disabled", !1)
          .removeAttr(
            "autocomplete role aria-valuemin aria-valuemax aria-valuenow",
          ),
          this.uiSpinner.replaceWith(this.element);
      },
      stepUp: t(function (e) {
        this._stepUp(e);
      }),
      _stepUp: function (e) {
        this._start() &&
          (this._spin((e || 1) * this.options.step), this._stop());
      },
      stepDown: t(function (e) {
        this._stepDown(e);
      }),
      _stepDown: function (e) {
        this._start() &&
          (this._spin((e || 1) * -this.options.step), this._stop());
      },
      pageUp: t(function (e) {
        this._stepUp((e || 1) * this.options.page);
      }),
      pageDown: t(function (e) {
        this._stepDown((e || 1) * this.options.page);
      }),
      value: function (e) {
        if (!arguments.length) return this._parse(this.element.val());
        t(this._value).call(this, e);
      },
      widget: function () {
        return this.uiSpinner;
      },
    }),
      !1 !== te.uiBackCompat &&
        te.widget("ui.spinner", te.ui.spinner, {
          _enhance: function () {
            this.uiSpinner = this.element
              .attr("autocomplete", "off")
              .wrap(this._uiSpinnerHtml())
              .parent()
              .append(this._buttonHtml());
          },
          _uiSpinnerHtml: function () {
            return "<span>";
          },
          _buttonHtml: function () {
            return "<a></a><a></a>";
          },
        });
    let C;
    te.ui.spinner;
    te.widget("ui.tabs", {
      version: "1.13.1",
      delay: 300,
      options: {
        active: null,
        classes: {
          "ui-tabs": "ui-corner-all",
          "ui-tabs-nav": "ui-corner-all",
          "ui-tabs-panel": "ui-corner-bottom",
          "ui-tabs-tab": "ui-corner-top",
        },
        collapsible: !1,
        event: "click",
        heightStyle: "content",
        hide: null,
        show: null,
        activate: null,
        beforeActivate: null,
        beforeLoad: null,
        load: null,
      },
      _isLocal:
        ((C = /#.*$/),
        function (e) {
          let t, n;
          (t = e.href.replace(C, "")), (n = location.href.replace(C, ""));
          try {
            t = decodeURIComponent(t);
          } catch (i) {}
          try {
            n = decodeURIComponent(n);
          } catch (i) {}
          return e.hash.length > 1 && t === n;
        }),
      _create: function () {
        const t = this;
        const e = this.options;
        (this.running = !1),
          this._addClass("ui-tabs", "ui-widget ui-widget-content"),
          this._toggleClass("ui-tabs-collapsible", null, e.collapsible),
          this._processTabs(),
          (e.active = this._initialActive()),
          Array.isArray(e.disabled) &&
            (e.disabled = te
              .uniqueSort(
                e.disabled.concat(
                  te.map(this.tabs.filter(".ui-state-disabled"), function (e) {
                    return t.tabs.index(e);
                  }),
                ),
              )
              .sort()),
          !1 !== this.options.active && this.anchors.length
            ? (this.active = this._findActive(e.active))
            : (this.active = te()),
          this._refresh(),
          this.active.length && this.load(e.active);
      },
      _initialActive: function () {
        let n = this.options.active;
        const e = this.options.collapsible;
        const i = location.hash.substring(1);
        return (
          n === null &&
            (i &&
              this.tabs.each(function (e, t) {
                if (te(t).attr("aria-controls") === i) return (n = e), !1;
              }),
            n === null &&
              (n = this.tabs.index(this.tabs.filter(".ui-tabs-active"))),
            (n !== null && n !== -1) || (n = !!this.tabs.length && 0)),
          !1 !== n &&
            (n = this.tabs.index(this.tabs.eq(n))) === -1 &&
            (n = !e && 0),
          !e && !1 === n && this.anchors.length && (n = 0),
          n
        );
      },
      _getCreateEventData: function () {
        return {
          tab: this.active,
          panel: this.active.length ? this._getPanelForTab(this.active) : te(),
        };
      },
      _tabKeydown: function (e) {
        const t = te(te.ui.safeActiveElement(this.document[0])).closest("li");
        let n = this.tabs.index(t);
        let i = !0;
        if (!this._handlePageNav(e)) {
          switch (e.keyCode) {
            case te.ui.keyCode.RIGHT:
            case te.ui.keyCode.DOWN:
              n++;
              break;
            case te.ui.keyCode.UP:
            case te.ui.keyCode.LEFT:
              (i = !1), n--;
              break;
            case te.ui.keyCode.END:
              n = this.anchors.length - 1;
              break;
            case te.ui.keyCode.HOME:
              n = 0;
              break;
            case te.ui.keyCode.SPACE:
              return (
                e.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(n)
              );
            case te.ui.keyCode.ENTER:
              return (
                e.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(n !== this.options.active && n)
              );
            default:
              return;
          }
          e.preventDefault(),
            clearTimeout(this.activating),
            (n = this._focusNextTab(n, i)),
            e.ctrlKey ||
              e.metaKey ||
              (t.attr("aria-selected", "false"),
              this.tabs.eq(n).attr("aria-selected", "true"),
              (this.activating = this._delay(function () {
                this.option("active", n);
              }, this.delay)));
        }
      },
      _panelKeydown: function (e) {
        this._handlePageNav(e) ||
          (e.ctrlKey &&
            e.keyCode === te.ui.keyCode.UP &&
            (e.preventDefault(), this.active.trigger("focus")));
      },
      _handlePageNav: function (e) {
        return e.altKey && e.keyCode === te.ui.keyCode.PAGE_UP
          ? (this._activate(this._focusNextTab(this.options.active - 1, !1)),
            !0)
          : e.altKey && e.keyCode === te.ui.keyCode.PAGE_DOWN
            ? (this._activate(this._focusNextTab(this.options.active + 1, !0)),
              !0)
            : void 0;
      },
      _findNextTab: function (e, t) {
        function n() {
          return i < e && (e = 0), e < 0 && (e = i), e;
        }
        for (
          var i = this.tabs.length - 1;
          te.inArray(n(), this.options.disabled) !== -1;

        ) {
          e = t ? e + 1 : e - 1;
        }
        return e;
      },
      _focusNextTab: function (e, t) {
        return (
          (e = this._findNextTab(e, t)), this.tabs.eq(e).trigger("focus"), e
        );
      },
      _setOption: function (e, t) {
        e !== "active"
          ? (this._super(e, t),
            e === "collapsible" &&
              (this._toggleClass("ui-tabs-collapsible", null, t),
              t || !1 !== this.options.active || this._activate(0)),
            e === "event" && this._setupEvents(t),
            e === "heightStyle" && this._setupHeightStyle(t))
          : this._activate(t);
      },
      _sanitizeSelector: function (e) {
        return e
          ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&")
          : "";
      },
      refresh: function () {
        const e = this.options;
        const t = this.tablist.children(":has(a[href])");
        (e.disabled = te.map(t.filter(".ui-state-disabled"), function (e) {
          return t.index(e);
        })),
          this._processTabs(),
          !1 !== e.active && this.anchors.length
            ? this.active.length &&
              !te.contains(this.tablist[0], this.active[0])
              ? this.tabs.length === e.disabled.length
                ? ((e.active = !1), (this.active = te()))
                : this._activate(
                    this._findNextTab(Math.max(0, e.active - 1), !1),
                  )
              : (e.active = this.tabs.index(this.active))
            : ((e.active = !1), (this.active = te())),
          this._refresh();
      },
      _refresh: function () {
        this._setOptionDisabled(this.options.disabled),
          this._setupEvents(this.options.event),
          this._setupHeightStyle(this.options.heightStyle),
          this.tabs.not(this.active).attr({
            "aria-selected": "false",
            "aria-expanded": "false",
            tabIndex: -1,
          }),
          this.panels
            .not(this._getPanelForTab(this.active))
            .hide()
            .attr({ "aria-hidden": "true" }),
          this.active.length
            ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0,
              }),
              this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
              this._getPanelForTab(this.active)
                .show()
                .attr({ "aria-hidden": "false" }))
            : this.tabs.eq(0).attr("tabIndex", 0);
      },
      _processTabs: function () {
        const l = this;
        const e = this.tabs;
        const t = this.anchors;
        const n = this.panels;
        (this.tablist = this._getList().attr("role", "tablist")),
          this._addClass(
            this.tablist,
            "ui-tabs-nav",
            "ui-helper-reset ui-helper-clearfix ui-widget-header",
          ),
          this.tablist
            .on("mousedown" + this.eventNamespace, "> li", function (e) {
              te(this).is(".ui-state-disabled") && e.preventDefault();
            })
            .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
              te(this).closest("li").is(".ui-state-disabled") && this.blur();
            }),
          (this.tabs = this.tablist
            .find("> li:has(a[href])")
            .attr({ role: "tab", tabIndex: -1 })),
          this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
          (this.anchors = this.tabs
            .map(function () {
              return te("a", this)[0];
            })
            .attr({ tabIndex: -1 })),
          this._addClass(this.anchors, "ui-tabs-anchor"),
          (this.panels = te()),
          this.anchors.each(function (e, t) {
            let n;
            let i;
            let r;
            const o = te(t).uniqueId().attr("id");
            const s = te(t).closest("li");
            const a = s.attr("aria-controls");
            l._isLocal(t)
              ? ((r = (n = t.hash).substring(1)),
                (i = l.element.find(l._sanitizeSelector(n))))
              : ((n =
                  "#" +
                  (r = s.attr("aria-controls") || te({}).uniqueId()[0].id)),
                (i = l.element.find(n)).length ||
                  (i = l._createPanel(r)).insertAfter(
                    l.panels[e - 1] || l.tablist,
                  ),
                i.attr("aria-live", "polite")),
              i.length && (l.panels = l.panels.add(i)),
              a && s.data("ui-tabs-aria-controls", a),
              s.attr({ "aria-controls": r, "aria-labelledby": o }),
              i.attr("aria-labelledby", o);
          }),
          this.panels.attr("role", "tabpanel"),
          this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
          e &&
            (this._off(e.not(this.tabs)),
            this._off(t.not(this.anchors)),
            this._off(n.not(this.panels)));
      },
      _getList: function () {
        return this.tablist || this.element.find("ol, ul").eq(0);
      },
      _createPanel: function (e) {
        return te("<div>").attr("id", e).data("ui-tabs-destroy", !0);
      },
      _setOptionDisabled: function (e) {
        let t, n, i;
        for (
          Array.isArray(e) &&
            (e.length
              ? e.length === this.anchors.length && (e = !0)
              : (e = !1)),
            i = 0;
          (n = this.tabs[i]);
          i++
        ) {
          (t = te(n)),
            !0 === e || te.inArray(i, e) !== -1
              ? (t.attr("aria-disabled", "true"),
                this._addClass(t, null, "ui-state-disabled"))
              : (t.removeAttr("aria-disabled"),
                this._removeClass(t, null, "ui-state-disabled"));
        }
        (this.options.disabled = e),
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !0 === e,
          );
      },
      _setupEvents: function (e) {
        const n = {};
        e &&
          te.each(e.split(" "), function (e, t) {
            n[t] = "_eventHandler";
          }),
          this._off(this.anchors.add(this.tabs).add(this.panels)),
          this._on(!0, this.anchors, {
            click: function (e) {
              e.preventDefault();
            },
          }),
          this._on(this.anchors, n),
          this._on(this.tabs, { keydown: "_tabKeydown" }),
          this._on(this.panels, { keydown: "_panelKeydown" }),
          this._focusable(this.tabs),
          this._hoverable(this.tabs);
      },
      _setupHeightStyle: function (e) {
        let n;
        const t = this.element.parent();
        e === "fill"
          ? ((n = t.height()),
            (n -= this.element.outerHeight() - this.element.height()),
            this.element.siblings(":visible").each(function () {
              const e = te(this);
              const t = e.css("position");
              t !== "absolute" && t !== "fixed" && (n -= e.outerHeight(!0));
            }),
            this.element
              .children()
              .not(this.panels)
              .each(function () {
                n -= te(this).outerHeight(!0);
              }),
            this.panels
              .each(function () {
                te(this).height(
                  Math.max(0, n - te(this).innerHeight() + te(this).height()),
                );
              })
              .css("overflow", "auto"))
          : e === "auto" &&
            ((n = 0),
            this.panels
              .each(function () {
                n = Math.max(n, te(this).height("").height());
              })
              .height(n));
      },
      _eventHandler: function (e) {
        const t = this.options;
        const n = this.active;
        const i = te(e.currentTarget).closest("li");
        const r = i[0] === n[0];
        const o = r && t.collapsible;
        const s = o ? te() : this._getPanelForTab(i);
        const a = n.length ? this._getPanelForTab(n) : te();
        const l = { oldTab: n, oldPanel: a, newTab: o ? te() : i, newPanel: s };
        e.preventDefault(),
          i.hasClass("ui-state-disabled") ||
            i.hasClass("ui-tabs-loading") ||
            this.running ||
            (r && !t.collapsible) ||
            !1 === this._trigger("beforeActivate", e, l) ||
            ((t.active = !o && this.tabs.index(i)),
            (this.active = r ? te() : i),
            this.xhr && this.xhr.abort(),
            a.length ||
              s.length ||
              te.error("jQuery UI Tabs: Mismatching fragment identifier."),
            s.length && this.load(this.tabs.index(i), e),
            this._toggle(e, l));
      },
      _toggle: function (e, t) {
        function n() {
          (r.running = !1), r._trigger("activate", e, t);
        }
        function i() {
          r._addClass(
            t.newTab.closest("li"),
            "ui-tabs-active",
            "ui-state-active",
          ),
            o.length && r.options.show
              ? r._show(o, r.options.show, n)
              : (o.show(), n());
        }
        var r = this;
        var o = t.newPanel;
        const s = t.oldPanel;
        (this.running = !0),
          s.length && this.options.hide
            ? this._hide(s, this.options.hide, function () {
                r._removeClass(
                  t.oldTab.closest("li"),
                  "ui-tabs-active",
                  "ui-state-active",
                ),
                  i();
              })
            : (this._removeClass(
                t.oldTab.closest("li"),
                "ui-tabs-active",
                "ui-state-active",
              ),
              s.hide(),
              i()),
          s.attr("aria-hidden", "true"),
          t.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }),
          o.length && s.length
            ? t.oldTab.attr("tabIndex", -1)
            : o.length &&
              this.tabs
                .filter(function () {
                  return te(this).attr("tabIndex") === 0;
                })
                .attr("tabIndex", -1),
          o.attr("aria-hidden", "false"),
          t.newTab.attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _activate: function (e) {
        let t;
        let n = this._findActive(e);
        n[0] !== this.active[0] &&
          (n.length || (n = this.active),
          (t = n.find(".ui-tabs-anchor")[0]),
          this._eventHandler({
            target: t,
            currentTarget: t,
            preventDefault: te.noop,
          }));
      },
      _findActive: function (e) {
        return !1 === e ? te() : this.tabs.eq(e);
      },
      _getIndex: function (e) {
        return (
          typeof e === "string" &&
            (e = this.anchors.index(
              this.anchors.filter("[href$='" + te.escapeSelector(e) + "']"),
            )),
          e
        );
      },
      _destroy: function () {
        this.xhr && this.xhr.abort(),
          this.tablist.removeAttr("role").off(this.eventNamespace),
          this.anchors.removeAttr("role tabIndex").removeUniqueId(),
          this.tabs.add(this.panels).each(function () {
            te.data(this, "ui-tabs-destroy")
              ? te(this).remove()
              : te(this).removeAttr(
                  "role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded",
                );
          }),
          this.tabs.each(function () {
            const e = te(this);
            const t = e.data("ui-tabs-aria-controls");
            t
              ? e.attr("aria-controls", t).removeData("ui-tabs-aria-controls")
              : e.removeAttr("aria-controls");
          }),
          this.panels.show(),
          this.options.heightStyle !== "content" &&
            this.panels.css("height", "");
      },
      enable: function (n) {
        let e = this.options.disabled;
        !1 !== e &&
          (n === undefined
            ? (e = !1)
            : ((n = this._getIndex(n)),
              (e = Array.isArray(e)
                ? te.map(e, function (e) {
                    return e !== n ? e : null;
                  })
                : te.map(this.tabs, function (e, t) {
                    return t !== n ? t : null;
                  }))),
          this._setOptionDisabled(e));
      },
      disable: function (e) {
        let t = this.options.disabled;
        if (!0 !== t) {
          if (e === undefined) t = !0;
          else {
            if (((e = this._getIndex(e)), te.inArray(e, t) !== -1)) return;
            t = Array.isArray(t) ? te.merge([e], t).sort() : [e];
          }
          this._setOptionDisabled(t);
        }
      },
      load: function (e, i) {
        e = this._getIndex(e);
        const r = this;
        const n = this.tabs.eq(e);
        const t = n.find(".ui-tabs-anchor");
        const o = this._getPanelForTab(n);
        const s = { tab: n, panel: o };
        const a = function (e, t) {
          t === "abort" && r.panels.stop(!1, !0),
            r._removeClass(n, "ui-tabs-loading"),
            o.removeAttr("aria-busy"),
            e === r.xhr && delete r.xhr;
        };
        this._isLocal(t[0]) ||
          ((this.xhr = te.ajax(this._ajaxSettings(t, i, s))),
          this.xhr &&
            this.xhr.statusText !== "canceled" &&
            (this._addClass(n, "ui-tabs-loading"),
            o.attr("aria-busy", "true"),
            this.xhr
              .done(function (e, t, n) {
                setTimeout(function () {
                  o.html(e), r._trigger("load", i, s), a(n, t);
                }, 1);
              })
              .fail(function (e, t) {
                setTimeout(function () {
                  a(e, t);
                }, 1);
              })));
      },
      _ajaxSettings: function (e, n, i) {
        const r = this;
        return {
          url: e.attr("href").replace(/#.*$/, ""),
          beforeSend: function (e, t) {
            return r._trigger(
              "beforeLoad",
              n,
              te.extend({ jqXHR: e, ajaxSettings: t }, i),
            );
          },
        };
      },
      _getPanelForTab: function (e) {
        const t = te(e).attr("aria-controls");
        return this.element.find(this._sanitizeSelector("#" + t));
      },
    }),
      !1 !== te.uiBackCompat &&
        te.widget("ui.tabs", te.ui.tabs, {
          _processTabs: function () {
            this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
          },
        });
    te.ui.tabs;
    te.widget("ui.tooltip", {
      version: "1.13.1",
      options: {
        classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" },
        content: function () {
          const e = te(this).attr("title");
          return te("<a>").text(e).html();
        },
        hide: !0,
        items: "[title]:not([disabled])",
        position: {
          my: "left top+15",
          at: "left bottom",
          collision: "flipfit flip",
        },
        show: !0,
        track: !1,
        close: null,
        open: null,
      },
      _addDescribedBy: function (e, t) {
        const n = (e.attr("aria-describedby") || "").split(/\s+/);
        n.push(t),
          e
            .data("ui-tooltip-id", t)
            .attr("aria-describedby", String.prototype.trim.call(n.join(" ")));
      },
      _removeDescribedBy: function (e) {
        const t = e.data("ui-tooltip-id");
        let n = (e.attr("aria-describedby") || "").split(/\s+/);
        const i = te.inArray(t, n);
        i !== -1 && n.splice(i, 1),
          e.removeData("ui-tooltip-id"),
          (n = String.prototype.trim.call(n.join(" ")))
            ? e.attr("aria-describedby", n)
            : e.removeAttr("aria-describedby");
      },
      _create: function () {
        this._on({ mouseover: "open", focusin: "open" }),
          (this.tooltips = {}),
          (this.parents = {}),
          (this.liveRegion = te("<div>")
            .attr({
              role: "log",
              "aria-live": "assertive",
              "aria-relevant": "additions",
            })
            .appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          (this.disabledTitles = te([]));
      },
      _setOption: function (e, t) {
        const n = this;
        this._super(e, t),
          e === "content" &&
            te.each(this.tooltips, function (e, t) {
              n._updateContent(t.element);
            });
      },
      _setOptionDisabled: function (e) {
        this[e ? "_disable" : "_enable"]();
      },
      _disable: function () {
        const i = this;
        te.each(this.tooltips, function (e, t) {
          const n = te.Event("blur");
          (n.target = n.currentTarget = t.element[0]), i.close(n, !0);
        }),
          (this.disabledTitles = this.disabledTitles.add(
            this.element
              .find(this.options.items)
              .addBack()
              .filter(function () {
                const e = te(this);
                if (e.is("[title]")) {
                  return e
                    .data("ui-tooltip-title", e.attr("title"))
                    .removeAttr("title");
                }
              }),
          ));
      },
      _enable: function () {
        this.disabledTitles.each(function () {
          const e = te(this);
          e.data("ui-tooltip-title") &&
            e.attr("title", e.data("ui-tooltip-title"));
        }),
          (this.disabledTitles = te([]));
      },
      open: function (e) {
        const n = this;
        const t = te(e ? e.target : this.element).closest(this.options.items);
        t.length &&
          !t.data("ui-tooltip-id") &&
          (t.attr("title") && t.data("ui-tooltip-title", t.attr("title")),
          t.data("ui-tooltip-open", !0),
          e &&
            e.type === "mouseover" &&
            t.parents().each(function () {
              let e;
              const t = te(this);
              t.data("ui-tooltip-open") &&
                (((e = te.Event("blur")).target = e.currentTarget = this),
                n.close(e, !0)),
                t.attr("title") &&
                  (t.uniqueId(),
                  (n.parents[this.id] = {
                    element: this,
                    title: t.attr("title"),
                  }),
                  t.attr("title", ""));
            }),
          this._registerCloseHandlers(e, t),
          this._updateContent(t, e));
      },
      _updateContent: function (t, n) {
        let e;
        const i = this.options.content;
        const r = this;
        const o = n ? n.type : null;
        if (typeof i === "string" || i.nodeType || i.jquery) {
          return this._open(n, t, i);
        }
        (e = i.call(t[0], function (e) {
          r._delay(function () {
            t.data("ui-tooltip-open") &&
              (n && (n.type = o), this._open(n, t, e));
          });
        })) && this._open(n, t, e);
      },
      _open: function (e, t, n) {
        function i(e) {
          (l.of = e), o.is(":hidden") || o.position(l);
        }
        let r;
        let o;
        let s;
        let a;
        var l = te.extend({}, this.options.position);
        n &&
          ((r = this._find(t))
            ? r.tooltip.find(".ui-tooltip-content").html(n)
            : (t.is("[title]") &&
                (e && e.type === "mouseover"
                  ? t.attr("title", "")
                  : t.removeAttr("title")),
              (r = this._tooltip(t)),
              (o = r.tooltip),
              this._addDescribedBy(t, o.attr("id")),
              o.find(".ui-tooltip-content").html(n),
              this.liveRegion.children().hide(),
              (a = te("<div>").html(o.find(".ui-tooltip-content").html()))
                .removeAttr("name")
                .find("[name]")
                .removeAttr("name"),
              a.removeAttr("id").find("[id]").removeAttr("id"),
              a.appendTo(this.liveRegion),
              this.options.track && e && /^mouse/.test(e.type)
                ? (this._on(this.document, { mousemove: i }), i(e))
                : o.position(te.extend({ of: t }, this.options.position)),
              o.hide(),
              this._show(o, this.options.show),
              this.options.track &&
                this.options.show &&
                this.options.show.delay &&
                (s = this.delayedShow =
                  setInterval(function () {
                    o.is(":visible") && (i(l.of), clearInterval(s));
                  }, 13)),
              this._trigger("open", e, { tooltip: o })));
      },
      _registerCloseHandlers: function (e, n) {
        const t = {
          keyup: function (e) {
            if (e.keyCode === te.ui.keyCode.ESCAPE) {
              const t = te.Event(e);
              (t.currentTarget = n[0]), this.close(t, !0);
            }
          },
        };
        n[0] !== this.element[0] &&
          (t.remove = function () {
            const e = this._find(n);
            e && this._removeTooltip(e.tooltip);
          }),
          (e && e.type !== "mouseover") || (t.mouseleave = "close"),
          (e && e.type !== "focusin") || (t.focusout = "close"),
          this._on(!0, n, t);
      },
      close: function (e) {
        let t;
        const n = this;
        const i = te(e ? e.currentTarget : this.element);
        const r = this._find(i);
        r
          ? ((t = r.tooltip),
            r.closing ||
              (clearInterval(this.delayedShow),
              i.data("ui-tooltip-title") &&
                !i.attr("title") &&
                i.attr("title", i.data("ui-tooltip-title")),
              this._removeDescribedBy(i),
              (r.hiding = !0),
              t.stop(!0),
              this._hide(t, this.options.hide, function () {
                n._removeTooltip(te(this));
              }),
              i.removeData("ui-tooltip-open"),
              this._off(i, "mouseleave focusout keyup"),
              i[0] !== this.element[0] && this._off(i, "remove"),
              this._off(this.document, "mousemove"),
              e &&
                e.type === "mouseleave" &&
                te.each(this.parents, function (e, t) {
                  te(t.element).attr("title", t.title), delete n.parents[e];
                }),
              (r.closing = !0),
              this._trigger("close", e, { tooltip: t }),
              r.hiding || (r.closing = !1)))
          : i.removeData("ui-tooltip-open");
      },
      _tooltip: function (e) {
        const t = te("<div>").attr("role", "tooltip");
        const n = te("<div>").appendTo(t);
        const i = t.uniqueId().attr("id");
        return (
          this._addClass(n, "ui-tooltip-content"),
          this._addClass(t, "ui-tooltip", "ui-widget ui-widget-content"),
          t.appendTo(this._appendTo(e)),
          (this.tooltips[i] = { element: e, tooltip: t })
        );
      },
      _find: function (e) {
        const t = e.data("ui-tooltip-id");
        return t ? this.tooltips[t] : null;
      },
      _removeTooltip: function (e) {
        clearInterval(this.delayedShow),
          e.remove(),
          delete this.tooltips[e.attr("id")];
      },
      _appendTo: function (e) {
        let t = e.closest(".ui-front, dialog");
        return t.length || (t = this.document[0].body), t;
      },
      _destroy: function () {
        const r = this;
        te.each(this.tooltips, function (e, t) {
          const n = te.Event("blur");
          const i = t.element;
          (n.target = n.currentTarget = i[0]),
            r.close(n, !0),
            te("#" + e).remove(),
            i.data("ui-tooltip-title") &&
              (i.attr("title") || i.attr("title", i.data("ui-tooltip-title")),
              i.removeData("ui-tooltip-title"));
        }),
          this.liveRegion.remove();
      },
    }),
      !1 !== te.uiBackCompat &&
        te.widget("ui.tooltip", te.ui.tooltip, {
          options: { tooltipClass: null },
          _tooltip: function () {
            const e = this._superApply(arguments);
            return (
              this.options.tooltipClass &&
                e.tooltip.addClass(this.options.tooltipClass),
              e
            );
          },
        });
    te.ui.tooltip;
    let k;
    var S = te;
    const T =
      "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor";
    var D = {};
    var j = D.toString;
    const N = /^([\-+])=\s*(\d+\.?\d*)/;
    var E = [
      {
        re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (e) {
          return [e[1], e[2], e[3], e[4]];
        },
      },
      {
        re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function (e) {
          return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]];
        },
      },
      {
        re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,
        parse: function (e) {
          return [
            parseInt(e[1], 16),
            parseInt(e[2], 16),
            parseInt(e[3], 16),
            e[4] ? (parseInt(e[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,
        parse: function (e) {
          return [
            parseInt(e[1] + e[1], 16),
            parseInt(e[2] + e[2], 16),
            parseInt(e[3] + e[3], 16),
            e[4] ? (parseInt(e[4] + e[4], 16) / 255).toFixed(2) : 1,
          ];
        },
      },
      {
        re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        space: "hsla",
        parse: function (e) {
          return [e[1], e[2] / 100, e[3] / 100, e[4]];
        },
      },
    ];
    var I = (S.Color = function (e, t, n, i) {
      return new S.Color.fn.parse(e, t, n, i);
    });
    var A = {
      rgba: {
        props: {
          red: { idx: 0, type: "byte" },
          green: { idx: 1, type: "byte" },
          blue: { idx: 2, type: "byte" },
        },
      },
      hsla: {
        props: {
          hue: { idx: 0, type: "degrees" },
          saturation: { idx: 1, type: "percent" },
          lightness: { idx: 2, type: "percent" },
        },
      },
    };
    var M = {
      byte: { floor: !0, max: 255 },
      percent: { max: 1 },
      degrees: { mod: 360, floor: !0 },
    };
    const O = (I.support = {});
    const P = S("<p>")[0];
    var F = S.each;
    (P.style.cssText = "background-color:rgba(1,1,1,.5)"),
      (O.rgba = P.style.backgroundColor.indexOf("rgba") > -1),
      F(A, function (e, t) {
        (t.cache = "_" + e),
          (t.props.alpha = { idx: 3, type: "percent", def: 1 });
      }),
      S.each(
        "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
          " ",
        ),
        function (e, t) {
          D["[object " + t + "]"] = t.toLowerCase();
        },
      ),
      (I.fn = S.extend(I.prototype, {
        parse: function (r, e, t, n) {
          if (r === undefined) {
            return (this._rgba = [null, null, null, null]), this;
          }
          (r.jquery || r.nodeType) && ((r = S(r).css(e)), (e = undefined));
          const o = this;
          let i = u(r);
          const s = (this._rgba = []);
          return (
            e !== undefined && ((r = [r, e, t, n]), (i = "array")),
            i === "string"
              ? this.parse(p(r) || k._default)
              : i === "array"
                ? (F(A.rgba.props, function (e, t) {
                    s[t.idx] = h(r[t.idx], t);
                  }),
                  this)
                : i === "object"
                  ? (F(
                      A,
                      r instanceof I
                        ? function (e, t) {
                            r[t.cache] && (o[t.cache] = r[t.cache].slice());
                          }
                        : function (e, n) {
                            const i = n.cache;
                            F(n.props, function (e, t) {
                              if (!o[i] && n.to) {
                                if (e === "alpha" || r[e] == null) return;
                                o[i] = n.to(o._rgba);
                              }
                              o[i][t.idx] = h(r[e], t, !0);
                            }),
                              o[i] &&
                                S.inArray(null, o[i].slice(0, 3)) < 0 &&
                                (o[i][3] == null && (o[i][3] = 1),
                                n.from && (o._rgba = n.from(o[i])));
                          },
                    ),
                    this)
                  : void 0
          );
        },
        is: function (e) {
          const r = I(e);
          let o = !0;
          const s = this;
          return (
            F(A, function (e, t) {
              let n;
              const i = r[t.cache];
              return (
                i &&
                  ((n = s[t.cache] || (t.to && t.to(s._rgba)) || []),
                  F(t.props, function (e, t) {
                    if (i[t.idx] != null) return (o = i[t.idx] === n[t.idx]);
                  })),
                o
              );
            }),
            o
          );
        },
        _space: function () {
          const n = [];
          const i = this;
          return (
            F(A, function (e, t) {
              i[t.cache] && n.push(e);
            }),
            n.pop()
          );
        },
        transition: function (e, s) {
          let a = I(e);
          const t = a._space();
          const n = A[t];
          const i = this.alpha() === 0 ? I("transparent") : this;
          const l = i[n.cache] || n.to(i._rgba);
          const c = l.slice();
          return (
            (a = a[n.cache]),
            F(n.props, function (e, t) {
              const n = t.idx;
              let i = l[n];
              const r = a[n];
              const o = M[t.type] || {};
              r !== null &&
                (i === null
                  ? (c[n] = r)
                  : (o.mod &&
                      (r - i > o.mod / 2
                        ? (i += o.mod)
                        : i - r > o.mod / 2 && (i -= o.mod)),
                    (c[n] = h((r - i) * s + i, t))));
            }),
            this[t](c)
          );
        },
        blend: function (e) {
          if (this._rgba[3] === 1) return this;
          const t = this._rgba.slice();
          const n = t.pop();
          const i = I(e)._rgba;
          return I(
            S.map(t, function (e, t) {
              return (1 - n) * i[t] + n * e;
            }),
          );
        },
        toRgbaString: function () {
          let e = "rgba(";
          const t = S.map(this._rgba, function (e, t) {
            return e != null ? e : t > 2 ? 1 : 0;
          });
          return t[3] === 1 && (t.pop(), (e = "rgb(")), e + t.join() + ")";
        },
        toHslaString: function () {
          let e = "hsla(";
          const t = S.map(this.hsla(), function (e, t) {
            return (
              e == null && (e = t > 2 ? 1 : 0),
              t && t < 3 && (e = Math.round(100 * e) + "%"),
              e
            );
          });
          return t[3] === 1 && (t.pop(), (e = "hsl(")), e + t.join() + ")";
        },
        toHexString: function (e) {
          const t = this._rgba.slice();
          const n = t.pop();
          return (
            e && t.push(~~(255 * n)),
            "#" +
              S.map(t, function (e) {
                return (e = (e || 0).toString(16)).length === 1 ? "0" + e : e;
              }).join("")
          );
        },
        toString: function () {
          return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
        },
      })),
      (I.fn.parse.prototype = I.fn),
      (A.hsla.to = function (e) {
        if (e[0] == null || e[1] == null || e[2] == null) {
          return [null, null, null, e[3]];
        }
        let t;
        let n;
        const i = e[0] / 255;
        const r = e[1] / 255;
        const o = e[2] / 255;
        const s = e[3];
        const a = Math.max(i, r, o);
        const l = Math.min(i, r, o);
        const c = a - l;
        const u = a + l;
        const d = 0.5 * u;
        return (
          (t =
            l === a
              ? 0
              : i === a
                ? (60 * (r - o)) / c + 360
                : r === a
                  ? (60 * (o - i)) / c + 120
                  : (60 * (i - r)) / c + 240),
          (n = c === 0 ? 0 : d <= 0.5 ? c / u : c / (2 - u)),
          [Math.round(t) % 360, n, d, s == null ? 1 : s]
        );
      }),
      (A.hsla.from = function (e) {
        if (e[0] == null || e[1] == null || e[2] == null) {
          return [null, null, null, e[3]];
        }
        const t = e[0] / 360;
        const n = e[1];
        const i = e[2];
        const r = e[3];
        const o = i <= 0.5 ? i * (1 + n) : i + n - i * n;
        const s = 2 * i - o;
        return [
          Math.round(255 * f(s, o, t + 1 / 3)),
          Math.round(255 * f(s, o, t)),
          Math.round(255 * f(s, o, t - 1 / 3)),
          r,
        ];
      }),
      F(A, function (l, e) {
        const n = e.props;
        const s = e.cache;
        const a = e.to;
        const c = e.from;
        (I.fn[l] = function (e) {
          if ((a && !this[s] && (this[s] = a(this._rgba)), e === undefined)) {
            return this[s].slice();
          }
          let t;
          const i = u(e);
          const r = i === "array" || i === "object" ? e : arguments;
          const o = this[s].slice();
          return (
            F(n, function (e, t) {
              let n = r[i === "object" ? e : t.idx];
              n == null && (n = o[t.idx]), (o[t.idx] = h(n, t));
            }),
            c ? (((t = I(c(o)))[s] = o), t) : I(o)
          );
        }),
          F(n, function (s, a) {
            I.fn[s] ||
              (I.fn[s] = function (e) {
                let t;
                let n;
                let i;
                let r;
                let o = u(e);
                return (
                  (n = (t =
                    this[
                      (r = s === "alpha" ? (this._hsla ? "hsla" : "rgba") : l)
                    ]())[a.idx]),
                  o === "undefined"
                    ? n
                    : (o === "function" && (o = u((e = e.call(this, n)))),
                      e == null && a.empty
                        ? this
                        : (o === "string" &&
                            (i = N.exec(e)) &&
                            (e =
                              n + parseFloat(i[2]) * (i[1] === "+" ? 1 : -1)),
                          (t[a.idx] = e),
                          this[r](t)))
                );
              });
          });
      }),
      (I.hook = function (e) {
        const t = e.split(" ");
        F(t, function (e, s) {
          (S.cssHooks[s] = {
            set: function (e, t) {
              let n;
              let i;
              let r = "";
              if (t !== "transparent" && (u(t) !== "string" || (n = p(t)))) {
                if (((t = I(n || t)), !O.rgba && t._rgba[3] !== 1)) {
                  for (
                    i = s === "backgroundColor" ? e.parentNode : e;
                    (r === "" || r === "transparent") && i && i.style;

                  ) {
                    try {
                      (r = S.css(i, "backgroundColor")), (i = i.parentNode);
                    } catch (o) {}
                  }
                  t = t.blend(r && r !== "transparent" ? r : "_default");
                }
                t = t.toRgbaString();
              }
              try {
                e.style[s] = t;
              } catch (o) {}
            },
          }),
            (S.fx.step[s] = function (e) {
              e.colorInit ||
                ((e.start = I(e.elem, s)),
                (e.end = I(e.end)),
                (e.colorInit = !0)),
                S.cssHooks[s].set(e.elem, e.start.transition(e.end, e.pos));
            });
        });
      }),
      I.hook(T),
      (S.cssHooks.borderColor = {
        expand: function (n) {
          const i = {};
          return (
            F(["Top", "Right", "Bottom", "Left"], function (e, t) {
              i["border" + t + "Color"] = n;
            }),
            i
          );
        },
      }),
      (k = S.Color.names =
        {
          aqua: "#00ffff",
          black: "#000000",
          blue: "#0000ff",
          fuchsia: "#ff00ff",
          gray: "#808080",
          green: "#008000",
          lime: "#00ff00",
          maroon: "#800000",
          navy: "#000080",
          olive: "#808000",
          purple: "#800080",
          red: "#ff0000",
          silver: "#c0c0c0",
          teal: "#008080",
          white: "#ffffff",
          yellow: "#ffff00",
          transparent: [null, null, null, 0],
          _default: "#ffffff",
        });
    let L;
    const H = "ui-effects-";
    const R = "ui-effects-style";
    const $ = "ui-effects-animated";
    (te.effects = { effect: {} }),
      (function () {
        function o(e) {
          return e.replace(/-([\da-z])/gi, function (e, t) {
            return t.toUpperCase();
          });
        }
        function s(e) {
          let t;
          let n;
          const i = e.ownerDocument.defaultView
            ? e.ownerDocument.defaultView.getComputedStyle(e, null)
            : e.currentStyle;
          const r = {};
          if (i && i.length && i[0] && i[i[0]]) {
            for (n = i.length; n--; ) {
              typeof i[(t = i[n])] === "string" && (r[o(t)] = i[t]);
            }
          } else for (t in i) typeof i[t] === "string" && (r[t] = i[t]);
          return r;
        }
        function a(e, t) {
          let n;
          let i;
          const r = {};
          for (n in t) {
            (i = t[n]),
              e[n] !== i &&
                (d[n] ||
                  (!te.fx.step[n] && isNaN(parseFloat(i))) ||
                  (r[n] = i));
          }
          return r;
        }
        let l;
        let r;
        let c;
        const u = ["add", "remove", "toggle"];
        var d = {
          border: 1,
          borderBottom: 1,
          borderColor: 1,
          borderLeft: 1,
          borderRight: 1,
          borderTop: 1,
          borderWidth: 1,
          margin: 1,
          padding: 1,
        };
        te.each(
          [
            "borderLeftStyle",
            "borderRightStyle",
            "borderBottomStyle",
            "borderTopStyle",
          ],
          function (e, t) {
            te.fx.step[t] = function (e) {
              ((e.end !== "none" && !e.setAttr) ||
                (e.pos === 1 && !e.setAttr)) &&
                (S.style(e.elem, t, e.end), (e.setAttr = !0));
            };
          },
        ),
          te.fn.addBack ||
            (te.fn.addBack = function (e) {
              return this.add(
                e == null ? this.prevObject : this.prevObject.filter(e),
              );
            }),
          (te.effects.animateClass = function (r, e, t, n) {
            const o = te.speed(e, t, n);
            return this.queue(function () {
              let e;
              const n = te(this);
              const t = n.attr("class") || "";
              let i = o.children ? n.find("*").addBack() : n;
              (i = i.map(function () {
                return { el: te(this), start: s(this) };
              })),
                (e = function () {
                  te.each(u, function (e, t) {
                    r[t] && n[t + "Class"](r[t]);
                  });
                })(),
                (i = i.map(function () {
                  return (
                    (this.end = s(this.el[0])),
                    (this.diff = a(this.start, this.end)),
                    this
                  );
                })),
                n.attr("class", t),
                (i = i.map(function () {
                  const e = this;
                  const t = te.Deferred();
                  const n = te.extend({}, o, {
                    queue: !1,
                    complete: function () {
                      t.resolve(e);
                    },
                  });
                  return this.el.animate(this.diff, n), t.promise();
                })),
                te.when.apply(te, i.get()).done(function () {
                  e(),
                    te.each(arguments, function () {
                      const t = this.el;
                      te.each(this.diff, function (e) {
                        t.css(e, "");
                      });
                    }),
                    o.complete.call(n[0]);
                });
            });
          }),
          te.fn.extend({
            addClass:
              ((c = te.fn.addClass),
              function (e, t, n, i) {
                return t
                  ? te.effects.animateClass.call(this, { add: e }, t, n, i)
                  : c.apply(this, arguments);
              }),
            removeClass:
              ((r = te.fn.removeClass),
              function (e, t, n, i) {
                return arguments.length > 1
                  ? te.effects.animateClass.call(this, { remove: e }, t, n, i)
                  : r.apply(this, arguments);
              }),
            toggleClass:
              ((l = te.fn.toggleClass),
              function (e, t, n, i, r) {
                return typeof t === "boolean" || t === undefined
                  ? n
                    ? te.effects.animateClass.call(
                        this,
                        t ? { add: e } : { remove: e },
                        n,
                        i,
                        r,
                      )
                    : l.apply(this, arguments)
                  : te.effects.animateClass.call(this, { toggle: e }, t, n, i);
              }),
            switchClass: function (e, t, n, i, r) {
              return te.effects.animateClass.call(
                this,
                { add: t, remove: e },
                n,
                i,
                r,
              );
            },
          });
      })(),
      (function () {
        function u(e, t, n, i) {
          return (
            te.isPlainObject(e) && (e = (t = e).effect),
            (e = { effect: e }),
            t == null && (t = {}),
            typeof t === "function" && ((i = t), (n = null), (t = {})),
            (typeof t === "number" || te.fx.speeds[t]) &&
              ((i = n), (n = t), (t = {})),
            typeof n === "function" && ((i = n), (n = null)),
            t && te.extend(e, t),
            (n = n || t.duration),
            (e.duration = te.fx.off
              ? 0
              : typeof n === "number"
                ? n
                : n in te.fx.speeds
                  ? te.fx.speeds[n]
                  : te.fx.speeds._default),
            (e.complete = i || t.complete),
            e
          );
        }
        function n(e) {
          return (
            !(e && typeof e !== "number" && !te.fx.speeds[e]) ||
            (typeof e === "string" && !te.effects.effect[e]) ||
            typeof e === "function" ||
            (typeof e === "object" && !e.effect)
          );
        }
        function t(e, t) {
          const n = t.outerWidth();
          const i = t.outerHeight();
          const r =
            /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(
              e,
            ) || ["", 0, n, i, 0];
          return {
            top: parseFloat(r[1]) || 0,
            right: r[2] === "auto" ? n : parseFloat(r[2]),
            bottom: r[3] === "auto" ? i : parseFloat(r[3]),
            left: parseFloat(r[4]) || 0,
          };
        }
        let i, r, o, s;
        te.expr &&
          te.expr.pseudos &&
          te.expr.pseudos.animated &&
          (te.expr.pseudos.animated =
            ((i = te.expr.pseudos.animated),
            function (e) {
              return !!te(e).data($) || i(e);
            })),
          !1 !== te.uiBackCompat &&
            te.extend(te.effects, {
              save: function (e, t) {
                for (let n = 0, i = t.length; n < i; n++) {
                  t[n] !== null && e.data(H + t[n], e[0].style[t[n]]);
                }
              },
              restore: function (e, t) {
                for (var n, i = 0, r = t.length; i < r; i++) {
                  t[i] !== null && ((n = e.data(H + t[i])), e.css(t[i], n));
                }
              },
              setMode: function (e, t) {
                return (
                  t === "toggle" && (t = e.is(":hidden") ? "show" : "hide"), t
                );
              },
              createWrapper: function (n) {
                if (n.parent().is(".ui-effects-wrapper")) return n.parent();
                const i = {
                  width: n.outerWidth(!0),
                  height: n.outerHeight(!0),
                  float: n.css("float"),
                };
                let e = te("<div></div>").addClass("ui-effects-wrapper").css({
                  fontSize: "100%",
                  background: "transparent",
                  border: "none",
                  margin: 0,
                  padding: 0,
                });
                const t = { width: n.width(), height: n.height() };
                let r = document.activeElement;
                try {
                  r.id;
                } catch (o) {
                  r = document.body;
                }
                return (
                  n.wrap(e),
                  (n[0] === r || te.contains(n[0], r)) &&
                    te(r).trigger("focus"),
                  (e = n.parent()),
                  n.css("position") === "static"
                    ? (e.css({ position: "relative" }),
                      n.css({ position: "relative" }))
                    : (te.extend(i, {
                        position: n.css("position"),
                        zIndex: n.css("z-index"),
                      }),
                      te.each(
                        ["top", "left", "bottom", "right"],
                        function (e, t) {
                          (i[t] = n.css(t)),
                            isNaN(parseInt(i[t], 10)) && (i[t] = "auto");
                        },
                      ),
                      n.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto",
                      })),
                  n.css(t),
                  e.css(i).show()
                );
              },
              removeWrapper: function (e) {
                const t = document.activeElement;
                return (
                  e.parent().is(".ui-effects-wrapper") &&
                    (e.parent().replaceWith(e),
                    (e[0] === t || te.contains(e[0], t)) &&
                      te(t).trigger("focus")),
                  e
                );
              },
            }),
          te.extend(te.effects, {
            version: "1.13.1",
            define: function (e, t, n) {
              return (
                n || ((n = t), (t = "effect")),
                (te.effects.effect[e] = n),
                (te.effects.effect[e].mode = t),
                n
              );
            },
            scaledDimensions: function (e, t, n) {
              if (t === 0) {
                return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
              }
              const i = n !== "horizontal" ? (t || 100) / 100 : 1;
              const r = n !== "vertical" ? (t || 100) / 100 : 1;
              return {
                height: e.height() * r,
                width: e.width() * i,
                outerHeight: e.outerHeight() * r,
                outerWidth: e.outerWidth() * i,
              };
            },
            clipToBox: function (e) {
              return {
                width: e.clip.right - e.clip.left,
                height: e.clip.bottom - e.clip.top,
                left: e.clip.left,
                top: e.clip.top,
              };
            },
            unshift: function (e, t, n) {
              const i = e.queue();
              t > 1 && i.splice.apply(i, [1, 0].concat(i.splice(t, n))),
                e.dequeue();
            },
            saveStyle: function (e) {
              e.data(R, e[0].style.cssText);
            },
            restoreStyle: function (e) {
              (e[0].style.cssText = e.data(R) || ""), e.removeData(R);
            },
            mode: function (e, t) {
              const n = e.is(":hidden");
              return (
                t === "toggle" && (t = n ? "show" : "hide"),
                (n ? t === "hide" : t === "show") && (t = "none"),
                t
              );
            },
            getBaseline: function (e, t) {
              let n, i;
              switch (e[0]) {
                case "top":
                  n = 0;
                  break;
                case "middle":
                  n = 0.5;
                  break;
                case "bottom":
                  n = 1;
                  break;
                default:
                  n = e[0] / t.height;
              }
              switch (e[1]) {
                case "left":
                  i = 0;
                  break;
                case "center":
                  i = 0.5;
                  break;
                case "right":
                  i = 1;
                  break;
                default:
                  i = e[1] / t.width;
              }
              return { x: i, y: n };
            },
            createPlaceholder: function (e) {
              let t;
              let n = e.css("position");
              const i = e.position();
              return (
                e
                  .css({
                    marginTop: e.css("marginTop"),
                    marginBottom: e.css("marginBottom"),
                    marginLeft: e.css("marginLeft"),
                    marginRight: e.css("marginRight"),
                  })
                  .outerWidth(e.outerWidth())
                  .outerHeight(e.outerHeight()),
                /^(static|relative)/.test(n) &&
                  ((n = "absolute"),
                  (t = te("<" + e[0].nodeName + ">")
                    .insertAfter(e)
                    .css({
                      display: /^(inline|ruby)/.test(e.css("display"))
                        ? "inline-block"
                        : "block",
                      visibility: "hidden",
                      marginTop: e.css("marginTop"),
                      marginBottom: e.css("marginBottom"),
                      marginLeft: e.css("marginLeft"),
                      marginRight: e.css("marginRight"),
                      float: e.css("float"),
                    })
                    .outerWidth(e.outerWidth())
                    .outerHeight(e.outerHeight())
                    .addClass("ui-effects-placeholder")),
                  e.data(H + "placeholder", t)),
                e.css({ position: n, left: i.left, top: i.top }),
                t
              );
            },
            removePlaceholder: function (e) {
              const t = H + "placeholder";
              const n = e.data(t);
              n && (n.remove(), e.removeData(t));
            },
            cleanUp: function (e) {
              te.effects.restoreStyle(e), te.effects.removePlaceholder(e);
            },
            setTransition: function (i, e, r, o) {
              return (
                (o = o || {}),
                te.each(e, function (e, t) {
                  const n = i.cssUnit(t);
                  n[0] > 0 && (o[t] = n[0] * r + n[1]);
                }),
                o
              );
            },
          }),
          te.fn.extend({
            effect: function () {
              function e(e) {
                function t() {
                  i.removeData($),
                    te.effects.cleanUp(i),
                    r.mode === "hide" && i.hide(),
                    n();
                }
                function n() {
                  typeof a === "function" && a.call(i[0]),
                    typeof e === "function" && e();
                }
                var i = te(this);
                (r.mode = c.shift()),
                  !1 === te.uiBackCompat || s
                    ? r.mode === "none"
                      ? (i[l](), n())
                      : o.call(i[0], r, t)
                    : (i.is(":hidden") ? l === "hide" : l === "show")
                      ? (i[l](), n())
                      : o.call(i[0], r, n);
              }
              var r = u.apply(this, arguments);
              var o = te.effects.effect[r.effect];
              var s = o.mode;
              const t = r.queue;
              const n = t || "fx";
              var a = r.complete;
              var l = r.mode;
              var c = [];
              const i = function (e) {
                const t = te(this);
                const n = te.effects.mode(t, l) || s;
                t.data($, !0),
                  c.push(n),
                  s && (n === "show" || (n === s && n === "hide")) && t.show(),
                  (s && n === "none") || te.effects.saveStyle(t),
                  typeof e === "function" && e();
              };
              return te.fx.off || !o
                ? l
                  ? this[l](r.duration, a)
                  : this.each(function () {
                      a && a.call(this);
                    })
                : !1 === t
                  ? this.each(i).each(e)
                  : this.queue(n, i).queue(n, e);
            },
            show:
              ((s = te.fn.show),
              function (e) {
                if (n(e)) return s.apply(this, arguments);
                const t = u.apply(this, arguments);
                return (t.mode = "show"), this.effect.call(this, t);
              }),
            hide:
              ((o = te.fn.hide),
              function (e) {
                if (n(e)) return o.apply(this, arguments);
                const t = u.apply(this, arguments);
                return (t.mode = "hide"), this.effect.call(this, t);
              }),
            toggle:
              ((r = te.fn.toggle),
              function (e) {
                if (n(e) || typeof e === "boolean") {
                  return r.apply(this, arguments);
                }
                const t = u.apply(this, arguments);
                return (t.mode = "toggle"), this.effect.call(this, t);
              }),
            cssUnit: function (e) {
              const n = this.css(e);
              let i = [];
              return (
                te.each(["em", "px", "%", "pt"], function (e, t) {
                  n.indexOf(t) > 0 && (i = [parseFloat(n), t]);
                }),
                i
              );
            },
            cssClip: function (e) {
              return e
                ? this.css(
                    "clip",
                    "rect(" +
                      e.top +
                      "px " +
                      e.right +
                      "px " +
                      e.bottom +
                      "px " +
                      e.left +
                      "px)",
                  )
                : t(this.css("clip"), this);
            },
            transfer: function (e, t) {
              const n = te(this);
              const i = te(e.to);
              const r = i.css("position") === "fixed";
              const o = te("body");
              const s = r ? o.scrollTop() : 0;
              const a = r ? o.scrollLeft() : 0;
              const l = i.offset();
              const c = {
                top: l.top - s,
                left: l.left - a,
                height: i.innerHeight(),
                width: i.innerWidth(),
              };
              const u = n.offset();
              const d = te("<div class='ui-effects-transfer'></div>");
              d.appendTo("body")
                .addClass(e.className)
                .css({
                  top: u.top - s,
                  left: u.left - a,
                  height: n.innerHeight(),
                  width: n.innerWidth(),
                  position: r ? "fixed" : "absolute",
                })
                .animate(c, e.duration, e.easing, function () {
                  d.remove(), typeof t === "function" && t();
                });
            },
          }),
          (te.fx.step.clip = function (e) {
            e.clipInit ||
              ((e.start = te(e.elem).cssClip()),
              typeof e.end === "string" && (e.end = t(e.end, e.elem)),
              (e.clipInit = !0)),
              te(e.elem).cssClip({
                top: e.pos * (e.end.top - e.start.top) + e.start.top,
                right: e.pos * (e.end.right - e.start.right) + e.start.right,
                bottom:
                  e.pos * (e.end.bottom - e.start.bottom) + e.start.bottom,
                left: e.pos * (e.end.left - e.start.left) + e.start.left,
              });
          });
      })(),
      (L = {}),
      te.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (t, e) {
        L[e] = function (e) {
          return Math.pow(e, t + 2);
        };
      }),
      te.extend(L, {
        Sine: function (e) {
          return 1 - Math.cos((e * Math.PI) / 2);
        },
        Circ: function (e) {
          return 1 - Math.sqrt(1 - e * e);
        },
        Elastic: function (e) {
          return e === 0 || e === 1
            ? e
            : -Math.pow(2, 8 * (e - 1)) *
                Math.sin(((80 * (e - 1) - 7.5) * Math.PI) / 15);
        },
        Back: function (e) {
          return e * e * (3 * e - 2);
        },
        Bounce: function (e) {
          for (var t, n = 4; e < ((t = Math.pow(2, --n)) - 1) / 11; );
          return (
            1 / Math.pow(4, 3 - n) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
          );
        },
      }),
      te.each(L, function (e, t) {
        (te.easing["easeIn" + e] = t),
          (te.easing["easeOut" + e] = function (e) {
            return 1 - t(1 - e);
          }),
          (te.easing["easeInOut" + e] = function (e) {
            return e < 0.5 ? t(2 * e) / 2 : 1 - t(-2 * e + 2) / 2;
          });
      });
    te.effects,
      te.effects.define("blind", "hide", function (e, t) {
        const n = {
          up: ["bottom", "top"],
          vertical: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          horizontal: ["right", "left"],
          right: ["left", "right"],
        };
        const i = te(this);
        const r = e.direction || "up";
        const o = i.cssClip();
        const s = { clip: te.extend({}, o) };
        const a = te.effects.createPlaceholder(i);
        (s.clip[n[r][0]] = s.clip[n[r][1]]),
          e.mode === "show" &&
            (i.cssClip(s.clip),
            a && a.css(te.effects.clipToBox(s)),
            (s.clip = o)),
          a && a.animate(te.effects.clipToBox(s), e.duration, e.easing),
          i.animate(s, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: t,
          });
      }),
      te.effects.define("bounce", function (e, t) {
        let n;
        let i;
        let r;
        const o = te(this);
        const s = e.mode;
        const a = s === "hide";
        const l = s === "show";
        const c = e.direction || "up";
        let u = e.distance;
        const d = e.times || 5;
        const h = 2 * d + (l || a ? 1 : 0);
        const p = e.duration / h;
        const f = e.easing;
        const g = c === "up" || c === "down" ? "top" : "left";
        const m = c === "up" || c === "left";
        let v = 0;
        const y = o.queue().length;
        for (
          te.effects.createPlaceholder(o),
            r = o.css(g),
            u || (u = o[g === "top" ? "outerHeight" : "outerWidth"]() / 3),
            l &&
              (((i = { opacity: 1 })[g] = r),
              o
                .css("opacity", 0)
                .css(g, m ? 2 * -u : 2 * u)
                .animate(i, p, f)),
            a && (u /= Math.pow(2, d - 1)),
            (i = {})[g] = r;
          v < d;
          v++
        ) {
          ((n = {})[g] = (m ? "-=" : "+=") + u),
            o.animate(n, p, f).animate(i, p, f),
            (u = a ? 2 * u : u / 2);
        }
        a &&
          (((n = { opacity: 0 })[g] = (m ? "-=" : "+=") + u),
          o.animate(n, p, f)),
          o.queue(t),
          te.effects.unshift(o, y, h + 1);
      }),
      te.effects.define("clip", "hide", function (e, t) {
        let n;
        const i = {};
        const r = te(this);
        const o = e.direction || "vertical";
        const s = o === "both";
        const a = s || o === "horizontal";
        const l = s || o === "vertical";
        (n = r.cssClip()),
          (i.clip = {
            top: l ? (n.bottom - n.top) / 2 : n.top,
            right: a ? (n.right - n.left) / 2 : n.right,
            bottom: l ? (n.bottom - n.top) / 2 : n.bottom,
            left: a ? (n.right - n.left) / 2 : n.left,
          }),
          te.effects.createPlaceholder(r),
          e.mode === "show" && (r.cssClip(i.clip), (i.clip = n)),
          r.animate(i, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: t,
          });
      }),
      te.effects.define("drop", "hide", function (e, t) {
        let n;
        const i = te(this);
        const r = e.mode === "show";
        const o = e.direction || "left";
        const s = o === "up" || o === "down" ? "top" : "left";
        const a = o === "up" || o === "left" ? "-=" : "+=";
        const l = a === "+=" ? "-=" : "+=";
        const c = { opacity: 0 };
        te.effects.createPlaceholder(i),
          (n =
            e.distance ||
            i[s === "top" ? "outerHeight" : "outerWidth"](!0) / 2),
          (c[s] = a + n),
          r && (i.css(c), (c[s] = l + n), (c.opacity = 1)),
          i.animate(c, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: t,
          });
      }),
      te.effects.define("explode", "hide", function (e, t) {
        function n() {
          v.push(this), v.length === u * d && i();
        }
        function i() {
          h.css({ visibility: "visible" }), te(v).remove(), t();
        }
        let r;
        let o;
        let s;
        let a;
        let l;
        let c;
        var u = e.pieces ? Math.round(Math.sqrt(e.pieces)) : 3;
        var d = u;
        var h = te(this);
        const p = e.mode === "show";
        const f = h.show().css("visibility", "hidden").offset();
        const g = Math.ceil(h.outerWidth() / d);
        const m = Math.ceil(h.outerHeight() / u);
        var v = [];
        for (r = 0; r < u; r++) {
          for (a = f.top + r * m, c = r - (u - 1) / 2, o = 0; o < d; o++) {
            (s = f.left + o * g),
              (l = o - (d - 1) / 2),
              h
                .clone()
                .appendTo("body")
                .wrap("<div></div>")
                .css({
                  position: "absolute",
                  visibility: "visible",
                  left: -o * g,
                  top: -r * m,
                })
                .parent()
                .addClass("ui-effects-explode")
                .css({
                  position: "absolute",
                  overflow: "hidden",
                  width: g,
                  height: m,
                  left: s + (p ? l * g : 0),
                  top: a + (p ? c * m : 0),
                  opacity: p ? 0 : 1,
                })
                .animate(
                  {
                    left: s + (p ? 0 : l * g),
                    top: a + (p ? 0 : c * m),
                    opacity: p ? 1 : 0,
                  },
                  e.duration || 500,
                  e.easing,
                  n,
                );
          }
        }
      }),
      te.effects.define("fade", "toggle", function (e, t) {
        const n = e.mode === "show";
        te(this)
          .css("opacity", n ? 0 : 1)
          .animate(
            { opacity: n ? 1 : 0 },
            { queue: !1, duration: e.duration, easing: e.easing, complete: t },
          );
      }),
      te.effects.define("fold", "hide", function (t, e) {
        const n = te(this);
        const i = t.mode;
        const r = i === "show";
        const o = i === "hide";
        let s = t.size || 15;
        const a = /([0-9]+)%/.exec(s);
        const l = t.horizFirst ? ["right", "bottom"] : ["bottom", "right"];
        const c = t.duration / 2;
        const u = te.effects.createPlaceholder(n);
        const d = n.cssClip();
        const h = { clip: te.extend({}, d) };
        const p = { clip: te.extend({}, d) };
        const f = [d[l[0]], d[l[1]]];
        const g = n.queue().length;
        a && (s = (parseInt(a[1], 10) / 100) * f[o ? 0 : 1]),
          (h.clip[l[0]] = s),
          (p.clip[l[0]] = s),
          (p.clip[l[1]] = 0),
          r &&
            (n.cssClip(p.clip),
            u && u.css(te.effects.clipToBox(p)),
            (p.clip = d)),
          n
            .queue(function (e) {
              u &&
                u
                  .animate(te.effects.clipToBox(h), c, t.easing)
                  .animate(te.effects.clipToBox(p), c, t.easing),
                e();
            })
            .animate(h, c, t.easing)
            .animate(p, c, t.easing)
            .queue(e),
          te.effects.unshift(n, g, 4);
      }),
      te.effects.define("highlight", "show", function (e, t) {
        const n = te(this);
        const i = { backgroundColor: n.css("backgroundColor") };
        e.mode === "hide" && (i.opacity = 0),
          te.effects.saveStyle(n),
          n
            .css({
              backgroundImage: "none",
              backgroundColor: e.color || "#ffff99",
            })
            .animate(i, {
              queue: !1,
              duration: e.duration,
              easing: e.easing,
              complete: t,
            });
      }),
      te.effects.define("size", function (r, t) {
        let e;
        let o;
        let n;
        const i = te(this);
        const s = ["fontSize"];
        let a = [
          "borderTopWidth",
          "borderBottomWidth",
          "paddingTop",
          "paddingBottom",
        ];
        let l = [
          "borderLeftWidth",
          "borderRightWidth",
          "paddingLeft",
          "paddingRight",
        ];
        const c = r.mode;
        const u = c !== "effect";
        const d = r.scale || "both";
        const h = r.origin || ["middle", "center"];
        const p = i.css("position");
        const f = i.position();
        const g = te.effects.scaledDimensions(i);
        let m = r.from || g;
        let v = r.to || te.effects.scaledDimensions(i, 0);
        te.effects.createPlaceholder(i),
          c === "show" && ((n = m), (m = v), (v = n)),
          (o = {
            from: { y: m.height / g.height, x: m.width / g.width },
            to: { y: v.height / g.height, x: v.width / g.width },
          }),
          (d !== "box" && d !== "both") ||
            (o.from.y !== o.to.y &&
              ((m = te.effects.setTransition(i, a, o.from.y, m)),
              (v = te.effects.setTransition(i, a, o.to.y, v))),
            o.from.x !== o.to.x &&
              ((m = te.effects.setTransition(i, l, o.from.x, m)),
              (v = te.effects.setTransition(i, l, o.to.x, v)))),
          (d !== "content" && d !== "both") ||
            (o.from.y !== o.to.y &&
              ((m = te.effects.setTransition(i, s, o.from.y, m)),
              (v = te.effects.setTransition(i, s, o.to.y, v)))),
          h &&
            ((e = te.effects.getBaseline(h, g)),
            (m.top = (g.outerHeight - m.outerHeight) * e.y + f.top),
            (m.left = (g.outerWidth - m.outerWidth) * e.x + f.left),
            (v.top = (g.outerHeight - v.outerHeight) * e.y + f.top),
            (v.left = (g.outerWidth - v.outerWidth) * e.x + f.left)),
          delete m.outerHeight,
          delete m.outerWidth,
          i.css(m),
          (d !== "content" && d !== "both") ||
            ((a = a.concat(["marginTop", "marginBottom"]).concat(s)),
            (l = l.concat(["marginLeft", "marginRight"])),
            i.find("*[width]").each(function () {
              const e = te(this);
              const t = te.effects.scaledDimensions(e);
              let n = {
                height: t.height * o.from.y,
                width: t.width * o.from.x,
                outerHeight: t.outerHeight * o.from.y,
                outerWidth: t.outerWidth * o.from.x,
              };
              let i = {
                height: t.height * o.to.y,
                width: t.width * o.to.x,
                outerHeight: t.height * o.to.y,
                outerWidth: t.width * o.to.x,
              };
              o.from.y !== o.to.y &&
                ((n = te.effects.setTransition(e, a, o.from.y, n)),
                (i = te.effects.setTransition(e, a, o.to.y, i))),
                o.from.x !== o.to.x &&
                  ((n = te.effects.setTransition(e, l, o.from.x, n)),
                  (i = te.effects.setTransition(e, l, o.to.x, i))),
                u && te.effects.saveStyle(e),
                e.css(n),
                e.animate(i, r.duration, r.easing, function () {
                  u && te.effects.restoreStyle(e);
                });
            })),
          i.animate(v, {
            queue: !1,
            duration: r.duration,
            easing: r.easing,
            complete: function () {
              const e = i.offset();
              v.opacity === 0 && i.css("opacity", m.opacity),
                u ||
                  (i.css("position", p === "static" ? "relative" : p).offset(e),
                  te.effects.saveStyle(i)),
                t();
            },
          });
      }),
      te.effects.define("scale", function (e, t) {
        const n = te(this);
        const i = e.mode;
        const r =
          parseInt(e.percent, 10) ||
          (parseInt(e.percent, 10) === 0 ? 0 : i !== "effect" ? 0 : 100);
        const o = te.extend(
          !0,
          {
            from: te.effects.scaledDimensions(n),
            to: te.effects.scaledDimensions(n, r, e.direction || "both"),
            origin: e.origin || ["middle", "center"],
          },
          e,
        );
        e.fade && ((o.from.opacity = 1), (o.to.opacity = 0)),
          te.effects.effect.size.call(this, o, t);
      }),
      te.effects.define("puff", "hide", function (e, t) {
        const n = te.extend(!0, {}, e, {
          fade: !0,
          percent: parseInt(e.percent, 10) || 150,
        });
        te.effects.effect.scale.call(this, n, t);
      }),
      te.effects.define("pulsate", "show", function (e, t) {
        const n = te(this);
        const i = e.mode;
        const r = i === "show";
        const o = r || i === "hide";
        const s = 2 * (e.times || 5) + (o ? 1 : 0);
        const a = e.duration / s;
        let l = 0;
        let c = 1;
        const u = n.queue().length;
        for (
          (!r && n.is(":visible")) || (n.css("opacity", 0).show(), (l = 1));
          c < s;
          c++
        ) {
          n.animate({ opacity: l }, a, e.easing), (l = 1 - l);
        }
        n.animate({ opacity: l }, a, e.easing),
          n.queue(t),
          te.effects.unshift(n, u, s + 1);
      }),
      te.effects.define("shake", function (e, t) {
        let n = 1;
        const i = te(this);
        const r = e.direction || "left";
        const o = e.distance || 20;
        const s = e.times || 3;
        const a = 2 * s + 1;
        const l = Math.round(e.duration / a);
        const c = r === "up" || r === "down" ? "top" : "left";
        const u = r === "up" || r === "left";
        const d = {};
        const h = {};
        const p = {};
        const f = i.queue().length;
        for (
          te.effects.createPlaceholder(i),
            d[c] = (u ? "-=" : "+=") + o,
            h[c] = (u ? "+=" : "-=") + 2 * o,
            p[c] = (u ? "-=" : "+=") + 2 * o,
            i.animate(d, l, e.easing);
          n < s;
          n++
        ) {
          i.animate(h, l, e.easing).animate(p, l, e.easing);
        }
        i
          .animate(h, l, e.easing)
          .animate(d, l / 2, e.easing)
          .queue(t),
          te.effects.unshift(i, f, a + 1);
      }),
      te.effects.define("slide", "show", function (e, t) {
        let n;
        let i;
        const r = te(this);
        const o = {
          up: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          right: ["left", "right"],
        };
        const s = e.mode;
        const a = e.direction || "left";
        const l = a === "up" || a === "down" ? "top" : "left";
        const c = a === "up" || a === "left";
        const u =
          e.distance || r[l === "top" ? "outerHeight" : "outerWidth"](!0);
        const d = {};
        te.effects.createPlaceholder(r),
          (n = r.cssClip()),
          (i = r.position()[l]),
          (d[l] = (c ? -1 : 1) * u + i),
          (d.clip = r.cssClip()),
          (d.clip[o[a][1]] = d.clip[o[a][0]]),
          s === "show" &&
            (r.cssClip(d.clip), r.css(l, d[l]), (d.clip = n), (d[l] = i)),
          r.animate(d, {
            queue: !1,
            duration: e.duration,
            easing: e.easing,
            complete: t,
          });
      });
    !1 !== te.uiBackCompat &&
      te.effects.define("transfer", function (e, t) {
        te(this).transfer(e, t);
      });
  }),
  (function (g) {
    "use strict";
    let m;
    const e = {
      className: "autosizejs",
      id: "autosizejs",
      append: "\n",
      callback: !1,
      resizeDelay: 10,
      placeholder: !0,
    };
    const v = [
      "fontFamily",
      "fontSize",
      "fontWeight",
      "fontStyle",
      "letterSpacing",
      "textTransform",
      "wordSpacing",
      "textIndent",
    ];
    const y = g(
      '<textarea tabindex="-1" style="position:absolute; top:-999px; left:0; right:auto; bottom:auto; border:0; padding: 0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden; transition:none; -webkit-transition:none; -moz-transition:none;"/>',
    ).data("autosize", !0)[0];
    (y.style.lineHeight = "99px") === g(y).css("lineHeight") &&
      v.push("lineHeight"),
      (y.style.lineHeight = ""),
      (g.fn.autosize = function (f) {
        return this.length
          ? ((f = g.extend({}, e, f || {})),
            y.parentNode !== document.body && g(document.body).append(y),
            this.each(function () {
              function i() {
                let n;
                const i =
                  !!window.getComputedStyle && window.getComputedStyle(a, null);
                i
                  ? (((n = a.getBoundingClientRect().width) !== 0 &&
                      typeof n === "number") ||
                      (n = parseInt(i.width, 10)),
                    g.each(
                      [
                        "paddingLeft",
                        "paddingRight",
                        "borderLeftWidth",
                        "borderRightWidth",
                      ],
                      function (e, t) {
                        n -= parseInt(i[t], 10);
                      },
                    ))
                  : (n = l.width()),
                  (y.style.width = Math.max(n, 0) + "px");
              }
              function n() {
                const n = {};
                if (
                  ((m = a),
                  (y.className = f.className),
                  (y.id = f.id),
                  (r = parseInt(l.css("maxHeight"), 10)),
                  g.each(v, function (e, t) {
                    n[t] = l.css(t);
                  }),
                  g(y).css(n).attr("wrap", l.attr("wrap")),
                  i(),
                  window.chrome)
                ) {
                  const e = a.style.width;
                  a.style.width = "0px";
                  a.offsetWidth;
                  a.style.width = e;
                }
              }
              function t() {
                let e, t;
                m !== a ? n() : i(),
                  !a.value && f.placeholder
                    ? (y.value = (l.attr("placeholder") || "") + f.append)
                    : (y.value = a.value + f.append),
                  (y.style.overflowY = a.style.overflowY),
                  (t = parseInt(a.style.height, 10)),
                  (y.scrollTop = 0),
                  (y.scrollTop = 9e4),
                  (e = y.scrollTop),
                  r && r < e
                    ? ((a.style.overflowY = "scroll"), (e = r))
                    : ((a.style.overflowY = "hidden"), e < o && (e = o)),
                  t !== (e += c) &&
                    ((a.style.height = e + "px"), u && f.callback.call(a, a));
              }
              function e() {
                clearTimeout(s),
                  (s = setTimeout(
                    function () {
                      const e = l.width();
                      e !== h && ((h = e), t());
                    },
                    parseInt(f.resizeDelay, 10),
                  ));
              }
              let r;
              let o;
              let s;
              var a = this;
              var l = g(a);
              var c = 0;
              var u = g.isFunction(f.callback);
              const d = {
                height: a.style.height,
                overflow: a.style.overflow,
                overflowY: a.style.overflowY,
                wordWrap: a.style.wordWrap,
                resize: a.style.resize,
              };
              var h = l.width();
              const p = l.css("resize");
              l.data("autosize") ||
                (l.data("autosize", !0),
                (l.css("box-sizing") !== "border-box" &&
                  l.css("-moz-box-sizing") !== "border-box" &&
                  l.css("-webkit-box-sizing") !== "border-box") ||
                  (c = l.outerHeight() - l.height()),
                (o = Math.max(
                  parseInt(l.css("minHeight"), 10) - c || 0,
                  l.height(),
                )),
                l.css({
                  overflow: "hidden",
                  overflowY: "hidden",
                  wordWrap: "break-word",
                }),
                p === "vertical"
                  ? l.css("resize", "none")
                  : p === "both" && l.css("resize", "horizontal"),
                "onpropertychange" in a
                  ? "oninput" in a
                    ? l.on("input.autosize keyup.autosize", t)
                    : l.on("propertychange.autosize", function () {
                        event.propertyName === "value" && t();
                      })
                  : l.on("input.autosize", t),
                !1 !== f.resizeDelay && g(window).on("resize.autosize", e),
                l.on("autosize.resize", t),
                l.on("autosize.resizeIncludeStyle", function () {
                  (m = null), t();
                }),
                l.on("autosize.destroy", function () {
                  (m = null),
                    clearTimeout(s),
                    g(window).off("resize", e),
                    l
                      .off("autosize")
                      .off(".autosize")
                      .css(d)
                      .removeData("autosize");
                }),
                t());
            }))
          : this;
      });
  })(window.jQuery || window.$),
  (BestInPlaceEditor.prototype = {
    activate: function () {
      "use strict";
      let e;
      if (this.isPlaceHolder()) e = "";
      else if (this.original_content) e = this.original_content;
      else {
        switch (this.formType) {
          case "input":
          case "textarea":
            if (this.display_raw) {
              e = this.element.html().replace(/&amp;/gi, "&");
            } else {
              const t = this.element.data("bipValue");
              e =
                void 0 === t
                  ? ""
                  : typeof t === "string"
                    ? this.element.data("bipValue").replace(/&amp;/gi, "&")
                    : this.element.data("bipValue");
            }
            break;
          case "select":
            e = this.element.html();
        }
      }
      (this.oldValue = this.isPlaceHolder() ? "" : this.element.html()),
        (this.display_value = e),
        jQuery(this.activator).unbind("click", this.clickHandler),
        this.activateForm(),
        this.element.trigger(jQuery.Event("best_in_place:activate"));
    },
    abort: function () {
      "use strict";
      this.activateText(this.oldValue),
        jQuery(this.activator).bind(
          "click",
          { editor: this },
          this.clickHandler,
        ),
        this.element.trigger(jQuery.Event("best_in_place:abort")),
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },
    abortIfConfirm: function () {
      "use strict";
      this.useConfirm
        ? confirm(BestInPlaceEditor.defaults.locales[""].confirmMessage) &&
          this.abort()
        : this.abort();
    },
    update: function () {
      "use strict";
      this.element.trigger(jQuery.Event("best_in_place:before-update"));
      const i = this;
      const n = this.getValue();
      if (this.formType in { input: 1, textarea: 1 } && n === this.oldValue) {
        return this.abort(), !0;
      }
      switch (
        (i.ajax({
          type: this.requestMethod(),
          dataType: BestInPlaceEditor.defaults.ajaxDataType,
          data: i.requestData(),
          success: function (e, t, n) {
            i.loadSuccessCallback(e, t, n);
          },
          error: function (e, t) {
            i.loadErrorCallback(e, t);
          },
        }),
        this.formType)
      ) {
        case "select":
          (this.previousCollectionValue = n),
            $.each(this.values, function (e, t) {
              String(t[0]) === String(n) && i.element.html(t[1]);
            });
          break;
        case "checkbox":
          $.each(this.values, function (e, t) {
            String(t[0]) === String(n) && i.element.html(t[1]);
          });
          break;
        default:
          n !== ""
            ? this.display_raw
              ? i.element.html(n)
              : i.element.text(n)
            : i.element.html(this.placeHolder);
      }
      i.element.data("bipValue", n),
        i.element.attr("data-bip-value", n),
        i.element.trigger(jQuery.Event("best_in_place:update"));
    },
    activateForm: function () {
      "use strict";
      alert(BestInPlaceEditor.defaults.locales[""].uninitializedForm);
    },
    activateText: function (e) {
      "use strict";
      this.element.html(e),
        this.isPlaceHolder() && this.element.html(this.placeHolder);
    },
    initOptions: function () {
      "use strict";
      const t = this;
      t.element.parents().each(function () {
        const e = jQuery(this);
        (t.url = t.url || e.data("bipUrl")),
          (t.activator = t.activator || e.data("bipActivator")),
          (t.okButton = t.okButton || e.data("bipOkButton")),
          (t.okButtonClass = t.okButtonClass || e.data("bipOkButtonClass")),
          (t.cancelButton = t.cancelButton || e.data("bipCancelButton")),
          (t.cancelButtonClass =
            t.cancelButtonClass || e.data("bipCancelButtonClass")),
          (t.skipBlur = t.skipBlur || e.data("bipSkipBlur"));
      }),
        (t.url =
          t.element.data("bipUrl") || t.url || document.location.pathname),
        (t.collection = t.element.data("bipCollection") || t.collection),
        (t.formType = t.element.data("bipType") || "input"),
        (t.objectName = t.element.data("bipObject") || t.objectName),
        (t.attributeName = t.element.data("bipAttribute") || t.attributeName),
        (t.activator = t.element.data("bipActivator") || t.element),
        (t.okButton = t.element.data("bipOkButton") || t.okButton),
        (t.okButtonClass =
          t.element.data("bipOkButtonClass") ||
          t.okButtonClass ||
          BestInPlaceEditor.defaults.okButtonClass),
        (t.cancelButton = t.element.data("bipCancelButton") || t.cancelButton),
        (t.cancelButtonClass =
          t.element.data("bipCancelButtonClass") ||
          t.cancelButtonClass ||
          BestInPlaceEditor.defaults.cancelButtonClass),
        (t.skipBlur =
          t.element.data("bipSkipBlur") ||
          t.skipBlur ||
          BestInPlaceEditor.defaults.skipBlur),
        (t.isNewObject = t.element.data("bipNewObject")),
        (t.dataExtraPayload = t.element.data("bipExtraPayload")),
        t.element.data("bipPlaceholder") == null
          ? (t.placeHolder = BestInPlaceEditor.defaults.locales[""].placeHolder)
          : (t.placeHolder = t.element.data("bipPlaceholder")),
        (t.inner_class = t.element.data("bipInnerClass")),
        (t.html_attrs = t.element.data("bipHtmlAttrs")),
        (t.original_content =
          t.element.data("bipOriginalContent") || t.original_content),
        (t.display_raw = t.element.data("bip-raw")),
        (t.useConfirm = t.element.data("bip-confirm")),
        (t.formType !== "select" && t.formType !== "checkbox") ||
          ((t.values = t.collection),
          (t.collectionValue =
            t.element.data("bipValue") || t.collectionValue));
    },
    bindForm: function () {
      "use strict";
      (this.activateForm = BestInPlaceEditor.forms[this.formType].activateForm),
        (this.getValue = BestInPlaceEditor.forms[this.formType].getValue);
    },
    initPlaceHolder: function () {
      "use strict";
      this.element.html() === "" &&
        (this.element.addClass("bip-placeholder"),
        this.element.html(this.placeHolder));
    },
    isPlaceHolder: function () {
      "use strict";
      return (
        this.element.html() === "" || this.element.html() === this.placeHolder
      );
    },
    getValue: function () {
      "use strict";
      alert(BestInPlaceEditor.defaults.locales[""].uninitializedForm);
    },
    sanitizeValue: function (e) {
      "use strict";
      return jQuery.trim(e);
    },
    requestMethod: function () {
      "use strict";
      return this.isNewObject ? "post" : BestInPlaceEditor.defaults.ajaxMethod;
    },
    requestData: function () {
      "use strict";
      const e = jQuery("meta[name=csrf-token]").attr("content");
      const t = jQuery("meta[name=csrf-param]").attr("content");
      const n = {};
      return (
        (n._method = this.requestMethod()),
        (n[this.objectName] = this.dataExtraPayload || {}),
        (n[this.objectName][this.attributeName] = this.getValue()),
        t !== undefined && e !== undefined && (n[t] = e),
        jQuery.param(n)
      );
    },
    ajax: function (e) {
      "use strict";
      return (
        (e.url = this.url),
        (e.beforeSend = function (e) {
          e.setRequestHeader("Accept", "application/json");
        }),
        jQuery.ajax(e)
      );
    },
    loadSuccessCallback: function (e, t, n) {
      "use strict";
      if (
        ((e = jQuery.trim(e)),
        this.display_raw
          ? (this.original_content = this.element.html())
          : (this.original_content = this.element.text()),
        e && e !== "")
      ) {
        const i = jQuery.parseJSON(e);
        i !== null &&
          i.hasOwnProperty("display_as") &&
          (this.element.data("bip-original-content", this.element.text()),
          this.element.html(i.display_as)),
          this.isNewObject &&
            i &&
            i[this.objectName] &&
            i[this.objectName].id &&
            ((this.isNewObject = !1),
            (this.url += "/" + i[this.objectName].id));
      }
      this.element.toggleClass("bip-placeholder", this.isPlaceHolder()),
        this.element.trigger(jQuery.Event("best_in_place:success"), [e, t, n]),
        this.element.trigger(jQuery.Event("ajax:success"), [e, t, n]),
        jQuery(this.activator).bind(
          "click",
          { editor: this },
          this.clickHandler,
        ),
        this.element.trigger(jQuery.Event("best_in_place:deactivate")),
        this.collectionValue !== null &&
          this.formType === "select" &&
          ((this.collectionValue = this.previousCollectionValue),
          (this.previousCollectionValue = null));
    },
    loadErrorCallback: function (e, t) {
      "use strict";
      this.activateText(this.oldValue),
        this.element.trigger(jQuery.Event("best_in_place:error"), [e, t]),
        this.element.trigger(jQuery.Event("ajax:error"), e, t),
        jQuery(this.activator).bind(
          "click",
          { editor: this },
          this.clickHandler,
        ),
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },
    clickHandler: function (e) {
      "use strict";
      e.preventDefault(), e.data.editor.activate();
    },
    setHtmlAttributes: function () {
      "use strict";
      const n = this.element.find(this.formType);
      if (this.html_attrs) {
        const e = this.html_attrs;
        $.each(e, function (e, t) {
          n.attr(e, t);
        });
      }
    },
    placeButtons: function (e, t) {
      "use strict";
      t.okButton &&
        e.append(
          jQuery(document.createElement("input"))
            .attr("type", "submit")
            .attr("class", t.okButtonClass)
            .attr("value", t.okButton),
        ),
        t.cancelButton &&
          e.append(
            jQuery(document.createElement("input"))
              .attr("type", "button")
              .attr("class", t.cancelButtonClass)
              .attr("value", t.cancelButton),
          );
    },
  }),
  (BestInPlaceEditor.forms = {
    input: {
      activateForm: function () {
        "use strict";
        const e = jQuery(document.createElement("form"))
          .addClass("form_in_place")
          .attr("action", "javascript:void(0);")
          .attr("style", "display:inline");
        const t = jQuery(document.createElement("input"))
          .attr("type", "text")
          .attr("name", this.attributeName)
          .val(this.display_value);
        this.inner_class && t.addClass(this.inner_class),
          e.append(t),
          this.placeButtons(e, this),
          this.element.html(e),
          this.setHtmlAttributes(),
          this.element.find("input[type='text']")[0].select(),
          this.element
            .find("form")
            .bind(
              "submit",
              { editor: this },
              BestInPlaceEditor.forms.input.submitHandler,
            ),
          this.cancelButton &&
            this.element
              .find("input[type='button']")
              .bind(
                "click",
                { editor: this },
                BestInPlaceEditor.forms.input.cancelButtonHandler,
              ),
          this.okButton ||
            this.element
              .find("input[type='text']")
              .bind(
                "blur",
                { editor: this },
                BestInPlaceEditor.forms.input.inputBlurHandler,
              ),
          this.element
            .find("input[type='text']")
            .bind(
              "keyup",
              { editor: this },
              BestInPlaceEditor.forms.input.keyupHandler,
            ),
          (this.blurTimer = null),
          (this.userClicked = !1);
      },
      getValue: function () {
        "use strict";
        return this.sanitizeValue(this.element.find("input").val());
      },
      inputBlurHandler: function (e) {
        "use strict";
        e.data.editor.okButton
          ? (e.data.editor.blurTimer = setTimeout(function () {
              e.data.editor.userClicked || e.data.editor.abort();
            }, 500))
          : e.data.editor.cancelButton
            ? (e.data.editor.blurTimer = setTimeout(function () {
                e.data.editor.userClicked || e.data.editor.update();
              }, 500))
            : e.data.editor.update();
      },
      submitHandler: function (e) {
        "use strict";
        (e.data.editor.userClicked = !0),
          clearTimeout(e.data.editor.blurTimer),
          e.data.editor.update();
      },
      cancelButtonHandler: function (e) {
        "use strict";
        (e.data.editor.userClicked = !0),
          clearTimeout(e.data.editor.blurTimer),
          e.data.editor.abort(),
          e.stopPropagation();
      },
      keyupHandler: function (e) {
        "use strict";
        e.keyCode === 27 &&
          (e.data.editor.abort(), e.stopImmediatePropagation());
      },
    },
    select: {
      activateForm: function () {
        "use strict";
        let i;
        let r;
        const e = jQuery(document.createElement("form"))
          .attr("action", "javascript:void(0)")
          .attr("style", "display:inline");
        const o = jQuery(document.createElement("select")).attr(
          "class",
          this.inner_class !== null ? this.inner_class : "",
        );
        const s = this.collectionValue;
        const t = this.values;
        $.each(t, function (e, t) {
          (i = t[0]), (r = t[1]);
          const n = jQuery(document.createElement("option")).val(i).html(r);
          s && String(i) === String(s) && n.attr("selected", "selected"),
            o.append(n);
        }),
          e.append(o),
          this.element.html(e),
          this.setHtmlAttributes(),
          this.element
            .find("select")
            .bind(
              "change",
              { editor: this },
              BestInPlaceEditor.forms.select.blurHandler,
            ),
          this.element
            .find("select")
            .bind(
              "blur",
              { editor: this },
              BestInPlaceEditor.forms.select.blurHandler,
            ),
          this.element
            .find("select")
            .bind(
              "keyup",
              { editor: this },
              BestInPlaceEditor.forms.select.keyupHandler,
            ),
          this.element.find("select")[0].focus();
        try {
          const n = document.createEvent("MouseEvents");
          n.initMouseEvent(
            "mousedown",
            !0,
            !0,
            window,
            0,
            0,
            0,
            0,
            0,
            !1,
            !1,
            !1,
            !1,
            0,
            null,
          ),
            this.element.find("select")[0].dispatchEvent(n);
        } catch (n) {}
      },
      getValue: function () {
        "use strict";
        return this.sanitizeValue(this.element.find("select").val());
      },
      blurHandler: function (e) {
        "use strict";
        e.data.editor.update();
      },
      keyupHandler: function (e) {
        "use strict";
        e.keyCode === 27 && e.data.editor.abort();
      },
    },
    checkbox: {
      activateForm: function () {
        "use strict";
        (this.collectionValue = !this.getValue()),
          this.setHtmlAttributes(),
          this.update();
      },
      getValue: function () {
        "use strict";
        return this.collectionValue;
      },
    },
    textarea: {
      activateForm: function () {
        "use strict";
        const e = this.element.css("width");
        const t = this.element.css("height");
        const n = jQuery(document.createElement("form"))
          .addClass("form_in_place")
          .attr("action", "javascript:void(0);")
          .attr("style", "display:inline");
        const i = jQuery(document.createElement("textarea"))
          .attr("name", this.attributeName)
          .val(this.sanitizeValue(this.display_value));
        this.inner_class !== null && i.addClass(this.inner_class),
          n.append(i),
          this.placeButtons(n, this),
          this.element.html(n),
          this.setHtmlAttributes(),
          jQuery(this.element.find("textarea")[0]).css({
            "min-width": e,
            "min-height": t,
          }),
          jQuery(this.element.find("textarea")[0]).autosize(),
          this.element.find("textarea")[0].focus(),
          this.element
            .find("form")
            .bind(
              "submit",
              { editor: this },
              BestInPlaceEditor.forms.textarea.submitHandler,
            ),
          this.cancelButton &&
            this.element
              .find("input[type='button']")
              .bind(
                "click",
                { editor: this },
                BestInPlaceEditor.forms.textarea.cancelButtonHandler,
              ),
          this.skipBlur ||
            this.element
              .find("textarea")
              .bind(
                "blur",
                { editor: this },
                BestInPlaceEditor.forms.textarea.blurHandler,
              ),
          this.element
            .find("textarea")
            .bind(
              "keyup",
              { editor: this },
              BestInPlaceEditor.forms.textarea.keyupHandler,
            ),
          (this.blurTimer = null),
          (this.userClicked = !1);
      },
      getValue: function () {
        "use strict";
        return this.sanitizeValue(this.element.find("textarea").val());
      },
      blurHandler: function (e) {
        "use strict";
        e.data.editor.okButton
          ? (e.data.editor.blurTimer = setTimeout(function () {
              e.data.editor.userClicked || e.data.editor.abortIfConfirm();
            }, 500))
          : e.data.editor.cancelButton
            ? (e.data.editor.blurTimer = setTimeout(function () {
                e.data.editor.userClicked || e.data.editor.update();
              }, 500))
            : e.data.editor.update();
      },
      submitHandler: function (e) {
        "use strict";
        (e.data.editor.userClicked = !0),
          clearTimeout(e.data.editor.blurTimer),
          e.data.editor.update();
      },
      cancelButtonHandler: function (e) {
        "use strict";
        (e.data.editor.userClicked = !0),
          clearTimeout(e.data.editor.blurTimer),
          e.data.editor.abortIfConfirm(),
          e.stopPropagation();
      },
      keyupHandler: function (e) {
        "use strict";
        e.keyCode === 27 && e.data.editor.abortIfConfirm();
      },
    },
  }),
  (BestInPlaceEditor.defaults = {
    locales: {},
    ajaxMethod: "put",
    ajaxDataType: "text",
    okButtonClass: "",
    cancelButtonClass: "",
    skipBlur: !1,
  }),
  (BestInPlaceEditor.defaults.locales[""] = {
    confirmMessage: "Are you sure you want to discard your changes?",
    uninitializedForm:
      "The form was not properly initialized. getValue is unbound",
    placeHolder: "-",
  }),
  (jQuery.fn.best_in_place = function () {
    "use strict";
    function t(e) {
      if (!e.data("bestInPlaceEditor")) {
        return e.data("bestInPlaceEditor", new BestInPlaceEditor(e)), !0;
      }
    }
    return (
      jQuery(this.context).delegate(this.selector, "click", function () {
        const e = jQuery(this);
        t(e) && e.click();
      }),
      this.each(function () {
        t(jQuery(this));
      }),
      this
    );
  }),
  (BestInPlaceEditor.forms.date = {
    activateForm: function () {
      "use strict";
      const e = this;
      const t = jQuery(document.createElement("form"))
        .addClass("form_in_place")
        .attr("action", "javascript:void(0);")
        .attr("style", "display:inline");
      const n = jQuery(document.createElement("input"))
        .attr("type", "text")
        .attr("name", this.attributeName)
        .attr("value", this.sanitizeValue(this.display_value));
      this.inner_class !== null && n.addClass(this.inner_class),
        t.append(n),
        this.element.html(t),
        this.setHtmlAttributes(),
        this.element.find("input")[0].select(),
        this.element
          .find("form")
          .bind(
            "submit",
            { editor: this },
            BestInPlaceEditor.forms.input.submitHandler,
          ),
        this.element
          .find("input")
          .bind(
            "keyup",
            { editor: this },
            BestInPlaceEditor.forms.input.keyupHandler,
          ),
        this.element
          .find("input")
          .datepicker({
            onClose: function () {
              e.update();
            },
          })
          .datepicker("show");
    },
    getValue: function () {
      "use strict";
      return this.sanitizeValue(this.element.find("input").val());
    },
    submitHandler: function (e) {
      "use strict";
      e.data.editor.update();
    },
    keyupHandler: function (e) {
      "use strict";
      e.keyCode === 27 && e.data.editor.abort();
    },
  }),
  (function (s) {
    (s.purr = function (n, i) {
      function e() {
        const e = document.createElement("a");
        if (
          (s(e)
            .attr({ class: "close", href: "#close" })
            .appendTo(n)
            .click(function () {
              return r(), !1;
            }),
          s(document).keyup(function (e) {
            e.keyCode === 27 && r();
          }),
          n.appendTo(o).hide(),
          n.fadeIn(i.fadeInSpeed),
          !i.isSticky)
        ) {
          var t = setInterval(function () {
            n.prevAll(".purr").length === 0 &&
              (clearInterval(t),
              setTimeout(function () {
                r();
              }, i.removeTimer));
          }, 200);
        }
      }
      function r() {
        n.animate(
          { opacity: "0" },
          {
            duration: i.fadeOutSpeed,
            complete: function () {
              n.animate(
                { height: "0px" },
                {
                  duration: i.fadeOutSpeed,
                  complete: function () {
                    n.remove();
                  },
                },
              );
            },
          },
        );
      }
      (n = s(n)).addClass("purr");
      var o = document.getElementById("purr-container");
      o || (o = '<div id="purr-container"></div>'),
        (o = s(o)),
        s("body").append(o),
        e();
    }),
      (s.fn.purr = function (e) {
        return (
          ((e = e || {}).fadeInSpeed = e.fadeInSpeed || 500),
          (e.fadeOutSpeed = e.fadeOutSpeed || 500),
          (e.removeTimer = e.removeTimer || 4e3),
          (e.isSticky = e.isSticky || !1),
          (e.usingTransparentPNG = e.usingTransparentPNG || !1),
          this.each(function () {
            new s.purr(this, e);
          }),
          this
        );
      });
  })(jQuery),
  (function ($) {
    if ((($.ui.timepicker = $.ui.timepicker || {}), !$.ui.timepicker.version)) {
      $.extend($.ui, { timepicker: { version: "1.4.1" } });
      const Timepicker = function () {
        (this.regional = []),
          (this.regional[""] = {
            currentText: "Now",
            closeText: "Done",
            amNames: ["AM", "A"],
            pmNames: ["PM", "P"],
            timeFormat: "HH:mm",
            timeSuffix: "",
            timeOnlyTitle: "Choose Time",
            timeText: "Time",
            hourText: "Hour",
            minuteText: "Minute",
            secondText: "Second",
            millisecText: "Millisecond",
            microsecText: "Microsecond",
            timezoneText: "Time Zone",
            isRTL: !1,
          }),
          (this._defaults = {
            showButtonPanel: !0,
            timeOnly: !1,
            showHour: null,
            showMinute: null,
            showSecond: null,
            showMillisec: null,
            showMicrosec: null,
            showTimezone: null,
            showTime: !0,
            stepHour: 1,
            stepMinute: 1,
            stepSecond: 1,
            stepMillisec: 1,
            stepMicrosec: 1,
            hour: 0,
            minute: 0,
            second: 0,
            millisec: 0,
            microsec: 0,
            timezone: null,
            hourMin: 0,
            minuteMin: 0,
            secondMin: 0,
            millisecMin: 0,
            microsecMin: 0,
            hourMax: 23,
            minuteMax: 59,
            secondMax: 59,
            millisecMax: 999,
            microsecMax: 999,
            minDateTime: null,
            maxDateTime: null,
            onSelect: null,
            hourGrid: 0,
            minuteGrid: 0,
            secondGrid: 0,
            millisecGrid: 0,
            microsecGrid: 0,
            alwaysSetTime: !0,
            separator: " ",
            altFieldTimeOnly: !0,
            altTimeFormat: null,
            altSeparator: null,
            altTimeSuffix: null,
            pickerTimeFormat: null,
            pickerTimeSuffix: null,
            showTimepicker: !0,
            timezoneList: null,
            addSliderAccess: !1,
            sliderAccessArgs: null,
            controlType: "slider",
            defaultValue: null,
            parse: "strict",
          }),
          $.extend(this._defaults, this.regional[""]);
      };
      $.extend(Timepicker.prototype, {
        $input: null,
        $altInput: null,
        $timeObj: null,
        inst: null,
        hour_slider: null,
        minute_slider: null,
        second_slider: null,
        millisec_slider: null,
        microsec_slider: null,
        timezone_select: null,
        hour: 0,
        minute: 0,
        second: 0,
        millisec: 0,
        microsec: 0,
        timezone: null,
        hourMinOriginal: null,
        minuteMinOriginal: null,
        secondMinOriginal: null,
        millisecMinOriginal: null,
        microsecMinOriginal: null,
        hourMaxOriginal: null,
        minuteMaxOriginal: null,
        secondMaxOriginal: null,
        millisecMaxOriginal: null,
        microsecMaxOriginal: null,
        ampm: "",
        formattedDate: "",
        formattedTime: "",
        formattedDateTime: "",
        timezoneList: null,
        units: ["hour", "minute", "second", "millisec", "microsec"],
        support: {},
        control: null,
        setDefaults: function (e) {
          return extendRemove(this._defaults, e || {}), this;
        },
        _newInst: function ($input, opts) {
          const tp_inst = new Timepicker();
          const inlineSettings = {};
          const fns = {};
          let overrides;
          let i;
          for (const attrName in this._defaults) {
            if (this._defaults.hasOwnProperty(attrName)) {
              const attrValue = $input.attr("time:" + attrName);
              if (attrValue) {
                try {
                  inlineSettings[attrName] = eval(attrValue);
                } catch (err) {
                  inlineSettings[attrName] = attrValue;
                }
              }
            }
          }
          for (i in ((overrides = {
            beforeShow: function (e, t) {
              if ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {
                return tp_inst._defaults.evnts.beforeShow.call(
                  $input[0],
                  e,
                  t,
                  tp_inst,
                );
              }
            },
            onChangeMonthYear: function (e, t, n) {
              tp_inst._updateDateTime(n),
                $.isFunction(tp_inst._defaults.evnts.onChangeMonthYear) &&
                  tp_inst._defaults.evnts.onChangeMonthYear.call(
                    $input[0],
                    e,
                    t,
                    n,
                    tp_inst,
                  );
            },
            onClose: function (e, t) {
              !0 === tp_inst.timeDefined &&
                $input.val() !== "" &&
                tp_inst._updateDateTime(t),
                $.isFunction(tp_inst._defaults.evnts.onClose) &&
                  tp_inst._defaults.evnts.onClose.call(
                    $input[0],
                    e,
                    t,
                    tp_inst,
                  );
            },
          }),
          overrides)) {
            overrides.hasOwnProperty(i) && (fns[i] = opts[i] || null);
          }
          (tp_inst._defaults = $.extend(
            {},
            this._defaults,
            inlineSettings,
            opts,
            overrides,
            { evnts: fns, timepicker: tp_inst },
          )),
            (tp_inst.amNames = $.map(tp_inst._defaults.amNames, function (e) {
              return e.toUpperCase();
            })),
            (tp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (e) {
              return e.toUpperCase();
            })),
            (tp_inst.support = detectSupport(
              tp_inst._defaults.timeFormat +
                (tp_inst._defaults.pickerTimeFormat
                  ? tp_inst._defaults.pickerTimeFormat
                  : "") +
                (tp_inst._defaults.altTimeFormat
                  ? tp_inst._defaults.altTimeFormat
                  : ""),
            )),
            typeof tp_inst._defaults.controlType === "string"
              ? (tp_inst._defaults.controlType === "slider" &&
                  typeof $.ui.slider === "undefined" &&
                  (tp_inst._defaults.controlType = "select"),
                (tp_inst.control =
                  tp_inst._controls[tp_inst._defaults.controlType]))
              : (tp_inst.control = tp_inst._defaults.controlType);
          let timezoneList = [
            -720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240,
            -210, -180, -120, -60, 0, 60, 120, 180, 210, 240, 270, 300, 330,
            345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720,
            765, 780, 840,
          ];
          tp_inst._defaults.timezoneList !== null &&
            (timezoneList = tp_inst._defaults.timezoneList);
          const tzl = timezoneList.length;
          let tzi = 0;
          let tzv = null;
          if (tzl > 0 && typeof timezoneList[0] !== "object") {
            for (; tzi < tzl; tzi++) {
              (tzv = timezoneList[tzi]),
                (timezoneList[tzi] = {
                  value: tzv,
                  label: $.timepicker.timezoneOffsetString(
                    tzv,
                    tp_inst.support.iso8601,
                  ),
                });
            }
          }
          return (
            (tp_inst._defaults.timezoneList = timezoneList),
            (tp_inst.timezone =
              tp_inst._defaults.timezone !== null
                ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone)
                : -1 * new Date().getTimezoneOffset()),
            (tp_inst.hour =
              tp_inst._defaults.hour < tp_inst._defaults.hourMin
                ? tp_inst._defaults.hourMin
                : tp_inst._defaults.hour > tp_inst._defaults.hourMax
                  ? tp_inst._defaults.hourMax
                  : tp_inst._defaults.hour),
            (tp_inst.minute =
              tp_inst._defaults.minute < tp_inst._defaults.minuteMin
                ? tp_inst._defaults.minuteMin
                : tp_inst._defaults.minute > tp_inst._defaults.minuteMax
                  ? tp_inst._defaults.minuteMax
                  : tp_inst._defaults.minute),
            (tp_inst.second =
              tp_inst._defaults.second < tp_inst._defaults.secondMin
                ? tp_inst._defaults.secondMin
                : tp_inst._defaults.second > tp_inst._defaults.secondMax
                  ? tp_inst._defaults.secondMax
                  : tp_inst._defaults.second),
            (tp_inst.millisec =
              tp_inst._defaults.millisec < tp_inst._defaults.millisecMin
                ? tp_inst._defaults.millisecMin
                : tp_inst._defaults.millisec > tp_inst._defaults.millisecMax
                  ? tp_inst._defaults.millisecMax
                  : tp_inst._defaults.millisec),
            (tp_inst.microsec =
              tp_inst._defaults.microsec < tp_inst._defaults.microsecMin
                ? tp_inst._defaults.microsecMin
                : tp_inst._defaults.microsec > tp_inst._defaults.microsecMax
                  ? tp_inst._defaults.microsecMax
                  : tp_inst._defaults.microsec),
            (tp_inst.ampm = ""),
            (tp_inst.$input = $input),
            tp_inst._defaults.altField &&
              (tp_inst.$altInput = $(tp_inst._defaults.altField)
                .css({ cursor: "pointer" })
                .focus(function () {
                  $input.trigger("focus");
                })),
            (tp_inst._defaults.minDate !== 0 &&
              tp_inst._defaults.minDateTime !== 0) ||
              (tp_inst._defaults.minDate = new Date()),
            (tp_inst._defaults.maxDate !== 0 &&
              tp_inst._defaults.maxDateTime !== 0) ||
              (tp_inst._defaults.maxDate = new Date()),
            tp_inst._defaults.minDate !== undefined &&
              tp_inst._defaults.minDate instanceof Date &&
              (tp_inst._defaults.minDateTime = new Date(
                tp_inst._defaults.minDate.getTime(),
              )),
            tp_inst._defaults.minDateTime !== undefined &&
              tp_inst._defaults.minDateTime instanceof Date &&
              (tp_inst._defaults.minDate = new Date(
                tp_inst._defaults.minDateTime.getTime(),
              )),
            tp_inst._defaults.maxDate !== undefined &&
              tp_inst._defaults.maxDate instanceof Date &&
              (tp_inst._defaults.maxDateTime = new Date(
                tp_inst._defaults.maxDate.getTime(),
              )),
            tp_inst._defaults.maxDateTime !== undefined &&
              tp_inst._defaults.maxDateTime instanceof Date &&
              (tp_inst._defaults.maxDate = new Date(
                tp_inst._defaults.maxDateTime.getTime(),
              )),
            tp_inst.$input.bind("focus", function () {
              tp_inst._onFocus();
            }),
            tp_inst
          );
        },
        _addTimePicker: function (e) {
          const t =
            this.$altInput && this._defaults.altFieldTimeOnly
              ? this.$input.val() + " " + this.$altInput.val()
              : this.$input.val();
          (this.timeDefined = this._parseTime(t)),
            this._limitMinMaxDateTime(e, !1),
            this._injectTimePicker();
        },
        _parseTime: function (e, t) {
          if (
            (this.inst || (this.inst = $.datepicker._getInst(this.$input[0])),
            t || !this._defaults.timeOnly)
          ) {
            const n = $.datepicker._get(this.inst, "dateFormat");
            try {
              const i = parseDateTimeInternal(
                n,
                this._defaults.timeFormat,
                e,
                $.datepicker._getFormatConfig(this.inst),
                this._defaults,
              );
              if (!i.timeObj) return !1;
              $.extend(this, i.timeObj);
            } catch (o) {
              return (
                $.timepicker.log(
                  "Error parsing the date/time string: " +
                    o +
                    "\ndate/time string = " +
                    e +
                    "\ntimeFormat = " +
                    this._defaults.timeFormat +
                    "\ndateFormat = " +
                    n,
                ),
                !1
              );
            }
            return !0;
          }
          const r = $.datepicker.parseTime(
            this._defaults.timeFormat,
            e,
            this._defaults,
          );
          return !!r && ($.extend(this, r), !0);
        },
        _injectTimePicker: function () {
          const e = this.inst.dpDiv;
          const t = this.inst.settings;
          const o = this;
          let s = "";
          let n = "";
          let i = null;
          const r = {};
          const a = {};
          let l = null;
          let c = 0;
          let u = 0;
          if (
            e.find("div.ui-timepicker-div").length === 0 &&
            t.showTimepicker
          ) {
            const d = ' style="display:none;"';
            let h =
              '<div class="ui-timepicker-div' +
              (t.isRTL ? " ui-timepicker-rtl" : "") +
              '"><dl><dt class="ui_tpicker_time_label"' +
              (t.showTime ? "" : d) +
              ">" +
              t.timeText +
              '</dt><dd class="ui_tpicker_time"' +
              (t.showTime ? "" : d) +
              "></dd>";
            for (c = 0, u = this.units.length; c < u; c++) {
              if (
                ((i =
                  t[
                    "show" +
                      (n =
                        (s = this.units[c]).substr(0, 1).toUpperCase() +
                        s.substr(1))
                  ] !== null
                    ? t["show" + n]
                    : this.support[s]),
                (r[s] = parseInt(
                  t[s + "Max"] -
                    ((t[s + "Max"] - t[s + "Min"]) % t["step" + n]),
                  10,
                )),
                (a[s] = 0),
                (h +=
                  '<dt class="ui_tpicker_' +
                  s +
                  '_label"' +
                  (i ? "" : d) +
                  ">" +
                  t[s + "Text"] +
                  '</dt><dd class="ui_tpicker_' +
                  s +
                  '"><div class="ui_tpicker_' +
                  s +
                  '_slider"' +
                  (i ? "" : d) +
                  "></div>"),
                i && t[s + "Grid"] > 0)
              ) {
                if (
                  ((h +=
                    '<div style="padding-left: 1px"><table class="ui-tpicker-grid-label"><tr>'),
                  s === "hour")
                ) {
                  for (
                    let p = t[s + "Min"];
                    p <= r[s];
                    p += parseInt(t[s + "Grid"], 10)
                  ) {
                    a[s]++;
                    const f = $.datepicker.formatTime(
                      this.support.ampm ? "hht" : "HH",
                      { hour: p },
                      t,
                    );
                    h += '<td data-for="' + s + '">' + f + "</td>";
                  }
                } else {
                  for (
                    let g = t[s + "Min"];
                    g <= r[s];
                    g += parseInt(t[s + "Grid"], 10)
                  ) {
                    a[s]++,
                      (h +=
                        '<td data-for="' +
                        s +
                        '">' +
                        (g < 10 ? "0" : "") +
                        g +
                        "</td>");
                  }
                }
                h += "</tr></table></div>";
              }
              h += "</dd>";
            }
            const m =
              t.showTimezone !== null ? t.showTimezone : this.support.timezone;
            (h +=
              '<dt class="ui_tpicker_timezone_label"' +
              (m ? "" : d) +
              ">" +
              t.timezoneText +
              "</dt>"),
              (h +=
                '<dd class="ui_tpicker_timezone" ' + (m ? "" : d) + "></dd>");
            const v = $((h += "</dl></div>"));
            for (
              !0 === t.timeOnly &&
                (v.prepend(
                  '<div class="ui-widget-header ui-helper-clearfix ui-corner-all"><div class="ui-datepicker-title">' +
                    t.timeOnlyTitle +
                    "</div></div>",
                ),
                e
                  .find(".ui-datepicker-header, .ui-datepicker-calendar")
                  .hide()),
                c = 0,
                u = o.units.length;
              c < u;
              c++
            ) {
              (i =
                t[
                  "show" +
                    (n =
                      (s = o.units[c]).substr(0, 1).toUpperCase() + s.substr(1))
                ] !== null
                  ? t["show" + n]
                  : this.support[s]),
                (o[s + "_slider"] = o.control.create(
                  o,
                  v.find(".ui_tpicker_" + s + "_slider"),
                  s,
                  o[s],
                  t[s + "Min"],
                  r[s],
                  t["step" + n],
                )),
                i &&
                  t[s + "Grid"] > 0 &&
                  ((l = (100 * a[s] * t[s + "Grid"]) / (r[s] - t[s + "Min"])),
                  v
                    .find(".ui_tpicker_" + s + " table")
                    .css({
                      width: l + "%",
                      marginLeft: t.isRTL ? "0" : l / (-2 * a[s]) + "%",
                      marginRight: t.isRTL ? l / (-2 * a[s]) + "%" : "0",
                      borderCollapse: "collapse",
                    })
                    .find("td")
                    .click(function () {
                      const e = $(this);
                      const t = e.html();
                      let n = parseInt(t.replace(/[^0-9]/g), 10);
                      const i = t.replace(/[^apm]/gi);
                      const r = e.data("for");
                      r === "hour" &&
                        (i.indexOf("p") !== -1 && n < 12
                          ? (n += 12)
                          : i.indexOf("a") !== -1 && n === 12 && (n = 0)),
                        o.control.value(o, o[r + "_slider"], s, n),
                        o._onTimeChange(),
                        o._onSelectHandler();
                    })
                    .css({
                      cursor: "pointer",
                      width: 100 / a[s] + "%",
                      textAlign: "center",
                      overflow: "hidden",
                    }));
            }
            if (
              ((this.timezone_select = v
                .find(".ui_tpicker_timezone")
                .append("<select></select>")
                .find("select")),
              $.fn.append.apply(
                this.timezone_select,
                $.map(t.timezoneList, function (e) {
                  return $("<option />")
                    .val(typeof e === "object" ? e.value : e)
                    .text(typeof e === "object" ? e.label : e);
                }),
              ),
              typeof this.timezone !== "undefined" &&
                this.timezone !== null &&
                this.timezone !== "")
            ) {
              -1 *
                new Date(
                  this.inst.selectedYear,
                  this.inst.selectedMonth,
                  this.inst.selectedDay,
                  12,
                ).getTimezoneOffset() ===
              this.timezone
                ? selectLocalTimezone(o)
                : this.timezone_select.val(this.timezone);
            } else {
              typeof this.hour !== "undefined" &&
              this.hour !== null &&
              this.hour !== ""
                ? this.timezone_select.val(t.timezone)
                : selectLocalTimezone(o);
            }
            this.timezone_select.change(function () {
              o._onTimeChange(), o._onSelectHandler();
            });
            const y = e.find(".ui-datepicker-buttonpane");
            if (
              (y.length ? y.before(v) : e.append(v),
              (this.$timeObj = v.find(".ui_tpicker_time")),
              this.inst !== null)
            ) {
              const b = this.timeDefined;
              this._onTimeChange(), (this.timeDefined = b);
            }
            if (this._defaults.addSliderAccess) {
              const _ = this._defaults.sliderAccessArgs;
              const x = this._defaults.isRTL;
              (_.isRTL = x),
                setTimeout(function () {
                  if (v.find(".ui-slider-access").length === 0) {
                    v.find(".ui-slider:visible").sliderAccess(_);
                    const s = v.find(".ui-slider-access:eq(0)").outerWidth(!0);
                    s &&
                      v.find("table:visible").each(function () {
                        const e = $(this);
                        const t = e.outerWidth();
                        const n = e
                          .css(x ? "marginRight" : "marginLeft")
                          .toString()
                          .replace("%", "");
                        const i = t - s;
                        const r = (n * i) / t + "%";
                        const o = { width: i, marginRight: 0, marginLeft: 0 };
                        (o[x ? "marginRight" : "marginLeft"] = r), e.css(o);
                      });
                  }
                }, 10);
            }
            o._limitMinMaxDateTime(this.inst, !0);
          }
        },
        _limitMinMaxDateTime: function (e, t) {
          const n = this._defaults;
          const i = new Date(e.selectedYear, e.selectedMonth, e.selectedDay);
          if (this._defaults.showTimepicker) {
            if (
              $.datepicker._get(e, "minDateTime") !== null &&
              $.datepicker._get(e, "minDateTime") !== undefined &&
              i
            ) {
              const r = $.datepicker._get(e, "minDateTime");
              const o = new Date(
                r.getFullYear(),
                r.getMonth(),
                r.getDate(),
                0,
                0,
                0,
                0,
              );
              (this.hourMinOriginal !== null &&
                this.minuteMinOriginal !== null &&
                this.secondMinOriginal !== null &&
                this.millisecMinOriginal !== null &&
                this.microsecMinOriginal !== null) ||
                ((this.hourMinOriginal = n.hourMin),
                (this.minuteMinOriginal = n.minuteMin),
                (this.secondMinOriginal = n.secondMin),
                (this.millisecMinOriginal = n.millisecMin),
                (this.microsecMinOriginal = n.microsecMin)),
                e.settings.timeOnly || o.getTime() === i.getTime()
                  ? ((this._defaults.hourMin = r.getHours()),
                    this.hour <= this._defaults.hourMin
                      ? ((this.hour = this._defaults.hourMin),
                        (this._defaults.minuteMin = r.getMinutes()),
                        this.minute <= this._defaults.minuteMin
                          ? ((this.minute = this._defaults.minuteMin),
                            (this._defaults.secondMin = r.getSeconds()),
                            this.second <= this._defaults.secondMin
                              ? ((this.second = this._defaults.secondMin),
                                (this._defaults.millisecMin =
                                  r.getMilliseconds()),
                                this.millisec <= this._defaults.millisecMin
                                  ? ((this.millisec =
                                      this._defaults.millisecMin),
                                    (this._defaults.microsecMin =
                                      r.getMicroseconds()))
                                  : (this.microsec <
                                      this._defaults.microsecMin &&
                                      (this.microsec =
                                        this._defaults.microsecMin),
                                    (this._defaults.microsecMin =
                                      this.microsecMinOriginal)))
                              : ((this._defaults.millisecMin =
                                  this.millisecMinOriginal),
                                (this._defaults.microsecMin =
                                  this.microsecMinOriginal)))
                          : ((this._defaults.secondMin =
                              this.secondMinOriginal),
                            (this._defaults.millisecMin =
                              this.millisecMinOriginal),
                            (this._defaults.microsecMin =
                              this.microsecMinOriginal)))
                      : ((this._defaults.minuteMin = this.minuteMinOriginal),
                        (this._defaults.secondMin = this.secondMinOriginal),
                        (this._defaults.millisecMin = this.millisecMinOriginal),
                        (this._defaults.microsecMin =
                          this.microsecMinOriginal)))
                  : ((this._defaults.hourMin = this.hourMinOriginal),
                    (this._defaults.minuteMin = this.minuteMinOriginal),
                    (this._defaults.secondMin = this.secondMinOriginal),
                    (this._defaults.millisecMin = this.millisecMinOriginal),
                    (this._defaults.microsecMin = this.microsecMinOriginal));
            }
            if (
              $.datepicker._get(e, "maxDateTime") !== null &&
              $.datepicker._get(e, "maxDateTime") !== undefined &&
              i
            ) {
              const s = $.datepicker._get(e, "maxDateTime");
              const a = new Date(
                s.getFullYear(),
                s.getMonth(),
                s.getDate(),
                0,
                0,
                0,
                0,
              );
              (this.hourMaxOriginal !== null &&
                this.minuteMaxOriginal !== null &&
                this.secondMaxOriginal !== null &&
                this.millisecMaxOriginal !== null) ||
                ((this.hourMaxOriginal = n.hourMax),
                (this.minuteMaxOriginal = n.minuteMax),
                (this.secondMaxOriginal = n.secondMax),
                (this.millisecMaxOriginal = n.millisecMax),
                (this.microsecMaxOriginal = n.microsecMax)),
                e.settings.timeOnly || a.getTime() === i.getTime()
                  ? ((this._defaults.hourMax = s.getHours()),
                    this.hour >= this._defaults.hourMax
                      ? ((this.hour = this._defaults.hourMax),
                        (this._defaults.minuteMax = s.getMinutes()),
                        this.minute >= this._defaults.minuteMax
                          ? ((this.minute = this._defaults.minuteMax),
                            (this._defaults.secondMax = s.getSeconds()),
                            this.second >= this._defaults.secondMax
                              ? ((this.second = this._defaults.secondMax),
                                (this._defaults.millisecMax =
                                  s.getMilliseconds()),
                                this.millisec >= this._defaults.millisecMax
                                  ? ((this.millisec =
                                      this._defaults.millisecMax),
                                    (this._defaults.microsecMax =
                                      s.getMicroseconds()))
                                  : (this.microsec >
                                      this._defaults.microsecMax &&
                                      (this.microsec =
                                        this._defaults.microsecMax),
                                    (this._defaults.microsecMax =
                                      this.microsecMaxOriginal)))
                              : ((this._defaults.millisecMax =
                                  this.millisecMaxOriginal),
                                (this._defaults.microsecMax =
                                  this.microsecMaxOriginal)))
                          : ((this._defaults.secondMax =
                              this.secondMaxOriginal),
                            (this._defaults.millisecMax =
                              this.millisecMaxOriginal),
                            (this._defaults.microsecMax =
                              this.microsecMaxOriginal)))
                      : ((this._defaults.minuteMax = this.minuteMaxOriginal),
                        (this._defaults.secondMax = this.secondMaxOriginal),
                        (this._defaults.millisecMax = this.millisecMaxOriginal),
                        (this._defaults.microsecMax =
                          this.microsecMaxOriginal)))
                  : ((this._defaults.hourMax = this.hourMaxOriginal),
                    (this._defaults.minuteMax = this.minuteMaxOriginal),
                    (this._defaults.secondMax = this.secondMaxOriginal),
                    (this._defaults.millisecMax = this.millisecMaxOriginal),
                    (this._defaults.microsecMax = this.microsecMaxOriginal));
            }
            if (t !== undefined && !0 === t) {
              const l = parseInt(
                this._defaults.hourMax -
                  ((this._defaults.hourMax - this._defaults.hourMin) %
                    this._defaults.stepHour),
                10,
              );
              const c = parseInt(
                this._defaults.minuteMax -
                  ((this._defaults.minuteMax - this._defaults.minuteMin) %
                    this._defaults.stepMinute),
                10,
              );
              const u = parseInt(
                this._defaults.secondMax -
                  ((this._defaults.secondMax - this._defaults.secondMin) %
                    this._defaults.stepSecond),
                10,
              );
              const d = parseInt(
                this._defaults.millisecMax -
                  ((this._defaults.millisecMax - this._defaults.millisecMin) %
                    this._defaults.stepMillisec),
                10,
              );
              const h = parseInt(
                this._defaults.microsecMax -
                  ((this._defaults.microsecMax - this._defaults.microsecMin) %
                    this._defaults.stepMicrosec),
                10,
              );
              this.hour_slider &&
                (this.control.options(this, this.hour_slider, "hour", {
                  min: this._defaults.hourMin,
                  max: l,
                }),
                this.control.value(
                  this,
                  this.hour_slider,
                  "hour",
                  this.hour - (this.hour % this._defaults.stepHour),
                )),
                this.minute_slider &&
                  (this.control.options(this, this.minute_slider, "minute", {
                    min: this._defaults.minuteMin,
                    max: c,
                  }),
                  this.control.value(
                    this,
                    this.minute_slider,
                    "minute",
                    this.minute - (this.minute % this._defaults.stepMinute),
                  )),
                this.second_slider &&
                  (this.control.options(this, this.second_slider, "second", {
                    min: this._defaults.secondMin,
                    max: u,
                  }),
                  this.control.value(
                    this,
                    this.second_slider,
                    "second",
                    this.second - (this.second % this._defaults.stepSecond),
                  )),
                this.millisec_slider &&
                  (this.control.options(
                    this,
                    this.millisec_slider,
                    "millisec",
                    { min: this._defaults.millisecMin, max: d },
                  ),
                  this.control.value(
                    this,
                    this.millisec_slider,
                    "millisec",
                    this.millisec -
                      (this.millisec % this._defaults.stepMillisec),
                  )),
                this.microsec_slider &&
                  (this.control.options(
                    this,
                    this.microsec_slider,
                    "microsec",
                    { min: this._defaults.microsecMin, max: h },
                  ),
                  this.control.value(
                    this,
                    this.microsec_slider,
                    "microsec",
                    this.microsec -
                      (this.microsec % this._defaults.stepMicrosec),
                  ));
            }
          }
        },
        _onTimeChange: function () {
          if (this._defaults.showTimepicker) {
            let e =
              !!this.hour_slider &&
              this.control.value(this, this.hour_slider, "hour");
            let t =
              !!this.minute_slider &&
              this.control.value(this, this.minute_slider, "minute");
            let n =
              !!this.second_slider &&
              this.control.value(this, this.second_slider, "second");
            let i =
              !!this.millisec_slider &&
              this.control.value(this, this.millisec_slider, "millisec");
            let r =
              !!this.microsec_slider &&
              this.control.value(this, this.microsec_slider, "microsec");
            let o = !!this.timezone_select && this.timezone_select.val();
            const s = this._defaults;
            const a = s.pickerTimeFormat || s.timeFormat;
            const l = s.pickerTimeSuffix || s.timeSuffix;
            typeof e === "object" && (e = !1),
              typeof t === "object" && (t = !1),
              typeof n === "object" && (n = !1),
              typeof i === "object" && (i = !1),
              typeof r === "object" && (r = !1),
              typeof o === "object" && (o = !1),
              !1 !== e && (e = parseInt(e, 10)),
              !1 !== t && (t = parseInt(t, 10)),
              !1 !== n && (n = parseInt(n, 10)),
              !1 !== i && (i = parseInt(i, 10)),
              !1 !== r && (r = parseInt(r, 10)),
              !1 !== o && (o = parseInt(o, 10));
            const c = s[e < 12 ? "amNames" : "pmNames"][0];
            const u =
              e !== this.hour ||
              t !== this.minute ||
              n !== this.second ||
              i !== this.millisec ||
              r !== this.microsec ||
              (this.ampm.length > 0 &&
                e < 12 !=
                  ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) ||
              (this.timezone !== null && o !== this.timezone);
            u &&
              (!1 !== e && (this.hour = e),
              !1 !== t && (this.minute = t),
              !1 !== n && (this.second = n),
              !1 !== i && (this.millisec = i),
              !1 !== r && (this.microsec = r),
              !1 !== o && (this.timezone = o),
              this.inst || (this.inst = $.datepicker._getInst(this.$input[0])),
              this._limitMinMaxDateTime(this.inst, !0)),
              this.support.ampm && (this.ampm = c),
              (this.formattedTime = $.datepicker.formatTime(
                s.timeFormat,
                this,
                s,
              )),
              this.$timeObj &&
                (a === s.timeFormat
                  ? this.$timeObj.text(this.formattedTime + l)
                  : this.$timeObj.text(
                      $.datepicker.formatTime(a, this, s) + l,
                    )),
              (this.timeDefined = !0),
              u && this._updateDateTime();
          }
        },
        _onSelectHandler: function () {
          const e = this._defaults.onSelect || this.inst.settings.onSelect;
          const t = this.$input ? this.$input[0] : null;
          e && t && e.apply(t, [this.formattedDateTime, this]);
        },
        _updateDateTime: function (e) {
          const t =
            (e = this.inst || e).currentYear > 0
              ? new Date(e.currentYear, e.currentMonth, e.currentDay)
              : new Date(e.selectedYear, e.selectedMonth, e.selectedDay);
          const n = $.datepicker._daylightSavingAdjust(t);
          const i = $.datepicker._get(e, "dateFormat");
          const r = $.datepicker._getFormatConfig(e);
          const o = n !== null && this.timeDefined;
          this.formattedDate = $.datepicker.formatDate(
            i,
            n === null ? new Date() : n,
            r,
          );
          let s = this.formattedDate;
          if (
            (e.lastVal === "" &&
              ((e.currentYear = e.selectedYear),
              (e.currentMonth = e.selectedMonth),
              (e.currentDay = e.selectedDay)),
            !0 === this._defaults.timeOnly
              ? (s = this.formattedTime)
              : !0 !== this._defaults.timeOnly &&
                (this._defaults.alwaysSetTime || o) &&
                (s +=
                  this._defaults.separator +
                  this.formattedTime +
                  this._defaults.timeSuffix),
            (this.formattedDateTime = s),
            this._defaults.showTimepicker)
          ) {
            if (
              this.$altInput &&
              !1 === this._defaults.timeOnly &&
              !0 === this._defaults.altFieldTimeOnly
            ) {
              this.$altInput.val(this.formattedTime),
                this.$input.val(this.formattedDate);
            } else if (this.$altInput) {
              this.$input.val(s);
              let a = "";
              const l = this._defaults.altSeparator
                ? this._defaults.altSeparator
                : this._defaults.separator;
              const c = this._defaults.altTimeSuffix
                ? this._defaults.altTimeSuffix
                : this._defaults.timeSuffix;
              this._defaults.timeOnly ||
                ((a = this._defaults.altFormat
                  ? $.datepicker.formatDate(
                      this._defaults.altFormat,
                      n === null ? new Date() : n,
                      r,
                    )
                  : this.formattedDate) &&
                  (a += l)),
                this._defaults.altTimeFormat
                  ? (a +=
                      $.datepicker.formatTime(
                        this._defaults.altTimeFormat,
                        this,
                        this._defaults,
                      ) + c)
                  : (a += this.formattedTime + c),
                this.$altInput.val(a);
            } else this.$input.val(s);
          } else this.$input.val(this.formattedDate);
          this.$input.trigger("change");
        },
        _onFocus: function () {
          if (!this.$input.val() && this._defaults.defaultValue) {
            this.$input.val(this._defaults.defaultValue);
            const e = $.datepicker._getInst(this.$input.get(0));
            const t = $.datepicker._get(e, "timepicker");
            if (t && t._defaults.timeOnly && e.input.val() !== e.lastVal) {
              try {
                $.datepicker._updateDatepicker(e);
              } catch (n) {
                $.timepicker.log(n);
              }
            }
          }
        },
        _controls: {
          slider: {
            create: function (n, e, i, t, r, o, s) {
              const a = n._defaults.isRTL;
              return e.prop("slide", null).slider({
                orientation: "horizontal",
                value: a ? -1 * t : t,
                min: a ? -1 * o : r,
                max: a ? -1 * r : o,
                step: s,
                slide: function (e, t) {
                  n.control.value(n, $(this), i, a ? -1 * t.value : t.value),
                    n._onTimeChange();
                },
                stop: function () {
                  n._onSelectHandler();
                },
              });
            },
            options: function (e, t, n, i, r) {
              if (e._defaults.isRTL) {
                if (typeof i === "string") {
                  return i === "min" || i === "max"
                    ? r !== undefined
                      ? t.slider(i, -1 * r)
                      : Math.abs(t.slider(i))
                    : t.slider(i);
                }
                const o = i.min;
                const s = i.max;
                return (
                  (i.min = i.max = null),
                  o !== undefined && (i.max = -1 * o),
                  s !== undefined && (i.min = -1 * s),
                  t.slider(i)
                );
              }
              return typeof i === "string" && r !== undefined
                ? t.slider(i, r)
                : t.slider(i);
            },
            value: function (e, t, n, i) {
              return e._defaults.isRTL
                ? i !== undefined
                  ? t.slider("value", -1 * i)
                  : Math.abs(t.slider("value"))
                : i !== undefined
                  ? t.slider("value", i)
                  : t.slider("value");
            },
          },
          select: {
            create: function (e, t, n, i, r, o, s) {
              for (
                var a =
                    '<select class="ui-timepicker-select" data-unit="' +
                    n +
                    '" data-min="' +
                    r +
                    '" data-max="' +
                    o +
                    '" data-step="' +
                    s +
                    '">',
                  l = e._defaults.pickerTimeFormat || e._defaults.timeFormat,
                  c = r;
                c <= o;
                c += s
              ) {
                (a +=
                  '<option value="' +
                  c +
                  '"' +
                  (c === i ? " selected" : "") +
                  ">"),
                  (a +=
                    n === "hour"
                      ? $.datepicker.formatTime(
                          $.trim(l.replace(/[^ht ]/gi, "")),
                          { hour: c },
                          e._defaults,
                        )
                      : n === "millisec" || n === "microsec" || c >= 10
                        ? c
                        : "0" + c.toString()),
                  (a += "</option>");
              }
              return (
                (a += "</select>"),
                t.children("select").remove(),
                $(a)
                  .appendTo(t)
                  .change(function () {
                    e._onTimeChange(), e._onSelectHandler();
                  }),
                t
              );
            },
            options: function (e, t, n, i, r) {
              let o = {};
              const s = t.children("select");
              if (typeof i === "string") {
                if (r === undefined) return s.data(i);
                o[i] = r;
              } else o = i;
              return e.control.create(
                e,
                t,
                s.data("unit"),
                s.val(),
                o.min || s.data("min"),
                o.max || s.data("max"),
                o.step || s.data("step"),
              );
            },
            value: function (e, t, n, i) {
              const r = t.children("select");
              return i !== undefined ? r.val(i) : r.val();
            },
          },
        },
      }),
        $.fn.extend({
          timepicker: function (e) {
            e = e || {};
            const t = Array.prototype.slice.call(arguments);
            return (
              typeof e === "object" && (t[0] = $.extend(e, { timeOnly: !0 })),
              $(this).each(function () {
                $.fn.datetimepicker.apply($(this), t);
              })
            );
          },
          datetimepicker: function (t) {
            const n = arguments;
            return typeof (t = t || {}) === "string"
              ? t === "getDate"
                ? $.fn.datepicker.apply($(this[0]), n)
                : this.each(function () {
                    const e = $(this);
                    e.datepicker.apply(e, n);
                  })
              : this.each(function () {
                  const e = $(this);
                  e.datepicker($.timepicker._newInst(e, t)._defaults);
                });
          },
        }),
        ($.datepicker.parseDateTime = function (e, t, n, i, r) {
          const o = parseDateTimeInternal(e, t, n, i, r);
          if (o.timeObj) {
            const s = o.timeObj;
            o.date.setHours(s.hour, s.minute, s.second, s.millisec),
              o.date.setMicroseconds(s.microsec);
          }
          return o.date;
        }),
        ($.datepicker.parseTime = function (e, t, n) {
          const i = extendRemove(
            extendRemove({}, $.timepicker._defaults),
            n || {},
          );
          const s =
            (e.replace(/\'.*?\'/g, "").indexOf("Z"),
            function (e, t, n) {
              let i;
              const r = function (e, t) {
                let n = [];
                return (
                  e && $.merge(n, e),
                  t && $.merge(n, t),
                  "(" +
                    (n = $.map(n, function (e) {
                      return e.replace(/[.*+?|()\[\]{}\\]/g, "\\$&");
                    })).join("|") +
                    ")?"
                );
              };
              const o = function (e) {
                const t = e
                  .toLowerCase()
                  .match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g);
                const n = { h: -1, m: -1, s: -1, l: -1, c: -1, t: -1, z: -1 };
                if (t) {
                  for (let i = 0; i < t.length; i++) {
                    n[t[i].toString().charAt(0)] === -1 &&
                      (n[t[i].toString().charAt(0)] = i + 1);
                  }
                }
                return n;
              };
              const s =
                "^" +
                e
                  .toString()
                  .replace(
                    /([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,
                    function (e) {
                      const t = e.length;
                      switch (e.charAt(0).toLowerCase()) {
                        case "h":
                        case "m":
                        case "s":
                          return t === 1 ? "(\\d?\\d)" : "(\\d{" + t + "})";
                        case "l":
                        case "c":
                          return "(\\d?\\d?\\d)";
                        case "z":
                          return "(z|[-+]\\d\\d:?\\d\\d|\\S+)?";
                        case "t":
                          return r(n.amNames, n.pmNames);
                        default:
                          return (
                            "(" +
                            e
                              .replace(/\'/g, "")
                              .replace(
                                /(\.|\$|\^|\\|\/|\(|\)|\[|\]|\?|\+|\*)/g,
                                function (e) {
                                  return "\\" + e;
                                },
                              ) +
                            ")?"
                          );
                      }
                    },
                  )
                  .replace(/\s/g, "\\s?") +
                n.timeSuffix +
                "$";
              const a = o(e);
              let l = "";
              const c = {
                hour: 0,
                minute: 0,
                second: 0,
                millisec: 0,
                microsec: 0,
              };
              return (
                !!(i = t.match(new RegExp(s, "i"))) &&
                (a.t !== -1 &&
                  (i[a.t] === undefined || i[a.t].length === 0
                    ? ((l = ""), (c.ampm = ""))
                    : ((l =
                        $.inArray(i[a.t].toUpperCase(), n.amNames) !== -1
                          ? "AM"
                          : "PM"),
                      (c.ampm = n[l === "AM" ? "amNames" : "pmNames"][0]))),
                a.h !== -1 &&
                  (l === "AM" && i[a.h] === "12"
                    ? (c.hour = 0)
                    : l === "PM" && i[a.h] !== "12"
                      ? (c.hour = parseInt(i[a.h], 10) + 12)
                      : (c.hour = Number(i[a.h]))),
                a.m !== -1 && (c.minute = Number(i[a.m])),
                a.s !== -1 && (c.second = Number(i[a.s])),
                a.l !== -1 && (c.millisec = Number(i[a.l])),
                a.c !== -1 && (c.microsec = Number(i[a.c])),
                a.z !== -1 &&
                  i[a.z] !== undefined &&
                  (c.timezone = $.timepicker.timezoneOffsetNumber(i[a.z])),
                c)
              );
            });
          const r = function (e, t, n) {
            try {
              let i = new Date("2012-01-01 " + t);
              if (
                isNaN(i.getTime()) &&
                ((i = new Date("2012-01-01T" + t)),
                isNaN(i.getTime()) &&
                  ((i = new Date("01/01/2012 " + t)), isNaN(i.getTime())))
              ) {
                throw "Unable to parse time with native Date: " + t;
              }
              return {
                hour: i.getHours(),
                minute: i.getMinutes(),
                second: i.getSeconds(),
                millisec: i.getMilliseconds(),
                microsec: i.getMicroseconds(),
                timezone: -1 * i.getTimezoneOffset(),
              };
            } catch (r) {
              try {
                return s(e, t, n);
              } catch (o) {
                $.timepicker.log(
                  "Unable to parse \ntimeString: " + t + "\ntimeFormat: " + e,
                );
              }
            }
            return !1;
          };
          return typeof i.parse === "function"
            ? i.parse(e, t, i)
            : i.parse === "loose"
              ? r(e, t, i)
              : s(e, t, i);
        }),
        ($.datepicker.formatTime = function (e, t, n) {
          (n = n || {}),
            (n = $.extend({}, $.timepicker._defaults, n)),
            (t = $.extend(
              {
                hour: 0,
                minute: 0,
                second: 0,
                millisec: 0,
                microsec: 0,
                timezone: null,
              },
              t,
            ));
          let i = e;
          let r = n.amNames[0];
          const o = parseInt(t.hour, 10);
          return (
            o > 11 && (r = n.pmNames[0]),
            (i = i.replace(
              /(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,
              function (e) {
                switch (e) {
                  case "HH":
                    return ("0" + o).slice(-2);
                  case "H":
                    return o;
                  case "hh":
                    return ("0" + convert24to12(o)).slice(-2);
                  case "h":
                    return convert24to12(o);
                  case "mm":
                    return ("0" + t.minute).slice(-2);
                  case "m":
                    return t.minute;
                  case "ss":
                    return ("0" + t.second).slice(-2);
                  case "s":
                    return t.second;
                  case "l":
                    return ("00" + t.millisec).slice(-3);
                  case "c":
                    return ("00" + t.microsec).slice(-3);
                  case "z":
                    return $.timepicker.timezoneOffsetString(
                      t.timezone === null ? n.timezone : t.timezone,
                      !1,
                    );
                  case "Z":
                    return $.timepicker.timezoneOffsetString(
                      t.timezone === null ? n.timezone : t.timezone,
                      !0,
                    );
                  case "T":
                    return r.charAt(0).toUpperCase();
                  case "TT":
                    return r.toUpperCase();
                  case "t":
                    return r.charAt(0).toLowerCase();
                  case "tt":
                    return r.toLowerCase();
                  default:
                    return e.replace(/'/g, "");
                }
              },
            ))
          );
        }),
        ($.datepicker._base_selectDate = $.datepicker._selectDate),
        ($.datepicker._selectDate = function (e, t) {
          const n = this._getInst($(e)[0]);
          const i = this._get(n, "timepicker");
          i
            ? (i._limitMinMaxDateTime(n, !0),
              (n.inline = n.stay_open = !0),
              this._base_selectDate(e, t),
              (n.inline = n.stay_open = !1),
              this._notifyChange(n),
              this._updateDatepicker(n))
            : this._base_selectDate(e, t);
        }),
        ($.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker),
        ($.datepicker._updateDatepicker = function (e) {
          const t = e.input[0];
          if (
            !(
              ($.datepicker._curInst &&
                $.datepicker._curInst !== e &&
                $.datepicker._datepickerShowing &&
                $.datepicker._lastInput !== t) ||
              (typeof e.stay_open === "boolean" && !1 !== e.stay_open)
            )
          ) {
            this._base_updateDatepicker(e);
            const n = this._get(e, "timepicker");
            n && n._addTimePicker(e);
          }
        }),
        ($.datepicker._base_doKeyPress = $.datepicker._doKeyPress),
        ($.datepicker._doKeyPress = function (e) {
          const t = $.datepicker._getInst(e.target);
          const n = $.datepicker._get(t, "timepicker");
          if (n && $.datepicker._get(t, "constrainInput")) {
            const i = n.support.ampm;
            const r =
              n._defaults.showTimezone !== null
                ? n._defaults.showTimezone
                : n.support.timezone;
            const o = $.datepicker._possibleChars(
              $.datepicker._get(t, "dateFormat"),
            );
            const s =
              n._defaults.timeFormat
                .toString()
                .replace(/[hms]/g, "")
                .replace(/TT/g, i ? "APM" : "")
                .replace(/Tt/g, i ? "AaPpMm" : "")
                .replace(/tT/g, i ? "AaPpMm" : "")
                .replace(/T/g, i ? "AP" : "")
                .replace(/tt/g, i ? "apm" : "")
                .replace(/t/g, i ? "ap" : "") +
              " " +
              n._defaults.separator +
              n._defaults.timeSuffix +
              (r ? n._defaults.timezoneList.join("") : "") +
              n._defaults.amNames.join("") +
              n._defaults.pmNames.join("") +
              o;
            const a = String.fromCharCode(
              e.charCode === undefined ? e.keyCode : e.charCode,
            );
            return e.ctrlKey || a < " " || !o || s.indexOf(a) > -1;
          }
          return $.datepicker._base_doKeyPress(e);
        }),
        ($.datepicker._base_updateAlternate = $.datepicker._updateAlternate),
        ($.datepicker._updateAlternate = function (e) {
          const t = this._get(e, "timepicker");
          if (t) {
            const n = t._defaults.altField;
            if (n) {
              t._defaults.altFormat || t._defaults.dateFormat;
              const i = this._getDate(e);
              const r = $.datepicker._getFormatConfig(e);
              let o = "";
              const s = t._defaults.altSeparator
                ? t._defaults.altSeparator
                : t._defaults.separator;
              const a = t._defaults.altTimeSuffix
                ? t._defaults.altTimeSuffix
                : t._defaults.timeSuffix;
              const l =
                t._defaults.altTimeFormat !== null
                  ? t._defaults.altTimeFormat
                  : t._defaults.timeFormat;
              (o += $.datepicker.formatTime(l, t, t._defaults) + a),
                t._defaults.timeOnly ||
                  t._defaults.altFieldTimeOnly ||
                  i === null ||
                  (o = t._defaults.altFormat
                    ? $.datepicker.formatDate(t._defaults.altFormat, i, r) +
                      s +
                      o
                    : t.formattedDate + s + o),
                $(n).val(o);
            }
          } else $.datepicker._base_updateAlternate(e);
        }),
        ($.datepicker._base_doKeyUp = $.datepicker._doKeyUp),
        ($.datepicker._doKeyUp = function (e) {
          const t = $.datepicker._getInst(e.target);
          const n = $.datepicker._get(t, "timepicker");
          if (n && n._defaults.timeOnly && t.input.val() !== t.lastVal) {
            try {
              $.datepicker._updateDatepicker(t);
            } catch (i) {
              $.timepicker.log(i);
            }
          }
          return $.datepicker._base_doKeyUp(e);
        }),
        ($.datepicker._base_gotoToday = $.datepicker._gotoToday),
        ($.datepicker._gotoToday = function (e) {
          const t = this._getInst($(e)[0]);
          const n = t.dpDiv;
          this._base_gotoToday(e);
          const i = this._get(t, "timepicker");
          selectLocalTimezone(i);
          const r = new Date();
          this._setTime(t, r), $(".ui-datepicker-today", n).click();
        }),
        ($.datepicker._disableTimepickerDatepicker = function (e) {
          const t = this._getInst(e);
          if (t) {
            const n = this._get(t, "timepicker");
            $(e).datepicker("getDate"),
              n &&
                ((t.settings.showTimepicker = !1),
                (n._defaults.showTimepicker = !1),
                n._updateDateTime(t));
          }
        }),
        ($.datepicker._enableTimepickerDatepicker = function (e) {
          const t = this._getInst(e);
          if (t) {
            const n = this._get(t, "timepicker");
            $(e).datepicker("getDate"),
              n &&
                ((t.settings.showTimepicker = !0),
                (n._defaults.showTimepicker = !0),
                n._addTimePicker(t),
                n._updateDateTime(t));
          }
        }),
        ($.datepicker._setTime = function (e, t) {
          const n = this._get(e, "timepicker");
          if (n) {
            const i = n._defaults;
            (n.hour = t ? t.getHours() : i.hour),
              (n.minute = t ? t.getMinutes() : i.minute),
              (n.second = t ? t.getSeconds() : i.second),
              (n.millisec = t ? t.getMilliseconds() : i.millisec),
              (n.microsec = t ? t.getMicroseconds() : i.microsec),
              n._limitMinMaxDateTime(e, !0),
              n._onTimeChange(),
              n._updateDateTime(e);
          }
        }),
        ($.datepicker._setTimeDatepicker = function (e, t, n) {
          const i = this._getInst(e);
          if (i) {
            let r;
            const o = this._get(i, "timepicker");
            if (o) {
              this._setDateFromField(i),
                t &&
                  (typeof t === "string"
                    ? (o._parseTime(t, n),
                      (r = new Date()).setHours(
                        o.hour,
                        o.minute,
                        o.second,
                        o.millisec,
                      ),
                      r.setMicroseconds(o.microsec))
                    : (r = new Date(t.getTime())).setMicroseconds(
                        t.getMicroseconds(),
                      ),
                  r.toString() === "Invalid Date" && (r = undefined),
                  this._setTime(i, r));
            }
          }
        }),
        ($.datepicker._base_setDateDatepicker =
          $.datepicker._setDateDatepicker),
        ($.datepicker._setDateDatepicker = function (e, t) {
          const n = this._getInst(e);
          if (n) {
            typeof t === "string" &&
              ((t = new Date(t)).getTime() ||
                $.timepicker.log("Error creating Date object from string."));
            let i;
            const r = this._get(n, "timepicker");
            t instanceof Date
              ? (i = new Date(t.getTime())).setMicroseconds(t.getMicroseconds())
              : (i = t),
              r &&
                (r.support.timezone ||
                  r._defaults.timezone !== null ||
                  (r.timezone = -1 * i.getTimezoneOffset()),
                (t = $.timepicker.timezoneAdjust(t, r.timezone)),
                (i = $.timepicker.timezoneAdjust(i, r.timezone))),
              this._updateDatepicker(n),
              this._base_setDateDatepicker.apply(this, arguments),
              this._setTimeDatepicker(e, i, !0);
          }
        }),
        ($.datepicker._base_getDateDatepicker =
          $.datepicker._getDateDatepicker),
        ($.datepicker._getDateDatepicker = function (e, t) {
          const n = this._getInst(e);
          if (n) {
            const i = this._get(n, "timepicker");
            if (i) {
              n.lastVal === undefined && this._setDateFromField(n, t);
              let r = this._getDate(n);
              return (
                r &&
                  i._parseTime($(e).val(), i.timeOnly) &&
                  (r.setHours(i.hour, i.minute, i.second, i.millisec),
                  r.setMicroseconds(i.microsec),
                  i.timezone != null &&
                    (i.support.timezone ||
                      i._defaults.timezone !== null ||
                      (i.timezone = -1 * r.getTimezoneOffset()),
                    (r = $.timepicker.timezoneAdjust(r, i.timezone)))),
                r
              );
            }
            return this._base_getDateDatepicker(e, t);
          }
        }),
        ($.datepicker._base_parseDate = $.datepicker.parseDate),
        ($.datepicker.parseDate = function (e, t, n) {
          let i;
          try {
            i = this._base_parseDate(e, t, n);
          } catch (r) {
            if (!(r.indexOf(":") >= 0)) throw r;
            (i = this._base_parseDate(
              e,
              t.substring(0, t.length - (r.length - r.indexOf(":") - 2)),
              n,
            )),
              $.timepicker.log(
                "Error parsing the date string: " +
                  r +
                  "\ndate string = " +
                  t +
                  "\ndate format = " +
                  e,
              );
          }
          return i;
        }),
        ($.datepicker._base_formatDate = $.datepicker._formatDate),
        ($.datepicker._formatDate = function (e) {
          const t = this._get(e, "timepicker");
          return t
            ? (t._updateDateTime(e), t.$input.val())
            : this._base_formatDate(e);
        }),
        ($.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker),
        ($.datepicker._optionDatepicker = function (e, t, n) {
          let i;
          const r = this._getInst(e);
          if (!r) return null;
          const o = this._get(r, "timepicker");
          if (o) {
            let s;
            let a = null;
            let l = null;
            let c = null;
            const u = o._defaults.evnts;
            const d = {};
            if (typeof t === "string") {
              if (t === "minDate" || t === "minDateTime") a = n;
              else if (t === "maxDate" || t === "maxDateTime") l = n;
              else if (t === "onSelect") c = n;
              else if (u.hasOwnProperty(t)) {
                if (void 0 === n) return u[t];
                (d[t] = n), (i = {});
              }
            } else if (typeof t === "object") {
              for (s in (t.minDate
                ? (a = t.minDate)
                : t.minDateTime
                  ? (a = t.minDateTime)
                  : t.maxDate
                    ? (l = t.maxDate)
                    : t.maxDateTime && (l = t.maxDateTime),
              u)) {
                u.hasOwnProperty(s) && t[s] && (d[s] = t[s]);
              }
            }
            for (s in d) {
              d.hasOwnProperty(s) &&
                ((u[s] = d[s]), i || (i = $.extend({}, t)), delete i[s]);
            }
            if (i && isEmptyObject(i)) return;
            a
              ? ((a = a === 0 ? new Date() : new Date(a)),
                (o._defaults.minDate = a),
                (o._defaults.minDateTime = a))
              : l
                ? ((l = l === 0 ? new Date() : new Date(l)),
                  (o._defaults.maxDate = l),
                  (o._defaults.maxDateTime = l))
                : c && (o._defaults.onSelect = c);
          }
          return n === undefined
            ? this._base_optionDatepicker.call($.datepicker, e, t)
            : this._base_optionDatepicker.call($.datepicker, e, i || t, n);
        });
      var isEmptyObject = function (e) {
        let t;
        for (t in e) if (e.hasOwnProperty(t)) return !1;
        return !0;
      };
      var extendRemove = function (e, t) {
        for (const n in ($.extend(e, t), t)) {
          (t[n] !== null && t[n] !== undefined) || (e[n] = t[n]);
        }
        return e;
      };
      var detectSupport = function (e) {
        const t = e.replace(/'.*?'/g, "").toLowerCase();
        const n = function (e, t) {
          return e.indexOf(t) !== -1;
        };
        return {
          hour: n(t, "h"),
          minute: n(t, "m"),
          second: n(t, "s"),
          millisec: n(t, "l"),
          microsec: n(t, "c"),
          timezone: n(t, "z"),
          ampm: n(t, "t") && n(e, "h"),
          iso8601: n(e, "Z"),
        };
      };
      var convert24to12 = function (e) {
        return (e %= 12) === 0 && (e = 12), String(e);
      };
      const computeEffectiveSetting = function (e, t) {
        return e && e[t] ? e[t] : $.timepicker._defaults[t];
      };
      const splitDateTime = function (e, t) {
        const n = computeEffectiveSetting(t, "separator");
        const i = computeEffectiveSetting(t, "timeFormat").split(n).length;
        const r = e.split(n);
        const o = r.length;
        return o > 1
          ? {
              dateString: r.splice(0, o - i).join(n),
              timeString: r.splice(0, i).join(n),
            }
          : { dateString: e, timeString: "" };
      };
      var parseDateTimeInternal = function (e, t, n, i, r) {
        let o, s, a;
        if (
          ((s = splitDateTime(n, r)),
          (o = $.datepicker._base_parseDate(e, s.dateString, i)),
          s.timeString === "")
        ) {
          return { date: o };
        }
        if (!(a = $.datepicker.parseTime(t, s.timeString, r))) {
          throw "Wrong time format";
        }
        return { date: o, timeObj: a };
      };
      var selectLocalTimezone = function (e, t) {
        if (e && e.timezone_select) {
          const n = t || new Date();
          e.timezone_select.val(-n.getTimezoneOffset());
        }
      };
      ($.timepicker = new Timepicker()),
        ($.timepicker.timezoneOffsetString = function (e, t) {
          if (isNaN(e) || e > 840 || e < -720) return e;
          const n = e % 60;
          const i = (e - n) / 60;
          const r = t ? ":" : "";
          const o =
            (e >= 0 ? "+" : "-") +
            ("0" + Math.abs(i)).slice(-2) +
            r +
            ("0" + Math.abs(n)).slice(-2);
          return o === "+00:00" ? "Z" : o;
        }),
        ($.timepicker.timezoneOffsetNumber = function (e) {
          const t = e.toString().replace(":", "");
          return t.toUpperCase() === "Z"
            ? 0
            : /^(\-|\+)\d{4}$/.test(t)
              ? (t.substr(0, 1) === "-" ? -1 : 1) *
                (60 * parseInt(t.substr(1, 2), 10) +
                  parseInt(t.substr(3, 2), 10))
              : e;
        }),
        ($.timepicker.timezoneAdjust = function (e, t) {
          const n = $.timepicker.timezoneOffsetNumber(t);
          return (
            isNaN(n) ||
              e.setMinutes(e.getMinutes() + -e.getTimezoneOffset() - n),
            e
          );
        }),
        ($.timepicker.timeRange = function (e, t, n) {
          return $.timepicker.handleRange("timepicker", e, t, n);
        }),
        ($.timepicker.datetimeRange = function (e, t, n) {
          $.timepicker.handleRange("datetimepicker", e, t, n);
        }),
        ($.timepicker.dateRange = function (e, t, n) {
          $.timepicker.handleRange("datepicker", e, t, n);
        }),
        ($.timepicker.handleRange = function (a, l, c, u) {
          function e(e, t) {
            const n = l[a]("getDate");
            const i = c[a]("getDate");
            const r = e[a]("getDate");
            if (n !== null) {
              const o = new Date(n.getTime());
              const s = new Date(n.getTime());
              o.setMilliseconds(o.getMilliseconds() + u.minInterval),
                s.setMilliseconds(s.getMilliseconds() + u.maxInterval),
                u.minInterval > 0 && i < o
                  ? c[a]("setDate", o)
                  : u.maxInterval > 0 && s < i
                    ? c[a]("setDate", s)
                    : i < n && t[a]("setDate", r);
            }
          }
          function t(e, t, n) {
            if (e.val()) {
              const i = e[a].call(e, "getDate");
              i !== null &&
                u.minInterval > 0 &&
                (n === "minDate" &&
                  i.setMilliseconds(i.getMilliseconds() + u.minInterval),
                n === "maxDate" &&
                  i.setMilliseconds(i.getMilliseconds() - u.minInterval)),
                i.getTime && t[a].call(t, "option", n, i);
            }
          }
          return (
            (u = $.extend(
              {},
              { minInterval: 0, maxInterval: 0, start: {}, end: {} },
              u,
            )),
            $.fn[a].call(
              l,
              $.extend(
                {
                  onClose: function () {
                    e($(this), c);
                  },
                  onSelect: function () {
                    t($(this), c, "minDate");
                  },
                },
                u,
                u.start,
              ),
            ),
            $.fn[a].call(
              c,
              $.extend(
                {
                  onClose: function () {
                    e($(this), l);
                  },
                  onSelect: function () {
                    t($(this), l, "maxDate");
                  },
                },
                u,
                u.end,
              ),
            ),
            e(l, c),
            t(l, c, "minDate"),
            t(c, l, "maxDate"),
            $([l.get(0), c.get(0)])
          );
        }),
        ($.timepicker.log = function (e) {
          window.console && window.console.log(e);
        }),
        ($.timepicker._util = {
          _extendRemove: extendRemove,
          _isEmptyObject: isEmptyObject,
          _convert24to12: convert24to12,
          _detectSupport: detectSupport,
          _selectLocalTimezone: selectLocalTimezone,
          _computeEffectiveSetting: computeEffectiveSetting,
          _splitDateTime: splitDateTime,
          _parseDateTimeInternal: parseDateTimeInternal,
        }),
        Date.prototype.getMicroseconds ||
          ((Date.prototype.microseconds = 0),
          (Date.prototype.getMicroseconds = function () {
            return this.microseconds;
          }),
          (Date.prototype.setMicroseconds = function (e) {
            return (
              this.setMilliseconds(
                this.getMilliseconds() + Math.floor(e / 1e3),
              ),
              (this.microseconds = e % 1e3),
              this
            );
          })),
        ($.timepicker.version = "1.4.1");
    }
  })(jQuery),
  function () {
    let e;
    (e = {
      datetime: {
        activateForm: function () {
          let e, t, n, i, r, o;
          return (
            (e = {
              dateFormat: "D yy-mm-dd",
              timeFormat: "hh:mm TT",
              hours12: !0,
              parse: "loose",
              onClose: function () {
                return o.update();
              },
            }),
            (r = jQuery((o = this).element[0]).data("datetimepicker-options")),
            (n = $.extend({}, e, r)),
            (i = jQuery(document.createElement("form"))
              .addClass("form_in_place")
              .attr("action", "javascript:void(0);")
              .attr("style", "display:inline")),
            (t = jQuery(document.createElement("input"))
              .attr("type", "text")
              .attr("name", this.attributeName)
              .attr("value", this.sanitizeValue(this.display_value))),
            this.inner_class !== null && t.addClass(this.inner_class),
            i.append(t),
            this.element.html(i),
            this.setHtmlAttributes(),
            this.element.find("input")[0].select(),
            this.element
              .find("form")
              .bind(
                "submit",
                { editor: this },
                BestInPlaceEditor.forms.input.submitHandler,
              ),
            this.element
              .find("input")
              .bind(
                "keyup",
                { editor: this },
                BestInPlaceEditor.forms.input.keyupHandler,
              ),
            this.element.find("input").datetimepicker(n).datepicker("show")
          );
        },
        getValue: function () {
          return this.sanitizeValue(this.element.find("input").val());
        },
        submitHandler: function (e) {
          return e.data.editor.update();
        },
        keyupHandler: function (e) {
          if (e.keyCode === 27) return e.data.editor.abort();
        },
      },
    }),
      $.extend(BestInPlaceEditor.forms, e);
  }.call(this),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree.ui-deps"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.ui-deps"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (x) {
    "use strict";
    function w(e, t) {
      e ||
        ((t = "Fancytree assertion failed" + (t = t ? ": " + t : "")),
        x.ui.fancytree.error(t),
        x.error(t));
    }
    function v(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    function f(e) {
      return typeof e === "function";
    }
    function m(e) {
      return e == null ? "" : e.trim();
    }
    function e(e, t) {
      let n;
      let i;
      const r = window.console ? window.console[e] : null;
      if (r) {
        try {
          r.apply(window.console, t);
        } catch (o) {
          for (i = "", n = 0; n < t.length; n++) i += t[n];
          r(i);
        }
      }
    }
    function _(e) {
      return !(!e.tree || e.statusNodeType === undefined);
    }
    function t(e) {
      let t;
      let n;
      let i;
      const r = x.map(m(e).split("."), function (e) {
        return parseInt(e, 10);
      });
      const o = x.map(Array.prototype.slice.call(arguments, 1), function (e) {
        return parseInt(e, 10);
      });
      for (t = 0; t < o.length; t++) {
        if ((n = r[t] || 0) !== (i = o[t] || 0)) return i < n;
      }
      return !0;
    }
    function c(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      let s = e || {};
      let a = 1;
      const l = arguments.length;
      if ((typeof s === "object" || f(s) || (s = {}), a === l)) {
        throw Error("need at least two args");
      }
      for (; a < l; a++) {
        if ((t = arguments[a]) != null) {
          for (n in t) {
            if (v(t, n)) {
              if (((i = s[n]), s === (r = t[n]))) continue;
              r && x.isPlainObject(r)
                ? ((o = i && x.isPlainObject(i) ? i : {}), (s[n] = c(o, r)))
                : r !== undefined && (s[n] = r);
            }
          }
        }
      }
      return s;
    }
    function o(e, i, t, n, r) {
      let o, s, a, l, c;
      return (
        (o = i[e]),
        (s = n[e]),
        (a = i.ext[r]),
        (l = function () {
          return o.apply(i, arguments);
        }),
        (c = function (e) {
          return o.apply(i, e);
        }),
        function () {
          const e = i._local;
          const t = i._super;
          const n = i._superApply;
          try {
            return (
              (i._local = a),
              (i._super = l),
              (i._superApply = c),
              s.apply(i, arguments)
            );
          } finally {
            (i._local = e), (i._super = t), (i._superApply = n);
          }
        }
      );
    }
    function s(e, t, n, i) {
      for (const r in n) {
        typeof n[r] === "function"
          ? typeof e[r] === "function"
            ? (e[r] = o(r, e, t, n, i))
            : r.charAt(0) === "_"
              ? (e.ext[i][r] = o(r, e, t, n, i))
              : x.error(
                  "Could not override tree." +
                    r +
                    ". Use prefix '_' to create tree." +
                    i +
                    "._" +
                    r,
                )
          : r !== "options" && (e.ext[i][r] = n[r]);
      }
    }
    function C(e, t) {
      return e === undefined
        ? x
            .Deferred(function () {
              this.resolve();
            })
            .promise()
        : x
            .Deferred(function () {
              this.resolveWith(e, t);
            })
            .promise();
    }
    function g(e, t) {
      return e === undefined
        ? x
            .Deferred(function () {
              this.reject();
            })
            .promise()
        : x
            .Deferred(function () {
              this.rejectWith(e, t);
            })
            .promise();
    }
    function y(e, t) {
      return function () {
        e.resolveWith(t);
      };
    }
    function b(e) {
      let t = x.extend({}, e.data());
      const n = t.json;
      return (
        delete t.fancytree,
        delete t.uiFancytree,
        n && (delete t.json, (t = x.extend(t, n))),
        t
      );
    }
    function k(e) {
      return ("" + e).replace(h, function (e) {
        return j[e];
      });
    }
    function i(t) {
      return (
        (t = t.toLowerCase()),
        function (e) {
          return e.title.toLowerCase().indexOf(t) >= 0;
        }
      );
    }
    function a(e) {
      const t = new RegExp("^" + e, "i");
      return function (e) {
        return t.test(e.title);
      };
    }
    function u(e, t) {
      let n, i, r, o;
      for (
        this.parent = e,
          this.tree = e.tree,
          this.ul = null,
          this.li = null,
          this.statusNodeType = null,
          this._isLoading = !1,
          this._error = null,
          this.data = {},
          n = 0,
          i = F.length;
        n < i;
        n++
      ) {
        this[(r = F[n])] = t[r];
      }
      for (r in ((this.unselectableIgnore == null &&
        this.unselectableStatus == null) ||
        (this.unselectable = !0),
      t.hideCheckbox &&
        x.error(
          "'hideCheckbox' node option was removed in v2.23.0: use 'checkbox: false'",
        ),
      t.data && x.extend(this.data, t.data),
      t)) {
        L[r] ||
          (!this.tree.options.copyFunctionsToData && f(t[r])) ||
          R[r] ||
          (this.data[r] = t[r]);
      }
      this.key == null
        ? this.tree.options.defaultKey
          ? ((this.key = "" + this.tree.options.defaultKey(this)),
            w(this.key, "defaultKey() must return a unique key"))
          : (this.key = "_" + S._nextNodeKey++)
        : (this.key = "" + this.key),
        t.active &&
          (w(this.tree.activeNode === null, "only one active node allowed"),
          (this.tree.activeNode = this)),
        t.selected && (this.tree.lastSelectedNode = this),
        (o = t.children)
          ? o.length
            ? this._setChildren(o)
            : (this.children = this.lazy ? [] : null)
          : (this.children = null),
        this.tree._callHook("treeRegisterNode", this.tree, !0, this);
    }
    function l(e) {
      (this.widget = e),
        (this.$div = e.element),
        (this.options = e.options),
        this.options &&
          (this.options.lazyload !== undefined &&
            x.error(
              "The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.",
            ),
          this.options.loaderror !== undefined &&
            x.error(
              "The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.",
            ),
          this.options.fx !== undefined &&
            x.error(
              "The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.",
            ),
          this.options.removeNode !== undefined &&
            x.error(
              "The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).",
            )),
        (this.ext = {}),
        (this.types = {}),
        (this.columns = {}),
        (this.data = b(this.$div)),
        (this._id = "" + (this.options.treeId || x.ui.fancytree._nextId++)),
        (this._ns = ".fancytree-" + this._id),
        (this.activeNode = null),
        (this.focusNode = null),
        (this._hasFocus = null),
        (this._tempCache = {}),
        (this._lastMousedownNode = null),
        (this._enableUpdate = !0),
        (this.lastSelectedNode = null),
        (this.systemFocusElement = null),
        (this.lastQuicksearchTerm = ""),
        (this.lastQuicksearchTime = 0),
        (this.viewport = null),
        (this.statusClassPropName = "span"),
        (this.ariaPropName = "li"),
        (this.nodeContainerAttrName = "li"),
        this.$div.find(">ul.fancytree-container").remove();
      let t;
      const n = { tree: this };
      (this.rootNode = new u(n, {
        title: "root",
        key: "root_" + this._id,
        children: null,
        expanded: !0,
      })),
        (this.rootNode.parent = null),
        (t = x("<ul>", {
          id: "ft-id-" + this._id,
          class: "ui-fancytree fancytree-container fancytree-plain",
        }).appendTo(this.$div)),
        (this.$container = t),
        (this.rootNode.ul = t[0]),
        this.options.debugLevel == null &&
          (this.options.debugLevel = S.debugLevel);
    }
    if (!x.ui || !x.ui.fancytree) {
      let d;
      let n;
      var S = null;
      const T = new RegExp(/\.|\//);
      const r = /[&<>"'/]/g;
      var h = /[<>"'/]/g;
      const p = "$recursive_request";
      const D = "$request_target_invalid";
      var j = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
      };
      const N = { 16: !0, 17: !0, 18: !0 };
      const E = {
        8: "backspace",
        9: "tab",
        10: "return",
        13: "return",
        19: "pause",
        20: "capslock",
        27: "esc",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "insert",
        46: "del",
        59: ";",
        61: "=",
        96: "0",
        97: "1",
        98: "2",
        99: "3",
        100: "4",
        101: "5",
        102: "6",
        103: "7",
        104: "8",
        105: "9",
        106: "*",
        107: "+",
        109: "-",
        110: ".",
        111: "/",
        112: "f1",
        113: "f2",
        114: "f3",
        115: "f4",
        116: "f5",
        117: "f6",
        118: "f7",
        119: "f8",
        120: "f9",
        121: "f10",
        122: "f11",
        123: "f12",
        144: "numlock",
        145: "scroll",
        173: "-",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'",
      };
      const I = { 16: "shift", 17: "ctrl", 18: "alt", 91: "meta", 93: "meta" };
      const A = { 0: "", 1: "left", 2: "middle", 3: "right" };
      const M =
        "active expanded focus folder lazy radiogroup selected unselectable unselectableIgnore".split(
          " ",
        );
      const O = {};
      const P = "columns types".split(" ");
      var F =
        "checkbox expanded extraClasses folder icon iconTooltip key lazy partsel radiogroup refKey selected statusNodeType title tooltip type unselectable unselectableIgnore unselectableStatus".split(
          " ",
        );
      var L = {};
      const H = {};
      var R = { active: !0, children: !0, data: !0, focus: !0 };
      for (d = 0; d < M.length; d++) O[M[d]] = !0;
      for (d = 0; d < F.length; d++) {
        (n = F[d]),
          (L[n] = !0),
          n !== n.toLowerCase() && (H[n.toLowerCase()] = n);
      }
      const $ = Array.isArray;
      return (
        w(x.ui, "Fancytree requires jQuery UI (http://jqueryui.com)"),
        Date.now ||
          (Date.now = function q() {
            return new Date().getTime();
          }),
        (u.prototype = {
          _findDirectChild: function (e) {
            let t;
            let n;
            const i = this.children;
            if (i) {
              if (typeof e === "string") {
                for (t = 0, n = i.length; t < n; t++) {
                  if (i[t].key === e) return i[t];
                }
              } else {
                if (typeof e === "number") return this.children[e];
                if (e.parent === this) return e;
              }
            }
            return null;
          },
          _setChildren: function (e) {
            w(
              e && (!this.children || this.children.length === 0),
              "only init supported",
            ),
              (this.children = []);
            for (let t = 0, n = e.length; t < n; t++) {
              this.children.push(new u(this, e[t]));
            }
            this.tree._callHook(
              "treeStructureChanged",
              this.tree,
              "setChildren",
            );
          },
          addChildren: function (e, t) {
            let n;
            let i;
            let r;
            const o = this.getFirstChild();
            const s = this.getLastChild();
            let a = null;
            const l = [];
            for (
              x.isPlainObject(e) && (e = [e]),
                this.children || (this.children = []),
                n = 0,
                i = e.length;
              n < i;
              n++
            ) {
              l.push(new u(this, e[n]));
            }
            if (
              ((a = l[0]),
              t == null
                ? (this.children = this.children.concat(l))
                : ((t = this._findDirectChild(t)),
                  w(
                    (r = x.inArray(t, this.children)) >= 0,
                    "insertBefore must be an existing child",
                  ),
                  this.children.splice.apply(this.children, [r, 0].concat(l))),
              o && !t)
            ) {
              for (n = 0, i = l.length; n < i; n++) l[n].render();
              o !== this.getFirstChild() && o.renderStatus(),
                s !== this.getLastChild() && s.renderStatus();
            } else (!this.parent || this.parent.ul || this.tr) && this.render();
            return (
              this.tree.options.selectMode === 3 &&
                this.fixSelection3FromEndNodes(),
              this.triggerModifyChild("add", l.length === 1 ? l[0] : null),
              a
            );
          },
          addClass: function (e) {
            return this.toggleClass(e, !0);
          },
          addNode: function (e, t) {
            switch (((t !== undefined && t !== "over") || (t = "child"), t)) {
              case "after":
                return this.getParent().addChildren(e, this.getNextSibling());
              case "before":
                return this.getParent().addChildren(e, this);
              case "firstChild":
                var n = this.children ? this.children[0] : null;
                return this.addChildren(e, n);
              case "child":
              case "over":
                return this.addChildren(e);
            }
            w(!1, "Invalid mode: " + t);
          },
          addPagingNode: function (e, t) {
            let n, i;
            if (((t = t || "child"), !1 !== e)) {
              return (
                (e = x.extend(
                  {
                    title: this.tree.options.strings.moreData,
                    statusNodeType: "paging",
                    icon: !1,
                  },
                  e,
                )),
                (this.partload = !0),
                this.addNode(e, t)
              );
            }
            for (n = this.children.length - 1; n >= 0; n--) {
              (i = this.children[n]).statusNodeType === "paging" &&
                this.removeChild(i);
            }
            this.partload = !1;
          },
          appendSibling: function (e) {
            return this.addNode(e, "after");
          },
          applyCommand: function (e, t) {
            return this.tree.applyCommand(e, this, t);
          },
          applyPatch: function (e) {
            if (e === null) return this.remove(), C(this);
            let t;
            let n;
            const i = { children: !0, expanded: !0, parent: !0 };
            for (t in e) {
              v(e, t) &&
                ((n = e[t]),
                i[t] || f(n) || (L[t] ? (this[t] = n) : (this.data[t] = n)));
            }
            return (
              v(e, "children") &&
                (this.removeChildren(),
                e.children && this._setChildren(e.children)),
              this.isVisible() && (this.renderTitle(), this.renderStatus()),
              v(e, "expanded") ? this.setExpanded(e.expanded) : C(this)
            );
          },
          collapseSiblings: function () {
            return this.tree._callHook("nodeCollapseSiblings", this);
          },
          copyTo: function (e, t, n) {
            return e.addNode(this.toDict(!0, n), t);
          },
          countChildren: function (e) {
            let t;
            let n;
            let i;
            const r = this.children;
            if (!r) return 0;
            if (((i = r.length), !1 !== e)) {
              for (t = 0, n = i; t < n; t++) i += r[t].countChildren();
            }
            return i;
          },
          debug: function () {
            this.tree.options.debugLevel >= 4 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          discard: function () {
            return (
              this.warn(
                "FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.",
              ),
              this.resetLazy()
            );
          },
          discardMarkup: function (e) {
            const t = e ? "nodeRemoveMarkup" : "nodeRemoveChildMarkup";
            this.tree._callHook(t, this);
          },
          error: function () {
            this.tree.options.debugLevel >= 1 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("error", arguments));
          },
          findAll: function (t) {
            t = f(t) ? t : i(t);
            const n = [];
            return (
              this.visit(function (e) {
                t(e) && n.push(e);
              }),
              n
            );
          },
          findFirst: function (t) {
            t = f(t) ? t : i(t);
            let n = null;
            return (
              this.visit(function (e) {
                if (t(e)) return (n = e), !1;
              }),
              n
            );
          },
          findRelatedNode: function (e, t) {
            return this.tree.findRelatedNode(this, e, t);
          },
          _changeSelectStatusAttrs: function (e) {
            let t = !1;
            const n = this.tree.options;
            const i = S.evalOption("unselectable", this, this, n, !1);
            const r = S.evalOption(
              "unselectableStatus",
              this,
              this,
              n,
              undefined,
            );
            switch ((i && r != null && (e = r), e)) {
              case !1:
                (t = this.selected || this.partsel),
                  (this.selected = !1),
                  (this.partsel = !1);
                break;
              case !0:
                (t = !this.selected || !this.partsel),
                  (this.selected = !0),
                  (this.partsel = !0);
                break;
              case undefined:
                (t = this.selected || !this.partsel),
                  (this.selected = !1),
                  (this.partsel = !0);
                break;
              default:
                w(!1, "invalid state: " + e);
            }
            return t && this.renderStatus(), t;
          },
          fixSelection3AfterClick: function (e) {
            const t = this.isSelected();
            this.visit(function (e) {
              if ((e._changeSelectStatusAttrs(t), e.radiogroup)) return "skip";
            }),
              this.fixSelection3FromEndNodes(e);
          },
          fixSelection3FromEndNodes: function () {
            function u(e) {
              let t;
              let n;
              let i;
              let r;
              let o;
              let s;
              let a;
              let l;
              const c = e.children;
              if (c && c.length) {
                for (a = !(s = !0), t = 0, n = c.length; t < n; t++) {
                  (r = u((i = c[t]))),
                    S.evalOption("unselectableIgnore", i, i, d, !1) ||
                      (!1 !== r && (a = !0), !0 !== r && (s = !1));
                }
                o = !!s || (!!a && undefined);
              } else {
                o =
                  (l = S.evalOption(
                    "unselectableStatus",
                    e,
                    e,
                    d,
                    undefined,
                  )) == null
                    ? !!e.selected
                    : !!l;
              }
              return (
                e.partsel &&
                  !e.selected &&
                  e.lazy &&
                  e.children == null &&
                  (o = undefined),
                e._changeSelectStatusAttrs(o),
                o
              );
            }
            var d = this.tree.options;
            w(d.selectMode === 3, "expected selectMode 3"),
              u(this),
              this.visitParents(function (e) {
                let t;
                let n;
                let i;
                let r;
                let o;
                const s = e.children;
                let a = !0;
                let l = !1;
                for (t = 0, n = s.length; t < n; t++) {
                  (i = s[t]),
                    S.evalOption("unselectableIgnore", i, i, d, !1) ||
                      (((r =
                        (o = S.evalOption(
                          "unselectableStatus",
                          i,
                          i,
                          d,
                          undefined,
                        )) == null
                          ? !!i.selected
                          : !!o) ||
                        i.partsel) &&
                        (l = !0),
                      r || (a = !1));
                }
                (r = !!a || (!!l && undefined)), e._changeSelectStatusAttrs(r);
              });
          },
          fromDict: function (e) {
            for (const t in e) {
              L[t]
                ? (this[t] = e[t])
                : t === "data"
                  ? x.extend(this.data, e.data)
                  : f(e[t]) || R[t] || (this.data[t] = e[t]);
            }
            e.children && (this.removeChildren(), this.addChildren(e.children)),
              this.renderTitle();
          },
          getChildren: function () {
            return this.hasChildren() === undefined ? undefined : this.children;
          },
          getFirstChild: function () {
            return this.children ? this.children[0] : null;
          },
          getIndex: function () {
            return x.inArray(this, this.parent.children);
          },
          getIndexHier: function (e, n) {
            e = e || ".";
            let i;
            const r = [];
            return (
              x.each(this.getParentList(!1, !0), function (e, t) {
                (i = "" + (t.getIndex() + 1)),
                  n && (i = ("0000000" + i).substr(-n)),
                  r.push(i);
              }),
              r.join(e)
            );
          },
          getKeyPath: function (e) {
            const t = this.tree.options.keyPathSeparator;
            return t + this.getPath(!e, "key", t);
          },
          getLastChild: function () {
            return this.children
              ? this.children[this.children.length - 1]
              : null;
          },
          getLevel: function () {
            for (var e = 0, t = this.parent; t; ) e++, (t = t.parent);
            return e;
          },
          getNextSibling: function () {
            if (this.parent) {
              let e;
              let t;
              const n = this.parent.children;
              for (e = 0, t = n.length - 1; e < t; e++) {
                if (n[e] === this) return n[e + 1];
              }
            }
            return null;
          },
          getParent: function () {
            return this.parent;
          },
          getParentList: function (e, t) {
            for (var n = [], i = t ? this : this.parent; i; ) {
              (e || i.parent) && n.unshift(i), (i = i.parent);
            }
            return n;
          },
          getPath: function (e, t, n) {
            (e = !1 !== e), (n = n || "/");
            let i;
            const r = [];
            const o = f((t = t || "title"));
            return (
              this.visitParents(function (e) {
                e.parent && ((i = o ? t(e) : e[t]), r.unshift(i));
              }, e),
              r.join(n)
            );
          },
          getPrevSibling: function () {
            if (this.parent) {
              let e;
              let t;
              const n = this.parent.children;
              for (e = 1, t = n.length; e < t; e++) {
                if (n[e] === this) return n[e - 1];
              }
            }
            return null;
          },
          getSelectedNodes: function (t) {
            const n = [];
            return (
              this.visit(function (e) {
                if (e.selected && (n.push(e), !0 === t)) return "skip";
              }),
              n
            );
          },
          hasChildren: function () {
            return this.lazy
              ? this.children == null
                ? undefined
                : this.children.length !== 0 &&
                  (this.children.length !== 1 ||
                    !this.children[0].isStatusNode() ||
                    undefined)
              : !(!this.children || !this.children.length);
          },
          hasClass: function (e) {
            return (
              (" " + (this.extraClasses || "") + " ").indexOf(" " + e + " ") >=
              0
            );
          },
          hasFocus: function () {
            return this.tree.hasFocus() && this.tree.focusNode === this;
          },
          info: function () {
            this.tree.options.debugLevel >= 3 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          isActive: function () {
            return this.tree.activeNode === this;
          },
          isBelowOf: function (e) {
            return this.getIndexHier(".", 5) > e.getIndexHier(".", 5);
          },
          isChildOf: function (e) {
            return this.parent && this.parent === e;
          },
          isDescendantOf: function (e) {
            if (!e || e.tree !== this.tree) return !1;
            for (let t = this.parent; t; ) {
              if (t === e) return !0;
              t === t.parent && x.error("Recursive parent link: " + t),
                (t = t.parent);
            }
            return !1;
          },
          isExpanded: function () {
            return !!this.expanded;
          },
          isFirstSibling: function () {
            const e = this.parent;
            return !e || e.children[0] === this;
          },
          isFolder: function () {
            return !!this.folder;
          },
          isLastSibling: function () {
            const e = this.parent;
            return !e || e.children[e.children.length - 1] === this;
          },
          isLazy: function () {
            return !!this.lazy;
          },
          isLoaded: function () {
            return !this.lazy || this.hasChildren() !== undefined;
          },
          isLoading: function () {
            return !!this._isLoading;
          },
          isRoot: function () {
            return this.isRootNode();
          },
          isPartsel: function () {
            return !this.selected && !!this.partsel;
          },
          isPartload: function () {
            return !!this.partload;
          },
          isRootNode: function () {
            return this.tree.rootNode === this;
          },
          isSelected: function () {
            return !!this.selected;
          },
          isStatusNode: function () {
            return !!this.statusNodeType;
          },
          isPagingNode: function () {
            return this.statusNodeType === "paging";
          },
          isTopLevel: function () {
            return this.tree.rootNode === this.parent;
          },
          isUndefined: function () {
            return this.hasChildren() === undefined;
          },
          isVisible: function () {
            let e;
            let t;
            const n = this.tree.enableFilter;
            const i = this.getParentList(!1, !1);
            if (n && !this.match && !this.subMatchCount) return !1;
            for (e = 0, t = i.length; e < t; e++) if (!i[e].expanded) return !1;
            return !0;
          },
          lazyLoad: function () {
            x.error(
              "FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.",
            );
          },
          load: function (e) {
            let t;
            let n;
            const i = this;
            const r = this.isExpanded();
            return (
              w(this.isLazy(), "load() requires a lazy node"),
              e || this.isUndefined()
                ? (this.isLoaded() && this.resetLazy(),
                  !1 === (n = this.tree._triggerNodeEvent("lazyLoad", this))
                    ? C(this)
                    : (w(
                        typeof n !== "boolean",
                        "lazyLoad event must return source in data.result",
                      ),
                      (t = this.tree._callHook("nodeLoadChildren", this, n)),
                      r
                        ? ((this.expanded = !0),
                          t.always(function () {
                            i.render();
                          }))
                        : t.always(function () {
                            i.renderStatus();
                          }),
                      t))
                : C(this)
            );
          },
          makeVisible: function (e) {
            let t;
            const n = this;
            const i = [];
            const r = new x.Deferred();
            const o = this.getParentList(!1, !1);
            const s = o.length;
            const a = !(e && !0 === e.noAnimation);
            const l = !(e && !1 === e.scrollIntoView);
            for (t = s - 1; t >= 0; t--) i.push(o[t].setExpanded(!0, e));
            return (
              x.when.apply(x, i).done(function () {
                l
                  ? n.scrollIntoView(a).done(function () {
                      r.resolve();
                    })
                  : r.resolve();
              }),
              r.promise()
            );
          },
          moveTo: function (t, e, n) {
            e === undefined || e === "over"
              ? (e = "child")
              : e === "firstChild" &&
                (t.children && t.children.length
                  ? ((e = "before"), (t = t.children[0]))
                  : (e = "child"));
            let i;
            const r = this.tree;
            const o = this.parent;
            const s = e === "child" ? t : t.parent;
            if (this !== t) {
              if (
                (this.parent
                  ? s.isDescendantOf(this) &&
                    x.error("Cannot move a node to its own descendant")
                  : x.error("Cannot move system root"),
                s !== o && o.triggerModifyChild("remove", this),
                this.parent.children.length === 1)
              ) {
                if (this.parent === s) return;
                (this.parent.children = this.parent.lazy ? [] : null),
                  (this.parent.expanded = !1);
              } else {
                w(
                  (i = x.inArray(this, this.parent.children)) >= 0,
                  "invalid source parent",
                ),
                  this.parent.children.splice(i, 1);
              }
              if ((this.parent = s).hasChildren()) {
                switch (e) {
                  case "child":
                    s.children.push(this);
                    break;
                  case "before":
                    w(
                      (i = x.inArray(t, s.children)) >= 0,
                      "invalid target parent",
                    ),
                      s.children.splice(i, 0, this);
                    break;
                  case "after":
                    w(
                      (i = x.inArray(t, s.children)) >= 0,
                      "invalid target parent",
                    ),
                      s.children.splice(i + 1, 0, this);
                    break;
                  default:
                    x.error("Invalid mode " + e);
                }
              } else s.children = [this];
              n && t.visit(n, !0),
                s === o
                  ? s.triggerModifyChild("move", this)
                  : s.triggerModifyChild("add", this),
                r !== t.tree &&
                  (this.warn("Cross-tree moveTo is experimental!"),
                  this.visit(function (e) {
                    e.tree = t.tree;
                  }, !0)),
                r._callHook("treeStructureChanged", r, "moveTo"),
                o.isDescendantOf(s) || o.render(),
                s.isDescendantOf(o) || s === o || s.render();
            }
          },
          navigate: function (e, t) {
            let n;
            const i = x.ui.keyCode;
            switch (e) {
              case "left":
              case i.LEFT:
                if (this.expanded) return this.setExpanded(!1);
                break;
              case "right":
              case i.RIGHT:
                if (!this.expanded && (this.children || this.lazy)) {
                  return this.setExpanded();
                }
            }
            if ((n = this.findRelatedNode(e))) {
              try {
                n.makeVisible({ scrollIntoView: !1 });
              } catch (r) {}
              return !1 === t ? (n.setFocus(), C()) : n.setActive();
            }
            return this.warn("Could not find related node '" + e + "'."), C();
          },
          remove: function () {
            return this.parent.removeChild(this);
          },
          removeChild: function (e) {
            return this.tree._callHook("nodeRemoveChild", this, e);
          },
          removeChildren: function () {
            return this.tree._callHook("nodeRemoveChildren", this);
          },
          removeClass: function (e) {
            return this.toggleClass(e, !1);
          },
          render: function (e, t) {
            return this.tree._callHook("nodeRender", this, e, t);
          },
          renderTitle: function () {
            return this.tree._callHook("nodeRenderTitle", this);
          },
          renderStatus: function () {
            return this.tree._callHook("nodeRenderStatus", this);
          },
          replaceWith: function (e) {
            let t;
            const n = this.parent;
            const i = x.inArray(this, n.children);
            const r = this;
            return (
              w(
                this.isPagingNode(),
                "replaceWith() currently requires a paging status node",
              ),
              (t = this.tree._callHook("nodeLoadChildren", this, e))
                .done(function () {
                  const e = r.children;
                  for (d = 0; d < e.length; d++) e[d].parent = n;
                  n.children.splice.apply(n.children, [i + 1, 0].concat(e)),
                    (r.children = null),
                    r.remove(),
                    n.render();
                })
                .fail(function () {
                  r.setExpanded();
                }),
              t
            );
          },
          resetLazy: function () {
            this.removeChildren(),
              (this.expanded = !1),
              (this.lazy = !0),
              (this.children = undefined),
              this.renderStatus();
          },
          scheduleAction: function (e, t) {
            this.tree.timer &&
              (clearTimeout(this.tree.timer),
              this.tree.debug("clearTimeout(%o)", this.tree.timer)),
              (this.tree.timer = null);
            const n = this;
            switch (e) {
              case "cancel":
                break;
              case "expand":
                this.tree.timer = setTimeout(function () {
                  n.tree.debug("setTimeout: trigger expand"), n.setExpanded(!0);
                }, t);
                break;
              case "activate":
                this.tree.timer = setTimeout(function () {
                  n.tree.debug("setTimeout: trigger activate"), n.setActive(!0);
                }, t);
                break;
              default:
                x.error("Invalid mode " + e);
            }
          },
          scrollIntoView: function (e, t) {
            if (t !== undefined && _(t)) {
              throw Error(
                "scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.",
              );
            }
            const n = x.extend(
              {
                effects: !0 === e ? { duration: 200, queue: !1 } : e,
                scrollOfs: this.tree.options.scrollOfs,
                scrollParent: this.tree.options.scrollParent,
                topNode: null,
              },
              t,
            );
            let i = n.scrollParent;
            const r = this.tree.$container;
            const o = r.css("overflow-y");
            i
              ? i.jquery || (i = x(i))
              : (i = this.tree.tbody
                  ? r.scrollParent()
                  : o === "scroll" || o === "auto"
                    ? r
                    : r.scrollParent()),
              (i[0] !== document && i[0] !== document.body) ||
                (this.debug(
                  "scrollIntoView(): normalizing scrollParent to 'window':",
                  i[0],
                ),
                (i = x(window)));
            let s;
            let a;
            let l;
            const c = new x.Deferred();
            const u = this;
            const d = x(this.span).height();
            const h = n.scrollOfs.top || 0;
            const p = n.scrollOfs.bottom || 0;
            let f = i.height();
            const g = i.scrollTop();
            let m = i;
            const v = i[0] === window;
            const y = n.topNode || null;
            let b = null;
            return this.isRootNode() || !this.isVisible()
              ? (this.info("scrollIntoView(): node is invisible."), C())
              : (v
                  ? ((a = x(this.span).offset().top),
                    (s = y && y.span ? x(y.span).offset().top : 0),
                    (m = x("html,body")))
                  : (w(
                      i[0] !== document && i[0] !== document.body,
                      "scrollParent should be a simple element or `window`, not document or body.",
                    ),
                    (l = i.offset().top),
                    (a = x(this.span).offset().top - l + g),
                    (s = y ? x(y.span).offset().top - l + g : 0),
                    (f -= Math.max(0, i.innerHeight() - i[0].clientHeight))),
                a < g + h
                  ? (b = a - h)
                  : g + f - p < a + d &&
                    ((b = a + d - f + p),
                    y &&
                      (w(
                        y.isRootNode() || y.isVisible(),
                        "topNode must be visible",
                      ),
                      s < b && (b = s - h))),
                b === null
                  ? c.resolveWith(this)
                  : n.effects
                    ? ((n.effects.complete = function () {
                        c.resolveWith(u);
                      }),
                      m.stop(!0).animate({ scrollTop: b }, n.effects))
                    : ((m[0].scrollTop = b), c.resolveWith(this)),
                c.promise());
          },
          setActive: function (e, t) {
            return this.tree._callHook("nodeSetActive", this, e, t);
          },
          setExpanded: function (e, t) {
            return this.tree._callHook("nodeSetExpanded", this, e, t);
          },
          setFocus: function (e) {
            return this.tree._callHook("nodeSetFocus", this, e);
          },
          setSelected: function (e, t) {
            return this.tree._callHook("nodeSetSelected", this, e, t);
          },
          setStatus: function (e, t, n) {
            return this.tree._callHook("nodeSetStatus", this, e, t, n);
          },
          setTitle: function (e) {
            (this.title = e), this.renderTitle(), this.triggerModify("rename");
          },
          sortChildren: function (e, t) {
            let n;
            let i;
            const r = this.children;
            if (r) {
              if (
                ((e =
                  e ||
                  function (e, t) {
                    const n = e.title.toLowerCase();
                    const i = t.title.toLowerCase();
                    return n === i ? 0 : i < n ? 1 : -1;
                  }),
                r.sort(e),
                t)
              ) {
                for (n = 0, i = r.length; n < i; n++) {
                  r[n].children && r[n].sortChildren(e, "$norender$");
                }
              }
              t !== "$norender$" && this.render(),
                this.triggerModifyChild("sort");
            }
          },
          toDict: function (e, t) {
            let n;
            let i;
            let r;
            let o;
            const s = {};
            const a = this;
            if (
              (x.each(F, function (e, t) {
                (a[t] || !1 === a[t]) && (s[t] = a[t]);
              }),
              x.isEmptyObject(this.data) ||
                ((s.data = x.extend({}, this.data)),
                x.isEmptyObject(s.data) && delete s.data),
              t)
            ) {
              if (!1 === (o = t(s, a))) return !1;
              o === "skip" && (e = !1);
            }
            if (e && $(this.children)) {
              for (
                s.children = [], n = 0, i = this.children.length;
                n < i;
                n++
              ) {
                (r = this.children[n]).isStatusNode() ||
                  (!1 !== (o = r.toDict(!0, t)) && s.children.push(o));
              }
            }
            return s;
          },
          toggleClass: function (e, t) {
            let n;
            let i;
            const r = /\S+/g;
            const o = e.match(r) || [];
            let s = 0;
            let a = !1;
            const l = this[this.tree.statusClassPropName];
            let c = " " + (this.extraClasses || "") + " ";
            for (l && x(l).toggleClass(e, t); (n = o[s++]); ) {
              if (
                ((i = c.indexOf(" " + n + " ") >= 0),
                (t = t === undefined ? !i : !!t))
              ) {
                i || ((c += n + " "), (a = !0));
              } else {
                for (; c.indexOf(" " + n + " ") > -1; ) {
                  c = c.replace(" " + n + " ", " ");
                }
              }
            }
            return (this.extraClasses = m(c)), a;
          },
          toggleExpanded: function () {
            return this.tree._callHook("nodeToggleExpanded", this);
          },
          toggleSelected: function () {
            return this.tree._callHook("nodeToggleSelected", this);
          },
          toString: function () {
            return "FancytreeNode@" + this.key + "[title='" + this.title + "']";
          },
          triggerModifyChild: function (e, t, n) {
            let i;
            const r = this.tree.options.modifyChild;
            r &&
              (t &&
                t.parent !== this &&
                x.error("childNode " + t + " is not a child of " + this),
              (i = {
                node: this,
                tree: this.tree,
                operation: e,
                childNode: t || null,
              }),
              n && x.extend(i, n),
              r({ type: "modifyChild" }, i));
          },
          triggerModify: function (e, t) {
            this.parent.triggerModifyChild(e, this, t);
          },
          visit: function (e, t) {
            let n;
            let i;
            let r = !0;
            const o = this.children;
            if (!0 === t && (!1 === (r = e(this)) || r === "skip")) return r;
            if (o) {
              for (
                n = 0, i = o.length;
                n < i && !1 !== (r = o[n].visit(e, !0));
                n++
              );
            }
            return r;
          },
          visitAndLoad: function (n, e, t) {
            let i;
            let r;
            let o;
            const s = this;
            return !n || !0 !== e || (!1 !== (r = n(s)) && r !== "skip")
              ? s.children || s.lazy
                ? ((i = new x.Deferred()),
                  (o = []),
                  s.load().done(function () {
                    for (let e = 0, t = s.children.length; e < t; e++) {
                      if (!1 === (r = s.children[e].visitAndLoad(n, !0, !0))) {
                        i.reject();
                        break;
                      }
                      r !== "skip" && o.push(r);
                    }
                    x.when.apply(this, o).then(function () {
                      i.resolve();
                    });
                  }),
                  i.promise())
                : C()
              : t
                ? r
                : C();
          },
          visitParents: function (e, t) {
            if (t && !1 === e(this)) return !1;
            for (let n = this.parent; n; ) {
              if (!1 === e(n)) return !1;
              n = n.parent;
            }
            return !0;
          },
          visitSiblings: function (e, t) {
            let n;
            let i;
            let r;
            const o = this.parent.children;
            for (n = 0, i = o.length; n < i; n++) {
              if (((r = o[n]), (t || r !== this) && !1 === e(r))) return !1;
            }
            return !0;
          },
          warn: function () {
            this.tree.options.debugLevel >= 2 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments));
          },
        }),
        (l.prototype = {
          _makeHookContext: function (e, t, n) {
            let i, r;
            return (
              e.node !== undefined
                ? (t && e.originalEvent !== t && x.error("invalid args"),
                  (i = e))
                : e.tree
                  ? (i = {
                      node: e,
                      tree: (r = e.tree),
                      widget: r.widget,
                      options: r.widget.options,
                      originalEvent: t,
                      typeInfo: r.types[e.type] || {},
                    })
                  : e.widget
                    ? (i = {
                        node: null,
                        tree: e,
                        widget: e.widget,
                        options: e.widget.options,
                        originalEvent: t,
                      })
                    : x.error("invalid args"),
              n && x.extend(i, n),
              i
            );
          },
          _callHook: function (e, t) {
            const n = this._makeHookContext(t);
            const i = this[e];
            const r = Array.prototype.slice.call(arguments, 2);
            return (
              f(i) || x.error("_callHook('" + e + "') is not a function"),
              r.unshift(n),
              i.apply(this, r)
            );
          },
          _setExpiringValue: function (e, t, n) {
            this._tempCache[e] = { value: t, expire: Date.now() + (+n || 50) };
          },
          _getExpiringValue: function (e) {
            const t = this._tempCache[e];
            return t && t.expire > Date.now()
              ? t.value
              : (delete this._tempCache[e], null);
          },
          _usesExtension: function (e) {
            return x.inArray(e, this.options.extensions) >= 0;
          },
          _requireExtension: function (e, t, n, i) {
            n != null && (n = !!n);
            const r = this._local.name;
            const o = this.options.extensions;
            const s = x.inArray(e, o) < x.inArray(r, o);
            const a = t && this.ext[e] == null;
            const l = !a && n != null && n !== s;
            return (
              w(
                r && r !== e,
                "invalid or same name '" + r + "' (require yourself?)",
              ),
              (!a && !l) ||
                (i ||
                  (a || t
                    ? ((i = "'" + r + "' extension requires '" + e + "'"),
                      l &&
                        (i +=
                          " to be registered " +
                          (n ? "before" : "after") +
                          " itself"))
                    : (i =
                        "If used together, `" +
                        e +
                        "` must be registered " +
                        (n ? "before" : "after") +
                        " `" +
                        r +
                        "`")),
                x.error(i),
                !1)
            );
          },
          activateKey: function (e, t) {
            const n = this.getNodeByKey(e);
            return (
              n
                ? n.setActive(!0, t)
                : this.activeNode && this.activeNode.setActive(!1, t),
              n
            );
          },
          addPagingNode: function (e, t) {
            return this.rootNode.addPagingNode(e, t);
          },
          applyCommand: function (e, t) {
            let n;
            switch (((t = t || this.getActiveNode()), e)) {
              case "moveUp":
                (n = t.getPrevSibling()) &&
                  (t.moveTo(n, "before"), t.setActive());
                break;
              case "moveDown":
                (n = t.getNextSibling()) &&
                  (t.moveTo(n, "after"), t.setActive());
                break;
              case "indent":
                (n = t.getPrevSibling()) &&
                  (t.moveTo(n, "child"), n.setExpanded(), t.setActive());
                break;
              case "outdent":
                t.isTopLevel() ||
                  (t.moveTo(t.getParent(), "after"), t.setActive());
                break;
              case "remove":
                (n = t.getPrevSibling() || t.getParent()),
                  t.remove(),
                  n && n.setActive();
                break;
              case "addChild":
                t.editCreateNode("child", "");
                break;
              case "addSibling":
                t.editCreateNode("after", "");
                break;
              case "rename":
                t.editStart();
                break;
              case "down":
              case "first":
              case "last":
              case "left":
              case "parent":
              case "right":
              case "up":
                return t.navigate(e);
              default:
                x.error("Unhandled command: '" + e + "'");
            }
          },
          applyPatch: function (e) {
            let t;
            let n;
            let i;
            let r;
            let o;
            let s;
            const a = e.length;
            const l = [];
            for (n = 0; n < a; n++) {
              w(
                (i = e[n]).length === 2,
                "patchList must be an array of length-2-arrays",
              ),
                (r = i[0]),
                (o = i[1]),
                (s = r === null ? this.rootNode : this.getNodeByKey(r))
                  ? ((t = new x.Deferred()),
                    l.push(t),
                    s.applyPatch(o).always(y(t, s)))
                  : this.warn("could not find node with key '" + r + "'");
            }
            return x.when.apply(x, l).promise();
          },
          clear: function () {
            this._callHook("treeClear", this);
          },
          count: function () {
            return this.rootNode.countChildren();
          },
          debug: function () {
            this.options.debugLevel >= 4 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          destroy: function () {
            this.widget.destroy();
          },
          enable: function (e) {
            !1 === e ? this.widget.disable() : this.widget.enable();
          },
          enableUpdate: function (e) {
            return (
              (e = !1 !== e),
              !!this._enableUpdate == !!e
                ? e
                : ((this._enableUpdate = e)
                    ? (this.debug("enableUpdate(true): redraw "),
                      this._callHook(
                        "treeStructureChanged",
                        this,
                        "enableUpdate",
                      ),
                      this.render())
                    : this.debug("enableUpdate(false)..."),
                  !e)
            );
          },
          error: function () {
            this.options.debugLevel >= 1 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("error", arguments));
          },
          expandAll: function (t, n) {
            const e = this.enableUpdate(!1);
            (t = !1 !== t),
              this.visit(function (e) {
                !1 !== e.hasChildren() &&
                  e.isExpanded() !== t &&
                  e.setExpanded(t, n);
              }),
              this.enableUpdate(e);
          },
          findAll: function (e) {
            return this.rootNode.findAll(e);
          },
          findFirst: function (e) {
            return this.rootNode.findFirst(e);
          },
          findNextNode: function (t, n) {
            function e(e) {
              if ((t(e) && (i = e), i || e === n)) return !1;
            }
            var i = null;
            const r = this.getFirstChild();
            return (
              (t = typeof t === "string" ? a(t) : t),
              (n = n || r),
              this.visitRows(e, { start: n, includeSelf: !1 }),
              i || n === r || this.visitRows(e, { start: r, includeSelf: !0 }),
              i
            );
          },
          findRelatedNode: function (e, t) {
            let n = null;
            const i = x.ui.keyCode;
            switch (t) {
              case "parent":
              case i.BACKSPACE:
                e.parent && e.parent.parent && (n = e.parent);
                break;
              case "first":
              case i.HOME:
                this.visit(function (e) {
                  if (e.isVisible()) return (n = e), !1;
                });
                break;
              case "last":
              case i.END:
                this.visit(function (e) {
                  e.isVisible() && (n = e);
                });
                break;
              case "left":
              case i.LEFT:
                e.expanded
                  ? e.setExpanded(!1)
                  : e.parent && e.parent.parent && (n = e.parent);
                break;
              case "right":
              case i.RIGHT:
                e.expanded || (!e.children && !e.lazy)
                  ? e.children && e.children.length && (n = e.children[0])
                  : (e.setExpanded(), (n = e));
                break;
              case "up":
              case i.UP:
                this.visitRows(
                  function (e) {
                    return (n = e), !1;
                  },
                  { start: e, reverse: !0, includeSelf: !1 },
                );
                break;
              case "down":
              case i.DOWN:
                this.visitRows(
                  function (e) {
                    return (n = e), !1;
                  },
                  { start: e, includeSelf: !1 },
                );
                break;
              default:
                this.tree.warn("Unknown relation '" + t + "'.");
            }
            return n;
          },
          generateFormElements: function (e, t, n) {
            function i(e) {
              l.append(
                x("<input>", {
                  type: "checkbox",
                  name: o,
                  value: e.key,
                  checked: !0,
                }),
              );
            }
            n = n || {};
            let r;
            var o = typeof e === "string" ? e : "ft_" + this._id + "[]";
            const s = typeof t === "string" ? t : "ft_" + this._id + "_active";
            const a = "fancytree_result_" + this._id;
            var l = x("#" + a);
            const c = this.options.selectMode === 3 && !1 !== n.stopOnParents;
            l.length
              ? l.empty()
              : (l = x("<div>", { id: a }).hide().insertAfter(this.$container)),
              !1 !== t &&
                this.activeNode &&
                l.append(
                  x("<input>", {
                    type: "radio",
                    name: s,
                    value: this.activeNode.key,
                    checked: !0,
                  }),
                ),
              n.filter
                ? this.visit(function (e) {
                    const t = n.filter(e);
                    if (t === "skip") return t;
                    !1 !== t && i(e);
                  })
                : !1 !== e &&
                  ((r = this.getSelectedNodes(c)),
                  x.each(r, function (e, t) {
                    i(t);
                  }));
          },
          getActiveNode: function () {
            return this.activeNode;
          },
          getFirstChild: function () {
            return this.rootNode.getFirstChild();
          },
          getFocusNode: function () {
            return this.focusNode;
          },
          getOption: function (e) {
            return this.widget.option(e);
          },
          getNodeByKey: function (t, e) {
            let n, i;
            return !e &&
              (n = document.getElementById(this.options.idPrefix + t))
              ? n.ftnode
                ? n.ftnode
                : null
              : ((e = e || this.rootNode),
                (i = null),
                (t = "" + t),
                e.visit(function (e) {
                  if (e.key === t) return (i = e), !1;
                }, !0),
                i);
          },
          getRootNode: function () {
            return this.rootNode;
          },
          getSelectedNodes: function (e) {
            return this.rootNode.getSelectedNodes(e);
          },
          hasFocus: function () {
            return !!this._hasFocus;
          },
          info: function () {
            this.options.debugLevel >= 3 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          isLoading: function () {
            let t = !1;
            return (
              this.rootNode.visit(function (e) {
                if (e._isLoading || e._requestId) return !(t = !0);
              }, !0),
              t
            );
          },
          loadKeyPath: function (e, t) {
            let i;
            let n;
            let r;
            const o = this;
            const s = new x.Deferred();
            const a = this.getRootNode();
            const l = this.options.keyPathSeparator;
            const c = [];
            const u = x.extend({}, t);
            for (
              typeof t === "function"
                ? (i = t)
                : t && t.callback && (i = t.callback),
                u.callback = function (e, t, n) {
                  i && i.call(e, t, n),
                    s.notifyWith(e, [{ node: t, status: n }]);
                },
                u.matchKey == null &&
                  (u.matchKey = function (e, t) {
                    return e.key === t;
                  }),
                $(e) || (e = [e]),
                n = 0;
              n < e.length;
              n++
            ) {
              (r = e[n]).charAt(0) === l && (r = r.substr(1)),
                c.push(r.split(l));
            }
            return (
              setTimeout(function () {
                o._loadKeyPathImpl(s, u, a, c).done(function () {
                  s.resolve();
                });
              }, 0),
              s.promise()
            );
          },
          _loadKeyPathImpl: function (e, o, t, n) {
            function i(e, t) {
              let n;
              let i;
              const r = e.children;
              if (r) {
                for (n = 0, i = r.length; n < i; n++) {
                  if (o.matchKey(r[n], t)) return r[n];
                }
              }
              return null;
            }
            function r(e, t, n) {
              o.callback(m, t, "loading"),
                t
                  .load()
                  .done(function () {
                    m._loadKeyPathImpl.call(m, e, o, t, n).always(y(e, m));
                  })
                  .fail(function () {
                    m.warn("loadKeyPath: error loading lazy " + t),
                      o.callback(m, c, "error"),
                      e.rejectWith(m);
                  });
            }
            let s;
            let a;
            let l;
            let c;
            let u;
            let d;
            let h;
            let p;
            let f;
            let g;
            var m = this;
            for (h = {}, a = 0; a < n.length; a++) {
              for (f = n[a], p = t; f.length; ) {
                if (((l = f.shift()), !(c = i(p, l)))) {
                  this.warn(
                    "loadKeyPath: key not found: " + l + " (parent: " + p + ")",
                  ),
                    o.callback(this, l, "error");
                  break;
                }
                if (f.length === 0) {
                  o.callback(this, c, "ok");
                  break;
                }
                if (c.lazy && c.hasChildren() === undefined) {
                  o.callback(this, c, "loaded"),
                    h[(l = c.key)]
                      ? h[l].pathSegList.push(f)
                      : (h[l] = { parent: c, pathSegList: [f] });
                  break;
                }
                o.callback(this, c, "loaded"), (p = c);
              }
            }
            for (u in ((s = []), h)) {
              v(h, u) &&
                ((d = h[u]),
                (g = new x.Deferred()),
                s.push(g),
                r(g, d.parent, d.pathSegList));
            }
            return x.when.apply(x, s).promise();
          },
          reactivate: function (e) {
            let t;
            const n = this.activeNode;
            return n
              ? ((this.activeNode = null),
                (t = n.setActive(!0, { noFocus: !0 })),
                e && n.setFocus(),
                t)
              : C();
          },
          reload: function (e) {
            return (
              this._callHook("treeClear", this),
              this._callHook("treeLoad", this, e)
            );
          },
          render: function (e, t) {
            return this.rootNode.render(e, t);
          },
          selectAll: function (t) {
            this.visit(function (e) {
              e.setSelected(t);
            });
          },
          setFocus: function (e) {
            return this._callHook("treeSetFocus", this, e);
          },
          setOption: function (e, t) {
            return this.widget.option(e, t);
          },
          debugTime: function (e) {
            this.options.debugLevel >= 4 &&
              window.console.time(this + " - " + e);
          },
          debugTimeEnd: function (e) {
            this.options.debugLevel >= 4 &&
              window.console.timeEnd(this + " - " + e);
          },
          toDict: function (e, t) {
            const n = this.rootNode.toDict(!0, t);
            return e ? n : n.children;
          },
          toString: function () {
            return "Fancytree@" + this._id;
          },
          _triggerNodeEvent: function (e, t, n, i) {
            const r = this._makeHookContext(t, n, i);
            const o = this.widget._trigger(e, n, r);
            return !1 !== o && r.result !== undefined ? r.result : o;
          },
          _triggerTreeEvent: function (e, t, n) {
            const i = this._makeHookContext(this, t, n);
            const r = this.widget._trigger(e, t, i);
            return !1 !== r && i.result !== undefined ? i.result : r;
          },
          visit: function (e) {
            return this.rootNode.visit(e, !1);
          },
          visitRows: function (t, e) {
            if (!this.rootNode.hasChildren()) return !1;
            if (e && e.reverse) {
              return delete e.reverse, this._visitRowsUp(t, e);
            }
            let n;
            let i;
            let r;
            let o;
            let s = 0;
            let a = !1 === (e = e || {}).includeSelf;
            const l = !!e.includeHidden;
            const c = !l && this.enableFilter;
            let u = e.start || this.rootNode.children[0];
            for (r = u.parent; r; ) {
              for (
                w(
                  (i = (o = r.children).indexOf(u) + s) >= 0,
                  "Could not find " + u + " in parent's children: " + r,
                ),
                  n = i;
                n < o.length;
                n++
              ) {
                if (((u = o[n]), !c || u.match || u.subMatchCount)) {
                  if (!a && !1 === t(u)) return !1;
                  if (
                    ((a = !1),
                    u.children &&
                      u.children.length &&
                      (l || u.expanded) &&
                      !1 ===
                        u.visit(function (e) {
                          return !c || e.match || e.subMatchCount
                            ? !1 !== t(e) &&
                                (l || !e.children || e.expanded
                                  ? void 0
                                  : "skip")
                            : "skip";
                        }, !1))
                  ) {
                    return !1;
                  }
                }
              }
              (r = (u = r).parent), (s = 1);
            }
            return !0;
          },
          _visitRowsUp: function (e, t) {
            for (
              var n,
                i,
                r,
                o = !!t.includeHidden,
                s = t.start || this.rootNode.children[0];
              ;

            ) {
              if ((n = (r = s.parent).children)[0] === s) {
                if (!(s = r).parent) break;
                n = r.children;
              } else {
                for (
                  i = n.indexOf(s), s = n[i - 1];
                  (o || s.expanded) && s.children && s.children.length;

                ) {
                  s = (n = (r = s).children)[n.length - 1];
                }
              }
              if ((o || s.isVisible()) && !1 === e(s)) return !1;
            }
          },
          warn: function () {
            this.options.debugLevel >= 2 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments));
          },
        }),
        x.extend(l.prototype, {
          nodeClick: function (e) {
            let t;
            let n;
            const i = e.targetType;
            const r = e.node;
            if (i === "expander") {
              if (r.isLoading()) {
                return void r.debug("Got 2nd click while loading: ignored");
              }
              this._callHook("nodeToggleExpanded", e);
            } else if (i === "checkbox") {
              this._callHook("nodeToggleSelected", e),
                e.options.focusOnSelect &&
                  this._callHook("nodeSetFocus", e, !0);
            } else {
              if (((t = !(n = !1)), r.folder)) {
                switch (e.options.clickFolderMode) {
                  case 2:
                    t = !(n = !0);
                    break;
                  case 3:
                    n = t = !0;
                }
              }
              t &&
                (this.nodeSetFocus(e), this._callHook("nodeSetActive", e, !0)),
                n && this._callHook("nodeToggleExpanded", e);
            }
          },
          nodeCollapseSiblings: function (e, t) {
            let n;
            let i;
            let r;
            const o = e.node;
            if (o.parent) {
              for (i = 0, r = (n = o.parent.children).length; i < r; i++) {
                n[i] !== o &&
                  n[i].expanded &&
                  this._callHook("nodeSetExpanded", n[i], !1, t);
              }
            }
          },
          nodeDblclick: function (e) {
            e.targetType === "title" &&
              e.options.clickFolderMode === 4 &&
              this._callHook("nodeToggleExpanded", e),
              e.targetType === "title" && e.originalEvent.preventDefault();
          },
          nodeKeydown: function (e) {
            let t;
            let n;
            let i;
            const r = e.originalEvent;
            let o = e.node;
            const s = e.tree;
            const a = e.options;
            const l = r.which;
            const c = r.key || String.fromCharCode(l);
            const u = !!(r.altKey || r.ctrlKey || r.metaKey);
            const d = !I[l] && !E[l] && !u;
            const h = x(r.target);
            let p = !0;
            const f = !(r.ctrlKey || !a.autoActivate);
            if (
              (o ||
                ((i = this.getActiveNode() || this.getFirstChild()) &&
                  (i.setFocus(),
                  (o = e.node = this.focusNode).debug(
                    "Keydown force focus on active node",
                  ))),
              a.quicksearch && d && !h.is(":input:enabled"))
            ) {
              return (
                (n = Date.now()) - s.lastQuicksearchTime > 500 &&
                  (s.lastQuicksearchTerm = ""),
                (s.lastQuicksearchTime = n),
                (s.lastQuicksearchTerm += c),
                (t = s.findNextNode(
                  s.lastQuicksearchTerm,
                  s.getActiveNode(),
                )) && t.setActive(),
                void r.preventDefault()
              );
            }
            switch (S.eventToString(r)) {
              case "+":
              case "=":
                s.nodeSetExpanded(e, !0);
                break;
              case "-":
                s.nodeSetExpanded(e, !1);
                break;
              case "space":
                o.isPagingNode()
                  ? s._triggerNodeEvent("clickPaging", e, r)
                  : S.evalOption("checkbox", o, o, a, !1)
                    ? s.nodeToggleSelected(e)
                    : s.nodeSetActive(e, !0);
                break;
              case "return":
                s.nodeSetActive(e, !0);
                break;
              case "home":
              case "end":
              case "backspace":
              case "left":
              case "right":
              case "up":
              case "down":
                o.navigate(r.which, f);
                break;
              default:
                p = !1;
            }
            p && r.preventDefault();
          },
          nodeLoadChildren: function (r, o) {
            let t;
            let n;
            let s;
            let e = null;
            let i = !0;
            const a = r.tree;
            const l = r.node;
            const c = l.parent;
            const u = "nodeLoadChildren";
            const d = Date.now();
            return (
              f(o) &&
                w(
                  !f((o = o.call(a, { type: "source" }, r))),
                  "source callback must not return another function",
                ),
              f(o.then)
                ? (e = o)
                : o.url
                  ? (t = x.extend({}, r.options.ajax, o)).debugDelay
                    ? ((n = t.debugDelay),
                      delete t.debugDelay,
                      $(n) && (n = n[0] + Math.random() * (n[1] - n[0])),
                      l.warn(
                        "nodeLoadChildren waiting debugDelay " +
                          Math.round(n) +
                          " ms ...",
                      ),
                      (e = x.Deferred(function (e) {
                        setTimeout(function () {
                          x.ajax(t)
                            .done(function () {
                              e.resolveWith(this, arguments);
                            })
                            .fail(function () {
                              e.rejectWith(this, arguments);
                            });
                        }, n);
                      })))
                    : (e = x.ajax(t))
                  : x.isPlainObject(o) || $(o)
                    ? (i = !(e = {
                        then: function (e) {
                          e(o, null, null);
                        },
                      }))
                    : x.error("Invalid source type: " + o),
              l._requestId &&
                (l.warn(
                  "Recursive load request #" +
                    d +
                    " while #" +
                    l._requestId +
                    " is pending.",
                ),
                (l._requestId = d)),
              i && (a.debugTime(u), a.nodeSetStatus(r, "loading")),
              (s = new x.Deferred()),
              e.then(
                function (e) {
                  let t, n;
                  if (
                    ((o.dataType !== "json" && o.dataType !== "jsonp") ||
                      typeof e !== "string" ||
                      x.error(
                        "Ajax request returned a string (did you get the JSON dataType wrong?).",
                      ),
                    l._requestId && l._requestId > d)
                  ) {
                    s.rejectWith(this, [p]);
                  } else if (l.parent !== null || c === null) {
                    if (r.options.postProcess) {
                      try {
                        (n = a._triggerNodeEvent(
                          "postProcess",
                          r,
                          r.originalEvent,
                          { response: e, error: null, dataType: o.dataType },
                        )).error && a.warn("postProcess returned error:", n);
                      } catch (i) {
                        n = {
                          error: i,
                          message: "" + i,
                          details: "postProcess failed",
                        };
                      }
                      if (n.error) {
                        return (
                          (t = x.isPlainObject(n.error)
                            ? n.error
                            : { message: n.error }),
                          (t = a._makeHookContext(l, null, t)),
                          void s.rejectWith(this, [t])
                        );
                      }
                      ($(n) || (x.isPlainObject(n) && $(n.children))) &&
                        (e = n);
                    } else {
                      e &&
                        v(e, "d") &&
                        r.options.enableAspx &&
                        (r.options.enableAspx === 42 &&
                          a.warn(
                            "The default for enableAspx will change to `false` in the fututure. Pass `enableAspx: true` or implement postProcess to silence this warning.",
                          ),
                        (e = typeof e.d === "string" ? x.parseJSON(e.d) : e.d));
                    }
                    s.resolveWith(this, [e]);
                  } else s.rejectWith(this, [D]);
                },
                function (e, t, n) {
                  const i = a._makeHookContext(l, null, {
                    error: e,
                    args: Array.prototype.slice.call(arguments),
                    message: n,
                    details: e.status + ": " + n,
                  });
                  s.rejectWith(this, [i]);
                },
              ),
              s
                .done(function (e) {
                  let t, n, i;
                  a.nodeSetStatus(r, "ok"),
                    x.isPlainObject(e)
                      ? (w(
                          l.isRootNode(),
                          "source may only be an object for root nodes (expecting an array of child objects otherwise)",
                        ),
                        w(
                          $(e.children),
                          "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')",
                        ),
                        (t = (n = e).children),
                        delete n.children,
                        x.each(P, function (e, t) {
                          n[t] !== undefined && ((a[t] = n[t]), delete n[t]);
                        }),
                        x.extend(a.data, n))
                      : (t = e),
                    w($(t), "expected array of children"),
                    l._setChildren(t),
                    a.options.nodata &&
                      t.length === 0 &&
                      (f(a.options.nodata)
                        ? (i = a.options.nodata.call(a, { type: "nodata" }, r))
                        : !0 === a.options.nodata && l.isRootNode()
                          ? (i = a.options.strings.noData)
                          : typeof a.options.nodata === "string" &&
                            l.isRootNode() &&
                            (i = a.options.nodata),
                      i && l.setStatus("nodata", i)),
                    a._triggerNodeEvent("loadChildren", l);
                })
                .fail(function (e) {
                  let t;
                  e !== p
                    ? e !== D
                      ? (e.node && e.error && e.message
                          ? (t = e)
                          : (t = a._makeHookContext(l, null, {
                              error: e,
                              args: Array.prototype.slice.call(arguments),
                              message: e ? e.message || e.toString() : "",
                            })).message === "[object Object]" &&
                            (t.message = ""),
                        l.warn("Load children failed (" + t.message + ")", t),
                        !1 !== a._triggerNodeEvent("loadError", t, null) &&
                          a.nodeSetStatus(r, "error", t.message, t.details))
                      : l.warn(
                          "Lazy parent node was removed while loading: discarding response.",
                        )
                    : l.warn(
                        "Ignored response for obsolete load request #" +
                          d +
                          " (expected #" +
                          l._requestId +
                          ")",
                      );
                })
                .always(function () {
                  (l._requestId = null), i && a.debugTimeEnd(u);
                }),
              s.promise()
            );
          },
          nodeLoadKeyPath: function () {},
          nodeRemoveChild: function (e, t) {
            let n;
            const i = e.node;
            const r = x.extend({}, e, { node: t });
            const o = i.children;
            if (o.length === 1) {
              return (
                w(t === o[0], "invalid single child"),
                this.nodeRemoveChildren(e)
              );
            }
            this.activeNode &&
              (t === this.activeNode || this.activeNode.isDescendantOf(t)) &&
              this.activeNode.setActive(!1),
              this.focusNode &&
                (t === this.focusNode || this.focusNode.isDescendantOf(t)) &&
                (this.focusNode = null),
              this.nodeRemoveMarkup(r),
              this.nodeRemoveChildren(r),
              w((n = x.inArray(t, o)) >= 0, "invalid child"),
              i.triggerModifyChild("remove", t),
              t.visit(function (e) {
                e.parent = null;
              }, !0),
              this._callHook("treeRegisterNode", this, !1, t),
              o.splice(n, 1);
          },
          nodeRemoveChildMarkup: function (e) {
            const t = e.node;
            t.ul &&
              (t.isRootNode()
                ? x(t.ul).empty()
                : (x(t.ul).remove(), (t.ul = null)),
              t.visit(function (e) {
                e.li = e.ul = null;
              }));
          },
          nodeRemoveChildren: function (e) {
            const t = e.tree;
            const n = e.node;
            n.children &&
              (this.activeNode &&
                this.activeNode.isDescendantOf(n) &&
                this.activeNode.setActive(!1),
              this.focusNode &&
                this.focusNode.isDescendantOf(n) &&
                (this.focusNode = null),
              this.nodeRemoveChildMarkup(e),
              n.triggerModifyChild("remove", null),
              n.visit(function (e) {
                (e.parent = null), t._callHook("treeRegisterNode", t, !1, e);
              }),
              n.lazy ? (n.children = []) : (n.children = null),
              n.isRootNode() || (n.expanded = !1),
              this.nodeRenderStatus(e));
          },
          nodeRemoveMarkup: function (e) {
            const t = e.node;
            t.li && (x(t.li).remove(), (t.li = null)),
              this.nodeRemoveChildMarkup(e);
          },
          nodeRender: function (e, t, n, i, r) {
            let o;
            let s;
            let a;
            let l;
            let c;
            let u;
            let d;
            const h = e.node;
            const p = e.tree;
            const f = e.options;
            const g = f.aria;
            let m = !1;
            const v = h.parent;
            const y = !v;
            const b = h.children;
            let _ = null;
            if (!1 !== p._enableUpdate && (y || v.ul)) {
              if (
                (w(y || v.ul, "parent UL must exist"),
                y ||
                  (h.li &&
                    (t || h.li.parentNode !== h.parent.ul) &&
                    (h.li.parentNode === h.parent.ul
                      ? (_ = h.li.nextSibling)
                      : this.debug(
                          "Unlinking " +
                            h +
                            " (must be child of " +
                            h.parent +
                            ")",
                        ),
                    this.nodeRemoveMarkup(e)),
                  h.li
                    ? this.nodeRenderStatus(e)
                    : ((m = !0),
                      (h.li = document.createElement("li")),
                      (h.li.ftnode = h).key &&
                        f.generateIds &&
                        (h.li.id = f.idPrefix + h.key),
                      (h.span = document.createElement("span")),
                      (h.span.className = "fancytree-node"),
                      g && !h.tr && x(h.li).attr("role", "treeitem"),
                      h.li.appendChild(h.span),
                      this.nodeRenderTitle(e),
                      f.createNode &&
                        f.createNode.call(p, { type: "createNode" }, e)),
                  f.renderNode &&
                    f.renderNode.call(p, { type: "renderNode" }, e)),
                b)
              ) {
                if (y || h.expanded || !0 === n) {
                  for (
                    h.ul ||
                      ((h.ul = document.createElement("ul")),
                      ((!0 !== i || r) && h.expanded) ||
                        (h.ul.style.display = "none"),
                      g && x(h.ul).attr("role", "group"),
                      h.li ? h.li.appendChild(h.ul) : h.tree.$div.append(h.ul)),
                      l = 0,
                      c = b.length;
                    l < c;
                    l++
                  ) {
                    (d = x.extend({}, e, { node: b[l] })),
                      this.nodeRender(d, t, n, !1, !0);
                  }
                  for (o = h.ul.firstChild; o; ) {
                    (a = o.ftnode) && a.parent !== h
                      ? (h.debug("_fixParent: remove missing " + a, o),
                        (u = o.nextSibling),
                        o.parentNode.removeChild(o),
                        (o = u))
                      : (o = o.nextSibling);
                  }
                  for (
                    o = h.ul.firstChild, l = 0, c = b.length - 1;
                    l < c;
                    l++
                  ) {
                    (s = b[l]) === (a = o.ftnode)
                      ? (o = o.nextSibling)
                      : h.ul.insertBefore(s.li, a.li);
                  }
                }
              } else {
                h.ul &&
                  (this.warn("remove child markup for " + h),
                  this.nodeRemoveChildMarkup(e));
              }
              y || (m && v.ul.insertBefore(h.li, _));
            }
          },
          nodeRenderTitle: function (e, t) {
            let n;
            let i;
            let r;
            let o;
            let s;
            let a;
            let l;
            const c = e.node;
            const u = e.tree;
            const d = e.options;
            const h = d.aria;
            const p = c.getLevel();
            const f = [];
            t !== undefined && (c.title = t),
              c.span &&
                !1 !== u._enableUpdate &&
                ((s = h && !1 !== c.hasChildren() ? " role='button'" : ""),
                p < d.minExpandLevel
                  ? (c.lazy || (c.expanded = !0),
                    p > 1 &&
                      f.push(
                        "<span " +
                          s +
                          " class='fancytree-expander fancytree-expander-fixed'></span>",
                      ))
                  : f.push(
                      "<span " + s + " class='fancytree-expander'></span>",
                    ),
                (n = S.evalOption("checkbox", c, c, d, !1)) &&
                  !c.isStatusNode() &&
                  ((s = h ? " role='checkbox'" : ""),
                  (i = "fancytree-checkbox"),
                  (n === "radio" || (c.parent && c.parent.radiogroup)) &&
                    (i += " fancytree-radio"),
                  f.push("<span " + s + " class='" + i + "'></span>")),
                c.data.iconClass !== undefined &&
                  (c.icon
                    ? x.error(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead",
                      )
                    : (c.warn(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' instead",
                      ),
                      (c.icon = c.data.iconClass))),
                !1 !== (r = S.evalOption("icon", c, c, d, !0)) &&
                  ((s = h ? " role='presentation'" : ""),
                  (l = (l = S.evalOption("iconTooltip", c, c, d, null))
                    ? " title='" + k(l) + "'"
                    : ""),
                  typeof r === "string"
                    ? T.test(r)
                      ? ((r =
                          r.charAt(0) === "/" ? r : (d.imagePath || "") + r),
                        f.push(
                          "<img src='" +
                            r +
                            "' class='fancytree-icon'" +
                            l +
                            " alt='' />",
                        ))
                      : f.push(
                          "<span " +
                            s +
                            " class='fancytree-custom-icon " +
                            r +
                            "'" +
                            l +
                            "></span>",
                        )
                    : r.text
                      ? f.push(
                          "<span " +
                            s +
                            " class='fancytree-custom-icon " +
                            (r.addClass || "") +
                            "'" +
                            l +
                            ">" +
                            S.escapeHtml(r.text) +
                            "</span>",
                        )
                      : r.html
                        ? f.push(
                            "<span " +
                              s +
                              " class='fancytree-custom-icon " +
                              (r.addClass || "") +
                              "'" +
                              l +
                              ">" +
                              r.html +
                              "</span>",
                          )
                        : f.push(
                            "<span " +
                              s +
                              " class='fancytree-icon'" +
                              l +
                              "></span>",
                          )),
                (o = ""),
                d.renderTitle &&
                  (o = d.renderTitle.call(u, { type: "renderTitle" }, e) || ""),
                o ||
                  (!0 === (a = S.evalOption("tooltip", c, c, d, null)) &&
                    (a = c.title),
                  (o =
                    "<span class='fancytree-title'" +
                    (a = a ? " title='" + k(a) + "'" : "") +
                    (d.titlesTabbable ? " tabindex='0'" : "") +
                    ">" +
                    (d.escapeTitles ? S.escapeHtml(c.title) : c.title) +
                    "</span>")),
                f.push(o),
                (c.span.innerHTML = f.join("")),
                this.nodeRenderStatus(e),
                d.enhanceTitle &&
                  ((e.$title = x(">span.fancytree-title", c.span)),
                  (o =
                    d.enhanceTitle.call(u, { type: "enhanceTitle" }, e) ||
                    "")));
          },
          nodeRenderStatus: function (e) {
            let t;
            const n = e.node;
            const i = e.tree;
            const r = e.options;
            const o = n.hasChildren();
            const s = n.isLastSibling();
            const a = r.aria;
            const l = r._classNames;
            const c = [];
            const u = n[i.statusClassPropName];
            u &&
              !1 !== i._enableUpdate &&
              (a && (t = x(n.tr || n.li)),
              c.push(l.node),
              i.activeNode === n && c.push(l.active),
              i.focusNode === n && c.push(l.focused),
              n.expanded && c.push(l.expanded),
              a &&
                (!1 === o
                  ? t.removeAttr("aria-expanded")
                  : t.attr("aria-expanded", Boolean(n.expanded))),
              n.folder && c.push(l.folder),
              !1 !== o && c.push(l.hasChildren),
              s && c.push(l.lastsib),
              n.lazy && n.children == null && c.push(l.lazy),
              n.partload && c.push(l.partload),
              n.partsel && c.push(l.partsel),
              S.evalOption("unselectable", n, n, r, !1) &&
                c.push(l.unselectable),
              n._isLoading && c.push(l.loading),
              n._error && c.push(l.error),
              n.statusNodeType && c.push(l.statusNodePrefix + n.statusNodeType),
              n.selected
                ? (c.push(l.selected), a && t.attr("aria-selected", !0))
                : a && t.attr("aria-selected", !1),
              n.extraClasses && c.push(n.extraClasses),
              !1 === o
                ? c.push(l.combinedExpanderPrefix + "n" + (s ? "l" : ""))
                : c.push(
                    l.combinedExpanderPrefix +
                      (n.expanded ? "e" : "c") +
                      (n.lazy && n.children == null ? "d" : "") +
                      (s ? "l" : ""),
                  ),
              c.push(
                l.combinedIconPrefix +
                  (n.expanded ? "e" : "c") +
                  (n.folder ? "f" : ""),
              ),
              (u.className = c.join(" ")),
              n.li && x(n.li).toggleClass(l.lastsib, s));
          },
          nodeSetActive: function (e, t, n) {
            n = n || {};
            let i;
            const r = e.node;
            const o = e.tree;
            const s = e.options;
            const a = !0 === n.noEvents;
            const l = !0 === n.noFocus;
            let c = !1 !== n.scrollIntoView;
            return (r === o.activeNode) === (t = !1 !== t)
              ? C(r)
              : (c &&
                  e.originalEvent &&
                  x(e.originalEvent.target).is("a,:checkbox") &&
                  (r.info("Not scrolling while clicking an embedded link."),
                  (c = !1)),
                t &&
                !a &&
                !1 ===
                  this._triggerNodeEvent("beforeActivate", r, e.originalEvent)
                  ? g(r, ["rejected"])
                  : (t
                      ? (o.activeNode &&
                          (w(
                            o.activeNode !== r,
                            "node was active (inconsistency)",
                          ),
                          (i = x.extend({}, e, { node: o.activeNode })),
                          o.nodeSetActive(i, !1),
                          w(
                            o.activeNode === null,
                            "deactivate was out of sync?",
                          )),
                        s.activeVisible && r.makeVisible({ scrollIntoView: c }),
                        (o.activeNode = r),
                        o.nodeRenderStatus(e),
                        l || o.nodeSetFocus(e),
                        a ||
                          o._triggerNodeEvent("activate", r, e.originalEvent))
                      : (w(
                          o.activeNode === r,
                          "node was not active (inconsistency)",
                        ),
                        (o.activeNode = null),
                        this.nodeRenderStatus(e),
                        a ||
                          e.tree._triggerNodeEvent(
                            "deactivate",
                            r,
                            e.originalEvent,
                          )),
                    C(r)));
          },
          nodeSetExpanded: function (i, r, e) {
            e = e || {};
            let t;
            let n;
            let o;
            let s;
            let a;
            let l;
            const c = i.node;
            const u = i.tree;
            const d = i.options;
            let h = !0 === e.noAnimation;
            const p = !0 === e.noEvents;
            if (((r = !1 !== r), x(c.li).hasClass(d._classNames.animating))) {
              return (
                c.warn("setExpanded(" + r + ") while animating: ignored."),
                g(c, ["recursion"])
              );
            }
            if ((c.expanded && r) || (!c.expanded && !r)) return C(c);
            if (r && !c.lazy && !c.hasChildren()) return C(c);
            if (!r && c.getLevel() < d.minExpandLevel) return g(c, ["locked"]);
            if (
              !p &&
              !1 === this._triggerNodeEvent("beforeExpand", c, i.originalEvent)
            ) {
              return g(c, ["rejected"]);
            }
            if (
              (h || c.isVisible() || (h = e.noAnimation = !0),
              (n = new x.Deferred()),
              r && !c.expanded && d.autoCollapse)
            ) {
              (a = c.getParentList(!1, !0)), (l = d.autoCollapse);
              try {
                for (d.autoCollapse = !1, o = 0, s = a.length; o < s; o++) {
                  this._callHook("nodeCollapseSiblings", a[o], e);
                }
              } finally {
                d.autoCollapse = l;
              }
            }
            return (
              n.done(function () {
                const e = c.getLastChild();
                r && d.autoScroll && !h && e && u._enableUpdate
                  ? e.scrollIntoView(!0, { topNode: c }).always(function () {
                      p ||
                        i.tree._triggerNodeEvent(r ? "expand" : "collapse", i);
                    })
                  : p || i.tree._triggerNodeEvent(r ? "expand" : "collapse", i);
              }),
              (t = function (e) {
                const t = d._classNames;
                const n = d.toggleEffect;
                if (
                  ((c.expanded = r),
                  u._callHook(
                    "treeStructureChanged",
                    i,
                    r ? "expand" : "collapse",
                  ),
                  u._callHook("nodeRender", i, !1, !1, !0),
                  c.ul)
                ) {
                  if ((c.ul.style.display !== "none") === !!c.expanded) {
                    c.warn("nodeSetExpanded: UL.style.display already set");
                  } else {
                    if (n && !h) {
                      return (
                        x(c.li).addClass(t.animating),
                        void (f(x(c.ul)[n.effect])
                          ? x(c.ul)[n.effect]({
                              duration: n.duration,
                              always: function () {
                                x(this).removeClass(t.animating),
                                  x(c.li).removeClass(t.animating),
                                  e();
                              },
                            })
                          : (x(c.ul).stop(!0, !0),
                            x(c.ul)
                              .parent()
                              .find(".ui-effects-placeholder")
                              .remove(),
                            x(c.ul).toggle(
                              n.effect,
                              n.options,
                              n.duration,
                              function () {
                                x(this).removeClass(t.animating),
                                  x(c.li).removeClass(t.animating),
                                  e();
                              },
                            )))
                      );
                    }
                    c.ul.style.display = c.expanded || !parent ? "" : "none";
                  }
                }
                e();
              }),
              r && c.lazy && c.hasChildren() === undefined
                ? c
                    .load()
                    .done(function () {
                      n.notifyWith && n.notifyWith(c, ["loaded"]),
                        t(function () {
                          n.resolveWith(c);
                        });
                    })
                    .fail(function (e) {
                      t(function () {
                        n.rejectWith(c, ["load failed (" + e + ")"]);
                      });
                    })
                : t(function () {
                    n.resolveWith(c);
                  }),
              n.promise()
            );
          },
          nodeSetFocus: function (e, t) {
            let n;
            const i = e.tree;
            const r = e.node;
            const o = i.options;
            const s =
              !!e.originalEvent && x(e.originalEvent.target).is(":input");
            if (((t = !1 !== t), i.focusNode)) {
              if (i.focusNode === r && t) return;
              (n = x.extend({}, e, { node: i.focusNode })),
                (i.focusNode = null),
                this._triggerNodeEvent("blur", n),
                this._callHook("nodeRenderStatus", n);
            }
            t &&
              (this.hasFocus() ||
                (r.debug("nodeSetFocus: forcing container focus"),
                this._callHook("treeSetFocus", e, !0, { calledByNode: !0 })),
              r.makeVisible({ scrollIntoView: !1 }),
              (i.focusNode = r),
              o.titlesTabbable &&
                (s || x(r.span).find(".fancytree-title").focus()),
              o.aria &&
                x(i.$container).attr(
                  "aria-activedescendant",
                  x(r.tr || r.li)
                    .uniqueId()
                    .attr("id"),
                ),
              this._triggerNodeEvent("focus", e),
              document.activeElement === i.$container.get(0) ||
                x(document.activeElement, i.$container).length >= 1 ||
                x(i.$container).focus(),
              o.autoScroll && r.scrollIntoView(),
              this._callHook("nodeRenderStatus", e));
          },
          nodeSetSelected: function (e, t, n) {
            n = n || {};
            const i = e.node;
            const r = e.tree;
            const o = e.options;
            const s = !0 === n.noEvents;
            const a = i.parent;
            if (((t = !1 !== t), !S.evalOption("unselectable", i, i, o, !1))) {
              if (
                ((i._lastSelectIntent = t),
                !!i.selected === t && (o.selectMode !== 3 || !i.partsel || t))
              ) {
                return t;
              }
              if (
                !s &&
                !1 ===
                  this._triggerNodeEvent("beforeSelect", i, e.originalEvent)
              ) {
                return !!i.selected;
              }
              t && o.selectMode === 1
                ? (r.lastSelectedNode && r.lastSelectedNode.setSelected(!1),
                  (i.selected = t))
                : o.selectMode !== 3 || !a || a.radiogroup || i.radiogroup
                  ? a && a.radiogroup
                    ? i.visitSiblings(function (e) {
                        e._changeSelectStatusAttrs(t && e === i);
                      }, !0)
                    : (i.selected = t)
                  : ((i.selected = t), i.fixSelection3AfterClick(n)),
                this.nodeRenderStatus(e),
                (r.lastSelectedNode = t ? i : null),
                s || r._triggerNodeEvent("select", e);
            }
          },
          nodeSetStatus: function (i, e, t, n) {
            function r() {
              const e = s.children ? s.children[0] : null;
              if (e && e.isStatusNode()) {
                try {
                  s.ul && (s.ul.removeChild(e.li), (e.li = null));
                } catch (t) {}
                s.children.length === 1
                  ? (s.children = [])
                  : s.children.shift(),
                  a._callHook("treeStructureChanged", i, "clearStatusNode");
              }
            }
            function o(e, t) {
              const n = s.children ? s.children[0] : null;
              return (
                n && n.isStatusNode()
                  ? (x.extend(n, e),
                    (n.statusNodeType = t),
                    a._callHook("nodeRenderTitle", n))
                  : (s._setChildren([e]),
                    a._callHook("treeStructureChanged", i, "setStatusNode"),
                    (s.children[0].statusNodeType = t),
                    a.render()),
                s.children[0]
              );
            }
            var s = i.node;
            var a = i.tree;
            switch (e) {
              case "ok":
                r(), (s._isLoading = !1), (s._error = null), s.renderStatus();
                break;
              case "loading":
                s.parent ||
                  o(
                    {
                      title:
                        a.options.strings.loading + (t ? " (" + t + ")" : ""),
                      checkbox: !1,
                      tooltip: n,
                    },
                    e,
                  ),
                  (s._isLoading = !0),
                  (s._error = null),
                  s.renderStatus();
                break;
              case "error":
                o(
                  {
                    title:
                      a.options.strings.loadError + (t ? " (" + t + ")" : ""),
                    checkbox: !1,
                    tooltip: n,
                  },
                  e,
                ),
                  (s._isLoading = !1),
                  (s._error = { message: t, details: n }),
                  s.renderStatus();
                break;
              case "nodata":
                o(
                  {
                    title: t || a.options.strings.noData,
                    checkbox: !1,
                    tooltip: n,
                  },
                  e,
                ),
                  (s._isLoading = !1),
                  (s._error = null),
                  s.renderStatus();
                break;
              default:
                x.error("invalid node status " + e);
            }
          },
          nodeToggleExpanded: function (e) {
            return this.nodeSetExpanded(e, !e.node.expanded);
          },
          nodeToggleSelected: function (e) {
            const t = e.node;
            let n = !t.selected;
            return (
              t.partsel &&
                !t.selected &&
                !0 === t._lastSelectIntent &&
                ((n = !1), (t.selected = !0)),
              (t._lastSelectIntent = n),
              this.nodeSetSelected(e, n)
            );
          },
          treeClear: function (e) {
            const t = e.tree;
            (t.activeNode = null),
              (t.focusNode = null),
              t.$div.find(">ul.fancytree-container").empty(),
              (t.rootNode.children = null),
              t._callHook("treeStructureChanged", e, "clear");
          },
          treeCreate: function () {},
          treeDestroy: function () {
            this.$div.find(">ul.fancytree-container").remove(),
              this.$source &&
                this.$source.removeClass("fancytree-helper-hidden");
          },
          treeInit: function (e) {
            const n = e.tree;
            const i = n.options;
            n.$container.attr("tabindex", i.tabindex),
              x.each(P, function (e, t) {
                i[t] !== undefined &&
                  (n.info("Move option " + t + " to tree"),
                  (n[t] = i[t]),
                  delete i[t]);
              }),
              i.checkboxAutoHide &&
                n.$container.addClass("fancytree-checkbox-auto-hide"),
              i.rtl
                ? n.$container.attr("DIR", "RTL").addClass("fancytree-rtl")
                : n.$container.removeAttr("DIR").removeClass("fancytree-rtl"),
              i.aria &&
                (n.$container.attr("role", "tree"),
                i.selectMode !== 1 &&
                  n.$container.attr("aria-multiselectable", !0)),
              this.treeLoad(e);
          },
          treeLoad: function (e, t) {
            let n;
            let i;
            let r;
            const o = e.tree;
            const s = e.widget.element;
            const a = x.extend({}, e, { node: this.rootNode });
            if (
              (o.rootNode.children && this.treeClear(e),
              (t = t || this.options.source))
            ) {
              typeof t === "string" && x.error("Not implemented");
            } else {
              switch ((i = s.data("type") || "html")) {
                case "html":
                  (r = s.find(">ul").not(".fancytree-container").first()).length
                    ? (r.addClass(
                        "ui-fancytree-source fancytree-helper-hidden",
                      ),
                      (t = x.ui.fancytree.parseHtml(r)),
                      (this.data = x.extend(this.data, b(r))))
                    : (S.warn(
                        "No `source` option was passed and container does not contain `<ul>`: assuming `source: []`.",
                      ),
                      (t = []));
                  break;
                case "json":
                  (t = x.parseJSON(s.text())),
                    s
                      .contents()
                      .filter(function () {
                        return this.nodeType === 3;
                      })
                      .remove(),
                    x.isPlainObject(t) &&
                      (w(
                        $(t.children),
                        "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')",
                      ),
                      (t = (n = t).children),
                      delete n.children,
                      x.each(P, function (e, t) {
                        n[t] !== undefined && ((o[t] = n[t]), delete n[t]);
                      }),
                      x.extend(o.data, n));
                  break;
                default:
                  x.error("Invalid data-type: " + i);
              }
            }
            return (
              o._triggerTreeEvent("preInit", null),
              this.nodeLoadChildren(a, t)
                .done(function () {
                  o._callHook("treeStructureChanged", e, "loadChildren"),
                    o.render(),
                    e.options.selectMode === 3 &&
                      o.rootNode.fixSelection3FromEndNodes(),
                    o.activeNode &&
                      o.options.activeVisible &&
                      o.activeNode.makeVisible(),
                    o._triggerTreeEvent("init", null, { status: !0 });
                })
                .fail(function () {
                  o.render(), o._triggerTreeEvent("init", null, { status: !1 });
                })
            );
          },
          treeRegisterNode: function (e, t) {
            e.tree._callHook(
              "treeStructureChanged",
              e,
              t ? "addNode" : "removeNode",
            );
          },
          treeSetFocus: function (e, t, n) {
            let i;
            (t = !1 !== t) !== this.hasFocus() &&
              (!(this._hasFocus = t) && this.focusNode
                ? this.focusNode.setFocus(!1)
                : !t || (n && n.calledByNode) || x(this.$container).focus(),
              this.$container.toggleClass("fancytree-treefocus", t),
              this._triggerTreeEvent(t ? "focusTree" : "blurTree"),
              t &&
                !this.activeNode &&
                (i = this._lastMousedownNode || this.getFirstChild()) &&
                i.setFocus());
          },
          treeSetOption: function (e, t, n) {
            const i = e.tree;
            let r = !0;
            let o = !1;
            let s = !1;
            switch (t) {
              case "aria":
              case "checkbox":
              case "icon":
              case "minExpandLevel":
              case "tabindex":
                s = o = !0;
                break;
              case "checkboxAutoHide":
                i.$container.toggleClass("fancytree-checkbox-auto-hide", !!n);
                break;
              case "escapeTitles":
              case "tooltip":
                s = !0;
                break;
              case "rtl":
                !1 === n
                  ? i.$container.removeAttr("DIR").removeClass("fancytree-rtl")
                  : i.$container.attr("DIR", "RTL").addClass("fancytree-rtl"),
                  (s = !0);
                break;
              case "source":
                (r = !1), i._callHook("treeLoad", i, n), (s = !0);
            }
            i.debug("set option " + t + "=" + n + " <" + typeof n + ">"),
              r &&
                (this.widget._super
                  ? this.widget._super.call(this.widget, t, n)
                  : x.Widget.prototype._setOption.call(this.widget, t, n)),
              o && i._callHook("treeCreate", i),
              s && i.render(!0, !1);
          },
          treeStructureChanged: function () {},
        }),
        x.widget("ui.fancytree", {
          options: {
            activeVisible: !0,
            ajax: { type: "GET", cache: !1, dataType: "json" },
            aria: !0,
            autoActivate: !0,
            autoCollapse: !1,
            autoScroll: !1,
            checkbox: !1,
            clickFolderMode: 4,
            copyFunctionsToData: !1,
            debugLevel: null,
            disabled: !1,
            enableAspx: 42,
            escapeTitles: !1,
            extensions: [],
            focusOnSelect: !1,
            generateIds: !1,
            icon: !0,
            idPrefix: "ft_",
            keyboard: !0,
            keyPathSeparator: "/",
            minExpandLevel: 1,
            nodata: !0,
            quicksearch: !1,
            rtl: !1,
            scrollOfs: { top: 0, bottom: 0 },
            scrollParent: null,
            selectMode: 2,
            strings: {
              loading: "Loading...",
              loadError: "Load error!",
              moreData: "More...",
              noData: "No data.",
            },
            tabindex: "0",
            titlesTabbable: !1,
            toggleEffect: { effect: "slideToggle", duration: 200 },
            tooltip: !1,
            treeId: null,
            _classNames: {
              active: "fancytree-active",
              animating: "fancytree-animating",
              combinedExpanderPrefix: "fancytree-exp-",
              combinedIconPrefix: "fancytree-ico-",
              error: "fancytree-error",
              expanded: "fancytree-expanded",
              focused: "fancytree-focused",
              folder: "fancytree-folder",
              hasChildren: "fancytree-has-children",
              lastsib: "fancytree-lastsib",
              lazy: "fancytree-lazy",
              loading: "fancytree-loading",
              node: "fancytree-node",
              partload: "fancytree-partload",
              partsel: "fancytree-partsel",
              radio: "fancytree-radio",
              selected: "fancytree-selected",
              statusNodePrefix: "fancytree-statusnode-",
              unselectable: "fancytree-unselectable",
            },
            lazyLoad: null,
            postProcess: null,
          },
          _deprecationWarning: function (e) {
            const t = this.tree;
            t &&
              t.options.debugLevel >= 3 &&
              t.warn(
                "$().fancytree('" +
                  e +
                  "') is deprecated (see https://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Widget.html",
              );
          },
          _create: function () {
            (this.tree = new l(this)),
              (this.$source =
                this.source || this.element.data("type") === "json"
                  ? this.element
                  : this.element.find(">ul").first());
            let e;
            let t;
            let n;
            const i = this.options;
            const r = i.extensions;
            let o = this.tree;
            for (n = 0; n < r.length; n++) {
              (t = r[n]),
                (e = x.ui.fancytree._extensions[t]) ||
                  x.error(
                    "Could not apply extension '" +
                      t +
                      "' (it is not registered, did you forget to include it?)",
                  ),
                (this.tree.options[t] = c({}, e.options, this.tree.options[t])),
                w(
                  this.tree.ext[t] === undefined,
                  "Extension name must not exist as Fancytree.ext attribute: '" +
                    t +
                    "'",
                ),
                (this.tree.ext[t] = {}),
                s(this.tree, o, e, t),
                (o = e);
            }
            i.icons !== undefined &&
              (!0 === i.icon
                ? (this.tree.warn(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' instead",
                  ),
                  (i.icon = i.icons))
                : x.error(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' only instead",
                  )),
              i.iconClass !== undefined &&
                (i.icon
                  ? x.error(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead",
                    )
                  : (this.tree.warn(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead",
                    ),
                    (i.icon = i.iconClass))),
              i.tabbable !== undefined &&
                ((i.tabindex = i.tabbable ? "0" : "-1"),
                this.tree.warn(
                  "'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='" +
                    i.tabindex +
                    "' instead",
                )),
              this.tree._callHook("treeCreate", this.tree);
          },
          _init: function () {
            this.tree._callHook("treeInit", this.tree), this._bind();
          },
          _setOption: function (e, t) {
            return this.tree._callHook("treeSetOption", this.tree, e, t);
          },
          _destroy: function () {
            this._unbind(), this.tree._callHook("treeDestroy", this.tree);
          },
          _unbind: function () {
            const e = this.tree._ns;
            this.element.off(e),
              this.tree.$container.off(e),
              x(document).off(e);
          },
          _bind: function () {
            const s = this;
            const a = this.options;
            const o = this.tree;
            const e = o._ns;
            this._unbind(),
              o.$container
                .on("focusin" + e + " focusout" + e, function (e) {
                  let t = S.getNode(e);
                  const n = e.type === "focusin";
                  if (!n && t && x(e.target).is("a")) {
                    t.debug("Ignored focusout on embedded <a> element.");
                  } else {
                    if (n) {
                      if (o._getExpiringValue("focusin")) {
                        return void o.debug("Ignored double focusin.");
                      }
                      o._setExpiringValue("focusin", !0, 50),
                        t ||
                          ((t = o._getExpiringValue("mouseDownNode")) &&
                            o.debug(
                              "Reconstruct mouse target for focusin from recent event.",
                            ));
                    }
                    t
                      ? o._callHook("nodeSetFocus", o._makeHookContext(t, e), n)
                      : o.tbody &&
                          x(e.target).parents(
                            "table.fancytree-container > thead",
                          ).length
                        ? o.debug("Ignore focus event outside table body.", e)
                        : o._callHook("treeSetFocus", o, n);
                  }
                })
                .on("selectstart" + e, "span.fancytree-title", function (e) {
                  e.preventDefault();
                })
                .on("keydown" + e, function (e) {
                  if (a.disabled || !1 === a.keyboard) return !0;
                  let t;
                  const n = o.focusNode;
                  const i = o._makeHookContext(n || o, e);
                  const r = o.phase;
                  try {
                    return (
                      (o.phase = "userEvent"),
                      (t = n
                        ? o._triggerNodeEvent("keydown", n, e)
                        : o._triggerTreeEvent("keydown", e)) === "preventNav"
                        ? (t = !0)
                        : !1 !== t && (t = o._callHook("nodeKeydown", i)),
                      t
                    );
                  } finally {
                    o.phase = r;
                  }
                })
                .on("mousedown" + e, function (e) {
                  const t = S.getEventTarget(e);
                  (o._lastMousedownNode = t ? t.node : null),
                    o._setExpiringValue("mouseDownNode", o._lastMousedownNode);
                })
                .on("click" + e + " dblclick" + e, function (e) {
                  if (a.disabled) return !0;
                  let t;
                  const n = S.getEventTarget(e);
                  const i = n.node;
                  const r = s.tree;
                  const o = r.phase;
                  if (!i) return !0;
                  t = r._makeHookContext(i, e);
                  try {
                    switch (((r.phase = "userEvent"), e.type)) {
                      case "click":
                        return (
                          (t.targetType = n.type),
                          i.isPagingNode()
                            ? !0 === r._triggerNodeEvent("clickPaging", t, e)
                            : !1 !== r._triggerNodeEvent("click", t, e) &&
                              r._callHook("nodeClick", t)
                        );
                      case "dblclick":
                        return (
                          (t.targetType = n.type),
                          !1 !== r._triggerNodeEvent("dblclick", t, e) &&
                            r._callHook("nodeDblclick", t)
                        );
                    }
                  } finally {
                    r.phase = o;
                  }
                });
          },
          getActiveNode: function () {
            return (
              this._deprecationWarning("getActiveNode"), this.tree.activeNode
            );
          },
          getNodeByKey: function (e) {
            return (
              this._deprecationWarning("getNodeByKey"),
              this.tree.getNodeByKey(e)
            );
          },
          getRootNode: function () {
            return this._deprecationWarning("getRootNode"), this.tree.rootNode;
          },
          getTree: function () {
            return this._deprecationWarning("getTree"), this.tree;
          },
        }),
        (S = x.ui.fancytree),
        x.extend(x.ui.fancytree, {
          version: "2.38.1",
          buildType: "production",
          debugLevel: 3,
          _nextId: 1,
          _nextNodeKey: 1,
          _extensions: {},
          _FancytreeClass: l,
          _FancytreeNodeClass: u,
          jquerySupports: { positionMyOfs: t(x.ui.version, 1, 9) },
          assert: function (e, t) {
            return w(e, t);
          },
          createTree: function (e, t) {
            const n = x(e).fancytree(t);
            return S.getTree(n);
          },
          debounce: function (t, n, i, r) {
            let o;
            return (
              arguments.length === 3 &&
                typeof i !== "boolean" &&
                ((r = i), (i = !1)),
              function () {
                const e = arguments;
                (r = r || this),
                  i && !o && n.apply(r, e),
                  clearTimeout(o),
                  (o = setTimeout(function () {
                    i || n.apply(r, e), (o = null);
                  }, t));
              }
            );
          },
          debug: function () {
            x.ui.fancytree.debugLevel >= 4 && e("log", arguments);
          },
          error: function () {
            x.ui.fancytree.debugLevel >= 1 && e("error", arguments);
          },
          escapeHtml: function (e) {
            return ("" + e).replace(r, function (e) {
              return j[e];
            });
          },
          fixPositionOptions: function (e) {
            if (
              ((e.offset || ("" + e.my + e.at).indexOf("%") >= 0) &&
                x.error(
                  "expected new position syntax (but '%' is not supported)",
                ),
              !x.ui.fancytree.jquerySupports.positionMyOfs)
            ) {
              const t = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(e.my);
              const n = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(e.at);
              const i = (t[2] ? +t[2] : 0) + (n[2] ? +n[2] : 0);
              const r = (t[4] ? +t[4] : 0) + (n[4] ? +n[4] : 0);
              (e = x.extend({}, e, {
                my: t[1] + " " + t[3],
                at: n[1] + " " + n[3],
              })),
                (i || r) && (e.offset = i + " " + r);
            }
            return e;
          },
          getEventTarget: function (e) {
            let t;
            const n = e && e.target ? e.target.className : "";
            const i = { node: this.getNode(e.target), type: undefined };
            return (
              /\bfancytree-title\b/.test(n)
                ? (i.type = "title")
                : /\bfancytree-expander\b/.test(n)
                  ? (i.type =
                      !1 === i.node.hasChildren() ? "prefix" : "expander")
                  : /\bfancytree-checkbox\b/.test(n)
                    ? (i.type = "checkbox")
                    : /\bfancytree(-custom)?-icon\b/.test(n)
                      ? (i.type = "icon")
                      : /\bfancytree-node\b/.test(n)
                        ? (i.type = "title")
                        : e &&
                          e.target &&
                          ((t = x(e.target)).is("ul[role=group]")
                            ? (((i.node && i.node.tree) || S).debug(
                                "Ignoring click on outer UL.",
                              ),
                              (i.node = null))
                            : t.closest(".fancytree-title").length
                              ? (i.type = "title")
                              : t.closest(".fancytree-checkbox").length
                                ? (i.type = "checkbox")
                                : t.closest(".fancytree-expander").length &&
                                  (i.type = "expander")),
              i
            );
          },
          getEventTargetType: function (e) {
            return this.getEventTarget(e).type;
          },
          getNode: function (e) {
            if (e instanceof u) return e;
            for (
              e instanceof x
                ? (e = e[0])
                : e.originalEvent !== undefined && (e = e.target);
              e;

            ) {
              if (e.ftnode) return e.ftnode;
              e = e.parentNode;
            }
            return null;
          },
          getTree: function (e) {
            let t;
            const n = e;
            return e instanceof l
              ? e
              : (e === undefined && (e = 0),
                typeof e === "number"
                  ? (e = x(".fancytree-container").eq(e))
                  : typeof e === "string"
                    ? (e = x("#ft-id-" + n).eq(0)).length || (e = x(n).eq(0))
                    : e instanceof Element || e instanceof HTMLDocument
                      ? (e = x(e))
                      : e instanceof x
                        ? (e = e.eq(0))
                        : e.originalEvent !== undefined && (e = x(e.target)),
                (t =
                  (e = e.closest(":ui-fancytree")).data("ui-fancytree") ||
                  e.data("fancytree"))
                  ? t.tree
                  : null);
          },
          evalOption: function (e, t, n, i, r) {
            let o;
            let s;
            const a = t.tree;
            const l = i[e];
            const c = n[e];
            return (
              f(l)
                ? ((o = {
                    node: t,
                    tree: a,
                    widget: a.widget,
                    options: a.widget.options,
                    typeInfo: a.types[t.type] || {},
                  }),
                  (s = l.call(a, { type: e }, o)) == null && (s = c))
                : (s = c == null ? l : c),
              s == null && (s = r),
              s
            );
          },
          setSpanIcon: function (e, t, n) {
            const i = x(e);
            typeof n === "string"
              ? i.attr("class", t + " " + n)
              : (n.text
                  ? i.text("" + n.text)
                  : n.html && (e.innerHTML = n.html),
                i.attr("class", t + " " + (n.addClass || "")));
          },
          eventToString: function (e) {
            const t = e.which;
            const n = e.type;
            const i = [];
            return (
              e.altKey && i.push("alt"),
              e.ctrlKey && i.push("ctrl"),
              e.metaKey && i.push("meta"),
              e.shiftKey && i.push("shift"),
              n === "click" || n === "dblclick"
                ? i.push(A[e.button] + n)
                : n === "wheel"
                  ? i.push(n)
                  : N[t] ||
                    i.push(E[t] || String.fromCharCode(t).toLowerCase()),
              i.join("+")
            );
          },
          info: function () {
            x.ui.fancytree.debugLevel >= 3 && e("info", arguments);
          },
          keyEventToString: function (e) {
            return (
              this.warn(
                "keyEventToString() is deprecated: use eventToString()",
              ),
              this.eventToString(e)
            );
          },
          overrideMethod: function (e, t, n, i) {
            let r;
            const o = e[t] || x.noop;
            e[t] = function () {
              const e = i || this;
              try {
                return (r = e._super), (e._super = o), n.apply(e, arguments);
              } finally {
                e._super = r;
              }
            };
          },
          parseHtml: function (s) {
            let a;
            let l;
            let c;
            let u;
            let d;
            let h;
            let p;
            let f;
            const e = s.find(">li");
            const g = [];
            return (
              e.each(function () {
                let e;
                let t;
                const n = x(this);
                const i = n.find(">span", this).first();
                const r = i.length ? null : n.find(">a").first();
                const o = { tooltip: null, data: {} };
                for (
                  i.length
                    ? (o.title = i.html())
                    : r && r.length
                      ? ((o.title = r.html()),
                        (o.data.href = r.attr("href")),
                        (o.data.target = r.attr("target")),
                        (o.tooltip = r.attr("title")))
                      : ((o.title = n.html()),
                        (d = o.title.search(/<ul/i)) >= 0 &&
                          (o.title = o.title.substring(0, d))),
                    o.title = m(o.title),
                    u = 0,
                    h = M.length;
                  u < h;
                  u++
                ) {
                  o[M[u]] = undefined;
                }
                for (
                  a = this.className.split(" "), c = [], u = 0, h = a.length;
                  u < h;
                  u++
                ) {
                  (l = a[u]), O[l] ? (o[l] = !0) : c.push(l);
                }
                if (
                  ((o.extraClasses = c.join(" ")),
                  (p = n.attr("title")) && (o.tooltip = p),
                  (p = n.attr("id")) && (o.key = p),
                  n.attr("hideCheckbox") && (o.checkbox = !1),
                  (e = b(n)) && !x.isEmptyObject(e))
                ) {
                  for (t in H) v(e, t) && ((e[H[t]] = e[t]), delete e[t]);
                  for (u = 0, h = F.length; u < h; u++) {
                    (p = F[u]), (f = e[p]) != null && (delete e[p], (o[p] = f));
                  }
                  x.extend(o.data, e);
                }
                (s = n.find(">ul").first()).length
                  ? (o.children = x.ui.fancytree.parseHtml(s))
                  : (o.children = o.lazy ? undefined : null),
                  g.push(o);
              }),
              g
            );
          },
          registerExtension: function (e) {
            w(e.name != null, "extensions must have a `name` property."),
              w(
                e.version != null,
                "extensions must have a `version` property.",
              ),
              (x.ui.fancytree._extensions[e.name] = e);
          },
          trim: m,
          unescapeHtml: function (e) {
            const t = document.createElement("div");
            return (
              (t.innerHTML = e),
              t.childNodes.length === 0 ? "" : t.childNodes[0].nodeValue
            );
          },
          warn: function () {
            x.ui.fancytree.debugLevel >= 2 && e("warn", arguments);
          },
        }),
        x.ui.fancytree
      );
    }
    x.ui.fancytree.warn("Fancytree: ignored duplicate include");
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (o) {
    "use strict";
    return (
      (o.ui.fancytree._FancytreeClass.prototype.countSelected = function (e) {
        const t = this;
        t.options;
        return t.getSelectedNodes(e).length;
      }),
      (o.ui.fancytree._FancytreeNodeClass.prototype.updateCounters =
        function () {
          const e = this;
          let t = o("span.fancytree-childcounter", e.span);
          const n = e.tree.options.childcounter;
          const i = e.countChildren(n.deep);
          (!(e.data.childCounter = i) && n.hideZeros) ||
          (e.isExpanded() && n.hideExpanded)
            ? t.remove()
            : (t.length ||
                (t = o("<span class='fancytree-childcounter'/>").appendTo(
                  o("span.fancytree-icon,span.fancytree-custom-icon", e.span),
                )),
              t.text(i)),
            !n.deep ||
              e.isTopLevel() ||
              e.isRootNode() ||
              e.parent.updateCounters();
        }),
      (o.ui.fancytree.prototype.widgetMethod1 = function (e) {
        this.tree;
        return e;
      }),
      o.ui.fancytree.registerExtension({
        name: "childcounter",
        version: "2.38.1",
        options: { deep: !0, hideZeros: !0, hideExpanded: !1 },
        foo: 42,
        _appendCounter: function () {},
        treeInit: function (e) {
          e.options, e.options.childcounter;
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-childcounter");
        },
        treeDestroy: function () {
          this._superApply(arguments);
        },
        nodeRenderTitle: function (e, t) {
          const n = e.node;
          const i = e.options.childcounter;
          const r =
            n.data.childCounter == null
              ? n.countChildren(i.deep)
              : +n.data.childCounter;
          this._super(e, t),
            (!r && i.hideZeros) ||
              (n.isExpanded() && i.hideExpanded) ||
              o(
                "span.fancytree-icon,span.fancytree-custom-icon",
                n.span,
              ).append(o("<span class='fancytree-childcounter'/>").text(r));
        },
        nodeSetExpanded: function (e) {
          const t = e.tree;
          e.node;
          return this._superApply(arguments).always(function () {
            t.nodeRenderTitle(e);
          });
        },
      }),
      o.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (h) {
    "use strict";
    function p(e, t) {
      let n;
      for (n = e.length - 1; n >= 0; n--) {
        if (e[n] === t) return e.splice(n, 1), !0;
      }
      return !1;
    }
    function i(e, t, n) {
      for (
        var i,
          r,
          o = 3 & e.length,
          s = e.length - o,
          a = n,
          l = 3432918353,
          c = 461845907,
          u = 0;
        u < s;

      ) {
        (r =
          (255 & e.charCodeAt(u)) |
          ((255 & e.charCodeAt(++u)) << 8) |
          ((255 & e.charCodeAt(++u)) << 16) |
          ((255 & e.charCodeAt(++u)) << 24)),
          ++u,
          (a =
            27492 +
            (65535 &
              (i =
                (5 *
                  (65535 &
                    (a =
                      ((a ^= r =
                        ((65535 &
                          (r =
                            ((r =
                              ((65535 & r) * l +
                                ((((r >>> 16) * l) & 65535) << 16)) &
                              4294967295) <<
                              15) |
                            (r >>> 17))) *
                          c +
                          ((((r >>> 16) * c) & 65535) << 16)) &
                        4294967295) <<
                        13) |
                      (a >>> 19))) +
                  (((5 * (a >>> 16)) & 65535) << 16)) &
                4294967295)) +
            (((58964 + (i >>> 16)) & 65535) << 16));
      }
      switch (((r = 0), o)) {
        case 3:
          r ^= (255 & e.charCodeAt(u + 2)) << 16;
        case 2:
          r ^= (255 & e.charCodeAt(u + 1)) << 8;
        case 1:
          a ^= r =
            ((65535 &
              (r =
                ((r =
                  ((65535 & (r ^= 255 & e.charCodeAt(u))) * l +
                    ((((r >>> 16) * l) & 65535) << 16)) &
                  4294967295) <<
                  15) |
                (r >>> 17))) *
              c +
              ((((r >>> 16) * c) & 65535) << 16)) &
            4294967295;
      }
      return (
        (a ^= e.length),
        (a =
          (2246822507 * (65535 & (a ^= a >>> 16)) +
            (((2246822507 * (a >>> 16)) & 65535) << 16)) &
          4294967295),
        (a =
          (3266489909 * (65535 & (a ^= a >>> 13)) +
            (((3266489909 * (a >>> 16)) & 65535) << 16)) &
          4294967295),
        (a ^= a >>> 16),
        t ? ("0000000" + (a >>> 0).toString(16)).substr(-8) : a >>> 0
      );
    }
    function t(e) {
      let t;
      let n = h.map(e.getParentList(!1, !0), function (e) {
        return e.refKey || e.key;
      });
      return "id_" + (t = i((n = n.join("/")), !0)) + i(t + n, !0);
    }
    const f = h.ui.fancytree.assert;
    return (
      (h.ui.fancytree._FancytreeNodeClass.prototype.getCloneList = function (
        e,
      ) {
        let t;
        const n = this.tree;
        let i = n.refMap[this.refKey] || null;
        const r = n.keyMap;
        return (
          i &&
            ((t = this.key),
            e
              ? (i = h.map(i, function (e) {
                  return r[e];
                }))
              : (i = h.map(i, function (e) {
                  return e === t ? null : r[e];
                })).length < 1 && (i = null)),
          i
        );
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.isClone = function () {
        const e = this.refKey || null;
        const t = (e && this.tree.refMap[e]) || null;
        return !!(t && t.length > 1);
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.reRegister = function (
        t,
        e,
      ) {
        (t = t == null ? null : "" + t), (e = e == null ? null : "" + e);
        const n = this.tree;
        const i = this.key;
        const r = this.refKey;
        const o = n.keyMap;
        const s = n.refMap;
        const a = s[r] || null;
        let l = !1;
        return (
          t != null &&
            t !== this.key &&
            (o[t] &&
              h.error(
                "[ext-clones] reRegister(" + t + "): already exists: " + this,
              ),
            delete o[i],
            (o[t] = this),
            a &&
              (s[r] = h.map(a, function (e) {
                return e === i ? t : e;
              })),
            (this.key = t),
            (l = !0)),
          e != null &&
            e !== this.refKey &&
            (a &&
              (a.length === 1
                ? delete s[r]
                : (s[r] = h.map(a, function (e) {
                    return e === i ? null : e;
                  }))),
            s[e] ? s[e].append(t) : (s[e] = [this.key]),
            (this.refKey = e),
            (l = !0)),
          l
        );
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.setRefKey = function (e) {
        return this.reRegister(null, e);
      }),
      (h.ui.fancytree._FancytreeClass.prototype.getNodesByRef = function (
        e,
        n,
      ) {
        const i = this.keyMap;
        let t = this.refMap[e] || null;
        return (
          t &&
            (t = n
              ? h.map(t, function (e) {
                  const t = i[e];
                  return t.isDescendantOf(n) ? t : null;
                })
              : h.map(t, function (e) {
                  return i[e];
                })).length < 1 &&
            (t = null),
          t
        );
      }),
      (h.ui.fancytree._FancytreeClass.prototype.changeRefKey = function (e, t) {
        let n;
        const i = this.keyMap;
        const r = this.refMap[e] || null;
        if (r) {
          for (n = 0; n < r.length; n++) i[r[n]].refKey = t;
          delete this.refMap[e], (this.refMap[t] = r);
        }
      }),
      h.ui.fancytree.registerExtension({
        name: "clones",
        version: "2.38.1",
        options: { highlightActiveClones: !0, highlightClones: !1 },
        treeCreate: function (e) {
          this._superApply(arguments),
            (e.tree.refMap = {}),
            (e.tree.keyMap = {});
        },
        treeInit: function (e) {
          this.$container.addClass("fancytree-ext-clones"),
            f(e.options.defaultKey == null),
            (e.options.defaultKey = function (e) {
              return t(e);
            }),
            this._superApply(arguments);
        },
        treeClear: function (e) {
          return (
            (e.tree.refMap = {}),
            (e.tree.keyMap = {}),
            this._superApply(arguments)
          );
        },
        treeRegisterNode: function (e, t, n) {
          let i;
          let r;
          const o = e.tree;
          const s = o.keyMap;
          const a = o.refMap;
          const l = n.key;
          const c = n && n.refKey != null ? "" + n.refKey : null;
          if (n.isStatusNode()) return this._super(e, t, n);
          if (t) {
            if (s[n.key] != null) {
              const u = s[n.key];
              const d =
                "clones.treeRegisterNode: duplicate key '" +
                n.key +
                "': /" +
                n.getPath(!0) +
                " => " +
                u.getPath(!0);
              o.error(d), h.error(d);
            }
            (s[l] = n),
              c &&
                ((i = a[c])
                  ? (i.push(l),
                    i.length === 2 &&
                      e.options.clones.highlightClones &&
                      s[i[0]].renderStatus())
                  : (a[c] = [l]));
          } else {
            s[l] == null &&
              h.error(
                "clones.treeRegisterNode: node.key not registered: " + n.key,
              ),
              delete s[l],
              c &&
                (i = a[c]) &&
                ((r = i.length) <= 1
                  ? (f(r === 1), f(i[0] === l), delete a[c])
                  : (p(i, l),
                    r === 2 &&
                      e.options.clones.highlightClones &&
                      s[i[0]].renderStatus()));
          }
          return this._super(e, t, n);
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          const i = e.node;
          return (
            (n = this._super(e)),
            e.options.clones.highlightClones &&
              (t = h(i[e.tree.statusClassPropName])).length &&
              i.isClone() &&
              t.addClass("fancytree-clone"),
            n
          );
        },
        nodeSetActive: function (e, n) {
          let t;
          const i = e.tree.statusClassPropName;
          const r = e.node;
          return (
            (t = this._superApply(arguments)),
            e.options.clones.highlightActiveClones &&
              r.isClone() &&
              h.each(r.getCloneList(!0), function (e, t) {
                h(t[i]).toggleClass("fancytree-active-clone", !1 !== n);
              }),
            t
          );
        },
      }),
      h.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(
          [
            "jquery",
            "jquery-ui/ui/widgets/draggable",
            "jquery-ui/ui/widgets/droppable",
            "./jquery.fancytree",
          ],
          e,
        )
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (_) {
    "use strict";
    function f(e) {
      return e === 0 ? "" : e > 0 ? "+" + e : "" + e;
    }
    function n() {
      e ||
        (_.ui.plugin.add("draggable", "connectToFancytree", {
          start: function (e, t) {
            const n = _(this).data("ui-draggable") || _(this).data("draggable");
            const i = t.helper.data("ftSourceNode") || null;
            if (i) {
              return (
                (n.offset.click.top = -2),
                (n.offset.click.left = 16),
                i.tree.ext.dnd._onDragEvent("start", i, null, e, t, n)
              );
            }
          },
          drag: function (e, t) {
            let n;
            const i = _(this).data("ui-draggable") || _(this).data("draggable");
            const r = t.helper.data("ftSourceNode") || null;
            const o = t.helper.data("ftTargetNode") || null;
            const s = _.ui.fancytree.getNode(e.target);
            const a = r && r.tree.options.dnd;
            e.target &&
            !s &&
            _(e.target).closest(
              "div.fancytree-drag-helper,#fancytree-drop-marker",
            ).length > 0
              ? (r || o || _.ui.fancytree).debug(
                  "Drag event over helper: ignored.",
                )
              : (t.helper.data("ftTargetNode", s),
                a &&
                  a.updateHelper &&
                  ((n = r.tree._makeHookContext(r, e, {
                    otherNode: s,
                    ui: t,
                    draggable: i,
                    dropMarker: _("#fancytree-drop-marker"),
                  })),
                  a.updateHelper.call(r.tree, r, n)),
                o &&
                  o !== s &&
                  o.tree.ext.dnd._onDragEvent("leave", o, r, e, t, i),
                s &&
                  s.tree.options.dnd.dragDrop &&
                  (s === o ||
                    s.tree.ext.dnd._onDragEvent("enter", s, r, e, t, i),
                  s.tree.ext.dnd._onDragEvent("over", s, r, e, t, i)));
          },
          stop: function (e, t) {
            const n = _(this).data("ui-draggable") || _(this).data("draggable");
            const i = t.helper.data("ftSourceNode") || null;
            const r = t.helper.data("ftTargetNode") || null;
            const o = e.type === "mouseup" && e.which === 1;
            o || (i || r || _.ui.fancytree).debug("Drag was cancelled"),
              r &&
                (o && r.tree.ext.dnd._onDragEvent("drop", r, i, e, t, n),
                r.tree.ext.dnd._onDragEvent("leave", r, i, e, t, n)),
              i && i.tree.ext.dnd._onDragEvent("stop", i, null, e, t, n);
          },
        }),
        (e = !0));
    }
    function t(e) {
      const t = e.options.dnd || null;
      const o = e.options.glyph || null;
      t && n(),
        t &&
          t.dragStart &&
          e.widget.element.draggable(
            _.extend(
              {
                addClasses: !1,
                appendTo: e.$container,
                containment: !1,
                delay: 0,
                distance: 4,
                revert: !1,
                scroll: !0,
                scrollSpeed: 7,
                scrollSensitivity: 10,
                connectToFancytree: !0,
                helper: function (e) {
                  let t;
                  let n;
                  let i;
                  const r = _.ui.fancytree.getNode(e.target);
                  return r
                    ? ((i = r.tree.options.dnd),
                      (n = _(r.span)),
                      (t = _(
                        "<div class='fancytree-drag-helper'><span class='fancytree-drag-helper-img' /></div>",
                      )
                        .css({ zIndex: 3, position: "relative" })
                        .append(n.find("span.fancytree-title").clone())).data(
                        "ftSourceNode",
                        r,
                      ),
                      o &&
                        t
                          .find(".fancytree-drag-helper-img")
                          .addClass(o.map._addClass + " " + o.map.dragHelper),
                      i.initHelper &&
                        i.initHelper.call(r.tree, r, {
                          node: r,
                          tree: r.tree,
                          originalEvent: e,
                          ui: { helper: t },
                        }),
                      t)
                    : "<div>ERROR?: helper requested but sourceNode not found</div>";
                },
                start: function (e, t) {
                  return !!t.helper.data("ftSourceNode");
                },
              },
              e.options.dnd.draggable,
            ),
          ),
        t &&
          t.dragDrop &&
          e.widget.element.droppable(
            _.extend(
              { addClasses: !1, tolerance: "intersect", greedy: !1 },
              e.options.dnd.droppable,
            ),
          );
    }
    var e = !1;
    const g = "fancytree-drop-accept";
    const m = "fancytree-drop-after";
    const v = "fancytree-drop-before";
    const y = "fancytree-drop-over";
    const b = "fancytree-drop-reject";
    const x = "fancytree-drop-target";
    return (
      _.ui.fancytree.registerExtension({
        name: "dnd",
        version: "2.38.1",
        options: {
          autoExpandMS: 1e3,
          draggable: null,
          droppable: null,
          focusOnClick: !1,
          preventVoidMoves: !0,
          preventRecursiveMoves: !0,
          smartRevert: !0,
          dropMarkerOffsetX: -24,
          dropMarkerInsertOffsetX: -16,
          dragStart: null,
          dragStop: null,
          initHelper: null,
          updateHelper: null,
          dragEnter: null,
          dragOver: null,
          dragExpand: null,
          dragDrop: null,
          dragLeave: null,
        },
        treeInit: function (n) {
          const e = n.tree;
          this._superApply(arguments),
            e.options.dnd.dragStart &&
              e.$container.on("mousedown", function (e) {
                if (n.options.dnd.focusOnClick) {
                  const t = _.ui.fancytree.getNode(e);
                  t &&
                    t.debug(
                      "Re-enable focus that was prevented by jQuery UI draggable.",
                    ),
                    setTimeout(function () {
                      _(e.target).closest(":tabbable").focus();
                    }, 10);
                }
              }),
            t(e);
        },
        _setDndStatus: function (e, t, n, i, r) {
          let o;
          let s;
          let a = "center";
          const l = this._local;
          const c = this.options.dnd;
          const u = this.options.glyph;
          const d = e ? _(e.span) : null;
          const h = _(t.span);
          const p = h.find("span.fancytree-title");
          if (
            (l.$dropMarker ||
              ((l.$dropMarker = _("<div id='fancytree-drop-marker'></div>")
                .hide()
                .css({ "z-index": 1e3 })
                .prependTo(_(this.$div).parent())),
              u &&
                l.$dropMarker.addClass(
                  u.map._addClass + " " + u.map.dropMarker,
                )),
            i === "after" || i === "before" || i === "over")
          ) {
            switch (((o = c.dropMarkerOffsetX || 0), i)) {
              case "before":
                (a = "top"), (o += c.dropMarkerInsertOffsetX || 0);
                break;
              case "after":
                (a = "bottom"), (o += c.dropMarkerInsertOffsetX || 0);
            }
            (s = { my: "left" + f(o) + " center", at: "left " + a, of: p }),
              this.options.rtl &&
                ((s.my = "right" + f(-o) + " center"), (s.at = "right " + a)),
              l.$dropMarker
                .toggleClass(m, i === "after")
                .toggleClass(y, i === "over")
                .toggleClass(v, i === "before")
                .toggleClass("fancytree-rtl", !!this.options.rtl)
                .show()
                .position(_.ui.fancytree.fixPositionOptions(s));
          } else l.$dropMarker.hide();
          d && d.toggleClass(g, !0 === r).toggleClass(b, !1 === r),
            h
              .toggleClass(x, i === "after" || i === "before" || i === "over")
              .toggleClass(m, i === "after")
              .toggleClass(v, i === "before")
              .toggleClass(g, !0 === r)
              .toggleClass(b, !1 === r),
            n.toggleClass(g, !0 === r).toggleClass(b, !1 === r);
        },
        _onDragEvent: function (e, t, n, i, r, o) {
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          let p;
          let f;
          const g = this.options.dnd;
          const m = this._makeHookContext(t, i, {
            otherNode: n,
            ui: r,
            draggable: o,
          });
          let v = null;
          const y = this;
          const b = _(t.span);
          switch ((g.smartRevert && (o.options.revert = "invalid"), e)) {
            case "start":
              t.isStatusNode()
                ? (v = !1)
                : g.dragStart && (v = g.dragStart(t, m)),
                !1 === v
                  ? (this.debug("tree.dragStart() cancelled"),
                    r.helper.trigger("mouseup").hide())
                  : (g.smartRevert &&
                      ((c =
                        t[
                          m.tree.nodeContainerAttrName
                        ].getBoundingClientRect()),
                      (l = _(o.options.appendTo)[0].getBoundingClientRect()),
                      (o.originalPosition.left = Math.max(0, c.left - l.left)),
                      (o.originalPosition.top = Math.max(0, c.top - l.top))),
                    b.addClass("fancytree-drag-source"),
                    _(document).on(
                      "keydown.fancytree-dnd,mousedown.fancytree-dnd",
                      function (e) {
                        e.type === "keydown" && e.which === _.ui.keyCode.ESCAPE
                          ? y.ext.dnd._cancelDrag()
                          : e.type === "mousedown" && y.ext.dnd._cancelDrag();
                      },
                    ));
              break;
            case "enter":
              (v =
                !!(f =
                  (!g.preventRecursiveMoves || !t.isDescendantOf(n)) &&
                  (g.dragEnter ? g.dragEnter(t, m) : null)) &&
                (Array.isArray(f)
                  ? {
                      over: _.inArray("over", f) >= 0,
                      before: _.inArray("before", f) >= 0,
                      after: _.inArray("after", f) >= 0,
                    }
                  : {
                      over: !0 === f || f === "over",
                      before: !0 === f || f === "before",
                      after: !0 === f || f === "after",
                    })),
                r.helper.data("enterResponse", v);
              break;
            case "over":
              (p = null),
                !1 === (h = r.helper.data("enterResponse")) ||
                  (typeof h === "string"
                    ? (p = h)
                    : ((a = b.offset()),
                      (d = {
                        x:
                          (u = { x: i.pageX - a.left, y: i.pageY - a.top }).x /
                          b.width(),
                        y: u.y / b.height(),
                      }),
                      h.after && d.y > 0.75
                        ? (p = "after")
                        : !h.over && h.after && d.y > 0.5
                          ? (p = "after")
                          : h.before && d.y <= 0.25
                            ? (p = "before")
                            : !h.over && h.before && d.y <= 0.5
                              ? (p = "before")
                              : h.over && (p = "over"),
                      g.preventVoidMoves &&
                        (t === n
                          ? (this.debug("    drop over source node prevented"),
                            (p = null))
                          : p === "before" && n && t === n.getNextSibling()
                            ? (this.debug(
                                "    drop after source node prevented",
                              ),
                              (p = null))
                            : p === "after" && n && t === n.getPrevSibling()
                              ? (this.debug(
                                  "    drop before source node prevented",
                                ),
                                (p = null))
                              : p === "over" &&
                                n &&
                                n.parent === t &&
                                n.isLastSibling() &&
                                (this.debug(
                                  "    drop last child over own parent prevented",
                                ),
                                (p = null))),
                      r.helper.data("hitMode", p))),
                p === "before" ||
                  p === "after" ||
                  !g.autoExpandMS ||
                  !1 === t.hasChildren() ||
                  t.expanded ||
                  (g.dragExpand && !1 === g.dragExpand(t, m)) ||
                  t.scheduleAction("expand", g.autoExpandMS),
                p && g.dragOver && ((m.hitMode = p), (v = g.dragOver(t, m))),
                (s = !1 !== v && p !== null),
                g.smartRevert && (o.options.revert = !s),
                this._local._setDndStatus(n, t, r.helper, p, s);
              break;
            case "drop":
              (p = r.helper.data("hitMode")) &&
                g.dragDrop &&
                ((m.hitMode = p), g.dragDrop(t, m));
              break;
            case "leave":
              t.scheduleAction("cancel"),
                r.helper.data("enterResponse", null),
                r.helper.data("hitMode", null),
                this._local._setDndStatus(n, t, r.helper, "out", undefined),
                g.dragLeave && g.dragLeave(t, m);
              break;
            case "stop":
              b.removeClass("fancytree-drag-source"),
                _(document).off(".fancytree-dnd"),
                g.dragStop && g.dragStop(t, m);
              break;
            default:
              _.error("Unsupported drag event: " + e);
          }
          return v;
        },
        _cancelDrag: function () {
          const e = _.ui.ddmanager.current;
          e && e.cancel();
        },
      }),
      _.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (g) {
    "use strict";
    function f() {
      (A = I = l = P = O = L = M = null),
        p && p.removeClass(d + " " + h),
        (p = null),
        E && E.hide(),
        u && (u.remove(), (u = null));
    }
    function m(e) {
      return e === 0 ? "" : e > 0 ? "+" + e : "" + e;
    }
    function v(e) {
      let t;
      return (
        !!e &&
        ((t = g.isPlainObject(e)
          ? { over: !!e.over, before: !!e.before, after: !!e.after }
          : Array.isArray(e)
            ? {
                over: g.inArray("over", e) >= 0,
                before: g.inArray("before", e) >= 0,
                after: g.inArray("after", e) >= 0,
              }
            : {
                over: !0 === e || e === "over",
                before: !0 === e || e === "before",
                after: !0 === e || e === "after",
              }),
        Object.keys(t).length !== 0 && t)
      );
    }
    function y(e, t) {
      let n;
      let i;
      const r = e.options.dnd5;
      const o = e.$scrollParent[0];
      const s = r.scrollSensitivity;
      const a = r.scrollSpeed;
      let l = 0;
      return (
        o !== document && o.tagName !== "HTML"
          ? ((n = e.$scrollParent.offset()),
            (i = o.scrollTop),
            n.top + o.offsetHeight - t.pageY < s
              ? o.scrollHeight - e.$scrollParent.innerHeight() - i > 0 &&
                (o.scrollTop = l = i + a)
              : i > 0 && t.pageY - n.top < s && (o.scrollTop = l = i - a))
          : (i = g(document).scrollTop()) > 0 && t.pageY - i < s
            ? ((l = i - a), g(document).scrollTop(l))
            : g(window).height() - (t.pageY - i) < s &&
              ((l = i + a), g(document).scrollTop(l)),
        l && e.debug("autoScroll: " + l + "px"),
        l
      );
    }
    function r(e, t, n) {
      let i = n;
      return (
        o
          ? t.metaKey && t.altKey
            ? (i = "link")
            : t.ctrlKey
              ? (i = "link")
              : t.metaKey
                ? (i = "move")
                : t.altKey && (i = "copy")
          : t.ctrlKey
            ? (i = "copy")
            : t.shiftKey
              ? (i = "move")
              : t.altKey && (i = "link"),
        i !== l &&
          e.info(
            "evalEffectModifiers: " +
              t.type +
              " - evalEffectModifiers(): " +
              l +
              " -> " +
              i,
          ),
        (l = i)
      );
    }
    function b(e, t) {
      const n = t.tree;
      const i = t.dataTransfer;
      e.type === "dragstart"
        ? ((t.effectAllowed = n.options.dnd5.effectAllowed),
          (t.dropEffect = n.options.dnd5.dropEffectDefault))
        : ((t.effectAllowed = P), (t.dropEffect = O)),
        (t.dropEffectSuggested = r(n, e, n.options.dnd5.dropEffectDefault)),
        (t.isMove = t.dropEffect === "move"),
        (t.files = i.files || []);
    }
    function _(e, t, n) {
      const i = t.tree;
      const r = t.dataTransfer;
      return (
        e.type !== "dragstart" &&
          P !== t.effectAllowed &&
          i.warn(
            "effectAllowed should only be changed in dragstart event: " +
              e.type +
              ": data.effectAllowed changed from " +
              P +
              " -> " +
              t.effectAllowed,
          ),
        !1 === n &&
          (i.info("applyDropEffectCallback: allowDrop === false"),
          (t.effectAllowed = "none"),
          (t.dropEffect = "none")),
        (t.isMove = t.dropEffect === "move"),
        e.type === "dragstart" && ((P = t.effectAllowed), (O = t.dropEffect)),
        (r.effectAllowed = P),
        (r.dropEffect = O)
      );
    }
    function x(e, t) {
      if ((t.options.dnd5.scroll && y(t.tree, e), !t.node)) {
        return t.tree.warn("Ignored dragover for non-node"), F;
      }
      let n;
      let i;
      let r;
      let o;
      let s = null;
      const a = t.tree;
      const l = a.options;
      const c = l.dnd5;
      const u = t.node;
      const d = t.otherNode;
      let h = "center";
      const p = g(u.span);
      const f = p.find("span.fancytree-title");
      if (!1 === M) {
        return a.debug("Ignored dragover, since dragenter returned false."), !1;
      }
      (typeof M === "string" &&
        g.error("assert failed: dragenter returned string"),
      (i = p.offset()),
      (o = (e.pageY - i.top) / p.height()),
      e.pageY === undefined &&
        a.warn("event.pageY is undefined: see issue #1013."),
      M.after && o > 0.75
        ? (s = "after")
        : !M.over && M.after && o > 0.5
          ? (s = "after")
          : M.before && o <= 0.25
            ? (s = "before")
            : !M.over && M.before && o <= 0.5
              ? (s = "before")
              : M.over && (s = "over"),
      c.preventVoidMoves &&
        t.dropEffect === "move" &&
        (u === d
          ? (u.debug("Drop over source node prevented."), (s = null))
          : s === "before" && d && u === d.getNextSibling()
            ? (u.debug("Drop after source node prevented."), (s = null))
            : s === "after" && d && u === d.getPrevSibling()
              ? (u.debug("Drop before source node prevented."), (s = null))
              : s === "over" &&
                d &&
                d.parent === u &&
                d.isLastSibling() &&
                (u.debug("Drop last child over own parent prevented."),
                (s = null))),
      (t.hitMode = s) && c.dragOver) &&
        (b(e, t), c.dragOver(u, t), _(e, t, !!s), (s = t.hitMode));
      if ((F = s) === "after" || s === "before" || s === "over") {
        switch (((n = c.dropMarkerOffsetX || 0), s)) {
          case "before":
            (h = "top"), (n += c.dropMarkerInsertOffsetX || 0);
            break;
          case "after":
            (h = "bottom"), (n += c.dropMarkerInsertOffsetX || 0);
        }
        (r = { my: "left" + m(n) + " center", at: "left " + h, of: f }),
          l.rtl &&
            ((r.my = "right" + m(-n) + " center"), (r.at = "right " + h)),
          E.toggleClass(k, s === "after")
            .toggleClass(T, s === "over")
            .toggleClass(S, s === "before")
            .show()
            .position(w.fixPositionOptions(r));
      } else E.hide();
      return (
        g(u.span)
          .toggleClass(j, s === "after" || s === "before" || s === "over")
          .toggleClass(k, s === "after")
          .toggleClass(S, s === "before")
          .toggleClass(C, s === "over")
          .toggleClass(D, !1 === s),
        s
      );
    }
    function s(e) {
      let t;
      const n = this;
      const i = n.options.dnd5;
      const r = w.getNode(e);
      const o = e.dataTransfer || e.originalEvent.dataTransfer;
      const s = {
        tree: n,
        node: r,
        options: n.options,
        originalEvent: e.originalEvent,
        widget: n.widget,
        dataTransfer: o,
        useDefaultImage: !0,
        dropEffect: undefined,
        dropEffectSuggested: undefined,
        effectAllowed: undefined,
        files: undefined,
        isCancelled: undefined,
        isMove: undefined,
      };
      switch (e.type) {
        case "dragstart":
          if (!r) return n.info("Ignored dragstart on a non-node."), !1;
          (I = r),
            (A =
              !1 === i.multiSource
                ? [r]
                : !0 === i.multiSource
                  ? r.isSelected()
                    ? n.getSelectedNodes()
                    : [r]
                  : i.multiSource(r, s)),
            (p = g(
              g.map(A, function (e) {
                return e.span;
              }),
            )).addClass(d);
          var a = r.toDict(!0, i.sourceCopyHook);
          (a.treeId = r.tree._id), (t = JSON.stringify(a));
          try {
            o.setData(N, t),
              o.setData("text/html", g(r.span).html()),
              o.setData("text/plain", r.title);
          } catch (l) {
            n.warn("Could not set data (IE only accepts 'text') - " + l);
          }
          return (
            i.setTextTypeJson
              ? o.setData("text", t)
              : o.setData("text", r.title),
            b(e, s),
            !1 === i.dragStart(r, s)
              ? (f(), !1)
              : (_(e, s),
                (u = null),
                s.useDefaultImage &&
                  ((c = g(r.span).find(".fancytree-title")),
                  A &&
                    A.length > 1 &&
                    (u = g("<span class='fancytree-childcounter'/>")
                      .text("+" + (A.length - 1))
                      .appendTo(c)),
                  o.setDragImage && o.setDragImage(c[0], -10, -10)),
                !0)
          );
        case "drag":
          b(e, s), i.dragDrag(r, s), _(e, s), p.toggleClass(h, s.isMove);
          break;
        case "dragend":
          b(e, s), f(), (s.isCancelled = !F), i.dragEnd(r, s, !F);
      }
    }
    function a(e) {
      let t;
      let n;
      let i;
      let r;
      const o = this;
      const s = o.options.dnd5;
      let a = null;
      const l = w.getNode(e);
      const c = e.dataTransfer || e.originalEvent.dataTransfer;
      const u = {
        tree: o,
        node: l,
        options: o.options,
        originalEvent: e.originalEvent,
        widget: o.widget,
        hitMode: M,
        dataTransfer: c,
        otherNode: I || null,
        otherNodeList: A || null,
        otherNodeData: null,
        useDefaultImage: !0,
        dropEffect: undefined,
        dropEffectSuggested: undefined,
        effectAllowed: undefined,
        files: null,
        isCancelled: undefined,
        isMove: undefined,
      };
      switch (e.type) {
        case "dragenter":
          if (((L = null), !l)) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            ),
              (M = !1);
            break;
          }
          if (
            (g(l.span)
              .addClass(T)
              .removeClass(C + " " + D),
            (i = g.inArray(N, c.types) >= 0),
            s.preventNonNodes && !i)
          ) {
            l.debug("Reject dropping a non-node."), (M = !1);
            break;
          }
          if (s.preventForeignNodes && (!I || I.tree !== l.tree)) {
            l.debug("Reject dropping a foreign node."), (M = !1);
            break;
          }
          if (
            s.preventSameParent &&
            u.otherNode &&
            u.otherNode.tree === l.tree &&
            l.parent === u.otherNode.parent
          ) {
            l.debug("Reject dropping as sibling (same parent)."), (M = !1);
            break;
          }
          if (
            s.preventRecursion &&
            u.otherNode &&
            u.otherNode.tree === l.tree &&
            l.isDescendantOf(u.otherNode)
          ) {
            l.debug("Reject dropping below own ancestor."), (M = !1);
            break;
          }
          if (s.preventLazyParents && !l.isLoaded()) {
            l.warn("Drop over unloaded target node prevented."), (M = !1);
            break;
          }
          E.show(),
            b(e, u),
            (r = v(s.dragEnter(l, u))),
            _(e, u, (a = (M = r) && (r.over || r.before || r.after)));
          break;
        case "dragover":
          if (!l) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            );
            break;
          }
          b(e, u),
            (a = !!(F = x(e, u))),
            (F === "over" || !1 === F) && !l.expanded && !1 !== l.hasChildren()
              ? L
                ? !(s.autoExpandMS && Date.now() - L > s.autoExpandMS) ||
                  l.isLoading() ||
                  (s.dragExpand && !1 === s.dragExpand(l, u)) ||
                  l.setExpanded()
                : (L = Date.now())
              : (L = null);
          break;
        case "dragleave":
          if (!l) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            );
            break;
          }
          if (!g(l.span).hasClass(T)) {
            l.debug("Ignore dragleave (multi).");
            break;
          }
          g(l.span).removeClass(T + " " + C + " " + D),
            l.scheduleAction("cancel"),
            s.dragLeave(l, u),
            E.hide();
          break;
        case "drop":
          if (
            (g.inArray(N, c.types) >= 0 &&
              ((n = c.getData(N)),
              o.info(
                e.type +
                  ": getData('application/x-fancytree-node'): '" +
                  n +
                  "'",
              )),
            n ||
              ((n = c.getData("text")),
              o.info(e.type + ": getData('text'): '" + n + "'")),
            n)
          ) {
            try {
              (t = JSON.parse(n)).title !== undefined && (u.otherNodeData = t);
            } catch (p) {}
          }
          o.debug(
            e.type + ": nodeData: '" + n + "', otherNodeData: ",
            u.otherNodeData,
          ),
            g(l.span).removeClass(T + " " + C + " " + D),
            (u.hitMode = F),
            b(e, u, !F),
            (u.isCancelled = !F);
          var d = I && I.span;
          var h = I && I.tree;
          s.dragDrop(l, u),
            e.preventDefault(),
            d &&
              !document.body.contains(d) &&
              (h === o
                ? (o.debug(
                    "Drop handler removed source element: generating dragEnd.",
                  ),
                  s.dragEnd(I, u))
                : o.warn(
                    "Drop handler removed source element: dragend event may be lost.",
                  )),
            f();
      }
      if (a) return e.preventDefault(), !1;
    }
    let c;
    let u;
    var w = g.ui.fancytree;
    var o = /Mac/.test(navigator.platform);
    var d = "fancytree-drag-source";
    var h = "fancytree-drag-remove";
    var C = "fancytree-drop-accept";
    var k = "fancytree-drop-after";
    var S = "fancytree-drop-before";
    var T = "fancytree-drop-over";
    var D = "fancytree-drop-reject";
    var j = "fancytree-drop-target";
    var N = "application/x-fancytree-node";
    var E = null;
    var I = null;
    var A = null;
    var p = null;
    var M = null;
    var l = null;
    var O = null;
    var P = null;
    var F = null;
    var L = null;
    return (
      (g.ui.fancytree.getDragNodeList = function () {
        return A || [];
      }),
      (g.ui.fancytree.getDragNode = function () {
        return I;
      }),
      g.ui.fancytree.registerExtension({
        name: "dnd5",
        version: "2.38.1",
        options: {
          autoExpandMS: 1500,
          dropMarkerInsertOffsetX: -16,
          dropMarkerOffsetX: -24,
          dropMarkerParent: "body",
          multiSource: !1,
          effectAllowed: "all",
          dropEffectDefault: "move",
          preventForeignNodes: !1,
          preventLazyParents: !0,
          preventNonNodes: !1,
          preventRecursion: !0,
          preventSameParent: !1,
          preventVoidMoves: !0,
          scroll: !0,
          scrollSensitivity: 20,
          scrollSpeed: 5,
          setTextTypeJson: !1,
          sourceCopyHook: null,
          dragStart: null,
          dragDrag: g.noop,
          dragEnd: g.noop,
          dragEnter: null,
          dragOver: g.noop,
          dragExpand: g.noop,
          dragDrop: g.noop,
          dragLeave: g.noop,
        },
        treeInit: function (e) {
          let t;
          const n = e.tree;
          const i = e.options;
          const r = i.glyph || null;
          const o = i.dnd5;
          g.inArray("dnd", i.extensions) >= 0 &&
            g.error("Extensions 'dnd' and 'dnd5' are mutually exclusive."),
            o.dragStop &&
              g.error("dragStop is not used by ext-dnd5. Use dragEnd instead."),
            o.preventRecursiveMoves != null &&
              g.error("preventRecursiveMoves was renamed to preventRecursion."),
            o.dragStart &&
              w.overrideMethod(e.options, "createNode", function (e, t) {
                this._super.apply(this, arguments),
                  t.node.span
                    ? (t.node.span.draggable = !0)
                    : t.node.warn("Cannot add `draggable`: no span tag");
              }),
            this._superApply(arguments),
            this.$container.addClass("fancytree-ext-dnd5"),
            (t = g("<span>").appendTo(this.$container)),
            (this.$scrollParent = t.scrollParent()),
            t.remove(),
            (E = g("#fancytree-drop-marker")).length ||
              ((E = g("<div id='fancytree-drop-marker'></div>")
                .hide()
                .css({ "z-index": 1e3, "pointer-events": "none" })
                .prependTo(o.dropMarkerParent)),
              r && w.setSpanIcon(E[0], r.map._addClass, r.map.dropMarker)),
            E.toggleClass("fancytree-rtl", !!i.rtl),
            o.dragStart && n.$container.on("dragstart drag dragend", s.bind(n)),
            o.dragEnter &&
              n.$container.on("dragenter dragover dragleave drop", a.bind(n));
        },
      }),
      g.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (c) {
    "use strict";
    const t = /Mac/.test(navigator.platform);
    const u = c.ui.fancytree.escapeHtml;
    const d = c.ui.fancytree.trim;
    const a = c.ui.fancytree.unescapeHtml;
    return (
      (c.ui.fancytree._FancytreeNodeClass.prototype.editStart = function () {
        let e;
        const t = this;
        const n = this.tree;
        const i = n.ext.edit;
        const r = n.options.edit;
        const o = c(".fancytree-title", t.span);
        const s = {
          node: t,
          tree: n,
          options: n.options,
          isNew: c(t[n.statusClassPropName]).hasClass("fancytree-edit-new"),
          orgTitle: t.title,
          input: null,
          dirty: !1,
        };
        if (!1 === r.beforeEdit.call(t, { type: "beforeEdit" }, s)) return !1;
        c.ui.fancytree.assert(!i.currentNode, "recursive edit"),
          (i.currentNode = this),
          (i.eventData = s),
          n.widget._unbind(),
          (i.lastDraggableAttrValue = t.span.draggable),
          i.lastDraggableAttrValue && (t.span.draggable = !1),
          c(document).on("mousedown.fancytree-edit", function (e) {
            c(e.target).hasClass("fancytree-edit-input") || t.editEnd(!0, e);
          }),
          (e = c("<input />", {
            class: "fancytree-edit-input",
            type: "text",
            value: n.options.escapeTitles ? s.orgTitle : a(s.orgTitle),
          })),
          (i.eventData.input = e),
          r.adjustWidthOfs != null && e.width(o.width() + r.adjustWidthOfs),
          r.inputCss != null && e.css(r.inputCss),
          o.html(e),
          e
            .focus()
            .change(function () {
              e.addClass("fancytree-edit-dirty");
            })
            .on("keydown", function (e) {
              switch (e.which) {
                case c.ui.keyCode.ESCAPE:
                  t.editEnd(!1, e);
                  break;
                case c.ui.keyCode.ENTER:
                  return t.editEnd(!0, e), !1;
              }
              e.stopPropagation();
            })
            .blur(function (e) {
              return t.editEnd(!0, e);
            }),
          r.edit.call(t, { type: "edit" }, s);
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function (e, t) {
        let n;
        let i = this;
        const r = this.tree;
        const o = r.ext.edit;
        const s = o.eventData;
        const a = r.options.edit;
        const l = c(".fancytree-title", i.span).find(
          "input.fancytree-edit-input",
        );
        return (
          a.trim && l.val(d(l.val())),
          (n = l.val()),
          (s.dirty = n !== i.title),
          (s.originalEvent = t),
          !1 === e
            ? (s.save = !1)
            : s.isNew
              ? (s.save = n !== "")
              : (s.save = s.dirty && n !== ""),
          !1 !== a.beforeClose.call(i, { type: "beforeClose" }, s) &&
            (!s.save || !1 !== a.save.call(i, { type: "save" }, s)) &&
            (l.removeClass("fancytree-edit-dirty").off(),
            c(document).off(".fancytree-edit"),
            s.save
              ? (i.setTitle(r.options.escapeTitles ? n : u(n)), i.setFocus())
              : s.isNew
                ? (i.remove(), (i = s.node = null), o.relatedNode.setFocus())
                : (i.renderTitle(), i.setFocus()),
            (o.eventData = null),
            (o.currentNode = null),
            (o.relatedNode = null),
            r.widget._bind(),
            i && o.lastDraggableAttrValue && (i.span.draggable = !0),
            r.$container.get(0).focus({ preventScroll: !0 }),
            (s.input = null),
            a.close.call(i, { type: "close" }, s),
            !0)
        );
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function (
        e,
        t,
      ) {
        let n;
        const i = this.tree;
        const r = this;
        (e = e || "child"),
          t == null
            ? (t = { title: "" })
            : typeof t === "string"
              ? (t = { title: t })
              : c.ui.fancytree.assert(c.isPlainObject(t)),
          e !== "child" || this.isExpanded() || !1 === this.hasChildren()
            ? (((n = this.addNode(t, e)).match = !0),
              c(n[i.statusClassPropName])
                .removeClass("fancytree-hide")
                .addClass("fancytree-match"),
              n.makeVisible().done(function () {
                c(n[i.statusClassPropName]).addClass("fancytree-edit-new"),
                  (r.tree.ext.edit.relatedNode = r),
                  n.editStart();
              }))
            : this.setExpanded().done(function () {
                r.editCreateNode(e, t);
              });
      }),
      (c.ui.fancytree._FancytreeClass.prototype.isEditing = function () {
        return this.ext.edit ? this.ext.edit.currentNode : null;
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function () {
        return !!this.tree.ext.edit && this.tree.ext.edit.currentNode === this;
      }),
      c.ui.fancytree.registerExtension({
        name: "edit",
        version: "2.38.1",
        options: {
          adjustWidthOfs: 4,
          allowEmpty: !1,
          inputCss: { minWidth: "3em" },
          triggerStart: ["f2", "mac+enter", "shift+click"],
          trim: !0,
          beforeClose: c.noop,
          beforeEdit: c.noop,
          close: c.noop,
          edit: c.noop,
          save: c.noop,
        },
        currentNode: null,
        treeInit: function (e) {
          const n = e.tree;
          this._superApply(arguments),
            this.$container
              .addClass("fancytree-ext-edit")
              .on("fancytreebeforeupdateviewport", function (e) {
                const t = n.isEditing();
                t &&
                  (t.info("Cancel edit due to scroll event."),
                  t.editEnd(!1, e));
              });
        },
        nodeClick: function (e) {
          const t = c.ui.fancytree.eventToString(e.originalEvent);
          const n = e.options.edit.triggerStart;
          return t === "shift+click" &&
            c.inArray("shift+click", n) >= 0 &&
            e.originalEvent.shiftKey
            ? (e.node.editStart(), !1)
            : t === "click" &&
                c.inArray("clickActive", n) >= 0 &&
                e.node.isActive() &&
                !e.node.isEditing() &&
                c(e.originalEvent.target).hasClass("fancytree-title")
              ? (e.node.editStart(), !1)
              : this._superApply(arguments);
        },
        nodeDblclick: function (e) {
          return c.inArray("dblclick", e.options.edit.triggerStart) >= 0
            ? (e.node.editStart(), !1)
            : this._superApply(arguments);
        },
        nodeKeydown: function (e) {
          switch (e.originalEvent.which) {
            case 113:
              if (c.inArray("f2", e.options.edit.triggerStart) >= 0) {
                return e.node.editStart(), !1;
              }
              break;
            case c.ui.keyCode.ENTER:
              if (
                c.inArray("mac+enter", e.options.edit.triggerStart) >= 0 &&
                t
              ) {
                return e.node.editStart(), !1;
              }
          }
          return this._superApply(arguments);
        },
      }),
      c.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (y) {
    "use strict";
    function b(e) {
      return (e + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
    }
    function _(e) {
      return e.indexOf(">") >= 0 ? y("<div/>").html(e).text() : e;
    }
    function x(e, t, n) {
      for (var i = [], r = 1; r < t.length; r++) {
        const o = t[r].length + (r === 1 ? 0 : 1) + (i[i.length - 1] || 0);
        i.push(o);
      }
      const s = e.split("");
      return (
        n
          ? i.forEach(function (e) {
              s[e] = k + s[e] + S;
            })
          : i.forEach(function (e) {
              s[e] = "<mark>" + s[e] + "</mark>";
            }),
        s.join("")
      );
    }
    const w = "__not_found__";
    const C = y.ui.fancytree.escapeHtml;
    var k = "\ufff7";
    var S = "\ufff8";
    return (
      (y.ui.fancytree._FancytreeClass.prototype._applyFilterImpl = function (
        i,
        r,
        e,
      ) {
        let t;
        let n;
        let o;
        let s;
        let a;
        let l;
        let c;
        let u;
        let d = 0;
        const h = this.options;
        const p = h.escapeTitles;
        const f = h.autoCollapse;
        const g = y.extend({}, h.filter, e);
        const m = g.mode === "hide";
        const v = !!g.leavesOnly && !r;
        if (typeof i === "string") {
          if (i === "") {
            return (
              this.warn(
                "Fancytree passing an empty string as a filter is handled as clearFilter().",
              ),
              void this.clearFilter()
            );
          }
          (t = g.fuzzy
            ? i
                .split("")
                .map(b)
                .reduce(function (e, t) {
                  return e + "([^" + t + "]*)" + t;
                }, "")
            : b(i)),
            (o = new RegExp(t, "i")),
            (s = new RegExp(b(i), "gi")),
            p && ((a = new RegExp(b(k), "g")), (l = new RegExp(b(S), "g"))),
            (i = function (e) {
              if (!e.title) return !1;
              const t = p ? e.title : _(e.title);
              const n = t.match(o);
              return (
                n &&
                  g.highlight &&
                  (p
                    ? ((c = g.fuzzy
                        ? x(t, n, p)
                        : t.replace(s, function (e) {
                            return k + e + S;
                          })),
                      (e.titleWithHighlight = C(c)
                        .replace(a, "<mark>")
                        .replace(l, "</mark>")))
                    : g.fuzzy
                      ? (e.titleWithHighlight = x(t, n))
                      : (e.titleWithHighlight = t.replace(s, function (e) {
                          return "<mark>" + e + "</mark>";
                        }))),
                !!n
              );
            });
        }
        return (
          (this.enableFilter = !0),
          (this.lastFilterArgs = arguments),
          (u = this.enableUpdate(!1)),
          this.$div.addClass("fancytree-ext-filter"),
          m
            ? this.$div.addClass("fancytree-ext-filter-hide")
            : this.$div.addClass("fancytree-ext-filter-dimm"),
          this.$div.toggleClass(
            "fancytree-ext-filter-hide-expanders",
            !!g.hideExpanders,
          ),
          (this.rootNode.subMatchCount = 0),
          this.visit(function (e) {
            delete e.match, delete e.titleWithHighlight, (e.subMatchCount = 0);
          }),
          (n = this.getRootNode()._findDirectChild(w)) && n.remove(),
          (h.autoCollapse = !1),
          this.visit(function (t) {
            if (!v || t.children == null) {
              let e = i(t);
              let n = !1;
              if (e === "skip") {
                return (
                  t.visit(function (e) {
                    e.match = !1;
                  }, !0),
                  "skip"
                );
              }
              e || (!r && e !== "branch") || !t.parent.match || (n = e = !0),
                e &&
                  (d++,
                  (t.match = !0),
                  t.visitParents(function (e) {
                    e !== t && (e.subMatchCount += 1),
                      !g.autoExpand ||
                        n ||
                        e.expanded ||
                        (e.setExpanded(!0, {
                          noAnimation: !0,
                          noEvents: !0,
                          scrollIntoView: !1,
                        }),
                        (e._filterAutoExpanded = !0));
                  }, !0));
            }
          }),
          (h.autoCollapse = f),
          d === 0 &&
            g.nodata &&
            m &&
            (typeof (n = g.nodata) === "function" && (n = n()),
            !0 === n ? (n = {}) : typeof n === "string" && (n = { title: n }),
            (n = y.extend(
              {
                statusNodeType: "nodata",
                key: w,
                title: this.options.strings.noData,
              },
              n,
            )),
            (this.getRootNode().addNode(n).match = !0)),
          this._callHook("treeStructureChanged", this, "applyFilter"),
          this.enableUpdate(u),
          d
        );
      }),
      (y.ui.fancytree._FancytreeClass.prototype.filterNodes = function (e, t) {
        return (
          typeof t === "boolean" &&
            ((t = { leavesOnly: t }),
            this.warn(
              "Fancytree.filterNodes() leavesOnly option is deprecated since 2.9.0 / 2015-04-19. Use opts.leavesOnly instead.",
            )),
          this._applyFilterImpl(e, !1, t)
        );
      }),
      (y.ui.fancytree._FancytreeClass.prototype.filterBranches = function (
        e,
        t,
      ) {
        return this._applyFilterImpl(e, !0, t);
      }),
      (y.ui.fancytree._FancytreeClass.prototype.updateFilter = function () {
        this.enableFilter &&
        this.lastFilterArgs &&
        this.options.filter.autoApply
          ? this._applyFilterImpl.apply(this, this.lastFilterArgs)
          : this.warn("updateFilter(): no filter active.");
      }),
      (y.ui.fancytree._FancytreeClass.prototype.clearFilter = function () {
        let t;
        const e = this.getRootNode()._findDirectChild(w);
        const n = this.options.escapeTitles;
        const i = this.options.enhanceTitle;
        const r = this.enableUpdate(!1);
        e && e.remove(),
          delete this.rootNode.match,
          delete this.rootNode.subMatchCount,
          this.visit(function (e) {
            e.match &&
              e.span &&
              ((t = y(e.span).find(">span.fancytree-title")),
              n ? t.text(e.title) : t.html(e.title),
              i && i({ type: "enhanceTitle" }, { node: e, $title: t })),
              delete e.match,
              delete e.subMatchCount,
              delete e.titleWithHighlight,
              e.$subMatchBadge &&
                (e.$subMatchBadge.remove(), delete e.$subMatchBadge),
              e._filterAutoExpanded &&
                e.expanded &&
                e.setExpanded(!1, {
                  noAnimation: !0,
                  noEvents: !0,
                  scrollIntoView: !1,
                }),
              delete e._filterAutoExpanded;
          }),
          (this.enableFilter = !1),
          (this.lastFilterArgs = null),
          this.$div.removeClass(
            "fancytree-ext-filter fancytree-ext-filter-dimm fancytree-ext-filter-hide",
          ),
          this._callHook("treeStructureChanged", this, "clearFilter"),
          this.enableUpdate(r);
      }),
      (y.ui.fancytree._FancytreeClass.prototype.isFilterActive = function () {
        return !!this.enableFilter;
      }),
      (y.ui.fancytree._FancytreeNodeClass.prototype.isMatched = function () {
        return !(this.tree.enableFilter && !this.match);
      }),
      y.ui.fancytree.registerExtension({
        name: "filter",
        version: "2.38.1",
        options: {
          autoApply: !0,
          autoExpand: !1,
          counter: !0,
          fuzzy: !1,
          hideExpandedCounter: !0,
          hideExpanders: !1,
          highlight: !0,
          leavesOnly: !1,
          nodata: !0,
          mode: "dimm",
        },
        nodeLoadChildren: function (e) {
          const t = e.tree;
          return this._superApply(arguments).done(function () {
            t.enableFilter &&
              t.lastFilterArgs &&
              e.options.filter.autoApply &&
              t._applyFilterImpl.apply(t, t.lastFilterArgs);
          });
        },
        nodeSetExpanded: function (e, t) {
          const n = e.node;
          return (
            delete n._filterAutoExpanded,
            !t &&
              e.options.filter.hideExpandedCounter &&
              n.$subMatchBadge &&
              n.$subMatchBadge.show(),
            this._superApply(arguments)
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = e.tree;
          const r = e.options.filter;
          const o = y(n.span).find("span.fancytree-title");
          const s = y(n[i.statusClassPropName]);
          const a = e.options.enhanceTitle;
          const l = e.options.escapeTitles;
          return (
            (t = this._super(e)),
            s.length &&
              i.enableFilter &&
              (s
                .toggleClass("fancytree-match", !!n.match)
                .toggleClass("fancytree-submatch", !!n.subMatchCount)
                .toggleClass("fancytree-hide", !(n.match || n.subMatchCount)),
              !r.counter ||
              !n.subMatchCount ||
              (n.isExpanded() && r.hideExpandedCounter)
                ? n.$subMatchBadge && n.$subMatchBadge.hide()
                : (n.$subMatchBadge ||
                    ((n.$subMatchBadge = y(
                      "<span class='fancytree-childcounter'/>",
                    )),
                    y(
                      "span.fancytree-icon, span.fancytree-custom-icon",
                      n.span,
                    ).append(n.$subMatchBadge)),
                  n.$subMatchBadge.show().text(n.subMatchCount)),
              !n.span ||
                (n.isEditing && n.isEditing.call(n)) ||
                (n.titleWithHighlight
                  ? o.html(n.titleWithHighlight)
                  : l
                    ? o.text(n.title)
                    : o.html(n.title),
                a && a({ type: "enhanceTitle" }, { node: n, $title: o }))),
            t
          );
        },
      }),
      y.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (u) {
    "use strict";
    function a(e, t, n, i, r) {
      const o = i.map;
      let s = o[r];
      const a = u(t);
      const l = a.find(".fancytree-childcounter");
      const c = n + " " + (o._addClass || "");
      typeof s === "function" && (s = s.call(this, e, t, r)),
        typeof s === "string"
          ? ((t.innerHTML = ""), a.attr("class", c + " " + s).append(l))
          : s &&
            (s.text
              ? (t.textContent = "" + s.text)
              : s.html
                ? (t.innerHTML = s.html)
                : (t.innerHTML = ""),
            a.attr("class", c + " " + (s.addClass || "")).append(l));
    }
    const l = u.ui.fancytree;
    const i = {
      awesome3: {
        _addClass: "",
        checkbox: "icon-check-empty",
        checkboxSelected: "icon-check",
        checkboxUnknown: "icon-check icon-muted",
        dragHelper: "icon-caret-right",
        dropMarker: "icon-caret-right",
        error: "icon-exclamation-sign",
        expanderClosed: "icon-caret-right",
        expanderLazy: "icon-angle-right",
        expanderOpen: "icon-caret-down",
        loading: "icon-refresh icon-spin",
        nodata: "icon-meh",
        noExpander: "",
        radio: "icon-circle-blank",
        radioSelected: "icon-circle",
        doc: "icon-file-alt",
        docOpen: "icon-file-alt",
        folder: "icon-folder-close-alt",
        folderOpen: "icon-folder-open-alt",
      },
      awesome4: {
        _addClass: "fa",
        checkbox: "fa-square-o",
        checkboxSelected: "fa-check-square-o",
        checkboxUnknown: "fa-square fancytree-helper-indeterminate-cb",
        dragHelper: "fa-arrow-right",
        dropMarker: "fa-long-arrow-right",
        error: "fa-warning",
        expanderClosed: "fa-caret-right",
        expanderLazy: "fa-angle-right",
        expanderOpen: "fa-caret-down",
        loading: { html: "<span class='fa fa-spinner fa-pulse' />" },
        nodata: "fa-meh-o",
        noExpander: "",
        radio: "fa-circle-thin",
        radioSelected: "fa-circle",
        doc: "fa-file-o",
        docOpen: "fa-file-o",
        folder: "fa-folder-o",
        folderOpen: "fa-folder-open-o",
      },
      awesome5: {
        _addClass: "",
        checkbox: "far fa-square",
        checkboxSelected: "far fa-check-square",
        checkboxUnknown: "fas fa-square fancytree-helper-indeterminate-cb",
        radio: "far fa-circle",
        radioSelected: "fas fa-circle",
        radioUnknown: "far fa-dot-circle",
        dragHelper: "fas fa-arrow-right",
        dropMarker: "fas fa-long-arrow-alt-right",
        error: "fas fa-exclamation-triangle",
        expanderClosed: "fas fa-caret-right",
        expanderLazy: "fas fa-angle-right",
        expanderOpen: "fas fa-caret-down",
        loading: "fas fa-spinner fa-pulse",
        nodata: "far fa-meh",
        noExpander: "",
        doc: "far fa-file",
        docOpen: "far fa-file",
        folder: "far fa-folder",
        folderOpen: "far fa-folder-open",
      },
      bootstrap3: {
        _addClass: "glyphicon",
        checkbox: "glyphicon-unchecked",
        checkboxSelected: "glyphicon-check",
        checkboxUnknown: "glyphicon-expand fancytree-helper-indeterminate-cb",
        dragHelper: "glyphicon-play",
        dropMarker: "glyphicon-arrow-right",
        error: "glyphicon-warning-sign",
        expanderClosed: "glyphicon-menu-right",
        expanderLazy: "glyphicon-menu-right",
        expanderOpen: "glyphicon-menu-down",
        loading: "glyphicon-refresh fancytree-helper-spin",
        nodata: "glyphicon-info-sign",
        noExpander: "",
        radio: "glyphicon-remove-circle",
        radioSelected: "glyphicon-ok-circle",
        doc: "glyphicon-file",
        docOpen: "glyphicon-file",
        folder: "glyphicon-folder-close",
        folderOpen: "glyphicon-folder-open",
      },
      material: {
        _addClass: "material-icons",
        checkbox: { text: "check_box_outline_blank" },
        checkboxSelected: { text: "check_box" },
        checkboxUnknown: { text: "indeterminate_check_box" },
        dragHelper: { text: "play_arrow" },
        dropMarker: { text: "arrow-forward" },
        error: { text: "warning" },
        expanderClosed: { text: "chevron_right" },
        expanderLazy: { text: "last_page" },
        expanderOpen: { text: "expand_more" },
        loading: { text: "autorenew", addClass: "fancytree-helper-spin" },
        nodata: { text: "info" },
        noExpander: { text: "" },
        radio: { text: "radio_button_unchecked" },
        radioSelected: { text: "radio_button_checked" },
        doc: { text: "insert_drive_file" },
        docOpen: { text: "insert_drive_file" },
        folder: { text: "folder" },
        folderOpen: { text: "folder_open" },
      },
    };
    return (
      u.ui.fancytree.registerExtension({
        name: "glyph",
        version: "2.38.1",
        options: { preset: null, map: {} },
        treeInit: function (e) {
          const t = e.tree;
          const n = e.options.glyph;
          n.preset
            ? (l.assert(
                !!i[n.preset],
                "Invalid value for `options.glyph.preset`: " + n.preset,
              ),
              (n.map = u.extend({}, i[n.preset], n.map)))
            : t.warn("ext-glyph: missing `preset` option."),
            this._superApply(arguments),
            t.$container.addClass("fancytree-ext-glyph");
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          let i;
          const r = e.node;
          const o = u(r.span);
          const s = e.options.glyph;
          return (
            (n = this._super(e)),
            r.isRootNode() ||
              ((i = o.children(".fancytree-expander").get(0)) &&
                a(
                  r,
                  i,
                  "fancytree-expander",
                  s,
                  r.expanded && r.hasChildren()
                    ? "expanderOpen"
                    : r.isUndefined()
                      ? "expanderLazy"
                      : r.hasChildren()
                        ? "expanderClosed"
                        : "noExpander",
                ),
              (i = r.tr
                ? u("td", r.tr).find(".fancytree-checkbox").get(0)
                : o.children(".fancytree-checkbox").get(0)) &&
                ((t = l.evalOption("checkbox", r, r, s, !1)),
                (r.parent && r.parent.radiogroup) || t === "radio"
                  ? a(
                      r,
                      i,
                      "fancytree-checkbox fancytree-radio",
                      s,
                      r.selected ? "radioSelected" : "radio",
                    )
                  : a(
                      r,
                      i,
                      "fancytree-checkbox",
                      s,
                      r.selected
                        ? "checkboxSelected"
                        : r.partsel
                          ? "checkboxUnknown"
                          : "checkbox",
                    )),
              (i = o.children(".fancytree-icon").get(0)) &&
                a(
                  r,
                  i,
                  "fancytree-icon",
                  s,
                  r.statusNodeType
                    ? r.statusNodeType
                    : r.folder
                      ? r.expanded && r.hasChildren()
                        ? "folderOpen"
                        : "folder"
                      : r.expanded
                        ? "docOpen"
                        : "doc",
                )),
            n
          );
        },
        nodeSetStatus: function (e, t) {
          let n;
          let i;
          const r = e.options.glyph;
          const o = e.node;
          return (
            (n = this._superApply(arguments)),
            (t !== "error" && t !== "loading" && t !== "nodata") ||
              (o.parent
                ? (i = u(".fancytree-expander", o.span).get(0)) &&
                  a(o, i, "fancytree-expander", r, t)
                : (i = u(
                    ".fancytree-statusnode-" + t,
                    o[this.nodeContainerAttrName],
                  )
                    .find(".fancytree-icon")
                    .get(0)) && a(o, i, "fancytree-icon", r, t)),
            n
          );
        },
      }),
      u.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree", "./jquery.fancytree.table"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.table"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (a) {
    "use strict";
    function s(e, t) {
      let n;
      const i = t.get(0);
      let r = 0;
      return (
        e.children().each(function () {
          if (this === i) return !1;
          (n = a(this).prop("colspan")), (r += n || 1);
        }),
        r
      );
    }
    function l(e, t) {
      let n;
      let i = null;
      let r = 0;
      return (
        e.children().each(function () {
          if (t <= r) return (i = a(this)), !1;
          (n = a(this).prop("colspan")), (r += n || 1);
        }),
        i
      );
    }
    function c(e, t) {
      let n;
      let i;
      const r = e.closest("td");
      let o = null;
      switch (t) {
        case u.LEFT:
          o = r.prev();
          break;
        case u.RIGHT:
          o = r.next();
          break;
        case u.UP:
        case u.DOWN:
          for (
            i = s((n = r.parent()), r);
            (n = t === u.UP ? n.prev() : n.next()).length &&
            (n.is(":hidden") || !(o = l(n, i)) || !o.find(":input,a").length);

          );
      }
      return o;
    }
    var u = a.ui.keyCode;
    const d = {
      text: [u.UP, u.DOWN],
      checkbox: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      link: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      radiobutton: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      "select-one": [u.LEFT, u.RIGHT],
      "select-multiple": [u.LEFT, u.RIGHT],
    };
    return (
      a.ui.fancytree.registerExtension({
        name: "gridnav",
        version: "2.38.1",
        options: { autofocusInput: !1, handleCursorKeys: !0 },
        treeInit: function (i) {
          this._requireExtension("table", !0, !0),
            this._superApply(arguments),
            this.$container.addClass("fancytree-ext-gridnav"),
            this.$container.on("focusin", function (e) {
              let t;
              const n = a.ui.fancytree.getNode(e.target);
              n &&
                !n.isActive() &&
                ((t = i.tree._makeHookContext(n, e)),
                i.tree._callHook("nodeSetActive", t, !0));
            });
        },
        nodeSetActive: function (e, t) {
          const n = e.options.gridnav;
          const i = e.node;
          const r = e.originalEvent || {};
          const o = a(r.target).is(":input");
          (t = !1 !== t),
            this._superApply(arguments),
            t &&
              (e.options.titlesTabbable
                ? (o ||
                    (a(i.span).find("span.fancytree-title").focus(),
                    i.setFocus()),
                  e.tree.$container.attr("tabindex", "-1"))
                : n.autofocusInput &&
                  !o &&
                  a(i.tr || i.span)
                    .find(":input:enabled")
                    .first()
                    .focus());
        },
        nodeKeydown: function (e) {
          let t;
          let n;
          let i;
          const r = e.options.gridnav;
          const o = e.originalEvent;
          const s = a(o.target);
          return (
            s.is(":input:enabled")
              ? (t = s.prop("type"))
              : s.is("a") && (t = "link"),
            t && r.handleCursorKeys
              ? !(
                  (n = d[t]) &&
                  a.inArray(o.which, n) >= 0 &&
                  (i = c(s, o.which)) &&
                  i.length
                ) || (i.find(":input:enabled,a").focus(), !1)
              : this._superApply(arguments)
          );
        },
      }),
      a.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (s) {
    "use strict";
    return (
      s.ui.fancytree.registerExtension({
        name: "multi",
        version: "2.38.1",
        options: { allowNoSelect: !1, mode: "sameParent" },
        treeInit: function (e) {
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-multi"),
            e.options.selectMode === 1 &&
              s.error(
                "Fancytree ext-multi: selectMode: 1 (single) is not compatible.",
              );
        },
        nodeClick: function (e) {
          const t = e.tree;
          const n = e.node;
          const i = t.getActiveNode() || t.getFirstChild();
          const r = e.targetType === "checkbox";
          const o = e.targetType === "expander";
          switch (s.ui.fancytree.eventToString(e.originalEvent)) {
            case "click":
              if (o) break;
              r || (t.selectAll(!1), n.setSelected());
              break;
            case "shift+click":
              t.visitRows(
                function (e) {
                  if ((e.setSelected(), e === n)) return !1;
                },
                { start: i, reverse: i.isBelowOf(n) },
              );
              break;
            case "ctrl+click":
            case "meta+click":
              return void n.toggleSelected();
          }
          return this._superApply(arguments);
        },
        nodeKeydown: function (e) {
          const t = e.tree;
          const n = e.node;
          const i = e.originalEvent;
          switch (s.ui.fancytree.eventToString(i)) {
            case "up":
            case "down":
              t.selectAll(!1),
                n.navigate(i.which, !0),
                t.getActiveNode().setSelected();
              break;
            case "shift+up":
            case "shift+down":
              n.navigate(i.which, !0), t.getActiveNode().setSelected();
          }
          return this._superApply(arguments);
        },
      }),
      s.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (p) {
    "use strict";
    function f(e, t, n, i, r) {
      let o;
      let s;
      let a;
      let l;
      let c = !1;
      const u = e.options.persist.expandOpts;
      const d = [];
      const h = [];
      for (
        n = n || [], r = r || p.Deferred(), o = 0, a = n.length;
        o < a;
        o++
      ) {
        (s = n[o]),
          (l = e.getNodeByKey(s))
            ? i && l.isUndefined()
              ? ((c = !0),
                e.debug("_loadLazyNodes: " + l + " is lazy: loading..."),
                i === "expand"
                  ? d.push(l.setExpanded(!0, u))
                  : d.push(l.load()))
              : (e.debug("_loadLazyNodes: " + l + " already loaded."),
                l.setExpanded(!0, u))
            : (h.push(s),
              e.debug("_loadLazyNodes: " + l + " was not yet found."));
      }
      return (
        p.when.apply(p, d).always(function () {
          if (c && h.length > 0) f(e, t, h, i, r);
          else {
            if (h.length) {
              for (
                e.warn("_loadLazyNodes: could not load those keys: ", h),
                  o = 0,
                  a = h.length;
                o < a;
                o++
              ) {
                (s = n[o]), t._appendKey(g, n[o], !1);
              }
            }
            r.resolve();
          }
        }),
        r
      );
    }
    let t = null;
    let n = null;
    let i = null;
    const r = p.ui.fancytree.assert;
    const u = "active";
    var g = "expanded";
    const d = "focus";
    const h = "selected";
    try {
      r(window.localStorage && window.localStorage.getItem),
        (n = {
          get: function (e) {
            return window.localStorage.getItem(e);
          },
          set: function (e, t) {
            window.localStorage.setItem(e, t);
          },
          remove: function (e) {
            window.localStorage.removeItem(e);
          },
        });
    } catch (e) {
      p.ui.fancytree.warn("Could not access window.localStorage", e);
    }
    try {
      r(window.sessionStorage && window.sessionStorage.getItem),
        (i = {
          get: function (e) {
            return window.sessionStorage.getItem(e);
          },
          set: function (e, t) {
            window.sessionStorage.setItem(e, t);
          },
          remove: function (e) {
            window.sessionStorage.removeItem(e);
          },
        });
    } catch (e) {
      p.ui.fancytree.warn("Could not access window.sessionStorage", e);
    }
    return (
      typeof Cookies === "function"
        ? (t = {
            get: Cookies.get,
            set: function (e, t) {
              Cookies.set(e, t, this.options.persist.cookie);
            },
            remove: Cookies.remove,
          })
        : p &&
          typeof p.cookie === "function" &&
          (t = {
            get: p.cookie,
            set: function (e, t) {
              p.cookie.set(e, t, this.options.persist.cookie);
            },
            remove: p.removeCookie,
          }),
      (p.ui.fancytree._FancytreeClass.prototype.clearPersistData = function (
        e,
      ) {
        const t = this.ext.persist;
        const n = t.cookiePrefix;
        (e = e || "active expanded focus selected").indexOf(u) >= 0 &&
          t._data(n + u, null),
          e.indexOf(g) >= 0 && t._data(n + g, null),
          e.indexOf(d) >= 0 && t._data(n + d, null),
          e.indexOf(h) >= 0 && t._data(n + h, null);
      }),
      (p.ui.fancytree._FancytreeClass.prototype.clearCookies = function (e) {
        return (
          this.warn(
            "'tree.clearCookies()' is deprecated since v2.27.0: use 'clearPersistData()' instead.",
          ),
          this.clearPersistData(e)
        );
      }),
      (p.ui.fancytree._FancytreeClass.prototype.getPersistData = function () {
        const e = this.ext.persist;
        const t = e.cookiePrefix;
        const n = e.cookieDelimiter;
        const i = {};
        return (
          (i[u] = e._data(t + u)),
          (i[g] = (e._data(t + g) || "").split(n)),
          (i[h] = (e._data(t + h) || "").split(n)),
          (i[d] = e._data(t + d)),
          i
        );
      }),
      p.ui.fancytree.registerExtension({
        name: "persist",
        version: "2.38.1",
        options: {
          cookieDelimiter: "~",
          cookiePrefix: undefined,
          cookie: { raw: !1, expires: "", path: "", domain: "", secure: !1 },
          expandLazy: !1,
          expandOpts: undefined,
          fireActivate: !0,
          overrideSource: !0,
          store: "auto",
          types: "active expanded focus selected",
        },
        _data: function (e, t) {
          const n = this._local.store;
          if (t === undefined) return n.get.call(this, e);
          t === null ? n.remove.call(this, e) : n.set.call(this, e, t);
        },
        _appendKey: function (e, t, n) {
          t = "" + t;
          const i = this._local;
          const r = this.options.persist.cookieDelimiter;
          const o = i.cookiePrefix + e;
          const s = i._data(o);
          const a = s ? s.split(r) : [];
          const l = p.inArray(t, a);
          l >= 0 && a.splice(l, 1), n && a.push(t), i._data(o, a.join(r));
        },
        treeInit: function (e) {
          const s = e.tree;
          const a = e.options;
          const l = this._local;
          const c = this.options.persist;
          return (
            (l.cookiePrefix = c.cookiePrefix || "fancytree-" + s._id + "-"),
            (l.storeActive = c.types.indexOf(u) >= 0),
            (l.storeExpanded = c.types.indexOf(g) >= 0),
            (l.storeSelected = c.types.indexOf(h) >= 0),
            (l.storeFocus = c.types.indexOf(d) >= 0),
            (l.store = null),
            c.store === "auto" && (c.store = n ? "local" : "cookie"),
            p.isPlainObject(c.store)
              ? (l.store = c.store)
              : c.store === "cookie"
                ? (l.store = t)
                : c.store === "local"
                  ? (l.store = c.store === "local" ? n : i)
                  : c.store === "session" &&
                    (l.store = c.store === "local" ? n : i),
            r(l.store, "Need a valid store."),
            s.$div.on("fancytreeinit", function () {
              if (!1 !== s._triggerTreeEvent("beforeRestore", null, {})) {
                let e;
                let t;
                let n;
                let i;
                const r = l._data(l.cookiePrefix + d);
                const o = !1 === c.fireActivate;
                (e = l._data(l.cookiePrefix + g)),
                  (n = e && e.split(c.cookieDelimiter)),
                  (l.storeExpanded
                    ? f(s, l, n, !!c.expandLazy && "expand", null)
                    : new p.Deferred().resolve()
                  ).done(function () {
                    if (l.storeSelected) {
                      if ((e = l._data(l.cookiePrefix + h))) {
                        for (
                          n = e.split(c.cookieDelimiter), t = 0;
                          t < n.length;
                          t++
                        ) {
                          (i = s.getNodeByKey(n[t]))
                            ? (i.selected === undefined ||
                                (c.overrideSource && !1 === i.selected)) &&
                              ((i.selected = !0), i.renderStatus())
                            : l._appendKey(h, n[t], !1);
                        }
                      }
                      s.options.selectMode === 3 &&
                        s.visit(function (e) {
                          if (e.selected) {
                            return e.fixSelection3AfterClick(), "skip";
                          }
                        });
                    }
                    l.storeActive &&
                      (!(e = l._data(l.cookiePrefix + u)) ||
                        (!a.persist.overrideSource && s.activeNode) ||
                        ((i = s.getNodeByKey(e)) &&
                          (i.debug("persist: set active", e),
                          i.setActive(!0, { noFocus: !0, noEvents: o })))),
                      l.storeFocus &&
                        r &&
                        (i = s.getNodeByKey(r)) &&
                        (s.options.titlesTabbable
                          ? p(i.span).find(".fancytree-title").focus()
                          : p(s.$container).focus()),
                      s._triggerTreeEvent("restore", null, {});
                  });
              }
            }),
            this._superApply(arguments)
          );
        },
        nodeSetActive: function (e, t) {
          let n;
          const i = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            i.storeActive &&
              i._data(
                i.cookiePrefix + u,
                this.activeNode ? this.activeNode.key : null,
              ),
            n
          );
        },
        nodeSetExpanded: function (e, t) {
          let n;
          const i = e.node;
          const r = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            r.storeExpanded && r._appendKey(g, i.key, t),
            n
          );
        },
        nodeSetFocus: function (e, t) {
          let n;
          const i = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            i.storeFocus &&
              i._data(
                i.cookiePrefix + d,
                this.focusNode ? this.focusNode.key : null,
              ),
            n
          );
        },
        nodeSetSelected: function (e, t) {
          let n;
          let i;
          const r = e.tree;
          const o = e.node;
          const s = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            s.storeSelected &&
              (r.options.selectMode === 3
                ? ((i = (i = p.map(r.getSelectedNodes(!0), function (e) {
                    return e.key;
                  })).join(e.options.persist.cookieDelimiter)),
                  s._data(s.cookiePrefix + h, i))
                : s._appendKey(h, o.key, o.selected)),
            n
          );
        },
      }),
      p.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (v) {
    "use strict";
    function y(e, t) {
      e.insertBefore(t, e.firstChild);
    }
    function b(e, t) {
      e.parentNode.insertBefore(t, e.nextSibling);
    }
    function _(e, n) {
      e.visit(function (e) {
        const t = e.tr;
        if (
          (t && (t.style.display = e.hide || !n ? "none" : ""), !e.expanded)
        ) {
          return "skip";
        }
      });
    }
    function x(e) {
      let t;
      let n;
      const i = e.parent;
      const r = i ? i.children : null;
      if (r && r.length > 1 && r[0] !== e) {
        for (
          n = r[v.inArray(e, r) - 1], w(n.tr);
          n.children &&
          n.children.length &&
          (t = n.children[n.children.length - 1]).tr;

        ) {
          n = t;
        }
      } else n = i;
      return n;
    }
    var w = v.ui.fancytree.assert;
    return (
      v.ui.fancytree.registerExtension({
        name: "table",
        version: "2.38.1",
        options: {
          checkboxColumnIdx: null,
          indentation: 16,
          mergeStatusColumns: !0,
          nodeColumnIdx: 0,
        },
        treeInit: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = e.tree;
          const s = e.options;
          const a = s.table;
          const l = o.widget.element;
          if (
            (a.customStatus != null &&
              (s.renderStatusColumns == null
                ? (o.warn(
                    "The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' instead.",
                  ),
                  (s.renderStatusColumns = a.customStatus))
                : v.error(
                    "The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' only instead.",
                  )),
            s.renderStatusColumns &&
              !0 === s.renderStatusColumns &&
              (s.renderStatusColumns = s.renderColumns),
            l.addClass("fancytree-container fancytree-ext-table"),
            (r = l.find(">tbody")).length ||
              (l.find(">tr").length &&
                v.error(
                  "Expected table > tbody > tr. If you see this please open an issue.",
                ),
              (r = v("<tbody>").appendTo(l))),
            (o.tbody = r[0]),
            (o.columnCount = v("thead >tr", l).last().find(">th", l).length),
            (i = r.children("tr").first()).length)
          ) {
            (n = i.children("td").length),
              o.columnCount &&
                n !== o.columnCount &&
                (o.warn(
                  "Column count mismatch between thead (" +
                    o.columnCount +
                    ") and tbody (" +
                    n +
                    "): using tbody.",
                ),
                (o.columnCount = n)),
              (i = i.clone());
          } else {
            for (
              w(
                o.columnCount >= 1,
                "Need either <thead> or <tbody> with <td> elements to determine column count.",
              ),
                i = v("<tr />"),
                t = 0;
              t < o.columnCount;
              t++
            ) {
              i.append("<td />");
            }
          }
          i
            .find(">td")
            .eq(a.nodeColumnIdx)
            .html("<span class='fancytree-node' />"),
            s.aria &&
              (i.attr("role", "row"), i.find("td").attr("role", "gridcell")),
            (o.rowFragment = document.createDocumentFragment()),
            o.rowFragment.appendChild(i.get(0)),
            r.empty(),
            (o.statusClassPropName = "tr"),
            (o.ariaPropName = "tr"),
            (this.nodeContainerAttrName = "tr"),
            (o.$container = l),
            this._superApply(arguments),
            v(o.rootNode.ul).remove(),
            (o.rootNode.ul = null),
            this.$container.attr("tabindex", s.tabindex),
            s.aria &&
              o.$container.attr("role", "treegrid").attr("aria-readonly", !0);
        },
        nodeRemoveChildMarkup: function (e) {
          e.node.visit(function (e) {
            e.tr && (v(e.tr).remove(), (e.tr = null));
          });
        },
        nodeRemoveMarkup: function (e) {
          const t = e.node;
          t.tr && (v(t.tr).remove(), (t.tr = null)),
            this.nodeRemoveChildMarkup(e);
        },
        nodeRender: function (e, t, n, i, r) {
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          const p = e.tree;
          const f = e.node;
          const g = e.options;
          const m = !f.parent;
          if (!1 !== p._enableUpdate) {
            if (
              (r || (e.hasCollapsedParents = f.parent && !f.parent.expanded),
              !m)
            ) {
              if ((f.tr && t && this.nodeRemoveMarkup(e), f.tr)) {
                t ? this.nodeRenderTitle(e) : this.nodeRenderStatus(e);
              } else {
                if (e.hasCollapsedParents && !n) return;
                (c = p.rowFragment.firstChild.cloneNode(!0)),
                  (u = x(f)),
                  w(u),
                  !0 === i && r
                    ? (c.style.display = "none")
                    : n && e.hasCollapsedParents && (c.style.display = "none"),
                  u.tr
                    ? b(u.tr, c)
                    : (w(
                        !u.parent,
                        "prev. row must have a tr, or be system root",
                      ),
                      y(p.tbody, c)),
                  (f.tr = c),
                  f.key && g.generateIds && (f.tr.id = g.idPrefix + f.key),
                  ((f.tr.ftnode = f).span = v("span.fancytree-node", f.tr).get(
                    0,
                  )),
                  this.nodeRenderTitle(e),
                  g.createNode &&
                    g.createNode.call(p, { type: "createNode" }, e);
              }
            }
            if (
              (g.renderNode && g.renderNode.call(p, { type: "renderNode" }, e),
              (o = f.children) && (m || n || f.expanded))
            ) {
              for (a = 0, l = o.length; a < l; a++) {
                ((h = v.extend({}, e, { node: o[a] })).hasCollapsedParents =
                  h.hasCollapsedParents || !f.expanded),
                  this.nodeRender(h, t, n, i, !0);
              }
            }
            o &&
              !r &&
              ((d = f.tr || null),
              (s = p.tbody.firstChild),
              f.visit(function (e) {
                if (e.tr) {
                  if (
                    (e.parent.expanded ||
                      e.tr.style.display === "none" ||
                      ((e.tr.style.display = "none"), _(e, !1)),
                    e.tr.previousSibling !== d)
                  ) {
                    f.debug("_fixOrder: mismatch at node: " + e);
                    const t = d ? d.nextSibling : s;
                    p.tbody.insertBefore(e.tr, t);
                  }
                  d = e.tr;
                }
              }));
          }
        },
        nodeRenderTitle: function (e, t) {
          let n;
          let i;
          const r = e.tree;
          const o = e.node;
          const s = e.options;
          const a = o.isStatusNode();
          return (
            (i = this._super(e, t)),
            o.isRootNode() ||
              (s.checkbox &&
                !a &&
                s.table.checkboxColumnIdx != null &&
                ((n = v("span.fancytree-checkbox", o.span)),
                v(o.tr).find("td").eq(+s.table.checkboxColumnIdx).html(n)),
              this.nodeRenderStatus(e),
              a
                ? s.renderStatusColumns
                  ? s.renderStatusColumns.call(
                      r,
                      { type: "renderStatusColumns" },
                      e,
                    )
                  : s.table.mergeStatusColumns &&
                    o.isTopLevel() &&
                    v(o.tr)
                      .find(">td")
                      .eq(0)
                      .prop("colspan", r.columnCount)
                      .text(o.title)
                      .addClass("fancytree-status-merged")
                      .nextAll()
                      .remove()
                : s.renderColumns &&
                  s.renderColumns.call(r, { type: "renderColumns" }, e)),
            i
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = e.options;
          this._super(e),
            v(n.tr).removeClass("fancytree-node"),
            (t = (n.getLevel() - 1) * i.table.indentation),
            i.rtl
              ? v(n.span).css({ paddingRight: t + "px" })
              : v(n.span).css({ paddingLeft: t + "px" });
        },
        nodeSetExpanded: function (t, n, i) {
          function e(e) {
            _(t.node, n),
              e
                ? n &&
                  t.options.autoScroll &&
                  !i.noAnimation &&
                  t.node.hasChildren()
                  ? t.node
                      .getLastChild()
                      .scrollIntoView(!0, { topNode: t.node })
                      .always(function () {
                        i.noEvents ||
                          t.tree._triggerNodeEvent(
                            n ? "expand" : "collapse",
                            t,
                          ),
                          r.resolveWith(t.node);
                      })
                  : (i.noEvents ||
                      t.tree._triggerNodeEvent(n ? "expand" : "collapse", t),
                    r.resolveWith(t.node))
                : (i.noEvents ||
                    t.tree._triggerNodeEvent(n ? "expand" : "collapse", t),
                  r.rejectWith(t.node));
          }
          if (
            ((n = !1 !== n), (t.node.expanded && n) || (!t.node.expanded && !n))
          ) {
            return this._superApply(arguments);
          }
          var r = new v.Deferred();
          const o = v.extend({}, i, { noEvents: !0, noAnimation: !0 });
          return (
            (i = i || {}),
            this._super(t, n, o)
              .done(function () {
                e(!0);
              })
              .fail(function () {
                e(!1);
              }),
            r.promise()
          );
        },
        nodeSetStatus: function (e, t) {
          if (t === "ok") {
            const n = e.node;
            const i = n.children ? n.children[0] : null;
            i && i.isStatusNode() && v(i.tr).remove();
          }
          return this._superApply(arguments);
        },
        treeClear: function () {
          return (
            this.nodeRemoveChildMarkup(this._makeHookContext(this.rootNode)),
            this._superApply(arguments)
          );
        },
        treeDestroy: function () {
          return (
            this.$container.find("tbody").empty(),
            this.$source && this.$source.removeClass("fancytree-helper-hidden"),
            this._superApply(arguments)
          );
        },
      }),
      v.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (o) {
    "use strict";
    return (
      o.ui.fancytree.registerExtension({
        name: "themeroller",
        version: "2.38.1",
        options: {
          activeClass: "ui-state-active",
          addClass: "ui-corner-all",
          focusClass: "ui-state-focus",
          hoverClass: "ui-state-hover",
          selectedClass: "ui-state-highlight",
        },
        treeInit: function (e) {
          const t = e.widget.element;
          const i = e.options.themeroller;
          this._superApply(arguments),
            t[0].nodeName === "TABLE"
              ? (t.addClass("ui-widget ui-corner-all"),
                t.find(">thead tr").addClass("ui-widget-header"),
                t.find(">tbody").addClass("ui-widget-conent"))
              : t.addClass("ui-widget ui-widget-content ui-corner-all"),
            t.on("mouseenter mouseleave", ".fancytree-node", function (e) {
              const t = o.ui.fancytree.getNode(e.target);
              const n = e.type === "mouseenter";
              o(t.tr ? t.tr : t.span).toggleClass(
                i.hoverClass + " " + i.addClass,
                n,
              );
            });
        },
        treeDestroy: function (e) {
          this._superApply(arguments),
            e.widget.element.removeClass(
              "ui-widget ui-widget-content ui-corner-all",
            );
        },
        nodeRenderStatus: function (e) {
          const t = {};
          const n = e.node;
          const i = o(n.tr ? n.tr : n.span);
          const r = e.options.themeroller;
          this._super(e),
            (t[r.activeClass] = !1),
            (t[r.focusClass] = !1),
            (t[r.selectedClass] = !1),
            n.isActive() && (t[r.activeClass] = !0),
            n.hasFocus() && (t[r.focusClass] = !0),
            n.isSelected() && !n.isActive() && (t[r.selectedClass] = !0),
            i.toggleClass(r.activeClass, t[r.activeClass]),
            i.toggleClass(r.focusClass, t[r.focusClass]),
            i.toggleClass(r.selectedClass, t[r.selectedClass]),
            i.addClass(r.addClass);
        },
      }),
      o.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (f) {
    "use strict";
    function g(e, t) {
      let n = f("#" + (e = "fancytree-style-" + e));
      if (!t) return n.remove(), null;
      n.length ||
        (n = f("<style />")
          .attr("id", e)
          .addClass("fancytree-style")
          .prop("type", "text/css")
          .appendTo("head"));
      try {
        n.html(t);
      } catch (i) {
        n[0].styleSheet.cssText = t;
      }
      return n;
    }
    function m(e, t, n, i, r, o) {
      let s;
      const a = "#" + e + " span.fancytree-level-";
      const l = [];
      for (s = 0; s < t; s++) {
        l.push(
          a +
            (s + 1) +
            " span.fancytree-title { padding-left: " +
            (s * n + i) +
            o +
            "; }",
        );
      }
      return (
        l.push(
          "#" +
            e +
            " div.ui-effects-wrapper ul li span.fancytree-title, #" +
            e +
            " li.fancytree-animating span.fancytree-title { padding-left: " +
            r +
            o +
            "; position: static; width: auto; }",
        ),
        l.join("\n")
      );
    }
    const v = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
    return (
      f.ui.fancytree.registerExtension({
        name: "wide",
        version: "2.38.1",
        options: {
          iconWidth: null,
          iconSpacing: null,
          labelSpacing: null,
          levelOfs: null,
        },
        treeCreate: function (e) {
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-wide");
          let t;
          let n;
          let i;
          let r;
          let o;
          const s = e.options.wide;
          const a = f(
            "<li id='fancytreeTemp'><span class='fancytree-node'><span class='fancytree-icon' /><span class='fancytree-title' /></span><ul />",
          ).appendTo(e.tree.$container);
          const l = a.find(".fancytree-icon");
          const c = a.find("ul");
          let u = s.iconSpacing || l.css("margin-left");
          let d = s.iconWidth || l.css("width");
          let h = s.labelSpacing || "3px";
          const p = s.levelOfs || c.css("padding-left");
          a.remove(),
            (n = u.match(v)[2]),
            (u = parseFloat(u, 10)),
            (i = h.match(v)[2]),
            (h = parseFloat(h, 10)),
            (r = d.match(v)[2]),
            (d = parseFloat(d, 10)),
            (o = p.match(v)[2]),
            (n === r && o === r && i === r) ||
              f.error(
                "iconWidth, iconSpacing, and levelOfs must have the same css measure unit",
              ),
            (this._local.measureUnit = r),
            (this._local.levelOfs = parseFloat(p)),
            (this._local.lineOfs =
              (1 +
                (e.options.checkbox ? 1 : 0) +
                (!1 === e.options.icon ? 0 : 1)) *
                (d + u) +
              u),
            (this._local.labelOfs = h),
            (this._local.maxDepth = 10),
            g(
              (t = this.$container.uniqueId().attr("id")),
              m(
                t,
                this._local.maxDepth,
                this._local.levelOfs,
                this._local.lineOfs,
                this._local.labelOfs,
                this._local.measureUnit,
              ),
            );
        },
        treeDestroy: function () {
          return (
            g(this.$container.attr("id"), null), this._superApply(arguments)
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          const i = e.node;
          const r = i.getLevel();
          return (
            (n = this._super(e)),
            r > this._local.maxDepth &&
              ((t = this.$container.attr("id")),
              (this._local.maxDepth *= 2),
              i.debug(
                "Define global ext-wide css up to level " +
                  this._local.maxDepth,
              ),
              g(
                t,
                m(
                  t,
                  this._local.maxDepth,
                  this._local.levelOfs,
                  this._local.lineOfs,
                  this._local.labelSpacing,
                  this._local.measureUnit,
                ),
              )),
            f(i.span).addClass("fancytree-level-" + r),
            n
          );
        },
      }),
      f.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree", "./jquery.fancytree.table"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.table"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (g) {
    "use strict";
    function d(e, t) {
      const n = t ? t.uniqueId().attr("id") : "";
      e.$container.attr("aria-activedescendant", n);
    }
    function m(e, t) {
      let n;
      const i = t.get(0);
      let r = 0;
      return (
        e.children().each(function () {
          if (this === i) return !1;
          (n = g(this).prop("colspan")), (r += n || 1);
        }),
        r
      );
    }
    function h(e, t) {
      let n;
      let i = null;
      let r = 0;
      return (
        e.children().each(function () {
          if (t <= r) return (i = g(this)), !1;
          (n = g(this).prop("colspan")), (r += n || 1);
        }),
        i
      );
    }
    function v(e, t, n) {
      let i;
      let r;
      const o = { "ctrl+home": "first", "ctrl+end": "last" };
      const s = t.closest("td");
      const a = s.parent();
      const l = e.options;
      const c = m(a, s);
      let u = null;
      switch ((n = o[n] || n)) {
        case "left":
          u = l.rtl ? s.next() : s.prev();
          break;
        case "right":
          u = l.rtl ? s.prev() : s.next();
          break;
        case "up":
        case "down":
        case "ctrl+home":
        case "ctrl+end":
          (r = a[0].ftnode),
            (i = e.findRelatedNode(r, n)) &&
              (i.makeVisible(), i.setActive(), (u = h(g(i.tr), c)));
          break;
        case "home":
          u = l.rtl ? a.children("td").last() : a.children("td").first();
          break;
        case "end":
          u = l.rtl ? a.children("td").first() : a.children("td").last();
      }
      return u && u.length ? u : null;
    }
    function y(e) {
      return e.$activeTd ? (e.forceNavMode ? "cell-nav" : "cell-edit") : "row";
    }
    function b(e) {
      let t = document.createEvent("MouseEvent");
      const n = e.find("a")[0];
      (t = new CustomEvent("click")), n.dispatchEvent(t);
    }
    const _ = g.ui.fancytree;
    const p = "fancytree-active-cell";
    const f = "fancytree-cell-mode";
    const x = "fancytree-cell-nav-mode";
    const r = ["allow", "force", "start", "off"];
    const w = {
      text: ["left", "right", "home", "end", "backspace"],
      number: ["up", "down", "left", "right", "home", "end", "backspace"],
      checkbox: [],
      link: [],
      radiobutton: ["up", "down"],
      "select-one": ["up", "down"],
      "select-multiple": ["up", "down"],
    };
    const C = ["up", "down", "left", "right", "home", "end"];
    return (
      (g.ui.fancytree._FancytreeClass.prototype.activateCell = function (e, t) {
        let n;
        let i;
        let r;
        const o = this;
        const s = this.$activeTd || null;
        const a = e ? _.getNode(e) : null;
        const l = s ? _.getNode(s) : null;
        const c = a || l;
        const u = s ? s.closest("tr") : null;
        if (
          (c.debug(
            "activateCell(" +
              (s ? s.text() : "null") +
              ") -> " +
              (e ? e.text() : "OFF"),
          ),
          e)
        ) {
          if (
            (_.assert(e.length, "Invalid active cell"),
            (n = m(g(a.tr), e)),
            !1 ===
              this._triggerNodeEvent("activateCell", a, t, {
                activeTd: o.$activeTd,
                colIdx: n,
                mode: null,
              }))
          ) {
            return !1;
          }
          if (
            (this.$container.addClass(f),
            this.$container.toggleClass(x, !!this.forceNavMode),
            (r = e.closest("tr")),
            s)
          ) {
            if (s.is(e)) return;
            s.removeAttr("tabindex").removeClass(p),
              u.is(r) || u.find(">td :input,a").attr("tabindex", "-1");
          }
          r.find(">td :input:enabled,a").attr("tabindex", "0"),
            a.setActive(),
            e.addClass(p),
            (i = (this.$activeTd = e).find(":input:enabled,a")),
            this.debug("Focus input", i),
            i.length
              ? (i.focus(), d(this, i))
              : (e.attr("tabindex", "-1").focus(), d(this, e));
        } else {
          if (
            !1 ===
            this._triggerNodeEvent("activateCell", l, t, {
              activeTd: null,
              colIdx: null,
              mode: "row",
            })
          ) {
            return !1;
          }
          this.$container.removeClass(f + " " + x),
            s &&
              (s.removeAttr("tabindex").removeClass(p),
              u.find("td").blur().removeAttr("tabindex"),
              u.find(">td :input,a").attr("tabindex", "-1"),
              (this.$activeTd = null),
              this.activeNode.setFocus(),
              d(this, r));
        }
      }),
      g.ui.fancytree.registerExtension({
        name: "ariagrid",
        version: "2.38.1",
        options: {
          activateCellOnDoubelclick: !0,
          cellFocus: "allow",
          label: "Tree Grid",
        },
        treeInit: function (e) {
          const i = e.tree;
          const t = e.options;
          const n = t.ariagrid;
          i.ext.grid
            ? this._requireExtension("grid", !0, !0)
            : this._requireExtension("table", !0, !0),
            t.aria || g.error("ext-ariagrid requires `aria: true`"),
            g.inArray(n.cellFocus, r) < 0 &&
              g.error("Invalid `cellFocus` option"),
            this._superApply(arguments),
            (this.$activeTd = null),
            (this.forceNavMode = !0),
            this.$container
              .addClass("fancytree-ext-ariagrid")
              .toggleClass(x, !!this.forceNavMode)
              .attr("aria-label", "" + n.label),
            this.$container
              .find("thead > tr > th")
              .attr("role", "columnheader"),
            (this.nodeColumnIdx = t.table.nodeColumnIdx),
            (this.checkboxColumnIdx = t.table.checkboxColumnIdx),
            this.checkboxColumnIdx == null &&
              (this.checkboxColumnIdx = this.nodeColumnIdx),
            this.$container
              .on("focusin", function (e) {
                const t = _.getNode(e.target);
                const n = g(e.target).closest("td");
                t &&
                  !n.is(i.$activeTd) &&
                  g(e.target).is(":input") &&
                  (t.debug("Activate cell on INPUT focus event"),
                  i.activateCell(n));
              })
              .on("fancytreeinit", function () {
                (n.cellFocus !== "start" && n.cellFocus !== "force") ||
                  (i.debug("Enforce cell-mode on init"),
                  i.debug("init", i.getActiveNode() || i.getFirstChild()),
                  (i.getActiveNode() || i.getFirstChild()).setActive(!0, {
                    cell: i.nodeColumnIdx,
                  }),
                  i.debug("init2", i.getActiveNode() || i.getFirstChild()));
              })
              .on("fancytreefocustree", function () {
                if (n.cellFocus === "force" && !i.$activeTd) {
                  const e = i.getActiveNode() || i.getFirstChild();
                  i.debug("Enforce cell-mode on focusTree event"),
                    e.setActive(!0, { cell: 0 });
                }
              })
              .on("fancytreebeforeupdateviewport", function () {
                i.viewport &&
                  i.$activeTd &&
                  (i.info("Cancel cell-mode due to scroll event."),
                  i.activateCell(null));
              });
        },
        nodeClick: function (e) {
          const t = e.targetType;
          const n = e.tree;
          const i = e.node;
          const r = e.originalEvent;
          const o = g(r.target);
          const s = o.closest("td");
          if (
            (n.debug(
              "nodeClick: node: " +
                (i ? i.title : "null") +
                ", targetType: " +
                t +
                ", target: " +
                (s.length ? s.text() : null) +
                ", node was active: " +
                (i && i.isActive()) +
                ", last cell: " +
                (n.$activeTd ? n.$activeTd.text() : null),
            ),
            n.$activeTd)
          ) {
            if ((n.activateCell(s), o.is(":input"))) return;
            return (
              !(!o.is(".fancytree-checkbox") && !o.is(".fancytree-expander")) &&
              this._superApply(arguments)
            );
          }
          return this._superApply(arguments);
        },
        nodeDblclick: function (e) {
          const t = e.tree;
          const n = e.options.ariagrid;
          const i = e.originalEvent;
          const r = g(i.target).closest("td");
          return n.activateCellOnDoubelclick &&
            !t.$activeTd &&
            n.cellFocus === "allow"
            ? (t.activateCell(r), !1)
            : this._superApply(arguments);
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = g(n.tr);
          return (
            (t = this._super(e)),
            n.parent &&
              (i
                .attr("aria-level", n.getLevel())
                .attr("aria-setsize", n.parent.children.length)
                .attr("aria-posinset", n.getIndex() + 1),
              this.$activeTd && i.attr("aria-expanded") != null
                ? (i.remove("aria-expanded"),
                  i
                    .find("td")
                    .eq(this.nodeColumnIdx)
                    .attr("aria-expanded", n.isExpanded()))
                : i
                    .find("td")
                    .eq(this.nodeColumnIdx)
                    .removeAttr("aria-expanded")),
            t
          );
        },
        nodeSetActive: function (e, t, n) {
          let i;
          const r = e.node;
          const o = e.tree;
          const s = g(r.tr);
          return (
            (t = !1 !== t),
            r.debug("nodeSetActive(" + t + ")", n),
            t && n && n.cell != null
              ? ((i = typeof n.cell === "number" ? h(s, n.cell) : g(n.cell)),
                void o.activateCell(i))
              : this._superApply(arguments)
          );
        },
        nodeKeydown: function (e) {
          let t;
          let n;
          let i;
          let r = null;
          const o = e.tree;
          const s = e.node;
          const a = e.options.ariagrid;
          const l = e.originalEvent;
          const c = _.eventToString(l);
          const u = g(l.target);
          const d = this.$activeTd;
          const h = d ? d.closest("tr") : null;
          const p = d ? m(h, d) : -1;
          const f = d && o.forceNavMode && g.inArray(c, C) >= 0;
          if (a.cellFocus === "off") return this._superApply(arguments);
          if (
            (u.is(":input:enabled")
              ? (n = u.prop("type"))
              : u.is("a") && (n = "link"),
            d &&
              d.find(":checkbox:enabled").length === 1 &&
              ((r = d.find(":checkbox:enabled")), (n = "checkbox")),
            o.debug(
              "nodeKeydown(" +
                c +
                "), activeTd: '" +
                (d && d.text()) +
                "', inputType: " +
                n,
            ),
            !(n && c !== "esc" && !f && (t = w[n]) && g.inArray(c, t) >= 0))
          ) {
            switch (c) {
              case "right":
                if (d) (i = v(o, d, c)) && o.activateCell(i);
                else {
                  if (s && !s.isExpanded() && !1 !== s.hasChildren()) break;
                  (i = g(s.tr).find(">td").first()), o.activateCell(i);
                }
                return !1;
              case "left":
              case "home":
              case "end":
              case "ctrl+home":
              case "ctrl+end":
              case "up":
              case "down":
                if (d) {
                  return (
                    (!(i = v(o, d, c)) && "left right".indexOf(c) < 0) ||
                      ((i || a.cellFocus !== "force") && o.activateCell(i)),
                    !1
                  );
                }
                break;
              case "esc":
                if (d && !o.forceNavMode) {
                  return (
                    (o.forceNavMode = !0),
                    o.debug("Enter cell-nav-mode"),
                    o.$container.toggleClass(x, !!o.forceNavMode),
                    !1
                  );
                }
                if (d && a.cellFocus !== "force") {
                  return o.activateCell(null), !1;
                }
                break;
              case "return":
                return (
                  !1 ===
                    o._triggerNodeEvent("defaultGridAction", s, l, {
                      activeTd: o.$activeTd ? o.$activeTd[0] : null,
                      colIdx: p,
                      mode: y(o),
                    }) ||
                    (d
                      ? p === this.nodeColumnIdx
                        ? s.toggleExpanded()
                        : p === this.checkboxColumnIdx
                          ? s.toggleSelected()
                          : r
                            ? r.prop("checked", !r.prop("checked"))
                            : o.forceNavMode && u.is(":input")
                              ? ((o.forceNavMode = !1),
                                o.$container.removeClass(x),
                                o.debug("enable cell-edit-mode"))
                              : d.find("a").length === 1 && b(d)
                      : ((i = g(s.tr).find(">td").nth(this.nodeColumnIdx)),
                        o.activateCell(i))),
                  !1
                );
              case "space":
                if (d) {
                  return (
                    p === this.checkboxColumnIdx
                      ? s.toggleSelected()
                      : r && r.prop("checked", !r.prop("checked")),
                    !1
                  );
                }
            }
            return this._superApply(arguments);
          }
        },
        treeSetOption: function (e, t, n) {
          const i = e.tree.options.ariagrid;
          return (
            t === "ariagrid" &&
              n.cellFocus !== i.cellFocus &&
              g.inArray(n.cellFocus, r) < 0 &&
              g.error("Invalid `cellFocus` option"),
            this._superApply(arguments)
          );
        },
      }),
      g.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (o) {
    "use strict";
    return (
      (o.ui.fancytree._FancytreeClass.prototype.countSelected = function (e) {
        const t = this;
        t.options;
        return t.getSelectedNodes(e).length;
      }),
      (o.ui.fancytree._FancytreeNodeClass.prototype.updateCounters =
        function () {
          const e = this;
          let t = o("span.fancytree-childcounter", e.span);
          const n = e.tree.options.childcounter;
          const i = e.countChildren(n.deep);
          (!(e.data.childCounter = i) && n.hideZeros) ||
          (e.isExpanded() && n.hideExpanded)
            ? t.remove()
            : (t.length ||
                (t = o("<span class='fancytree-childcounter'/>").appendTo(
                  o("span.fancytree-icon,span.fancytree-custom-icon", e.span),
                )),
              t.text(i)),
            !n.deep ||
              e.isTopLevel() ||
              e.isRootNode() ||
              e.parent.updateCounters();
        }),
      (o.ui.fancytree.prototype.widgetMethod1 = function (e) {
        this.tree;
        return e;
      }),
      o.ui.fancytree.registerExtension({
        name: "childcounter",
        version: "2.38.1",
        options: { deep: !0, hideZeros: !0, hideExpanded: !1 },
        foo: 42,
        _appendCounter: function () {},
        treeInit: function (e) {
          e.options, e.options.childcounter;
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-childcounter");
        },
        treeDestroy: function () {
          this._superApply(arguments);
        },
        nodeRenderTitle: function (e, t) {
          const n = e.node;
          const i = e.options.childcounter;
          const r =
            n.data.childCounter == null
              ? n.countChildren(i.deep)
              : +n.data.childCounter;
          this._super(e, t),
            (!r && i.hideZeros) ||
              (n.isExpanded() && i.hideExpanded) ||
              o(
                "span.fancytree-icon,span.fancytree-custom-icon",
                n.span,
              ).append(o("<span class='fancytree-childcounter'/>").text(r));
        },
        nodeSetExpanded: function (e) {
          const t = e.tree;
          e.node;
          return this._superApply(arguments).always(function () {
            t.nodeRenderTitle(e);
          });
        },
      }),
      o.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (h) {
    "use strict";
    function p(e, t) {
      let n;
      for (n = e.length - 1; n >= 0; n--) {
        if (e[n] === t) return e.splice(n, 1), !0;
      }
      return !1;
    }
    function i(e, t, n) {
      for (
        var i,
          r,
          o = 3 & e.length,
          s = e.length - o,
          a = n,
          l = 3432918353,
          c = 461845907,
          u = 0;
        u < s;

      ) {
        (r =
          (255 & e.charCodeAt(u)) |
          ((255 & e.charCodeAt(++u)) << 8) |
          ((255 & e.charCodeAt(++u)) << 16) |
          ((255 & e.charCodeAt(++u)) << 24)),
          ++u,
          (a =
            27492 +
            (65535 &
              (i =
                (5 *
                  (65535 &
                    (a =
                      ((a ^= r =
                        ((65535 &
                          (r =
                            ((r =
                              ((65535 & r) * l +
                                ((((r >>> 16) * l) & 65535) << 16)) &
                              4294967295) <<
                              15) |
                            (r >>> 17))) *
                          c +
                          ((((r >>> 16) * c) & 65535) << 16)) &
                        4294967295) <<
                        13) |
                      (a >>> 19))) +
                  (((5 * (a >>> 16)) & 65535) << 16)) &
                4294967295)) +
            (((58964 + (i >>> 16)) & 65535) << 16));
      }
      switch (((r = 0), o)) {
        case 3:
          r ^= (255 & e.charCodeAt(u + 2)) << 16;
        case 2:
          r ^= (255 & e.charCodeAt(u + 1)) << 8;
        case 1:
          a ^= r =
            ((65535 &
              (r =
                ((r =
                  ((65535 & (r ^= 255 & e.charCodeAt(u))) * l +
                    ((((r >>> 16) * l) & 65535) << 16)) &
                  4294967295) <<
                  15) |
                (r >>> 17))) *
              c +
              ((((r >>> 16) * c) & 65535) << 16)) &
            4294967295;
      }
      return (
        (a ^= e.length),
        (a =
          (2246822507 * (65535 & (a ^= a >>> 16)) +
            (((2246822507 * (a >>> 16)) & 65535) << 16)) &
          4294967295),
        (a =
          (3266489909 * (65535 & (a ^= a >>> 13)) +
            (((3266489909 * (a >>> 16)) & 65535) << 16)) &
          4294967295),
        (a ^= a >>> 16),
        t ? ("0000000" + (a >>> 0).toString(16)).substr(-8) : a >>> 0
      );
    }
    function t(e) {
      let t;
      let n = h.map(e.getParentList(!1, !0), function (e) {
        return e.refKey || e.key;
      });
      return "id_" + (t = i((n = n.join("/")), !0)) + i(t + n, !0);
    }
    const f = h.ui.fancytree.assert;
    return (
      (h.ui.fancytree._FancytreeNodeClass.prototype.getCloneList = function (
        e,
      ) {
        let t;
        const n = this.tree;
        let i = n.refMap[this.refKey] || null;
        const r = n.keyMap;
        return (
          i &&
            ((t = this.key),
            e
              ? (i = h.map(i, function (e) {
                  return r[e];
                }))
              : (i = h.map(i, function (e) {
                  return e === t ? null : r[e];
                })).length < 1 && (i = null)),
          i
        );
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.isClone = function () {
        const e = this.refKey || null;
        const t = (e && this.tree.refMap[e]) || null;
        return !!(t && t.length > 1);
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.reRegister = function (
        t,
        e,
      ) {
        (t = t == null ? null : "" + t), (e = e == null ? null : "" + e);
        const n = this.tree;
        const i = this.key;
        const r = this.refKey;
        const o = n.keyMap;
        const s = n.refMap;
        const a = s[r] || null;
        let l = !1;
        return (
          t != null &&
            t !== this.key &&
            (o[t] &&
              h.error(
                "[ext-clones] reRegister(" + t + "): already exists: " + this,
              ),
            delete o[i],
            (o[t] = this),
            a &&
              (s[r] = h.map(a, function (e) {
                return e === i ? t : e;
              })),
            (this.key = t),
            (l = !0)),
          e != null &&
            e !== this.refKey &&
            (a &&
              (a.length === 1
                ? delete s[r]
                : (s[r] = h.map(a, function (e) {
                    return e === i ? null : e;
                  }))),
            s[e] ? s[e].append(t) : (s[e] = [this.key]),
            (this.refKey = e),
            (l = !0)),
          l
        );
      }),
      (h.ui.fancytree._FancytreeNodeClass.prototype.setRefKey = function (e) {
        return this.reRegister(null, e);
      }),
      (h.ui.fancytree._FancytreeClass.prototype.getNodesByRef = function (
        e,
        n,
      ) {
        const i = this.keyMap;
        let t = this.refMap[e] || null;
        return (
          t &&
            (t = n
              ? h.map(t, function (e) {
                  const t = i[e];
                  return t.isDescendantOf(n) ? t : null;
                })
              : h.map(t, function (e) {
                  return i[e];
                })).length < 1 &&
            (t = null),
          t
        );
      }),
      (h.ui.fancytree._FancytreeClass.prototype.changeRefKey = function (e, t) {
        let n;
        const i = this.keyMap;
        const r = this.refMap[e] || null;
        if (r) {
          for (n = 0; n < r.length; n++) i[r[n]].refKey = t;
          delete this.refMap[e], (this.refMap[t] = r);
        }
      }),
      h.ui.fancytree.registerExtension({
        name: "clones",
        version: "2.38.1",
        options: {
          highlightActiveClones: !0,
          highlightClones: !1,
        },
        treeCreate: function (e) {
          this._superApply(arguments),
            (e.tree.refMap = {}),
            (e.tree.keyMap = {});
        },
        treeInit: function (e) {
          this.$container.addClass("fancytree-ext-clones"),
            f(e.options.defaultKey == null),
            (e.options.defaultKey = function (e) {
              return t(e);
            }),
            this._superApply(arguments);
        },
        treeClear: function (e) {
          return (
            (e.tree.refMap = {}),
            (e.tree.keyMap = {}),
            this._superApply(arguments)
          );
        },
        treeRegisterNode: function (e, t, n) {
          let i;
          let r;
          const o = e.tree;
          const s = o.keyMap;
          const a = o.refMap;
          const l = n.key;
          const c = n && n.refKey != null ? "" + n.refKey : null;
          if (n.isStatusNode()) return this._super(e, t, n);
          if (t) {
            if (s[n.key] != null) {
              const u = s[n.key];
              const d =
                "clones.treeRegisterNode: duplicate key '" +
                n.key +
                "': /" +
                n.getPath(!0) +
                " => " +
                u.getPath(!0);
              o.error(d), h.error(d);
            }
            (s[l] = n),
              c &&
                ((i = a[c])
                  ? (i.push(l),
                    i.length === 2 &&
                      e.options.clones.highlightClones &&
                      s[i[0]].renderStatus())
                  : (a[c] = [l]));
          } else {
            s[l] == null &&
              h.error(
                "clones.treeRegisterNode: node.key not registered: " + n.key,
              ),
              delete s[l],
              c &&
                (i = a[c]) &&
                ((r = i.length) <= 1
                  ? (f(r === 1), f(i[0] === l), delete a[c])
                  : (p(i, l),
                    r === 2 &&
                      e.options.clones.highlightClones &&
                      s[i[0]].renderStatus()));
          }
          return this._super(e, t, n);
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          const i = e.node;
          return (
            (n = this._super(e)),
            e.options.clones.highlightClones &&
              (t = h(i[e.tree.statusClassPropName])).length &&
              i.isClone() &&
              t.addClass("fancytree-clone"),
            n
          );
        },
        nodeSetActive: function (e, n) {
          let t;
          const i = e.tree.statusClassPropName;
          const r = e.node;
          return (
            (t = this._superApply(arguments)),
            e.options.clones.highlightActiveClones &&
              r.isClone() &&
              h.each(r.getCloneList(!0), function (e, t) {
                h(t[i]).toggleClass("fancytree-active-clone", !1 !== n);
              }),
            t
          );
        },
      }),
      h.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (d) {
    "use strict";
    const r = d.ui.fancytree.assert;
    const s = d.ui.fancytree;
    return (
      d.ui.fancytree.registerExtension({
        name: "columnview",
        version: "2.38.1",
        options: {},
        treeInit: function (e) {
          let t;
          let n;
          const o = e.tree;
          const i = o.widget.element;
          (o.tr = d("tbody tr", i)[0]),
            (o.$tdList = d(">td", o.tr)),
            (o.columnCount = o.$tdList.length),
            this._superApply(arguments),
            (n = d(o.rootNode.ul)),
            (t = o.$tdList.eq(0)),
            r(
              d.inArray("table", this.options.extensions) < 0,
              "columnview extensions must not use ext-table",
            ),
            r(
              o.columnCount >= 2,
              "columnview target must be a table with at least two columns",
            ),
            n.removeClass("fancytree-container").removeAttr("tabindex"),
            (o.$container = i)
              .addClass("fancytree-container fancytree-ext-columnview")
              .attr("tabindex", "0"),
            t.empty(),
            n.detach().appendTo(t),
            (o.widget.options.autoCollapse = !0),
            (o.widget.options.toggleEffect = !1),
            (o.widget.options.clickFolderMode = 1),
            i
              .on("fancytreeactivate", function (e, t) {
                const n = t.node;
                const i = t.tree;
                const r = n.getLevel();
                i._callHook("nodeCollapseSiblings", n),
                  n.expanded || i.$tdList.eq(r).nextAll().empty(),
                  n.expanded || (!n.children && !n.lazy) || n.setExpanded();
              })
              .on("fancytreekeydown", function (e, t) {
                let n = null;
                let i = !0;
                const r = t.node || t.tree.getFirstChild();
                if (!(r.getLevel() >= o.columnCount)) {
                  switch (s.eventToString(e)) {
                    case "down":
                      n = r.getNextSibling();
                      break;
                    case "left":
                      r.isTopLevel() || (n = r.getParent());
                      break;
                    case "right":
                      if (!(n = r.getFirstChild())) return;
                      n.visitSiblings(function (e) {
                        if (e.expanded) return (n = e), !1;
                      }, !0);
                      break;
                    case "up":
                      n = r.getPrevSibling();
                      break;
                    default:
                      i = !1;
                  }
                  return n && n.setActive(), !i;
                }
              });
        },
        nodeSetExpanded: function (e, t) {
          let n;
          const i = e.node;
          const r = e.tree;
          const o = i.getLevel();
          return (
            !1 !== t &&
              !i.expanded &&
              i.isUndefined() &&
              ((n = d("<span class='fancytree-icon fancytree-icon-loading'>")),
              r.$tdList.eq(o).empty().append(n)),
            this._superApply(arguments)
          );
        },
        nodeRemoveChildren: function (e) {
          return (
            d(e.node.span).find("span.fancytree-cv-right").remove(),
            e.tree.$tdList.eq(e.node.getLevel()).nextAll().empty(),
            this._superApply(arguments)
          );
        },
        nodeRender: function (e, t, n, i, r) {
          this._super(e, t, n, i, r);
          let o;
          let s;
          let a;
          const l = e.tree;
          const c = e.node;
          const u = d(c.span);
          u.find("span.fancytree-expander").remove(),
            !1 === c.hasChildren() ||
              u.find("span.fancytree-cv-right").length ||
              u.append(d("<span class='fancytree-icon fancytree-cv-right'>")),
            c.ul &&
              c.expanded &&
              ((c.ul.style.display = ""),
              (o = c.getLevel()) < l.columnCount &&
                ((s = l.$tdList.eq(o)),
                (a = d(c.ul).detach()),
                s.empty().append(a)));
        },
      }),
      d.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(
          [
            "jquery",
            "jquery-ui/ui/widgets/draggable",
            "jquery-ui/ui/widgets/droppable",
            "./jquery.fancytree",
          ],
          e,
        )
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (_) {
    "use strict";
    function f(e) {
      return e === 0 ? "" : e > 0 ? "+" + e : "" + e;
    }
    function n() {
      e ||
        (_.ui.plugin.add("draggable", "connectToFancytree", {
          start: function (e, t) {
            const n = _(this).data("ui-draggable") || _(this).data("draggable");
            const i = t.helper.data("ftSourceNode") || null;
            if (i) {
              return (
                (n.offset.click.top = -2),
                (n.offset.click.left = 16),
                i.tree.ext.dnd._onDragEvent("start", i, null, e, t, n)
              );
            }
          },
          drag: function (e, t) {
            let n;
            const i = _(this).data("ui-draggable") || _(this).data("draggable");
            const r = t.helper.data("ftSourceNode") || null;
            const o = t.helper.data("ftTargetNode") || null;
            const s = _.ui.fancytree.getNode(e.target);
            const a = r && r.tree.options.dnd;
            e.target &&
            !s &&
            _(e.target).closest(
              "div.fancytree-drag-helper,#fancytree-drop-marker",
            ).length > 0
              ? (r || o || _.ui.fancytree).debug(
                  "Drag event over helper: ignored.",
                )
              : (t.helper.data("ftTargetNode", s),
                a &&
                  a.updateHelper &&
                  ((n = r.tree._makeHookContext(r, e, {
                    otherNode: s,
                    ui: t,
                    draggable: i,
                    dropMarker: _("#fancytree-drop-marker"),
                  })),
                  a.updateHelper.call(r.tree, r, n)),
                o &&
                  o !== s &&
                  o.tree.ext.dnd._onDragEvent("leave", o, r, e, t, i),
                s &&
                  s.tree.options.dnd.dragDrop &&
                  (s === o ||
                    s.tree.ext.dnd._onDragEvent("enter", s, r, e, t, i),
                  s.tree.ext.dnd._onDragEvent("over", s, r, e, t, i)));
          },
          stop: function (e, t) {
            const n = _(this).data("ui-draggable") || _(this).data("draggable");
            const i = t.helper.data("ftSourceNode") || null;
            const r = t.helper.data("ftTargetNode") || null;
            const o = e.type === "mouseup" && e.which === 1;
            o || (i || r || _.ui.fancytree).debug("Drag was cancelled"),
              r &&
                (o && r.tree.ext.dnd._onDragEvent("drop", r, i, e, t, n),
                r.tree.ext.dnd._onDragEvent("leave", r, i, e, t, n)),
              i && i.tree.ext.dnd._onDragEvent("stop", i, null, e, t, n);
          },
        }),
        (e = !0));
    }
    function t(e) {
      const t = e.options.dnd || null;
      const o = e.options.glyph || null;
      t && n(),
        t &&
          t.dragStart &&
          e.widget.element.draggable(
            _.extend(
              {
                addClasses: !1,
                appendTo: e.$container,
                containment: !1,
                delay: 0,
                distance: 4,
                revert: !1,
                scroll: !0,
                scrollSpeed: 7,
                scrollSensitivity: 10,
                connectToFancytree: !0,
                helper: function (e) {
                  let t;
                  let n;
                  let i;
                  const r = _.ui.fancytree.getNode(e.target);
                  return r
                    ? ((i = r.tree.options.dnd),
                      (n = _(r.span)),
                      (t = _(
                        "<div class='fancytree-drag-helper'><span class='fancytree-drag-helper-img' /></div>",
                      )
                        .css({ zIndex: 3, position: "relative" })
                        .append(n.find("span.fancytree-title").clone())).data(
                        "ftSourceNode",
                        r,
                      ),
                      o &&
                        t
                          .find(".fancytree-drag-helper-img")
                          .addClass(o.map._addClass + " " + o.map.dragHelper),
                      i.initHelper &&
                        i.initHelper.call(r.tree, r, {
                          node: r,
                          tree: r.tree,
                          originalEvent: e,
                          ui: { helper: t },
                        }),
                      t)
                    : "<div>ERROR?: helper requested but sourceNode not found</div>";
                },
                start: function (e, t) {
                  return !!t.helper.data("ftSourceNode");
                },
              },
              e.options.dnd.draggable,
            ),
          ),
        t &&
          t.dragDrop &&
          e.widget.element.droppable(
            _.extend(
              { addClasses: !1, tolerance: "intersect", greedy: !1 },
              e.options.dnd.droppable,
            ),
          );
    }
    var e = !1;
    const g = "fancytree-drop-accept";
    const m = "fancytree-drop-after";
    const v = "fancytree-drop-before";
    const y = "fancytree-drop-over";
    const b = "fancytree-drop-reject";
    const x = "fancytree-drop-target";
    return (
      _.ui.fancytree.registerExtension({
        name: "dnd",
        version: "2.38.1",
        options: {
          autoExpandMS: 1e3,
          draggable: null,
          droppable: null,
          focusOnClick: !1,
          preventVoidMoves: !0,
          preventRecursiveMoves: !0,
          smartRevert: !0,
          dropMarkerOffsetX: -24,
          dropMarkerInsertOffsetX: -16,
          dragStart: null,
          dragStop: null,
          initHelper: null,
          updateHelper: null,
          dragEnter: null,
          dragOver: null,
          dragExpand: null,
          dragDrop: null,
          dragLeave: null,
        },
        treeInit: function (n) {
          const e = n.tree;
          this._superApply(arguments),
            e.options.dnd.dragStart &&
              e.$container.on("mousedown", function (e) {
                if (n.options.dnd.focusOnClick) {
                  const t = _.ui.fancytree.getNode(e);
                  t &&
                    t.debug(
                      "Re-enable focus that was prevented by jQuery UI draggable.",
                    ),
                    setTimeout(function () {
                      _(e.target).closest(":tabbable").focus();
                    }, 10);
                }
              }),
            t(e);
        },
        _setDndStatus: function (e, t, n, i, r) {
          let o;
          let s;
          let a = "center";
          const l = this._local;
          const c = this.options.dnd;
          const u = this.options.glyph;
          const d = e ? _(e.span) : null;
          const h = _(t.span);
          const p = h.find("span.fancytree-title");
          if (
            (l.$dropMarker ||
              ((l.$dropMarker = _("<div id='fancytree-drop-marker'></div>")
                .hide()
                .css({ "z-index": 1e3 })
                .prependTo(_(this.$div).parent())),
              u &&
                l.$dropMarker.addClass(
                  u.map._addClass + " " + u.map.dropMarker,
                )),
            i === "after" || i === "before" || i === "over")
          ) {
            switch (((o = c.dropMarkerOffsetX || 0), i)) {
              case "before":
                (a = "top"), (o += c.dropMarkerInsertOffsetX || 0);
                break;
              case "after":
                (a = "bottom"), (o += c.dropMarkerInsertOffsetX || 0);
            }
            (s = { my: "left" + f(o) + " center", at: "left " + a, of: p }),
              this.options.rtl &&
                ((s.my = "right" + f(-o) + " center"), (s.at = "right " + a)),
              l.$dropMarker
                .toggleClass(m, i === "after")
                .toggleClass(y, i === "over")
                .toggleClass(v, i === "before")
                .toggleClass("fancytree-rtl", !!this.options.rtl)
                .show()
                .position(_.ui.fancytree.fixPositionOptions(s));
          } else l.$dropMarker.hide();
          d && d.toggleClass(g, !0 === r).toggleClass(b, !1 === r),
            h
              .toggleClass(x, i === "after" || i === "before" || i === "over")
              .toggleClass(m, i === "after")
              .toggleClass(v, i === "before")
              .toggleClass(g, !0 === r)
              .toggleClass(b, !1 === r),
            n.toggleClass(g, !0 === r).toggleClass(b, !1 === r);
        },
        _onDragEvent: function (e, t, n, i, r, o) {
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          let p;
          let f;
          const g = this.options.dnd;
          const m = this._makeHookContext(t, i, {
            otherNode: n,
            ui: r,
            draggable: o,
          });
          let v = null;
          const y = this;
          const b = _(t.span);
          switch ((g.smartRevert && (o.options.revert = "invalid"), e)) {
            case "start":
              t.isStatusNode()
                ? (v = !1)
                : g.dragStart && (v = g.dragStart(t, m)),
                !1 === v
                  ? (this.debug("tree.dragStart() cancelled"),
                    r.helper.trigger("mouseup").hide())
                  : (g.smartRevert &&
                      ((c =
                        t[
                          m.tree.nodeContainerAttrName
                        ].getBoundingClientRect()),
                      (l = _(o.options.appendTo)[0].getBoundingClientRect()),
                      (o.originalPosition.left = Math.max(0, c.left - l.left)),
                      (o.originalPosition.top = Math.max(0, c.top - l.top))),
                    b.addClass("fancytree-drag-source"),
                    _(document).on(
                      "keydown.fancytree-dnd,mousedown.fancytree-dnd",
                      function (e) {
                        e.type === "keydown" && e.which === _.ui.keyCode.ESCAPE
                          ? y.ext.dnd._cancelDrag()
                          : e.type === "mousedown" && y.ext.dnd._cancelDrag();
                      },
                    ));
              break;
            case "enter":
              (v =
                !!(f =
                  (!g.preventRecursiveMoves || !t.isDescendantOf(n)) &&
                  (g.dragEnter ? g.dragEnter(t, m) : null)) &&
                (Array.isArray(f)
                  ? {
                      over: _.inArray("over", f) >= 0,
                      before: _.inArray("before", f) >= 0,
                      after: _.inArray("after", f) >= 0,
                    }
                  : {
                      over: !0 === f || f === "over",
                      before: !0 === f || f === "before",
                      after: !0 === f || f === "after",
                    })),
                r.helper.data("enterResponse", v);
              break;
            case "over":
              (p = null),
                !1 === (h = r.helper.data("enterResponse")) ||
                  (typeof h === "string"
                    ? (p = h)
                    : ((a = b.offset()),
                      (d = {
                        x:
                          (u = { x: i.pageX - a.left, y: i.pageY - a.top }).x /
                          b.width(),
                        y: u.y / b.height(),
                      }),
                      h.after && d.y > 0.75
                        ? (p = "after")
                        : !h.over && h.after && d.y > 0.5
                          ? (p = "after")
                          : h.before && d.y <= 0.25
                            ? (p = "before")
                            : !h.over && h.before && d.y <= 0.5
                              ? (p = "before")
                              : h.over && (p = "over"),
                      g.preventVoidMoves &&
                        (t === n
                          ? (this.debug("    drop over source node prevented"),
                            (p = null))
                          : p === "before" && n && t === n.getNextSibling()
                            ? (this.debug(
                                "    drop after source node prevented",
                              ),
                              (p = null))
                            : p === "after" && n && t === n.getPrevSibling()
                              ? (this.debug(
                                  "    drop before source node prevented",
                                ),
                                (p = null))
                              : p === "over" &&
                                n &&
                                n.parent === t &&
                                n.isLastSibling() &&
                                (this.debug(
                                  "    drop last child over own parent prevented",
                                ),
                                (p = null))),
                      r.helper.data("hitMode", p))),
                p === "before" ||
                  p === "after" ||
                  !g.autoExpandMS ||
                  !1 === t.hasChildren() ||
                  t.expanded ||
                  (g.dragExpand && !1 === g.dragExpand(t, m)) ||
                  t.scheduleAction("expand", g.autoExpandMS),
                p && g.dragOver && ((m.hitMode = p), (v = g.dragOver(t, m))),
                (s = !1 !== v && p !== null),
                g.smartRevert && (o.options.revert = !s),
                this._local._setDndStatus(n, t, r.helper, p, s);
              break;
            case "drop":
              (p = r.helper.data("hitMode")) &&
                g.dragDrop &&
                ((m.hitMode = p), g.dragDrop(t, m));
              break;
            case "leave":
              t.scheduleAction("cancel"),
                r.helper.data("enterResponse", null),
                r.helper.data("hitMode", null),
                this._local._setDndStatus(n, t, r.helper, "out", undefined),
                g.dragLeave && g.dragLeave(t, m);
              break;
            case "stop":
              b.removeClass("fancytree-drag-source"),
                _(document).off(".fancytree-dnd"),
                g.dragStop && g.dragStop(t, m);
              break;
            default:
              _.error("Unsupported drag event: " + e);
          }
          return v;
        },
        _cancelDrag: function () {
          const e = _.ui.ddmanager.current;
          e && e.cancel();
        },
      }),
      _.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (g) {
    "use strict";
    function f() {
      (A = I = l = P = O = L = M = null),
        p && p.removeClass(d + " " + h),
        (p = null),
        E && E.hide(),
        u && (u.remove(), (u = null));
    }
    function m(e) {
      return e === 0 ? "" : e > 0 ? "+" + e : "" + e;
    }
    function v(e) {
      let t;
      return (
        !!e &&
        ((t = g.isPlainObject(e)
          ? { over: !!e.over, before: !!e.before, after: !!e.after }
          : Array.isArray(e)
            ? {
                over: g.inArray("over", e) >= 0,
                before: g.inArray("before", e) >= 0,
                after: g.inArray("after", e) >= 0,
              }
            : {
                over: !0 === e || e === "over",
                before: !0 === e || e === "before",
                after: !0 === e || e === "after",
              }),
        Object.keys(t).length !== 0 && t)
      );
    }
    function y(e, t) {
      let n;
      let i;
      const r = e.options.dnd5;
      const o = e.$scrollParent[0];
      const s = r.scrollSensitivity;
      const a = r.scrollSpeed;
      let l = 0;
      return (
        o !== document && o.tagName !== "HTML"
          ? ((n = e.$scrollParent.offset()),
            (i = o.scrollTop),
            n.top + o.offsetHeight - t.pageY < s
              ? o.scrollHeight - e.$scrollParent.innerHeight() - i > 0 &&
                (o.scrollTop = l = i + a)
              : i > 0 && t.pageY - n.top < s && (o.scrollTop = l = i - a))
          : (i = g(document).scrollTop()) > 0 && t.pageY - i < s
            ? ((l = i - a), g(document).scrollTop(l))
            : g(window).height() - (t.pageY - i) < s &&
              ((l = i + a), g(document).scrollTop(l)),
        l && e.debug("autoScroll: " + l + "px"),
        l
      );
    }
    function r(e, t, n) {
      let i = n;
      return (
        o
          ? t.metaKey && t.altKey
            ? (i = "link")
            : t.ctrlKey
              ? (i = "link")
              : t.metaKey
                ? (i = "move")
                : t.altKey && (i = "copy")
          : t.ctrlKey
            ? (i = "copy")
            : t.shiftKey
              ? (i = "move")
              : t.altKey && (i = "link"),
        i !== l &&
          e.info(
            "evalEffectModifiers: " +
              t.type +
              " - evalEffectModifiers(): " +
              l +
              " -> " +
              i,
          ),
        (l = i)
      );
    }
    function b(e, t) {
      const n = t.tree;
      const i = t.dataTransfer;
      e.type === "dragstart"
        ? ((t.effectAllowed = n.options.dnd5.effectAllowed),
          (t.dropEffect = n.options.dnd5.dropEffectDefault))
        : ((t.effectAllowed = P), (t.dropEffect = O)),
        (t.dropEffectSuggested = r(n, e, n.options.dnd5.dropEffectDefault)),
        (t.isMove = t.dropEffect === "move"),
        (t.files = i.files || []);
    }
    function _(e, t, n) {
      const i = t.tree;
      const r = t.dataTransfer;
      return (
        e.type !== "dragstart" &&
          P !== t.effectAllowed &&
          i.warn(
            "effectAllowed should only be changed in dragstart event: " +
              e.type +
              ": data.effectAllowed changed from " +
              P +
              " -> " +
              t.effectAllowed,
          ),
        !1 === n &&
          (i.info("applyDropEffectCallback: allowDrop === false"),
          (t.effectAllowed = "none"),
          (t.dropEffect = "none")),
        (t.isMove = t.dropEffect === "move"),
        e.type === "dragstart" && ((P = t.effectAllowed), (O = t.dropEffect)),
        (r.effectAllowed = P),
        (r.dropEffect = O)
      );
    }
    function x(e, t) {
      if ((t.options.dnd5.scroll && y(t.tree, e), !t.node)) {
        return t.tree.warn("Ignored dragover for non-node"), F;
      }
      let n;
      let i;
      let r;
      let o;
      let s = null;
      const a = t.tree;
      const l = a.options;
      const c = l.dnd5;
      const u = t.node;
      const d = t.otherNode;
      let h = "center";
      const p = g(u.span);
      const f = p.find("span.fancytree-title");
      if (!1 === M) {
        return a.debug("Ignored dragover, since dragenter returned false."), !1;
      }
      (typeof M === "string" &&
        g.error("assert failed: dragenter returned string"),
      (i = p.offset()),
      (o = (e.pageY - i.top) / p.height()),
      e.pageY === undefined &&
        a.warn("event.pageY is undefined: see issue #1013."),
      M.after && o > 0.75
        ? (s = "after")
        : !M.over && M.after && o > 0.5
          ? (s = "after")
          : M.before && o <= 0.25
            ? (s = "before")
            : !M.over && M.before && o <= 0.5
              ? (s = "before")
              : M.over && (s = "over"),
      c.preventVoidMoves &&
        t.dropEffect === "move" &&
        (u === d
          ? (u.debug("Drop over source node prevented."), (s = null))
          : s === "before" && d && u === d.getNextSibling()
            ? (u.debug("Drop after source node prevented."), (s = null))
            : s === "after" && d && u === d.getPrevSibling()
              ? (u.debug("Drop before source node prevented."), (s = null))
              : s === "over" &&
                d &&
                d.parent === u &&
                d.isLastSibling() &&
                (u.debug("Drop last child over own parent prevented."),
                (s = null))),
      (t.hitMode = s) && c.dragOver) &&
        (b(e, t), c.dragOver(u, t), _(e, t, !!s), (s = t.hitMode));
      if ((F = s) === "after" || s === "before" || s === "over") {
        switch (((n = c.dropMarkerOffsetX || 0), s)) {
          case "before":
            (h = "top"), (n += c.dropMarkerInsertOffsetX || 0);
            break;
          case "after":
            (h = "bottom"), (n += c.dropMarkerInsertOffsetX || 0);
        }
        (r = { my: "left" + m(n) + " center", at: "left " + h, of: f }),
          l.rtl &&
            ((r.my = "right" + m(-n) + " center"), (r.at = "right " + h)),
          E.toggleClass(k, s === "after")
            .toggleClass(T, s === "over")
            .toggleClass(S, s === "before")
            .show()
            .position(w.fixPositionOptions(r));
      } else E.hide();
      return (
        g(u.span)
          .toggleClass(j, s === "after" || s === "before" || s === "over")
          .toggleClass(k, s === "after")
          .toggleClass(S, s === "before")
          .toggleClass(C, s === "over")
          .toggleClass(D, !1 === s),
        s
      );
    }
    function s(e) {
      let t;
      const n = this;
      const i = n.options.dnd5;
      const r = w.getNode(e);
      const o = e.dataTransfer || e.originalEvent.dataTransfer;
      const s = {
        tree: n,
        node: r,
        options: n.options,
        originalEvent: e.originalEvent,
        widget: n.widget,
        dataTransfer: o,
        useDefaultImage: !0,
        dropEffect: undefined,
        dropEffectSuggested: undefined,
        effectAllowed: undefined,
        files: undefined,
        isCancelled: undefined,
        isMove: undefined,
      };
      switch (e.type) {
        case "dragstart":
          if (!r) return n.info("Ignored dragstart on a non-node."), !1;
          (I = r),
            (A =
              !1 === i.multiSource
                ? [r]
                : !0 === i.multiSource
                  ? r.isSelected()
                    ? n.getSelectedNodes()
                    : [r]
                  : i.multiSource(r, s)),
            (p = g(
              g.map(A, function (e) {
                return e.span;
              }),
            )).addClass(d);
          var a = r.toDict(!0, i.sourceCopyHook);
          (a.treeId = r.tree._id), (t = JSON.stringify(a));
          try {
            o.setData(N, t),
              o.setData("text/html", g(r.span).html()),
              o.setData("text/plain", r.title);
          } catch (l) {
            n.warn("Could not set data (IE only accepts 'text') - " + l);
          }
          return (
            i.setTextTypeJson
              ? o.setData("text", t)
              : o.setData("text", r.title),
            b(e, s),
            !1 === i.dragStart(r, s)
              ? (f(), !1)
              : (_(e, s),
                (u = null),
                s.useDefaultImage &&
                  ((c = g(r.span).find(".fancytree-title")),
                  A &&
                    A.length > 1 &&
                    (u = g("<span class='fancytree-childcounter'/>")
                      .text("+" + (A.length - 1))
                      .appendTo(c)),
                  o.setDragImage && o.setDragImage(c[0], -10, -10)),
                !0)
          );
        case "drag":
          b(e, s), i.dragDrag(r, s), _(e, s), p.toggleClass(h, s.isMove);
          break;
        case "dragend":
          b(e, s), f(), (s.isCancelled = !F), i.dragEnd(r, s, !F);
      }
    }
    function a(e) {
      let t;
      let n;
      let i;
      let r;
      const o = this;
      const s = o.options.dnd5;
      let a = null;
      const l = w.getNode(e);
      const c = e.dataTransfer || e.originalEvent.dataTransfer;
      const u = {
        tree: o,
        node: l,
        options: o.options,
        originalEvent: e.originalEvent,
        widget: o.widget,
        hitMode: M,
        dataTransfer: c,
        otherNode: I || null,
        otherNodeList: A || null,
        otherNodeData: null,
        useDefaultImage: !0,
        dropEffect: undefined,
        dropEffectSuggested: undefined,
        effectAllowed: undefined,
        files: null,
        isCancelled: undefined,
        isMove: undefined,
      };
      switch (e.type) {
        case "dragenter":
          if (((L = null), !l)) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            ),
              (M = !1);
            break;
          }
          if (
            (g(l.span)
              .addClass(T)
              .removeClass(C + " " + D),
            (i = g.inArray(N, c.types) >= 0),
            s.preventNonNodes && !i)
          ) {
            l.debug("Reject dropping a non-node."), (M = !1);
            break;
          }
          if (s.preventForeignNodes && (!I || I.tree !== l.tree)) {
            l.debug("Reject dropping a foreign node."), (M = !1);
            break;
          }
          if (
            s.preventSameParent &&
            u.otherNode &&
            u.otherNode.tree === l.tree &&
            l.parent === u.otherNode.parent
          ) {
            l.debug("Reject dropping as sibling (same parent)."), (M = !1);
            break;
          }
          if (
            s.preventRecursion &&
            u.otherNode &&
            u.otherNode.tree === l.tree &&
            l.isDescendantOf(u.otherNode)
          ) {
            l.debug("Reject dropping below own ancestor."), (M = !1);
            break;
          }
          if (s.preventLazyParents && !l.isLoaded()) {
            l.warn("Drop over unloaded target node prevented."), (M = !1);
            break;
          }
          E.show(),
            b(e, u),
            (r = v(s.dragEnter(l, u))),
            _(e, u, (a = (M = r) && (r.over || r.before || r.after)));
          break;
        case "dragover":
          if (!l) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            );
            break;
          }
          b(e, u),
            (a = !!(F = x(e, u))),
            (F === "over" || !1 === F) && !l.expanded && !1 !== l.hasChildren()
              ? L
                ? !(s.autoExpandMS && Date.now() - L > s.autoExpandMS) ||
                  l.isLoading() ||
                  (s.dragExpand && !1 === s.dragExpand(l, u)) ||
                  l.setExpanded()
                : (L = Date.now())
              : (L = null);
          break;
        case "dragleave":
          if (!l) {
            o.debug(
              "Ignore non-node " +
                e.type +
                ": " +
                e.target.tagName +
                "." +
                e.target.className,
            );
            break;
          }
          if (!g(l.span).hasClass(T)) {
            l.debug("Ignore dragleave (multi).");
            break;
          }
          g(l.span).removeClass(T + " " + C + " " + D),
            l.scheduleAction("cancel"),
            s.dragLeave(l, u),
            E.hide();
          break;
        case "drop":
          if (
            (g.inArray(N, c.types) >= 0 &&
              ((n = c.getData(N)),
              o.info(
                e.type +
                  ": getData('application/x-fancytree-node'): '" +
                  n +
                  "'",
              )),
            n ||
              ((n = c.getData("text")),
              o.info(e.type + ": getData('text'): '" + n + "'")),
            n)
          ) {
            try {
              (t = JSON.parse(n)).title !== undefined && (u.otherNodeData = t);
            } catch (p) {}
          }
          o.debug(
            e.type + ": nodeData: '" + n + "', otherNodeData: ",
            u.otherNodeData,
          ),
            g(l.span).removeClass(T + " " + C + " " + D),
            (u.hitMode = F),
            b(e, u, !F),
            (u.isCancelled = !F);
          var d = I && I.span;
          var h = I && I.tree;
          s.dragDrop(l, u),
            e.preventDefault(),
            d &&
              !document.body.contains(d) &&
              (h === o
                ? (o.debug(
                    "Drop handler removed source element: generating dragEnd.",
                  ),
                  s.dragEnd(I, u))
                : o.warn(
                    "Drop handler removed source element: dragend event may be lost.",
                  )),
            f();
      }
      if (a) return e.preventDefault(), !1;
    }
    let c;
    let u;
    var w = g.ui.fancytree;
    var o = /Mac/.test(navigator.platform);
    var d = "fancytree-drag-source";
    var h = "fancytree-drag-remove";
    var C = "fancytree-drop-accept";
    var k = "fancytree-drop-after";
    var S = "fancytree-drop-before";
    var T = "fancytree-drop-over";
    var D = "fancytree-drop-reject";
    var j = "fancytree-drop-target";
    var N = "application/x-fancytree-node";
    var E = null;
    var I = null;
    var A = null;
    var p = null;
    var M = null;
    var l = null;
    var O = null;
    var P = null;
    var F = null;
    var L = null;
    return (
      (g.ui.fancytree.getDragNodeList = function () {
        return A || [];
      }),
      (g.ui.fancytree.getDragNode = function () {
        return I;
      }),
      g.ui.fancytree.registerExtension({
        name: "dnd5",
        version: "2.38.1",
        options: {
          autoExpandMS: 1500,
          dropMarkerInsertOffsetX: -16,
          dropMarkerOffsetX: -24,
          dropMarkerParent: "body",
          multiSource: !1,
          effectAllowed: "all",
          dropEffectDefault: "move",
          preventForeignNodes: !1,
          preventLazyParents: !0,
          preventNonNodes: !1,
          preventRecursion: !0,
          preventSameParent: !1,
          preventVoidMoves: !0,
          scroll: !0,
          scrollSensitivity: 20,
          scrollSpeed: 5,
          setTextTypeJson: !1,
          sourceCopyHook: null,
          dragStart: null,
          dragDrag: g.noop,
          dragEnd: g.noop,
          dragEnter: null,
          dragOver: g.noop,
          dragExpand: g.noop,
          dragDrop: g.noop,
          dragLeave: g.noop,
        },
        treeInit: function (e) {
          let t;
          const n = e.tree;
          const i = e.options;
          const r = i.glyph || null;
          const o = i.dnd5;
          g.inArray("dnd", i.extensions) >= 0 &&
            g.error("Extensions 'dnd' and 'dnd5' are mutually exclusive."),
            o.dragStop &&
              g.error("dragStop is not used by ext-dnd5. Use dragEnd instead."),
            o.preventRecursiveMoves != null &&
              g.error("preventRecursiveMoves was renamed to preventRecursion."),
            o.dragStart &&
              w.overrideMethod(e.options, "createNode", function (e, t) {
                this._super.apply(this, arguments),
                  t.node.span
                    ? (t.node.span.draggable = !0)
                    : t.node.warn("Cannot add `draggable`: no span tag");
              }),
            this._superApply(arguments),
            this.$container.addClass("fancytree-ext-dnd5"),
            (t = g("<span>").appendTo(this.$container)),
            (this.$scrollParent = t.scrollParent()),
            t.remove(),
            (E = g("#fancytree-drop-marker")).length ||
              ((E = g("<div id='fancytree-drop-marker'></div>")
                .hide()
                .css({ "z-index": 1e3, "pointer-events": "none" })
                .prependTo(o.dropMarkerParent)),
              r && w.setSpanIcon(E[0], r.map._addClass, r.map.dropMarker)),
            E.toggleClass("fancytree-rtl", !!i.rtl),
            o.dragStart && n.$container.on("dragstart drag dragend", s.bind(n)),
            o.dragEnter &&
              n.$container.on("dragenter dragover dragleave drop", a.bind(n));
        },
      }),
      g.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (c) {
    "use strict";
    const t = /Mac/.test(navigator.platform);
    const u = c.ui.fancytree.escapeHtml;
    const d = c.ui.fancytree.trim;
    const a = c.ui.fancytree.unescapeHtml;
    return (
      (c.ui.fancytree._FancytreeNodeClass.prototype.editStart = function () {
        let e;
        const t = this;
        const n = this.tree;
        const i = n.ext.edit;
        const r = n.options.edit;
        const o = c(".fancytree-title", t.span);
        const s = {
          node: t,
          tree: n,
          options: n.options,
          isNew: c(t[n.statusClassPropName]).hasClass("fancytree-edit-new"),
          orgTitle: t.title,
          input: null,
          dirty: !1,
        };
        if (!1 === r.beforeEdit.call(t, { type: "beforeEdit" }, s)) return !1;
        c.ui.fancytree.assert(!i.currentNode, "recursive edit"),
          (i.currentNode = this),
          (i.eventData = s),
          n.widget._unbind(),
          (i.lastDraggableAttrValue = t.span.draggable),
          i.lastDraggableAttrValue && (t.span.draggable = !1),
          c(document).on("mousedown.fancytree-edit", function (e) {
            c(e.target).hasClass("fancytree-edit-input") || t.editEnd(!0, e);
          }),
          (e = c("<input />", {
            class: "fancytree-edit-input",
            type: "text",
            value: n.options.escapeTitles ? s.orgTitle : a(s.orgTitle),
          })),
          (i.eventData.input = e),
          r.adjustWidthOfs != null && e.width(o.width() + r.adjustWidthOfs),
          r.inputCss != null && e.css(r.inputCss),
          o.html(e),
          e
            .focus()
            .change(function () {
              e.addClass("fancytree-edit-dirty");
            })
            .on("keydown", function (e) {
              switch (e.which) {
                case c.ui.keyCode.ESCAPE:
                  t.editEnd(!1, e);
                  break;
                case c.ui.keyCode.ENTER:
                  return t.editEnd(!0, e), !1;
              }
              e.stopPropagation();
            })
            .blur(function (e) {
              return t.editEnd(!0, e);
            }),
          r.edit.call(t, { type: "edit" }, s);
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function (e, t) {
        let n;
        let i = this;
        const r = this.tree;
        const o = r.ext.edit;
        const s = o.eventData;
        const a = r.options.edit;
        const l = c(".fancytree-title", i.span).find(
          "input.fancytree-edit-input",
        );
        return (
          a.trim && l.val(d(l.val())),
          (n = l.val()),
          (s.dirty = n !== i.title),
          (s.originalEvent = t),
          !1 === e
            ? (s.save = !1)
            : s.isNew
              ? (s.save = n !== "")
              : (s.save = s.dirty && n !== ""),
          !1 !== a.beforeClose.call(i, { type: "beforeClose" }, s) &&
            (!s.save || !1 !== a.save.call(i, { type: "save" }, s)) &&
            (l.removeClass("fancytree-edit-dirty").off(),
            c(document).off(".fancytree-edit"),
            s.save
              ? (i.setTitle(r.options.escapeTitles ? n : u(n)), i.setFocus())
              : s.isNew
                ? (i.remove(), (i = s.node = null), o.relatedNode.setFocus())
                : (i.renderTitle(), i.setFocus()),
            (o.eventData = null),
            (o.currentNode = null),
            (o.relatedNode = null),
            r.widget._bind(),
            i && o.lastDraggableAttrValue && (i.span.draggable = !0),
            r.$container.get(0).focus({ preventScroll: !0 }),
            (s.input = null),
            a.close.call(i, { type: "close" }, s),
            !0)
        );
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function (
        e,
        t,
      ) {
        let n;
        const i = this.tree;
        const r = this;
        (e = e || "child"),
          t == null
            ? (t = { title: "" })
            : typeof t === "string"
              ? (t = { title: t })
              : c.ui.fancytree.assert(c.isPlainObject(t)),
          e !== "child" || this.isExpanded() || !1 === this.hasChildren()
            ? (((n = this.addNode(t, e)).match = !0),
              c(n[i.statusClassPropName])
                .removeClass("fancytree-hide")
                .addClass("fancytree-match"),
              n.makeVisible().done(function () {
                c(n[i.statusClassPropName]).addClass("fancytree-edit-new"),
                  (r.tree.ext.edit.relatedNode = r),
                  n.editStart();
              }))
            : this.setExpanded().done(function () {
                r.editCreateNode(e, t);
              });
      }),
      (c.ui.fancytree._FancytreeClass.prototype.isEditing = function () {
        return this.ext.edit ? this.ext.edit.currentNode : null;
      }),
      (c.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function () {
        return !!this.tree.ext.edit && this.tree.ext.edit.currentNode === this;
      }),
      c.ui.fancytree.registerExtension({
        name: "edit",
        version: "2.38.1",
        options: {
          adjustWidthOfs: 4,
          allowEmpty: !1,
          inputCss: { minWidth: "3em" },
          triggerStart: ["f2", "mac+enter", "shift+click"],
          trim: !0,
          beforeClose: c.noop,
          beforeEdit: c.noop,
          close: c.noop,
          edit: c.noop,
          save: c.noop,
        },
        currentNode: null,
        treeInit: function (e) {
          const n = e.tree;
          this._superApply(arguments),
            this.$container
              .addClass("fancytree-ext-edit")
              .on("fancytreebeforeupdateviewport", function (e) {
                const t = n.isEditing();
                t &&
                  (t.info("Cancel edit due to scroll event."),
                  t.editEnd(!1, e));
              });
        },
        nodeClick: function (e) {
          const t = c.ui.fancytree.eventToString(e.originalEvent);
          const n = e.options.edit.triggerStart;
          return t === "shift+click" &&
            c.inArray("shift+click", n) >= 0 &&
            e.originalEvent.shiftKey
            ? (e.node.editStart(), !1)
            : t === "click" &&
                c.inArray("clickActive", n) >= 0 &&
                e.node.isActive() &&
                !e.node.isEditing() &&
                c(e.originalEvent.target).hasClass("fancytree-title")
              ? (e.node.editStart(), !1)
              : this._superApply(arguments);
        },
        nodeDblclick: function (e) {
          return c.inArray("dblclick", e.options.edit.triggerStart) >= 0
            ? (e.node.editStart(), !1)
            : this._superApply(arguments);
        },
        nodeKeydown: function (e) {
          switch (e.originalEvent.which) {
            case 113:
              if (c.inArray("f2", e.options.edit.triggerStart) >= 0) {
                return e.node.editStart(), !1;
              }
              break;
            case c.ui.keyCode.ENTER:
              if (
                c.inArray("mac+enter", e.options.edit.triggerStart) >= 0 &&
                t
              ) {
                return e.node.editStart(), !1;
              }
          }
          return this._superApply(arguments);
        },
      }),
      c.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (y) {
    "use strict";
    function b(e) {
      return (e + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
    }
    function _(e) {
      return e.indexOf(">") >= 0 ? y("<div/>").html(e).text() : e;
    }
    function x(e, t, n) {
      for (var i = [], r = 1; r < t.length; r++) {
        const o = t[r].length + (r === 1 ? 0 : 1) + (i[i.length - 1] || 0);
        i.push(o);
      }
      const s = e.split("");
      return (
        n
          ? i.forEach(function (e) {
              s[e] = k + s[e] + S;
            })
          : i.forEach(function (e) {
              s[e] = "<mark>" + s[e] + "</mark>";
            }),
        s.join("")
      );
    }
    const w = "__not_found__";
    const C = y.ui.fancytree.escapeHtml;
    var k = "\ufff7";
    var S = "\ufff8";
    return (
      (y.ui.fancytree._FancytreeClass.prototype._applyFilterImpl = function (
        i,
        r,
        e,
      ) {
        let t;
        let n;
        let o;
        let s;
        let a;
        let l;
        let c;
        let u;
        let d = 0;
        const h = this.options;
        const p = h.escapeTitles;
        const f = h.autoCollapse;
        const g = y.extend({}, h.filter, e);
        const m = g.mode === "hide";
        const v = !!g.leavesOnly && !r;
        if (typeof i === "string") {
          if (i === "") {
            return (
              this.warn(
                "Fancytree passing an empty string as a filter is handled as clearFilter().",
              ),
              void this.clearFilter()
            );
          }
          (t = g.fuzzy
            ? i
                .split("")
                .map(b)
                .reduce(function (e, t) {
                  return e + "([^" + t + "]*)" + t;
                }, "")
            : b(i)),
            (o = new RegExp(t, "i")),
            (s = new RegExp(b(i), "gi")),
            p && ((a = new RegExp(b(k), "g")), (l = new RegExp(b(S), "g"))),
            (i = function (e) {
              if (!e.title) return !1;
              const t = p ? e.title : _(e.title);
              const n = t.match(o);
              return (
                n &&
                  g.highlight &&
                  (p
                    ? ((c = g.fuzzy
                        ? x(t, n, p)
                        : t.replace(s, function (e) {
                            return k + e + S;
                          })),
                      (e.titleWithHighlight = C(c)
                        .replace(a, "<mark>")
                        .replace(l, "</mark>")))
                    : g.fuzzy
                      ? (e.titleWithHighlight = x(t, n))
                      : (e.titleWithHighlight = t.replace(s, function (e) {
                          return "<mark>" + e + "</mark>";
                        }))),
                !!n
              );
            });
        }
        return (
          (this.enableFilter = !0),
          (this.lastFilterArgs = arguments),
          (u = this.enableUpdate(!1)),
          this.$div.addClass("fancytree-ext-filter"),
          m
            ? this.$div.addClass("fancytree-ext-filter-hide")
            : this.$div.addClass("fancytree-ext-filter-dimm"),
          this.$div.toggleClass(
            "fancytree-ext-filter-hide-expanders",
            !!g.hideExpanders,
          ),
          (this.rootNode.subMatchCount = 0),
          this.visit(function (e) {
            delete e.match, delete e.titleWithHighlight, (e.subMatchCount = 0);
          }),
          (n = this.getRootNode()._findDirectChild(w)) && n.remove(),
          (h.autoCollapse = !1),
          this.visit(function (t) {
            if (!v || t.children == null) {
              let e = i(t);
              let n = !1;
              if (e === "skip") {
                return (
                  t.visit(function (e) {
                    e.match = !1;
                  }, !0),
                  "skip"
                );
              }
              e || (!r && e !== "branch") || !t.parent.match || (n = e = !0),
                e &&
                  (d++,
                  (t.match = !0),
                  t.visitParents(function (e) {
                    e !== t && (e.subMatchCount += 1),
                      !g.autoExpand ||
                        n ||
                        e.expanded ||
                        (e.setExpanded(!0, {
                          noAnimation: !0,
                          noEvents: !0,
                          scrollIntoView: !1,
                        }),
                        (e._filterAutoExpanded = !0));
                  }, !0));
            }
          }),
          (h.autoCollapse = f),
          d === 0 &&
            g.nodata &&
            m &&
            (typeof (n = g.nodata) === "function" && (n = n()),
            !0 === n ? (n = {}) : typeof n === "string" && (n = { title: n }),
            (n = y.extend(
              {
                statusNodeType: "nodata",
                key: w,
                title: this.options.strings.noData,
              },
              n,
            )),
            (this.getRootNode().addNode(n).match = !0)),
          this._callHook("treeStructureChanged", this, "applyFilter"),
          this.enableUpdate(u),
          d
        );
      }),
      (y.ui.fancytree._FancytreeClass.prototype.filterNodes = function (e, t) {
        return (
          typeof t === "boolean" &&
            ((t = { leavesOnly: t }),
            this.warn(
              "Fancytree.filterNodes() leavesOnly option is deprecated since 2.9.0 / 2015-04-19. Use opts.leavesOnly instead.",
            )),
          this._applyFilterImpl(e, !1, t)
        );
      }),
      (y.ui.fancytree._FancytreeClass.prototype.filterBranches = function (
        e,
        t,
      ) {
        return this._applyFilterImpl(e, !0, t);
      }),
      (y.ui.fancytree._FancytreeClass.prototype.updateFilter = function () {
        this.enableFilter &&
        this.lastFilterArgs &&
        this.options.filter.autoApply
          ? this._applyFilterImpl.apply(this, this.lastFilterArgs)
          : this.warn("updateFilter(): no filter active.");
      }),
      (y.ui.fancytree._FancytreeClass.prototype.clearFilter = function () {
        let t;
        const e = this.getRootNode()._findDirectChild(w);
        const n = this.options.escapeTitles;
        const i = this.options.enhanceTitle;
        const r = this.enableUpdate(!1);
        e && e.remove(),
          delete this.rootNode.match,
          delete this.rootNode.subMatchCount,
          this.visit(function (e) {
            e.match &&
              e.span &&
              ((t = y(e.span).find(">span.fancytree-title")),
              n ? t.text(e.title) : t.html(e.title),
              i && i({ type: "enhanceTitle" }, { node: e, $title: t })),
              delete e.match,
              delete e.subMatchCount,
              delete e.titleWithHighlight,
              e.$subMatchBadge &&
                (e.$subMatchBadge.remove(), delete e.$subMatchBadge),
              e._filterAutoExpanded &&
                e.expanded &&
                e.setExpanded(!1, {
                  noAnimation: !0,
                  noEvents: !0,
                  scrollIntoView: !1,
                }),
              delete e._filterAutoExpanded;
          }),
          (this.enableFilter = !1),
          (this.lastFilterArgs = null),
          this.$div.removeClass(
            "fancytree-ext-filter fancytree-ext-filter-dimm fancytree-ext-filter-hide",
          ),
          this._callHook("treeStructureChanged", this, "clearFilter"),
          this.enableUpdate(r);
      }),
      (y.ui.fancytree._FancytreeClass.prototype.isFilterActive = function () {
        return !!this.enableFilter;
      }),
      (y.ui.fancytree._FancytreeNodeClass.prototype.isMatched = function () {
        return !(this.tree.enableFilter && !this.match);
      }),
      y.ui.fancytree.registerExtension({
        name: "filter",
        version: "2.38.1",
        options: {
          autoApply: !0,
          autoExpand: !1,
          counter: !0,
          fuzzy: !1,
          hideExpandedCounter: !0,
          hideExpanders: !1,
          highlight: !0,
          leavesOnly: !1,
          nodata: !0,
          mode: "dimm",
        },
        nodeLoadChildren: function (e) {
          const t = e.tree;
          return this._superApply(arguments).done(function () {
            t.enableFilter &&
              t.lastFilterArgs &&
              e.options.filter.autoApply &&
              t._applyFilterImpl.apply(t, t.lastFilterArgs);
          });
        },
        nodeSetExpanded: function (e, t) {
          const n = e.node;
          return (
            delete n._filterAutoExpanded,
            !t &&
              e.options.filter.hideExpandedCounter &&
              n.$subMatchBadge &&
              n.$subMatchBadge.show(),
            this._superApply(arguments)
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = e.tree;
          const r = e.options.filter;
          const o = y(n.span).find("span.fancytree-title");
          const s = y(n[i.statusClassPropName]);
          const a = e.options.enhanceTitle;
          const l = e.options.escapeTitles;
          return (
            (t = this._super(e)),
            s.length &&
              i.enableFilter &&
              (s
                .toggleClass("fancytree-match", !!n.match)
                .toggleClass("fancytree-submatch", !!n.subMatchCount)
                .toggleClass("fancytree-hide", !(n.match || n.subMatchCount)),
              !r.counter ||
              !n.subMatchCount ||
              (n.isExpanded() && r.hideExpandedCounter)
                ? n.$subMatchBadge && n.$subMatchBadge.hide()
                : (n.$subMatchBadge ||
                    ((n.$subMatchBadge = y(
                      "<span class='fancytree-childcounter'/>",
                    )),
                    y(
                      "span.fancytree-icon, span.fancytree-custom-icon",
                      n.span,
                    ).append(n.$subMatchBadge)),
                  n.$subMatchBadge.show().text(n.subMatchCount)),
              !n.span ||
                (n.isEditing && n.isEditing.call(n)) ||
                (n.titleWithHighlight
                  ? o.html(n.titleWithHighlight)
                  : l
                    ? o.text(n.title)
                    : o.html(n.title),
                a && a({ type: "enhanceTitle" }, { node: n, $title: o }))),
            t
          );
        },
      }),
      y.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree", "./jquery.fancytree.table"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.table"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (w) {
    "use strict";
    return (
      w.ui.fancytree.registerExtension({
        name: "fixed",
        version: "0.0.1",
        options: {
          fixCol: 1,
          fixColWidths: null,
          fixRows: !0,
          scrollSpeed: 50,
          resizable: !0,
          classNames: {
            table: "fancytree-ext-fixed",
            wrapper: "fancytree-ext-fixed-wrapper",
            topLeft: "fancytree-ext-fixed-wrapper-tl",
            topRight: "fancytree-ext-fixed-wrapper-tr",
            bottomLeft: "fancytree-ext-fixed-wrapper-bl",
            bottomRight: "fancytree-ext-fixed-wrapper-br",
            hidden: "fancytree-ext-fixed-hidden",
            counterpart: "fancytree-ext-fixed-node-counterpart",
            scrollBorderBottom: "fancytree-ext-fixed-scroll-border-bottom",
            scrollBorderRight: "fancytree-ext-fixed-scroll-border-right",
            hover: "fancytree-ext-fixed-hover",
          },
        },
        treeInit: function (e) {
          this._requireExtension("table", !0, !0);
          const t = this._superApply(arguments);
          const s = e.tree;
          const i = this.options.fixed;
          const a = this.options.fixed.classNames;
          const n = s.widget.element;
          const r = i.fixCols;
          let o = i.fixRows;
          const l = n.parent();
          const c = w("<div>").addClass(a.topLeft);
          const u = w("<div>").addClass(a.topRight);
          const d = w("<div>").addClass(a.bottomLeft);
          const h = w("<div>").addClass(a.bottomRight);
          const p = n.attr("style");
          const f = n.attr("class");
          const g = w("<table>").attr("style", p).attr("class", f);
          const m = w("<table>").attr("style", p).attr("class", f);
          const v = n;
          const y = w("<table>").attr("style", p).attr("class", f);
          const b = n.find("thead");
          const _ = n.find("colgroup");
          const x = b.find("tr").length;
          return (
            (this.$fixedWrapper = l),
            n.addClass(a.table),
            l.addClass(a.wrapper),
            y.append(w("<tbody>")),
            _.length && _.remove(),
            (o =
              typeof o === "boolean"
                ? o
                  ? x
                  : 0
                : Math.max(0, Math.min(o, x))) &&
              (g.append(b.clone(!0)), m.append(b.clone(!0)), b.remove()),
            g.find("tr").each(function () {
              w(this).find("th").slice(r).remove();
            }),
            m.find("tr").each(function () {
              w(this).find("th").slice(0, r).remove();
            }),
            (this.$fixedWrapper = l).append(
              c.append(g),
              u.append(m),
              d.append(v),
              h.append(y),
            ),
            y.on("keydown", function (e) {
              const t = s.focusNode;
              const n = s._makeHookContext(t || s, e);
              return s._callHook("nodeKeydown", n);
            }),
            y.on("click dblclick", "tr", function (e) {
              const t = w(this).data(a.counterpart);
              const n = w.ui.fancytree.getNode(t);
              const i = s._makeHookContext(n, e);
              const r = w.ui.fancytree.getEventTarget(e);
              const o = s.phase;
              try {
                switch (((s.phase = "userEvent"), e.type)) {
                  case "click":
                    return (
                      (i.targetType = r.type),
                      n.isPagingNode()
                        ? !0 === s._triggerNodeEvent("clickPaging", i, e)
                        : !1 !== s._triggerNodeEvent("click", i, e) &&
                          s._callHook("nodeClick", i)
                    );
                  case "dblclick":
                    return (
                      (i.targetType = r.type),
                      !1 !== s._triggerNodeEvent("dblclick", i, e) &&
                        s._callHook("nodeDblclick", i)
                    );
                }
              } finally {
                s.phase = o;
              }
            }),
            l
              .on(
                "mouseenter",
                "." +
                  a.bottomRight +
                  " table tr, ." +
                  a.bottomLeft +
                  " table tr",
                function () {
                  const e = w(this);
                  const t = e.data(a.counterpart);
                  e.addClass(a.hover), t.addClass(a.hover);
                },
              )
              .on(
                "mouseleave",
                "." +
                  a.bottomRight +
                  " table tr, ." +
                  a.bottomLeft +
                  " table tr",
                function () {
                  const e = w(this);
                  const t = e.data(a.counterpart);
                  e.removeClass(a.hover), t.removeClass(a.hover);
                },
              ),
            d.on("mousewheel DOMMouseScroll", function (e) {
              const t = w(this);
              let n = t.scrollTop();
              (n +=
                e.originalEvent.wheelDelta > 0 || e.originalEvent.detail < 0
                  ? -i.scrollSpeed
                  : i.scrollSpeed),
                t.scrollTop(n),
                h.scrollTop(n),
                e.preventDefault();
            }),
            h.scroll(function () {
              const e = w(this);
              const t = e.scrollLeft();
              const n = e.scrollTop();
              c
                .toggleClass(a.scrollBorderBottom, n > 0)
                .toggleClass(a.scrollBorderRight, t > 0),
                u.toggleClass(a.scrollBorderBottom, n > 0).scrollLeft(t),
                d.toggleClass(a.scrollBorderRight, t > 0).scrollTop(n);
            }),
            w.ui.fancytree.overrideMethod(
              w.ui.fancytree._FancytreeNodeClass.prototype,
              "scrollIntoView",
              function (e, t) {
                const n = s.$container;
                return (
                  (s.$container = h),
                  this._super.apply(this, arguments).always(function () {
                    s.$container = n;
                  })
                );
              },
            ),
            t
          );
        },
        treeLoad: function () {
          const e = this;
          const t = this._superApply(arguments);
          return (
            t.done(function () {
              e.ext.fixed._adjustLayout.call(e),
                e.options.fixed.resizable && e.ext.fixed._makeTableResizable();
            }),
            t
          );
        },
        _makeTableResizable: function () {
          function e(i) {
            i.resizable({
              handles: "e",
              resize: function (e, t) {
                const n = Math.max(i.width(), t.size.width);
                s.css("width", n),
                  r.css("width", n),
                  a.css("left", n),
                  o.css("left", n);
              },
              stop: function () {
                i.css("width", "100%");
              },
            });
          }
          const t = this.$fixedWrapper;
          const n = this.options.fixed.classNames;
          var r = t.find("div." + n.topLeft);
          var o = t.find("div." + n.topRight);
          var s = t.find("div." + n.bottomLeft);
          var a = t.find("div." + n.bottomRight);
          e(r.find("table")), e(s.find("table"));
        },
        nodeLoadChildren: function () {
          return this._superApply(arguments);
        },
        nodeRemoveChildMarkup: function (e) {
          function r(e) {
            let t;
            let n;
            const i = e.children;
            if (i) {
              for (t = 0; t < i.length; t++) {
                (n = i[t]).trRight && w(n.trRight).remove(), r(n);
              }
            }
          }
          return r(e.node), this._superApply(arguments);
        },
        nodeRemoveMarkup: function (e) {
          const t = e.node;
          return (
            t.trRight && w(t.trRight).remove(), this._superApply(arguments)
          );
        },
        nodeSetActive: function (e, t) {
          const n = e.node;
          const i = this.options._classNames;
          return (
            n.trRight &&
              w(n.trRight).toggleClass(i.active, t).toggleClass(i.focused, t),
            this._superApply(arguments)
          );
        },
        nodeKeydown: function () {
          return this._superApply(arguments);
        },
        nodeSetFocus: function (e, t) {
          const n = e.node;
          const i = this.options._classNames;
          return (
            n.trRight && w(n.trRight).toggleClass(i.focused, t),
            this._superApply(arguments)
          );
        },
        nodeRender: function (e) {
          const t = this._superApply(arguments);
          const n = e.node;
          if (!!n.parent && this.$fixedWrapper) {
            const i = w(n.tr);
            const r = this.options.fixed.classNames;
            let o = i.data(r.counterpart);
            if (!o && i.length) {
              const s = i.index();
              const a = this.options.fixed.fixCols;
              const l = this.$fixedWrapper.find(
                "div." + r.bottomLeft + " table tbody",
              );
              const c = this.$fixedWrapper.find(
                "div." + r.bottomRight + " table tbody",
              );
              const u = l
                .find("tr")
                .eq(Math.max(s + 1, 0))
                .data(r.counterpart);
              const d = (o = i.clone(!0)).get(0);
              u ? w(u).before(o) : c.append(o),
                o.show(),
                ((d.ftnode = n).trRight = d),
                i.find("td").slice(a).remove(),
                o.find("td").slice(0, a).remove(),
                i.data(r.counterpart, o),
                o.data(r.counterpart, i);
            }
          }
          return t;
        },
        nodeRenderTitle: function () {
          return this._superApply(arguments);
        },
        nodeRenderStatus: function (e) {
          const t = this._superApply(arguments);
          const n = e.node;
          if (n.trRight) {
            const i = w(n.trRight);
            const r = w(n.tr);
            const o = this.options.fixed.classNames;
            const s = i.hasClass(o.hover);
            const a = r.attr("class");
            i.attr("class", a), s && (i.addClass(o.hover), r.addClass(o.hover));
          }
          return t;
        },
        nodeSetExpanded: function (e, t) {
          let n;
          const i = this;
          const r = e.node;
          const o = w(r.tr);
          const s = this.options.fixed.classNames;
          const a = this.options._classNames;
          const l = o.data(s.counterpart);
          return (
            (t = void 0 === t || t),
            l
              ? (l.toggleClass(a.expanded, !!t),
                t && !r.isExpanded()
                  ? (n = this._superApply(arguments)).done(function () {
                      r.visit(function (e) {
                        const t = w(e.tr);
                        const n = t.data(s.counterpart);
                        if ((i.ext.fixed._adjustRowHeight(t, n), !e.expanded)) {
                          return "skip";
                        }
                      }),
                        i.ext.fixed._adjustColWidths(),
                        i.ext.fixed._adjustWrapperLayout();
                    })
                  : (!t &&
                      r.isExpanded() &&
                      (r.visit(function (e) {
                        if (w(e.tr).data(s.counterpart) && !e.expanded) {
                          return "skip";
                        }
                      }),
                      i.ext.fixed._adjustColWidths(),
                      i.ext.fixed._adjustWrapperLayout()),
                    (n = this._superApply(arguments))),
                n)
              : this._superApply(arguments)
          );
        },
        nodeSetStatus: function () {
          return this._superApply(arguments);
        },
        treeClear: function (e) {
          const t = e.tree.widget.element;
          const n = this.$fixedWrapper;
          const i = this.options.fixed.classNames;
          return (
            t
              .find("tr, td, th, thead")
              .removeClass(i.hidden)
              .css({ "min-width": "auto", height: "auto" }),
            n.empty().append(t),
            this._superApply(arguments)
          );
        },
        treeRegisterNode: function () {
          return this._superApply(arguments);
        },
        treeDestroy: function (e) {
          const t = e.tree.widget.element;
          const n = this.$fixedWrapper;
          const i = this.options.fixed.classNames;
          return (
            t
              .find("tr, td, th, thead")
              .removeClass(i.hidden)
              .css({ "min-width": "auto", height: "auto" }),
            n.empty().append(t),
            this._superApply(arguments)
          );
        },
        _adjustColWidths: function () {
          function e(e, t) {
            const n = e.find("thead tr").first();
            const l = t.find("tbody tr").first();
            n.find("th").each(function (e) {
              const t = w(this);
              const n = l.find("td").eq(e);
              const i = t.width();
              const r = t.outerWidth();
              const o = n.width();
              const s = n.outerWidth();
              const a = Math.max(r, s);
              t.css("min-width", a - (r - i)), n.css("min-width", a - (s - o));
            });
          }
          if (this.options.fixed.adjustColWidths) {
            this.options.fixed.adjustColWidths.call(this);
          } else {
            const t = this.$fixedWrapper;
            const n = this.options.fixed.classNames;
            const i = t.find("div." + n.topLeft);
            const r = t.find("div." + n.bottomLeft);
            const o = t.find("div." + n.topRight);
            const s = t.find("div." + n.bottomRight);
            e(i, r), e(o, s);
          }
        },
        _adjustRowHeight: function (e, t) {
          const n = this.options.fixed.classNames;
          t || (t = e.data(n.counterpart)),
            e.css("height", "auto"),
            t.css("height", "auto");
          const i = e.outerHeight();
          const r = t.outerHeight();
          const o = Math.max(i, r);
          e.css("height", o + 1), t.css("height", o + 1);
        },
        _adjustWrapperLayout: function () {
          const e = this.$fixedWrapper;
          const t = this.options.fixed.classNames;
          const n = e.find("div." + t.topLeft);
          const i = e.find("div." + t.topRight);
          const r = e.find("div." + t.bottomLeft);
          const o = e.find("div." + t.bottomRight);
          const s = n.find("table");
          const a = i.find("table");
          const l = e.width();
          const c = e.height();
          const u = Math.min(l, s.width());
          const d = Math.min(c, Math.max(s.height(), a.height()));
          n.css({ width: u, height: d }),
            i.css({
              width: "calc(100% - " + (u + 17) + "px)",
              height: d,
              left: u,
            }),
            r.css({
              width: u,
              height: "calc(100% - " + (d + 17) + "px)",
              top: d,
            }),
            o.css({
              width: "calc(100% - " + u + "px)",
              height: "calc(100% - " + d + "px)",
              top: d,
              left: u,
            });
        },
        _adjustLayout: function () {
          const n = this;
          const e = this.$fixedWrapper;
          const t = this.options.fixed.classNames;
          const i = e.find("div." + t.topLeft);
          const r = e.find("div." + t.topRight);
          const o = e.find("div." + t.bottomLeft);
          i.find("table tr").each(function (e) {
            const t = r.find("tr").eq(e);
            n.ext.fixed._adjustRowHeight(w(this), t);
          }),
            o
              .find("table tbody")
              .find("tr")
              .each(function () {
                n.ext.fixed._adjustRowHeight(w(this));
              }),
            n.ext.fixed._adjustColWidths.call(this),
            n.ext.fixed._adjustWrapperLayout.call(this);
        },
      }),
      w.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (u) {
    "use strict";
    function a(e, t, n, i, r) {
      const o = i.map;
      let s = o[r];
      const a = u(t);
      const l = a.find(".fancytree-childcounter");
      const c = n + " " + (o._addClass || "");
      typeof s === "function" && (s = s.call(this, e, t, r)),
        typeof s === "string"
          ? ((t.innerHTML = ""), a.attr("class", c + " " + s).append(l))
          : s &&
            (s.text
              ? (t.textContent = "" + s.text)
              : s.html
                ? (t.innerHTML = s.html)
                : (t.innerHTML = ""),
            a.attr("class", c + " " + (s.addClass || "")).append(l));
    }
    const l = u.ui.fancytree;
    const i = {
      awesome3: {
        _addClass: "",
        checkbox: "icon-check-empty",
        checkboxSelected: "icon-check",
        checkboxUnknown: "icon-check icon-muted",
        dragHelper: "icon-caret-right",
        dropMarker: "icon-caret-right",
        error: "icon-exclamation-sign",
        expanderClosed: "icon-caret-right",
        expanderLazy: "icon-angle-right",
        expanderOpen: "icon-caret-down",
        loading: "icon-refresh icon-spin",
        nodata: "icon-meh",
        noExpander: "",
        radio: "icon-circle-blank",
        radioSelected: "icon-circle",
        doc: "icon-file-alt",
        docOpen: "icon-file-alt",
        folder: "icon-folder-close-alt",
        folderOpen: "icon-folder-open-alt",
      },
      awesome4: {
        _addClass: "fa",
        checkbox: "fa-square-o",
        checkboxSelected: "fa-check-square-o",
        checkboxUnknown: "fa-square fancytree-helper-indeterminate-cb",
        dragHelper: "fa-arrow-right",
        dropMarker: "fa-long-arrow-right",
        error: "fa-warning",
        expanderClosed: "fa-caret-right",
        expanderLazy: "fa-angle-right",
        expanderOpen: "fa-caret-down",
        loading: { html: "<span class='fa fa-spinner fa-pulse' />" },
        nodata: "fa-meh-o",
        noExpander: "",
        radio: "fa-circle-thin",
        radioSelected: "fa-circle",
        doc: "fa-file-o",
        docOpen: "fa-file-o",
        folder: "fa-folder-o",
        folderOpen: "fa-folder-open-o",
      },
      awesome5: {
        _addClass: "",
        checkbox: "far fa-square",
        checkboxSelected: "far fa-check-square",
        checkboxUnknown: "fas fa-square fancytree-helper-indeterminate-cb",
        radio: "far fa-circle",
        radioSelected: "fas fa-circle",
        radioUnknown: "far fa-dot-circle",
        dragHelper: "fas fa-arrow-right",
        dropMarker: "fas fa-long-arrow-alt-right",
        error: "fas fa-exclamation-triangle",
        expanderClosed: "fas fa-caret-right",
        expanderLazy: "fas fa-angle-right",
        expanderOpen: "fas fa-caret-down",
        loading: "fas fa-spinner fa-pulse",
        nodata: "far fa-meh",
        noExpander: "",
        doc: "far fa-file",
        docOpen: "far fa-file",
        folder: "far fa-folder",
        folderOpen: "far fa-folder-open",
      },
      bootstrap3: {
        _addClass: "glyphicon",
        checkbox: "glyphicon-unchecked",
        checkboxSelected: "glyphicon-check",
        checkboxUnknown: "glyphicon-expand fancytree-helper-indeterminate-cb",
        dragHelper: "glyphicon-play",
        dropMarker: "glyphicon-arrow-right",
        error: "glyphicon-warning-sign",
        expanderClosed: "glyphicon-menu-right",
        expanderLazy: "glyphicon-menu-right",
        expanderOpen: "glyphicon-menu-down",
        loading: "glyphicon-refresh fancytree-helper-spin",
        nodata: "glyphicon-info-sign",
        noExpander: "",
        radio: "glyphicon-remove-circle",
        radioSelected: "glyphicon-ok-circle",
        doc: "glyphicon-file",
        docOpen: "glyphicon-file",
        folder: "glyphicon-folder-close",
        folderOpen: "glyphicon-folder-open",
      },
      material: {
        _addClass: "material-icons",
        checkbox: { text: "check_box_outline_blank" },
        checkboxSelected: { text: "check_box" },
        checkboxUnknown: { text: "indeterminate_check_box" },
        dragHelper: { text: "play_arrow" },
        dropMarker: { text: "arrow-forward" },
        error: { text: "warning" },
        expanderClosed: { text: "chevron_right" },
        expanderLazy: { text: "last_page" },
        expanderOpen: { text: "expand_more" },
        loading: { text: "autorenew", addClass: "fancytree-helper-spin" },
        nodata: { text: "info" },
        noExpander: { text: "" },
        radio: { text: "radio_button_unchecked" },
        radioSelected: { text: "radio_button_checked" },
        doc: { text: "insert_drive_file" },
        docOpen: { text: "insert_drive_file" },
        folder: { text: "folder" },
        folderOpen: { text: "folder_open" },
      },
    };
    return (
      u.ui.fancytree.registerExtension({
        name: "glyph",
        version: "2.38.1",
        options: { preset: null, map: {} },
        treeInit: function (e) {
          const t = e.tree;
          const n = e.options.glyph;
          n.preset
            ? (l.assert(
                !!i[n.preset],
                "Invalid value for `options.glyph.preset`: " + n.preset,
              ),
              (n.map = u.extend({}, i[n.preset], n.map)))
            : t.warn("ext-glyph: missing `preset` option."),
            this._superApply(arguments),
            t.$container.addClass("fancytree-ext-glyph");
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          let i;
          const r = e.node;
          const o = u(r.span);
          const s = e.options.glyph;
          return (
            (n = this._super(e)),
            r.isRootNode() ||
              ((i = o.children(".fancytree-expander").get(0)) &&
                a(
                  r,
                  i,
                  "fancytree-expander",
                  s,
                  r.expanded && r.hasChildren()
                    ? "expanderOpen"
                    : r.isUndefined()
                      ? "expanderLazy"
                      : r.hasChildren()
                        ? "expanderClosed"
                        : "noExpander",
                ),
              (i = r.tr
                ? u("td", r.tr).find(".fancytree-checkbox").get(0)
                : o.children(".fancytree-checkbox").get(0)) &&
                ((t = l.evalOption("checkbox", r, r, s, !1)),
                (r.parent && r.parent.radiogroup) || t === "radio"
                  ? a(
                      r,
                      i,
                      "fancytree-checkbox fancytree-radio",
                      s,
                      r.selected ? "radioSelected" : "radio",
                    )
                  : a(
                      r,
                      i,
                      "fancytree-checkbox",
                      s,
                      r.selected
                        ? "checkboxSelected"
                        : r.partsel
                          ? "checkboxUnknown"
                          : "checkbox",
                    )),
              (i = o.children(".fancytree-icon").get(0)) &&
                a(
                  r,
                  i,
                  "fancytree-icon",
                  s,
                  r.statusNodeType
                    ? r.statusNodeType
                    : r.folder
                      ? r.expanded && r.hasChildren()
                        ? "folderOpen"
                        : "folder"
                      : r.expanded
                        ? "docOpen"
                        : "doc",
                )),
            n
          );
        },
        nodeSetStatus: function (e, t) {
          let n;
          let i;
          const r = e.options.glyph;
          const o = e.node;
          return (
            (n = this._superApply(arguments)),
            (t !== "error" && t !== "loading" && t !== "nodata") ||
              (o.parent
                ? (i = u(".fancytree-expander", o.span).get(0)) &&
                  a(o, i, "fancytree-expander", r, t)
                : (i = u(
                    ".fancytree-statusnode-" + t,
                    o[this.nodeContainerAttrName],
                  )
                    .find(".fancytree-icon")
                    .get(0)) && a(o, i, "fancytree-icon", r, t)),
            n
          );
        },
      }),
      u.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (v) {
    "use strict";
    const c = v.ui.fancytree;
    const y = c.assert;
    const e = "wheel";
    return (
      (v.ui.fancytree._FancytreeClass.prototype._renumberReset = function () {
        this.visibleNodeList = null;
      }),
      (v.ui.fancytree._FancytreeClass.prototype._fixStart = function (e, t) {
        const n = this.viewport;
        const i = this.visibleNodeList;
        const r = (e = e == null ? n.start : e);
        return (
          i &&
            ((e = Math.min(e, this.visibleNodeList.length - n.count)),
            (e = Math.max(e, 0, e)) !== r &&
              (this.debug("Adjust start " + r + " => " + e),
              t && (n.start = e))),
          e
        );
      }),
      (v.ui.fancytree._FancytreeClass.prototype._shiftViewport = function (
        e,
        t,
      ) {
        switch ((this.debug("_shiftViewport", e, t), e)) {
          case "vscroll":
            t &&
              this.setViewport({
                start: this.viewport.start + (t > 0 ? 1 : -1),
              });
            break;
          default:
            throw Error("Invalid  mode: " + e);
        }
      }),
      (v.ui.fancytree._FancytreeClass.prototype.isViewportBottom = function () {
        return (
          this.viewport.start + this.viewport.count >=
          this.visibleNodeList.length
        );
      }),
      (v.ui.fancytree._FancytreeClass.prototype.setViewport = function (e) {
        if (typeof e === "boolean") {
          return (
            this.debug("setViewport( " + e + ")"),
            this.setViewport({ enabled: e })
          );
        }
        e = e || {};
        let t;
        let n;
        let i;
        let r;
        let o = "";
        const s = this.viewport;
        const a = { start: 0, count: 0, enabled: null, force: null };
        const l = v.extend({}, s);
        const c = this.tbody.children;
        let u = c.length;
        if (
          (this.debug("setViewport(" + e.start + ", +" + e.count + ")"),
          e.force && ((o += "force"), (a.force = !0)),
          (e.enabled = !1 !== e.enabled),
          s.enabled !== e.enabled &&
            ((o += "enable"), (l.enabled = a.enabled = e.enabled)),
          (i = e.start == null ? s.start : Math.max(0, +e.start)),
          (i = this._fixStart(i, !1)),
          s.start !== +i &&
            ((o += "start"), (l.start = i), (a.start = i - s.start)),
          (n = e.count == null ? s.count : Math.max(1, +e.count)),
          s.count !== +n &&
            ((o += "count"), (l.count = n), (a.count = n - s.count)),
          !o)
        ) {
          return !1;
        }
        const d = { next: l, diff: a, reason: o, scrollOnly: o === "start" };
        if (
          !e.noEvents &&
          !1 === this._triggerTreeEvent("beforeUpdateViewport", null, d)
        ) {
          return !1;
        }
        (d.prev = v.extend({}, s)),
          delete d.next,
          (s.start = l.start),
          (s.count = l.count);
        const h = this.isVpUpdating;
        if (n < u) {
          for (t = 0; t < u - n; t++) {
            delete this.tbody.lastChild.ftnode,
              this.tbody.removeChild(this.tbody.lastChild);
          }
        } else if (u < n) {
          for (t = 0; t < n - u; t++) {
            (r = this.rowFragment.firstChild.cloneNode(!0)),
              this.tbody.appendChild(r);
          }
        }
        u = c.length;
        const p = e.force;
        return (
          this.redrawViewport(p),
          e.noEvents || this._triggerTreeEvent("updateViewport", null, d),
          (this.isVpUpdating = h),
          !0
        );
      }),
      (v.ui.fancytree._FancytreeClass.prototype.adjustViewportSize =
        function () {
          if (
            (y(
              this.scrollWrapper,
              "No parent div.fancytree-grid-container found.",
            ),
            this.isVpUpdating)
          ) {
            this.debug("Ignoring adjustViewportSize() during VP update.");
          } else {
            const e = this.$container;
            const t = this.scrollWrapper;
            const n = e.find(">tbody>tr").first().height() || 0;
            const i = e.height() - this.viewport.count * n;
            const r = t.offsetHeight - i;
            const o = n ? Math.floor(r / n) : 0;
            this.setViewport({ count: o });
          }
        }),
      (v.ui.fancytree._FancytreeClass.prototype._initViewportWrapper =
        function () {
          const r = this;
          e === "wheel" &&
            this.$container.on("wheel", function (e) {
              const t = e.originalEvent;
              const n = r.viewport;
              const i = t.deltaY;
              return (
                !!(!i || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) ||
                (i < 0 && n.start === 0) ||
                !!(i > 0 && r.isViewportBottom()) ||
                (r.debug(
                  "Got 'wheel' event: dy=" + i + ", mode=" + t.deltaMode,
                ),
                r._shiftViewport("vscroll", i),
                !1)
              );
            });
        }),
      (v.ui.fancytree._FancytreeClass.prototype._renumberVisibleNodes =
        function (e) {
          if (
            (!this.options.viewport.enabled || this.visibleNodeList != null) &&
            !0 !== e
          ) {
            return !1;
          }
          this.debugTime("_renumberVisibleNodes()");
          let t = 0;
          const n = this.visibleNodeList ? this.visibleNodeList.length : 0;
          const i = (this.visibleNodeList = []);
          this.visit(function (e) {
            e._rowIdx = null;
          }),
            this.visitRows(function (e) {
              (e._rowIdx = t++), i.push(e);
            }),
            this.debugTimeEnd("_renumberVisibleNodes()"),
            t !== n &&
              this._triggerTreeEvent("updateViewport", null, {
                reason: "renumber",
                diff: { start: 0, count: 0, enabled: null, force: null },
                next: v.extend({}, this.viewport),
              });
        }),
      (v.ui.fancytree._FancytreeClass.prototype.redrawViewport = function (e) {
        if (!1 !== this._enableUpdate) {
          this.debugTime("redrawViewport()"),
            this._renumberVisibleNodes(e),
            this._fixStart(null, !0);
          let t;
          let n = 0;
          const i = this.viewport;
          const r = this.visibleNodeList;
          const o = i.start;
          const s = o + i.count;
          let a = 0;
          const l = this.tbody.children;
          const c = this.isVpUpdating;
          for (
            this.visit(function (e) {
              (e.span = null), e.tr && (delete e.tr.ftnode, (e.tr = null));
            }),
              n = o;
            n < s;
            n++
          ) {
            const u = r[n];
            if (((t = l[a]), u)) t !== u.tr && ((u.tr = t), u.render(), 0), a++;
            else {
              const d = this.rowFragment.firstChild.cloneNode(!0);
              this.tbody.replaceChild(d, t), a++;
            }
          }
          (this.isVpUpdating = c), this.debugTimeEnd("redrawViewport()");
        }
      }),
      v.ui.fancytree.registerExtension({
        name: "grid",
        version: "2.38.1",
        options: {
          checkboxColumnIdx: null,
          indentation: 16,
          mergeStatusColumns: !0,
          nodeColumnIdx: 0,
        },
        treeInit: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o;
          const s = e.tree;
          const a = e.options;
          const l = a.table;
          const c = s.widget.element;
          const u = c.parent(".fancytree-grid-container");
          if (
            (v.inArray("table", a.extensions) >= 0 &&
              v.error("ext-grid and ext-table are mutually exclusive."),
            !0 === a.renderStatusColumns &&
              (a.renderStatusColumns = a.renderColumns),
            c.addClass(
              "fancytree-container fancytree-ext-grid fancytree-ext-table",
            ),
            (o = c.find(">tbody")).length ||
              (c.find(">tr").length &&
                v.error(
                  "Expected table > tbody > tr. If you see this, please open an issue.",
                ),
              (o = v("<tbody>").appendTo(c))),
            (s.tbody = o[0]),
            (n = v("thead >tr", c).last().find(">th").length),
            (r = o.children("tr").first()).length)
          ) {
            (i = r.children("td").length),
              n &&
                i !== n &&
                (s.warn(
                  "Column count mismatch between thead (" +
                    n +
                    ") and tbody (" +
                    i +
                    "): using tbody.",
                ),
                (n = i)),
              (r = r.clone());
          } else {
            for (
              y(
                n >= 1,
                "Need either <thead> or <tbody> with <td> elements to determine column count.",
              ),
                r = v("<tr />"),
                t = 0;
              t < n;
              t++
            ) {
              r.append("<td />");
            }
          }
          r
            .find(">td")
            .eq(l.nodeColumnIdx)
            .html("<span class='fancytree-node' />"),
            a.aria &&
              (r.attr("role", "row"), r.find("td").attr("role", "gridcell")),
            (s.rowFragment = document.createDocumentFragment()),
            s.rowFragment.appendChild(r.get(0)),
            o.empty(),
            (s.statusClassPropName = "tr"),
            (s.ariaPropName = "tr"),
            (this.nodeContainerAttrName = "tr"),
            (s.$container = c),
            u.length
              ? ((s.scrollWrapper = u[0]), this._initViewportWrapper())
              : (s.scrollWrapper = null),
            v.ui.fancytree.overrideMethod(
              v.ui.fancytree._FancytreeNodeClass.prototype,
              "scrollIntoView",
              function (e, t) {
                const n = this;
                const i = n.tree;
                const r = t && t.topNode;
                const o = i.viewport;
                let s = o ? o.start : null;
                return i.viewport
                  ? (n._rowIdx < o.start
                      ? (s = n._rowIdx)
                      : n._rowIdx >= o.start + o.count &&
                        (s = n._rowIdx - o.count + 1),
                    r && r._rowIdx < s && (s = r._rowIdx),
                    i.setViewport({ start: s }),
                    v
                      .Deferred(function () {
                        this.resolveWith(n);
                      })
                      .promise())
                  : n._super.apply(this, arguments);
              },
            ),
            (s.visibleNodeList = null),
            (s.viewport = {
              enabled: !0,
              start: 0,
              count: 10,
              left: 0,
              right: 0,
            }),
            this.setViewport(
              v.extend(
                {
                  autoSize: !0,
                  start: 0,
                  count: 10,
                  left: 0,
                  right: 0,
                  keepEmptyRows: !0,
                  noEvents: !0,
                },
                a.viewport,
              ),
            ),
            this._superApply(arguments),
            v(s.rootNode.ul).remove(),
            (s.rootNode.ul = null),
            this.$container.attr("tabindex", a.tabindex),
            a.aria &&
              s.$container.attr("role", "treegrid").attr("aria-readonly", !0);
        },
        nodeKeydown: function (e) {
          let t = null;
          let n = null;
          const i = e.tree;
          const r = e.node;
          const o = i.visibleNodeList;
          const s = i.viewport;
          const a = e.originalEvent;
          const l = c.eventToString(a);
          switch ((i.debug("nodeKeydown(" + l + ")"), l)) {
            case "home":
            case "meta+up":
              n = 0;
              break;
            case "end":
            case "meta+down":
              n = o.length - 1;
              break;
            case "pageup":
              n = r._rowIdx - s.count;
              break;
            case "pagedown":
              n = r._rowIdx + s.count;
          }
          return n != null
            ? ((t =
                o[(n = Math.min(Math.max(0, n), o.length - 1))]).makeVisible(),
              t.setActive(),
              !1)
            : this._superApply(arguments);
        },
        nodeRemoveChildMarkup: function (e) {
          e.node.visit(function (e) {
            e.tr && (delete e.tr.ftnode, (e.tr = null), (e.span = null));
          });
        },
        nodeRemoveMarkup: function (e) {
          const t = e.node;
          t.tr && (delete t.tr.ftnode, (t.tr = null), (t.span = null)),
            this.nodeRemoveChildMarkup(e);
        },
        nodeRender: function (e, t, n, i, r) {
          let o;
          let s;
          let a;
          let l;
          const c = e.tree;
          const u = e.node;
          if (!1 !== c._enableUpdate) {
            const d = e.options;
            const h = c.viewport.enabled ? c.viewport : null;
            const p = h && h.start > 0 ? +h.start : 0;
            const f = h ? p + h.count - 1 : 0;
            const g = !u.parent;
            if ((y(h), !r)) {
              if (g && h) {
                return (
                  u.debug("nodeRender(): redrawViewport() instead"),
                  e.tree.redrawViewport()
                );
              }
              (e.hasCollapsedParents = u.parent && !u.parent.expanded),
                h && c._renumberVisibleNodes();
            }
            if (!g) {
              if (h && (u._rowIdx < p || u._rowIdx >= p + h.count)) return;
              if (!u.tr) {
                if (u._rowIdx == null) return;
                u.debug("nodeRender(): creating new TR."),
                  (u.tr = c.tbody.rows[u._rowIdx - p]);
              }
              (u.tr.ftnode = u).key &&
                d.generateIds &&
                (u.tr.id = d.idPrefix + u.key),
                (u.span = v("span.fancytree-node", u.tr).get(0)),
                this.nodeRenderTitle(e),
                d.createNode &&
                  d.createNode.call(this, { type: "createNode" }, e);
            }
            if (
              (d.renderNode && d.renderNode.call(c, { type: "renderNode" }, e),
              (o = u.children),
              y(!n, "deep is not supported"),
              o && (g || n || u.expanded))
            ) {
              for (s = 0, a = o.length; s < a; s++) {
                const m = o[s];
                if (h && m._rowIdx > f) {
                  return o[s].debug("BREAK render children loop"), !1;
                }
                ((l = v.extend({}, e, { node: m })).hasCollapsedParents =
                  l.hasCollapsedParents || !u.expanded),
                  this.nodeRender(l, t, n, i, !0);
              }
            }
          } else u.debug("nodeRender(): _enableUpdate: false");
        },
        nodeRenderTitle: function (e, t) {
          let n;
          let i;
          const r = e.tree;
          const o = e.node;
          const s = e.options;
          const a = o.isStatusNode();
          return (
            (i = this._super(e, t)),
            o.isRootNode() ||
              (s.checkbox &&
                !a &&
                s.table.checkboxColumnIdx != null &&
                ((n = v("span.fancytree-checkbox", o.span)),
                v(o.tr).find("td").eq(+s.table.checkboxColumnIdx).html(n)),
              this.nodeRenderStatus(e),
              a
                ? s.renderStatusColumns
                  ? s.renderStatusColumns.call(
                      r,
                      { type: "renderStatusColumns" },
                      e,
                    )
                  : s.grid.mergeStatusColumns &&
                    o.isTopLevel() &&
                    o.warn("mergeStatusColumns is not yet implemented.")
                : s.renderColumns &&
                  s.renderColumns.call(r, { type: "renderColumns" }, e)),
            i
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = e.options;
          this._super(e),
            v(n.tr).removeClass("fancytree-node"),
            (t = (n.getLevel() - 1) * i.table.indentation),
            i.rtl
              ? v(n.span).css({ paddingRight: t + "px" })
              : v(n.span).css({ paddingLeft: t + "px" });
        },
        nodeSetExpanded: function (t, n, i) {
          function e(e) {
            o.redrawViewport(!0),
              e
                ? n && t.options.autoScroll && !i.noAnimation && r.hasChildren()
                  ? r
                      .getLastChild()
                      .scrollIntoView(!0, { topNode: r })
                      .always(function () {
                        i.noEvents ||
                          o._triggerNodeEvent(n ? "expand" : "collapse", t),
                          s.resolveWith(r);
                      })
                  : (i.noEvents ||
                      o._triggerNodeEvent(n ? "expand" : "collapse", t),
                    s.resolveWith(r))
                : (i.noEvents ||
                    o._triggerNodeEvent(n ? "expand" : "collapse", t),
                  s.rejectWith(r));
          }
          var r = t.node;
          var o = t.tree;
          if (((n = !1 !== n), (r.expanded && n) || (!r.expanded && !n))) {
            return this._superApply(arguments);
          }
          var s = new v.Deferred();
          const a = v.extend({}, i, { noEvents: !0, noAnimation: !0 });
          return (
            (i = i || {}),
            this._super(t, n, a)
              .done(function () {
                e(!0);
              })
              .fail(function () {
                e(!1);
              }),
            s.promise()
          );
        },
        treeClear: function () {
          return this._superApply(arguments);
        },
        treeDestroy: function () {
          return (
            this.$container.find("tbody").empty(),
            this.$container.off("wheel"),
            this.$source && this.$source.removeClass("fancytree-helper-hidden"),
            this._renumberReset(),
            this._superApply(arguments)
          );
        },
        treeStructureChanged: function (e, t) {
          (t !== "addNode" || e.tree.visibleNodeList) && this._renumberReset();
        },
      }),
      v.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree", "./jquery.fancytree.table"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.table"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (a) {
    "use strict";
    function s(e, t) {
      let n;
      const i = t.get(0);
      let r = 0;
      return (
        e.children().each(function () {
          if (this === i) return !1;
          (n = a(this).prop("colspan")), (r += n || 1);
        }),
        r
      );
    }
    function l(e, t) {
      let n;
      let i = null;
      let r = 0;
      return (
        e.children().each(function () {
          if (t <= r) return (i = a(this)), !1;
          (n = a(this).prop("colspan")), (r += n || 1);
        }),
        i
      );
    }
    function c(e, t) {
      let n;
      let i;
      const r = e.closest("td");
      let o = null;
      switch (t) {
        case u.LEFT:
          o = r.prev();
          break;
        case u.RIGHT:
          o = r.next();
          break;
        case u.UP:
        case u.DOWN:
          for (
            i = s((n = r.parent()), r);
            (n = t === u.UP ? n.prev() : n.next()).length &&
            (n.is(":hidden") || !(o = l(n, i)) || !o.find(":input,a").length);

          );
      }
      return o;
    }
    var u = a.ui.keyCode;
    const d = {
      text: [u.UP, u.DOWN],
      checkbox: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      link: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      radiobutton: [u.UP, u.DOWN, u.LEFT, u.RIGHT],
      "select-one": [u.LEFT, u.RIGHT],
      "select-multiple": [u.LEFT, u.RIGHT],
    };
    return (
      a.ui.fancytree.registerExtension({
        name: "gridnav",
        version: "2.38.1",
        options: { autofocusInput: !1, handleCursorKeys: !0 },
        treeInit: function (i) {
          this._requireExtension("table", !0, !0),
            this._superApply(arguments),
            this.$container.addClass("fancytree-ext-gridnav"),
            this.$container.on("focusin", function (e) {
              let t;
              const n = a.ui.fancytree.getNode(e.target);
              n &&
                !n.isActive() &&
                ((t = i.tree._makeHookContext(n, e)),
                i.tree._callHook("nodeSetActive", t, !0));
            });
        },
        nodeSetActive: function (e, t) {
          const n = e.options.gridnav;
          const i = e.node;
          const r = e.originalEvent || {};
          const o = a(r.target).is(":input");
          (t = !1 !== t),
            this._superApply(arguments),
            t &&
              (e.options.titlesTabbable
                ? (o ||
                    (a(i.span).find("span.fancytree-title").focus(),
                    i.setFocus()),
                  e.tree.$container.attr("tabindex", "-1"))
                : n.autofocusInput &&
                  !o &&
                  a(i.tr || i.span)
                    .find(":input:enabled")
                    .first()
                    .focus());
        },
        nodeKeydown: function (e) {
          let t;
          let n;
          let i;
          const r = e.options.gridnav;
          const o = e.originalEvent;
          const s = a(o.target);
          return (
            s.is(":input:enabled")
              ? (t = s.prop("type"))
              : s.is("a") && (t = "link"),
            t && r.handleCursorKeys
              ? !(
                  (n = d[t]) &&
                  a.inArray(o.which, n) >= 0 &&
                  (i = c(s, o.which)) &&
                  i.length
                ) || (i.find(":input:enabled,a").focus(), !1)
              : this._superApply(arguments)
          );
        },
      }),
      a.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree.ui-deps"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree.ui-deps"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (x) {
    "use strict";
    function w(e, t) {
      e ||
        ((t = "Fancytree assertion failed" + (t = t ? ": " + t : "")),
        x.ui.fancytree.error(t),
        x.error(t));
    }
    function v(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    function f(e) {
      return typeof e === "function";
    }
    function m(e) {
      return e == null ? "" : e.trim();
    }
    function e(e, t) {
      let n;
      let i;
      const r = window.console ? window.console[e] : null;
      if (r) {
        try {
          r.apply(window.console, t);
        } catch (o) {
          for (i = "", n = 0; n < t.length; n++) i += t[n];
          r(i);
        }
      }
    }
    function _(e) {
      return !(!e.tree || e.statusNodeType === undefined);
    }
    function t(e) {
      let t;
      let n;
      let i;
      const r = x.map(m(e).split("."), function (e) {
        return parseInt(e, 10);
      });
      const o = x.map(Array.prototype.slice.call(arguments, 1), function (e) {
        return parseInt(e, 10);
      });
      for (t = 0; t < o.length; t++) {
        if ((n = r[t] || 0) !== (i = o[t] || 0)) return i < n;
      }
      return !0;
    }
    function c(e) {
      let t;
      let n;
      let i;
      let r;
      let o;
      let s = e || {};
      let a = 1;
      const l = arguments.length;
      if ((typeof s === "object" || f(s) || (s = {}), a === l)) {
        throw Error("need at least two args");
      }
      for (; a < l; a++) {
        if ((t = arguments[a]) != null) {
          for (n in t) {
            if (v(t, n)) {
              if (((i = s[n]), s === (r = t[n]))) continue;
              r && x.isPlainObject(r)
                ? ((o = i && x.isPlainObject(i) ? i : {}), (s[n] = c(o, r)))
                : r !== undefined && (s[n] = r);
            }
          }
        }
      }
      return s;
    }
    function o(e, i, t, n, r) {
      let o, s, a, l, c;
      return (
        (o = i[e]),
        (s = n[e]),
        (a = i.ext[r]),
        (l = function () {
          return o.apply(i, arguments);
        }),
        (c = function (e) {
          return o.apply(i, e);
        }),
        function () {
          const e = i._local;
          const t = i._super;
          const n = i._superApply;
          try {
            return (
              (i._local = a),
              (i._super = l),
              (i._superApply = c),
              s.apply(i, arguments)
            );
          } finally {
            (i._local = e), (i._super = t), (i._superApply = n);
          }
        }
      );
    }
    function s(e, t, n, i) {
      for (const r in n) {
        typeof n[r] === "function"
          ? typeof e[r] === "function"
            ? (e[r] = o(r, e, t, n, i))
            : r.charAt(0) === "_"
              ? (e.ext[i][r] = o(r, e, t, n, i))
              : x.error(
                  "Could not override tree." +
                    r +
                    ". Use prefix '_' to create tree." +
                    i +
                    "._" +
                    r,
                )
          : r !== "options" && (e.ext[i][r] = n[r]);
      }
    }
    function C(e, t) {
      return e === undefined
        ? x
            .Deferred(function () {
              this.resolve();
            })
            .promise()
        : x
            .Deferred(function () {
              this.resolveWith(e, t);
            })
            .promise();
    }
    function g(e, t) {
      return e === undefined
        ? x
            .Deferred(function () {
              this.reject();
            })
            .promise()
        : x
            .Deferred(function () {
              this.rejectWith(e, t);
            })
            .promise();
    }
    function y(e, t) {
      return function () {
        e.resolveWith(t);
      };
    }
    function b(e) {
      let t = x.extend({}, e.data());
      const n = t.json;
      return (
        delete t.fancytree,
        delete t.uiFancytree,
        n && (delete t.json, (t = x.extend(t, n))),
        t
      );
    }
    function k(e) {
      return ("" + e).replace(h, function (e) {
        return j[e];
      });
    }
    function i(t) {
      return (
        (t = t.toLowerCase()),
        function (e) {
          return e.title.toLowerCase().indexOf(t) >= 0;
        }
      );
    }
    function a(e) {
      const t = new RegExp("^" + e, "i");
      return function (e) {
        return t.test(e.title);
      };
    }
    function u(e, t) {
      let n, i, r, o;
      for (
        this.parent = e,
          this.tree = e.tree,
          this.ul = null,
          this.li = null,
          this.statusNodeType = null,
          this._isLoading = !1,
          this._error = null,
          this.data = {},
          n = 0,
          i = F.length;
        n < i;
        n++
      ) {
        this[(r = F[n])] = t[r];
      }
      for (r in ((this.unselectableIgnore == null &&
        this.unselectableStatus == null) ||
        (this.unselectable = !0),
      t.hideCheckbox &&
        x.error(
          "'hideCheckbox' node option was removed in v2.23.0: use 'checkbox: false'",
        ),
      t.data && x.extend(this.data, t.data),
      t)) {
        L[r] ||
          (!this.tree.options.copyFunctionsToData && f(t[r])) ||
          R[r] ||
          (this.data[r] = t[r]);
      }
      this.key == null
        ? this.tree.options.defaultKey
          ? ((this.key = "" + this.tree.options.defaultKey(this)),
            w(this.key, "defaultKey() must return a unique key"))
          : (this.key = "_" + S._nextNodeKey++)
        : (this.key = "" + this.key),
        t.active &&
          (w(this.tree.activeNode === null, "only one active node allowed"),
          (this.tree.activeNode = this)),
        t.selected && (this.tree.lastSelectedNode = this),
        (o = t.children)
          ? o.length
            ? this._setChildren(o)
            : (this.children = this.lazy ? [] : null)
          : (this.children = null),
        this.tree._callHook("treeRegisterNode", this.tree, !0, this);
    }
    function l(e) {
      (this.widget = e),
        (this.$div = e.element),
        (this.options = e.options),
        this.options &&
          (this.options.lazyload !== undefined &&
            x.error(
              "The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.",
            ),
          this.options.loaderror !== undefined &&
            x.error(
              "The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.",
            ),
          this.options.fx !== undefined &&
            x.error(
              "The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.",
            ),
          this.options.removeNode !== undefined &&
            x.error(
              "The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).",
            )),
        (this.ext = {}),
        (this.types = {}),
        (this.columns = {}),
        (this.data = b(this.$div)),
        (this._id = "" + (this.options.treeId || x.ui.fancytree._nextId++)),
        (this._ns = ".fancytree-" + this._id),
        (this.activeNode = null),
        (this.focusNode = null),
        (this._hasFocus = null),
        (this._tempCache = {}),
        (this._lastMousedownNode = null),
        (this._enableUpdate = !0),
        (this.lastSelectedNode = null),
        (this.systemFocusElement = null),
        (this.lastQuicksearchTerm = ""),
        (this.lastQuicksearchTime = 0),
        (this.viewport = null),
        (this.statusClassPropName = "span"),
        (this.ariaPropName = "li"),
        (this.nodeContainerAttrName = "li"),
        this.$div.find(">ul.fancytree-container").remove();
      let t;
      const n = { tree: this };
      (this.rootNode = new u(n, {
        title: "root",
        key: "root_" + this._id,
        children: null,
        expanded: !0,
      })),
        (this.rootNode.parent = null),
        (t = x("<ul>", {
          id: "ft-id-" + this._id,
          class: "ui-fancytree fancytree-container fancytree-plain",
        }).appendTo(this.$div)),
        (this.$container = t),
        (this.rootNode.ul = t[0]),
        this.options.debugLevel == null &&
          (this.options.debugLevel = S.debugLevel);
    }
    if (!x.ui || !x.ui.fancytree) {
      let d;
      let n;
      var S = null;
      const T = new RegExp(/\.|\//);
      const r = /[&<>"'/]/g;
      var h = /[<>"'/]/g;
      const p = "$recursive_request";
      const D = "$request_target_invalid";
      var j = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
      };
      const N = { 16: !0, 17: !0, 18: !0 };
      const E = {
        8: "backspace",
        9: "tab",
        10: "return",
        13: "return",
        19: "pause",
        20: "capslock",
        27: "esc",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "insert",
        46: "del",
        59: ";",
        61: "=",
        96: "0",
        97: "1",
        98: "2",
        99: "3",
        100: "4",
        101: "5",
        102: "6",
        103: "7",
        104: "8",
        105: "9",
        106: "*",
        107: "+",
        109: "-",
        110: ".",
        111: "/",
        112: "f1",
        113: "f2",
        114: "f3",
        115: "f4",
        116: "f5",
        117: "f6",
        118: "f7",
        119: "f8",
        120: "f9",
        121: "f10",
        122: "f11",
        123: "f12",
        144: "numlock",
        145: "scroll",
        173: "-",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'",
      };
      const I = { 16: "shift", 17: "ctrl", 18: "alt", 91: "meta", 93: "meta" };
      const A = { 0: "", 1: "left", 2: "middle", 3: "right" };
      const M =
        "active expanded focus folder lazy radiogroup selected unselectable unselectableIgnore".split(
          " ",
        );
      const O = {};
      const P = "columns types".split(" ");
      var F =
        "checkbox expanded extraClasses folder icon iconTooltip key lazy partsel radiogroup refKey selected statusNodeType title tooltip type unselectable unselectableIgnore unselectableStatus".split(
          " ",
        );
      var L = {};
      const H = {};
      var R = { active: !0, children: !0, data: !0, focus: !0 };
      for (d = 0; d < M.length; d++) O[M[d]] = !0;
      for (d = 0; d < F.length; d++) {
        (n = F[d]),
          (L[n] = !0),
          n !== n.toLowerCase() && (H[n.toLowerCase()] = n);
      }
      const $ = Array.isArray;
      return (
        w(x.ui, "Fancytree requires jQuery UI (http://jqueryui.com)"),
        Date.now ||
          (Date.now = function q() {
            return new Date().getTime();
          }),
        (u.prototype = {
          _findDirectChild: function (e) {
            let t;
            let n;
            const i = this.children;
            if (i) {
              if (typeof e === "string") {
                for (t = 0, n = i.length; t < n; t++) {
                  if (i[t].key === e) return i[t];
                }
              } else {
                if (typeof e === "number") return this.children[e];
                if (e.parent === this) return e;
              }
            }
            return null;
          },
          _setChildren: function (e) {
            w(
              e && (!this.children || this.children.length === 0),
              "only init supported",
            ),
              (this.children = []);
            for (let t = 0, n = e.length; t < n; t++) {
              this.children.push(new u(this, e[t]));
            }
            this.tree._callHook(
              "treeStructureChanged",
              this.tree,
              "setChildren",
            );
          },
          addChildren: function (e, t) {
            let n;
            let i;
            let r;
            const o = this.getFirstChild();
            const s = this.getLastChild();
            let a = null;
            const l = [];
            for (
              x.isPlainObject(e) && (e = [e]),
                this.children || (this.children = []),
                n = 0,
                i = e.length;
              n < i;
              n++
            ) {
              l.push(new u(this, e[n]));
            }
            if (
              ((a = l[0]),
              t == null
                ? (this.children = this.children.concat(l))
                : ((t = this._findDirectChild(t)),
                  w(
                    (r = x.inArray(t, this.children)) >= 0,
                    "insertBefore must be an existing child",
                  ),
                  this.children.splice.apply(this.children, [r, 0].concat(l))),
              o && !t)
            ) {
              for (n = 0, i = l.length; n < i; n++) l[n].render();
              o !== this.getFirstChild() && o.renderStatus(),
                s !== this.getLastChild() && s.renderStatus();
            } else (!this.parent || this.parent.ul || this.tr) && this.render();
            return (
              this.tree.options.selectMode === 3 &&
                this.fixSelection3FromEndNodes(),
              this.triggerModifyChild("add", l.length === 1 ? l[0] : null),
              a
            );
          },
          addClass: function (e) {
            return this.toggleClass(e, !0);
          },
          addNode: function (e, t) {
            switch (((t !== undefined && t !== "over") || (t = "child"), t)) {
              case "after":
                return this.getParent().addChildren(e, this.getNextSibling());
              case "before":
                return this.getParent().addChildren(e, this);
              case "firstChild":
                var n = this.children ? this.children[0] : null;
                return this.addChildren(e, n);
              case "child":
              case "over":
                return this.addChildren(e);
            }
            w(!1, "Invalid mode: " + t);
          },
          addPagingNode: function (e, t) {
            let n, i;
            if (((t = t || "child"), !1 !== e)) {
              return (
                (e = x.extend(
                  {
                    title: this.tree.options.strings.moreData,
                    statusNodeType: "paging",
                    icon: !1,
                  },
                  e,
                )),
                (this.partload = !0),
                this.addNode(e, t)
              );
            }
            for (n = this.children.length - 1; n >= 0; n--) {
              (i = this.children[n]).statusNodeType === "paging" &&
                this.removeChild(i);
            }
            this.partload = !1;
          },
          appendSibling: function (e) {
            return this.addNode(e, "after");
          },
          applyCommand: function (e, t) {
            return this.tree.applyCommand(e, this, t);
          },
          applyPatch: function (e) {
            if (e === null) return this.remove(), C(this);
            let t;
            let n;
            const i = { children: !0, expanded: !0, parent: !0 };
            for (t in e) {
              v(e, t) &&
                ((n = e[t]),
                i[t] || f(n) || (L[t] ? (this[t] = n) : (this.data[t] = n)));
            }
            return (
              v(e, "children") &&
                (this.removeChildren(),
                e.children && this._setChildren(e.children)),
              this.isVisible() && (this.renderTitle(), this.renderStatus()),
              v(e, "expanded") ? this.setExpanded(e.expanded) : C(this)
            );
          },
          collapseSiblings: function () {
            return this.tree._callHook("nodeCollapseSiblings", this);
          },
          copyTo: function (e, t, n) {
            return e.addNode(this.toDict(!0, n), t);
          },
          countChildren: function (e) {
            let t;
            let n;
            let i;
            const r = this.children;
            if (!r) return 0;
            if (((i = r.length), !1 !== e)) {
              for (t = 0, n = i; t < n; t++) i += r[t].countChildren();
            }
            return i;
          },
          debug: function () {
            this.tree.options.debugLevel >= 4 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          discard: function () {
            return (
              this.warn(
                "FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.",
              ),
              this.resetLazy()
            );
          },
          discardMarkup: function (e) {
            const t = e ? "nodeRemoveMarkup" : "nodeRemoveChildMarkup";
            this.tree._callHook(t, this);
          },
          error: function () {
            this.tree.options.debugLevel >= 1 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("error", arguments));
          },
          findAll: function (t) {
            t = f(t) ? t : i(t);
            const n = [];
            return (
              this.visit(function (e) {
                t(e) && n.push(e);
              }),
              n
            );
          },
          findFirst: function (t) {
            t = f(t) ? t : i(t);
            let n = null;
            return (
              this.visit(function (e) {
                if (t(e)) return (n = e), !1;
              }),
              n
            );
          },
          findRelatedNode: function (e, t) {
            return this.tree.findRelatedNode(this, e, t);
          },
          _changeSelectStatusAttrs: function (e) {
            let t = !1;
            const n = this.tree.options;
            const i = S.evalOption("unselectable", this, this, n, !1);
            const r = S.evalOption(
              "unselectableStatus",
              this,
              this,
              n,
              undefined,
            );
            switch ((i && r != null && (e = r), e)) {
              case !1:
                (t = this.selected || this.partsel),
                  (this.selected = !1),
                  (this.partsel = !1);
                break;
              case !0:
                (t = !this.selected || !this.partsel),
                  (this.selected = !0),
                  (this.partsel = !0);
                break;
              case undefined:
                (t = this.selected || !this.partsel),
                  (this.selected = !1),
                  (this.partsel = !0);
                break;
              default:
                w(!1, "invalid state: " + e);
            }
            return t && this.renderStatus(), t;
          },
          fixSelection3AfterClick: function (e) {
            const t = this.isSelected();
            this.visit(function (e) {
              if ((e._changeSelectStatusAttrs(t), e.radiogroup)) return "skip";
            }),
              this.fixSelection3FromEndNodes(e);
          },
          fixSelection3FromEndNodes: function () {
            function u(e) {
              let t;
              let n;
              let i;
              let r;
              let o;
              let s;
              let a;
              let l;
              const c = e.children;
              if (c && c.length) {
                for (a = !(s = !0), t = 0, n = c.length; t < n; t++) {
                  (r = u((i = c[t]))),
                    S.evalOption("unselectableIgnore", i, i, d, !1) ||
                      (!1 !== r && (a = !0), !0 !== r && (s = !1));
                }
                o = !!s || (!!a && undefined);
              } else {
                o =
                  (l = S.evalOption(
                    "unselectableStatus",
                    e,
                    e,
                    d,
                    undefined,
                  )) == null
                    ? !!e.selected
                    : !!l;
              }
              return (
                e.partsel &&
                  !e.selected &&
                  e.lazy &&
                  e.children == null &&
                  (o = undefined),
                e._changeSelectStatusAttrs(o),
                o
              );
            }
            var d = this.tree.options;
            w(d.selectMode === 3, "expected selectMode 3"),
              u(this),
              this.visitParents(function (e) {
                let t;
                let n;
                let i;
                let r;
                let o;
                const s = e.children;
                let a = !0;
                let l = !1;
                for (t = 0, n = s.length; t < n; t++) {
                  (i = s[t]),
                    S.evalOption("unselectableIgnore", i, i, d, !1) ||
                      (((r =
                        (o = S.evalOption(
                          "unselectableStatus",
                          i,
                          i,
                          d,
                          undefined,
                        )) == null
                          ? !!i.selected
                          : !!o) ||
                        i.partsel) &&
                        (l = !0),
                      r || (a = !1));
                }
                (r = !!a || (!!l && undefined)), e._changeSelectStatusAttrs(r);
              });
          },
          fromDict: function (e) {
            for (const t in e) {
              L[t]
                ? (this[t] = e[t])
                : t === "data"
                  ? x.extend(this.data, e.data)
                  : f(e[t]) || R[t] || (this.data[t] = e[t]);
            }
            e.children && (this.removeChildren(), this.addChildren(e.children)),
              this.renderTitle();
          },
          getChildren: function () {
            return this.hasChildren() === undefined ? undefined : this.children;
          },
          getFirstChild: function () {
            return this.children ? this.children[0] : null;
          },
          getIndex: function () {
            return x.inArray(this, this.parent.children);
          },
          getIndexHier: function (e, n) {
            e = e || ".";
            let i;
            const r = [];
            return (
              x.each(this.getParentList(!1, !0), function (e, t) {
                (i = "" + (t.getIndex() + 1)),
                  n && (i = ("0000000" + i).substr(-n)),
                  r.push(i);
              }),
              r.join(e)
            );
          },
          getKeyPath: function (e) {
            const t = this.tree.options.keyPathSeparator;
            return t + this.getPath(!e, "key", t);
          },
          getLastChild: function () {
            return this.children
              ? this.children[this.children.length - 1]
              : null;
          },
          getLevel: function () {
            for (var e = 0, t = this.parent; t; ) e++, (t = t.parent);
            return e;
          },
          getNextSibling: function () {
            if (this.parent) {
              let e;
              let t;
              const n = this.parent.children;
              for (e = 0, t = n.length - 1; e < t; e++) {
                if (n[e] === this) return n[e + 1];
              }
            }
            return null;
          },
          getParent: function () {
            return this.parent;
          },
          getParentList: function (e, t) {
            for (var n = [], i = t ? this : this.parent; i; ) {
              (e || i.parent) && n.unshift(i), (i = i.parent);
            }
            return n;
          },
          getPath: function (e, t, n) {
            (e = !1 !== e), (n = n || "/");
            let i;
            const r = [];
            const o = f((t = t || "title"));
            return (
              this.visitParents(function (e) {
                e.parent && ((i = o ? t(e) : e[t]), r.unshift(i));
              }, e),
              r.join(n)
            );
          },
          getPrevSibling: function () {
            if (this.parent) {
              let e;
              let t;
              const n = this.parent.children;
              for (e = 1, t = n.length; e < t; e++) {
                if (n[e] === this) return n[e - 1];
              }
            }
            return null;
          },
          getSelectedNodes: function (t) {
            const n = [];
            return (
              this.visit(function (e) {
                if (e.selected && (n.push(e), !0 === t)) return "skip";
              }),
              n
            );
          },
          hasChildren: function () {
            return this.lazy
              ? this.children == null
                ? undefined
                : this.children.length !== 0 &&
                  (this.children.length !== 1 ||
                    !this.children[0].isStatusNode() ||
                    undefined)
              : !(!this.children || !this.children.length);
          },
          hasClass: function (e) {
            return (
              (" " + (this.extraClasses || "") + " ").indexOf(" " + e + " ") >=
              0
            );
          },
          hasFocus: function () {
            return this.tree.hasFocus() && this.tree.focusNode === this;
          },
          info: function () {
            this.tree.options.debugLevel >= 3 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          isActive: function () {
            return this.tree.activeNode === this;
          },
          isBelowOf: function (e) {
            return this.getIndexHier(".", 5) > e.getIndexHier(".", 5);
          },
          isChildOf: function (e) {
            return this.parent && this.parent === e;
          },
          isDescendantOf: function (e) {
            if (!e || e.tree !== this.tree) return !1;
            for (let t = this.parent; t; ) {
              if (t === e) return !0;
              t === t.parent && x.error("Recursive parent link: " + t),
                (t = t.parent);
            }
            return !1;
          },
          isExpanded: function () {
            return !!this.expanded;
          },
          isFirstSibling: function () {
            const e = this.parent;
            return !e || e.children[0] === this;
          },
          isFolder: function () {
            return !!this.folder;
          },
          isLastSibling: function () {
            const e = this.parent;
            return !e || e.children[e.children.length - 1] === this;
          },
          isLazy: function () {
            return !!this.lazy;
          },
          isLoaded: function () {
            return !this.lazy || this.hasChildren() !== undefined;
          },
          isLoading: function () {
            return !!this._isLoading;
          },
          isRoot: function () {
            return this.isRootNode();
          },
          isPartsel: function () {
            return !this.selected && !!this.partsel;
          },
          isPartload: function () {
            return !!this.partload;
          },
          isRootNode: function () {
            return this.tree.rootNode === this;
          },
          isSelected: function () {
            return !!this.selected;
          },
          isStatusNode: function () {
            return !!this.statusNodeType;
          },
          isPagingNode: function () {
            return this.statusNodeType === "paging";
          },
          isTopLevel: function () {
            return this.tree.rootNode === this.parent;
          },
          isUndefined: function () {
            return this.hasChildren() === undefined;
          },
          isVisible: function () {
            let e;
            let t;
            const n = this.tree.enableFilter;
            const i = this.getParentList(!1, !1);
            if (n && !this.match && !this.subMatchCount) return !1;
            for (e = 0, t = i.length; e < t; e++) if (!i[e].expanded) return !1;
            return !0;
          },
          lazyLoad: function () {
            x.error(
              "FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.",
            );
          },
          load: function (e) {
            let t;
            let n;
            const i = this;
            const r = this.isExpanded();
            return (
              w(this.isLazy(), "load() requires a lazy node"),
              e || this.isUndefined()
                ? (this.isLoaded() && this.resetLazy(),
                  !1 === (n = this.tree._triggerNodeEvent("lazyLoad", this))
                    ? C(this)
                    : (w(
                        typeof n !== "boolean",
                        "lazyLoad event must return source in data.result",
                      ),
                      (t = this.tree._callHook("nodeLoadChildren", this, n)),
                      r
                        ? ((this.expanded = !0),
                          t.always(function () {
                            i.render();
                          }))
                        : t.always(function () {
                            i.renderStatus();
                          }),
                      t))
                : C(this)
            );
          },
          makeVisible: function (e) {
            let t;
            const n = this;
            const i = [];
            const r = new x.Deferred();
            const o = this.getParentList(!1, !1);
            const s = o.length;
            const a = !(e && !0 === e.noAnimation);
            const l = !(e && !1 === e.scrollIntoView);
            for (t = s - 1; t >= 0; t--) i.push(o[t].setExpanded(!0, e));
            return (
              x.when.apply(x, i).done(function () {
                l
                  ? n.scrollIntoView(a).done(function () {
                      r.resolve();
                    })
                  : r.resolve();
              }),
              r.promise()
            );
          },
          moveTo: function (t, e, n) {
            e === undefined || e === "over"
              ? (e = "child")
              : e === "firstChild" &&
                (t.children && t.children.length
                  ? ((e = "before"), (t = t.children[0]))
                  : (e = "child"));
            let i;
            const r = this.tree;
            const o = this.parent;
            const s = e === "child" ? t : t.parent;
            if (this !== t) {
              if (
                (this.parent
                  ? s.isDescendantOf(this) &&
                    x.error("Cannot move a node to its own descendant")
                  : x.error("Cannot move system root"),
                s !== o && o.triggerModifyChild("remove", this),
                this.parent.children.length === 1)
              ) {
                if (this.parent === s) return;
                (this.parent.children = this.parent.lazy ? [] : null),
                  (this.parent.expanded = !1);
              } else {
                w(
                  (i = x.inArray(this, this.parent.children)) >= 0,
                  "invalid source parent",
                ),
                  this.parent.children.splice(i, 1);
              }
              if ((this.parent = s).hasChildren()) {
                switch (e) {
                  case "child":
                    s.children.push(this);
                    break;
                  case "before":
                    w(
                      (i = x.inArray(t, s.children)) >= 0,
                      "invalid target parent",
                    ),
                      s.children.splice(i, 0, this);
                    break;
                  case "after":
                    w(
                      (i = x.inArray(t, s.children)) >= 0,
                      "invalid target parent",
                    ),
                      s.children.splice(i + 1, 0, this);
                    break;
                  default:
                    x.error("Invalid mode " + e);
                }
              } else s.children = [this];
              n && t.visit(n, !0),
                s === o
                  ? s.triggerModifyChild("move", this)
                  : s.triggerModifyChild("add", this),
                r !== t.tree &&
                  (this.warn("Cross-tree moveTo is experimental!"),
                  this.visit(function (e) {
                    e.tree = t.tree;
                  }, !0)),
                r._callHook("treeStructureChanged", r, "moveTo"),
                o.isDescendantOf(s) || o.render(),
                s.isDescendantOf(o) || s === o || s.render();
            }
          },
          navigate: function (e, t) {
            let n;
            const i = x.ui.keyCode;
            switch (e) {
              case "left":
              case i.LEFT:
                if (this.expanded) return this.setExpanded(!1);
                break;
              case "right":
              case i.RIGHT:
                if (!this.expanded && (this.children || this.lazy)) {
                  return this.setExpanded();
                }
            }
            if ((n = this.findRelatedNode(e))) {
              try {
                n.makeVisible({ scrollIntoView: !1 });
              } catch (r) {}
              return !1 === t ? (n.setFocus(), C()) : n.setActive();
            }
            return this.warn("Could not find related node '" + e + "'."), C();
          },
          remove: function () {
            return this.parent.removeChild(this);
          },
          removeChild: function (e) {
            return this.tree._callHook("nodeRemoveChild", this, e);
          },
          removeChildren: function () {
            return this.tree._callHook("nodeRemoveChildren", this);
          },
          removeClass: function (e) {
            return this.toggleClass(e, !1);
          },
          render: function (e, t) {
            return this.tree._callHook("nodeRender", this, e, t);
          },
          renderTitle: function () {
            return this.tree._callHook("nodeRenderTitle", this);
          },
          renderStatus: function () {
            return this.tree._callHook("nodeRenderStatus", this);
          },
          replaceWith: function (e) {
            let t;
            const n = this.parent;
            const i = x.inArray(this, n.children);
            const r = this;
            return (
              w(
                this.isPagingNode(),
                "replaceWith() currently requires a paging status node",
              ),
              (t = this.tree._callHook("nodeLoadChildren", this, e))
                .done(function () {
                  const e = r.children;
                  for (d = 0; d < e.length; d++) e[d].parent = n;
                  n.children.splice.apply(n.children, [i + 1, 0].concat(e)),
                    (r.children = null),
                    r.remove(),
                    n.render();
                })
                .fail(function () {
                  r.setExpanded();
                }),
              t
            );
          },
          resetLazy: function () {
            this.removeChildren(),
              (this.expanded = !1),
              (this.lazy = !0),
              (this.children = undefined),
              this.renderStatus();
          },
          scheduleAction: function (e, t) {
            this.tree.timer &&
              (clearTimeout(this.tree.timer),
              this.tree.debug("clearTimeout(%o)", this.tree.timer)),
              (this.tree.timer = null);
            const n = this;
            switch (e) {
              case "cancel":
                break;
              case "expand":
                this.tree.timer = setTimeout(function () {
                  n.tree.debug("setTimeout: trigger expand"), n.setExpanded(!0);
                }, t);
                break;
              case "activate":
                this.tree.timer = setTimeout(function () {
                  n.tree.debug("setTimeout: trigger activate"), n.setActive(!0);
                }, t);
                break;
              default:
                x.error("Invalid mode " + e);
            }
          },
          scrollIntoView: function (e, t) {
            if (t !== undefined && _(t)) {
              throw Error(
                "scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.",
              );
            }
            const n = x.extend(
              {
                effects: !0 === e ? { duration: 200, queue: !1 } : e,
                scrollOfs: this.tree.options.scrollOfs,
                scrollParent: this.tree.options.scrollParent,
                topNode: null,
              },
              t,
            );
            let i = n.scrollParent;
            const r = this.tree.$container;
            const o = r.css("overflow-y");
            i
              ? i.jquery || (i = x(i))
              : (i = this.tree.tbody
                  ? r.scrollParent()
                  : o === "scroll" || o === "auto"
                    ? r
                    : r.scrollParent()),
              (i[0] !== document && i[0] !== document.body) ||
                (this.debug(
                  "scrollIntoView(): normalizing scrollParent to 'window':",
                  i[0],
                ),
                (i = x(window)));
            let s;
            let a;
            let l;
            const c = new x.Deferred();
            const u = this;
            const d = x(this.span).height();
            const h = n.scrollOfs.top || 0;
            const p = n.scrollOfs.bottom || 0;
            let f = i.height();
            const g = i.scrollTop();
            let m = i;
            const v = i[0] === window;
            const y = n.topNode || null;
            let b = null;
            return this.isRootNode() || !this.isVisible()
              ? (this.info("scrollIntoView(): node is invisible."), C())
              : (v
                  ? ((a = x(this.span).offset().top),
                    (s = y && y.span ? x(y.span).offset().top : 0),
                    (m = x("html,body")))
                  : (w(
                      i[0] !== document && i[0] !== document.body,
                      "scrollParent should be a simple element or `window`, not document or body.",
                    ),
                    (l = i.offset().top),
                    (a = x(this.span).offset().top - l + g),
                    (s = y ? x(y.span).offset().top - l + g : 0),
                    (f -= Math.max(0, i.innerHeight() - i[0].clientHeight))),
                a < g + h
                  ? (b = a - h)
                  : g + f - p < a + d &&
                    ((b = a + d - f + p),
                    y &&
                      (w(
                        y.isRootNode() || y.isVisible(),
                        "topNode must be visible",
                      ),
                      s < b && (b = s - h))),
                b === null
                  ? c.resolveWith(this)
                  : n.effects
                    ? ((n.effects.complete = function () {
                        c.resolveWith(u);
                      }),
                      m.stop(!0).animate({ scrollTop: b }, n.effects))
                    : ((m[0].scrollTop = b), c.resolveWith(this)),
                c.promise());
          },
          setActive: function (e, t) {
            return this.tree._callHook("nodeSetActive", this, e, t);
          },
          setExpanded: function (e, t) {
            return this.tree._callHook("nodeSetExpanded", this, e, t);
          },
          setFocus: function (e) {
            return this.tree._callHook("nodeSetFocus", this, e);
          },
          setSelected: function (e, t) {
            return this.tree._callHook("nodeSetSelected", this, e, t);
          },
          setStatus: function (e, t, n) {
            return this.tree._callHook("nodeSetStatus", this, e, t, n);
          },
          setTitle: function (e) {
            (this.title = e), this.renderTitle(), this.triggerModify("rename");
          },
          sortChildren: function (e, t) {
            let n;
            let i;
            const r = this.children;
            if (r) {
              if (
                ((e =
                  e ||
                  function (e, t) {
                    const n = e.title.toLowerCase();
                    const i = t.title.toLowerCase();
                    return n === i ? 0 : i < n ? 1 : -1;
                  }),
                r.sort(e),
                t)
              ) {
                for (n = 0, i = r.length; n < i; n++) {
                  r[n].children && r[n].sortChildren(e, "$norender$");
                }
              }
              t !== "$norender$" && this.render(),
                this.triggerModifyChild("sort");
            }
          },
          toDict: function (e, t) {
            let n;
            let i;
            let r;
            let o;
            const s = {};
            const a = this;
            if (
              (x.each(F, function (e, t) {
                (a[t] || !1 === a[t]) && (s[t] = a[t]);
              }),
              x.isEmptyObject(this.data) ||
                ((s.data = x.extend({}, this.data)),
                x.isEmptyObject(s.data) && delete s.data),
              t)
            ) {
              if (!1 === (o = t(s, a))) return !1;
              o === "skip" && (e = !1);
            }
            if (e && $(this.children)) {
              for (
                s.children = [], n = 0, i = this.children.length;
                n < i;
                n++
              ) {
                (r = this.children[n]).isStatusNode() ||
                  (!1 !== (o = r.toDict(!0, t)) && s.children.push(o));
              }
            }
            return s;
          },
          toggleClass: function (e, t) {
            let n;
            let i;
            const r = /\S+/g;
            const o = e.match(r) || [];
            let s = 0;
            let a = !1;
            const l = this[this.tree.statusClassPropName];
            let c = " " + (this.extraClasses || "") + " ";
            for (l && x(l).toggleClass(e, t); (n = o[s++]); ) {
              if (
                ((i = c.indexOf(" " + n + " ") >= 0),
                (t = t === undefined ? !i : !!t))
              ) {
                i || ((c += n + " "), (a = !0));
              } else {
                for (; c.indexOf(" " + n + " ") > -1; ) {
                  c = c.replace(" " + n + " ", " ");
                }
              }
            }
            return (this.extraClasses = m(c)), a;
          },
          toggleExpanded: function () {
            return this.tree._callHook("nodeToggleExpanded", this);
          },
          toggleSelected: function () {
            return this.tree._callHook("nodeToggleSelected", this);
          },
          toString: function () {
            return "FancytreeNode@" + this.key + "[title='" + this.title + "']";
          },
          triggerModifyChild: function (e, t, n) {
            let i;
            const r = this.tree.options.modifyChild;
            r &&
              (t &&
                t.parent !== this &&
                x.error("childNode " + t + " is not a child of " + this),
              (i = {
                node: this,
                tree: this.tree,
                operation: e,
                childNode: t || null,
              }),
              n && x.extend(i, n),
              r({ type: "modifyChild" }, i));
          },
          triggerModify: function (e, t) {
            this.parent.triggerModifyChild(e, this, t);
          },
          visit: function (e, t) {
            let n;
            let i;
            let r = !0;
            const o = this.children;
            if (!0 === t && (!1 === (r = e(this)) || r === "skip")) return r;
            if (o) {
              for (
                n = 0, i = o.length;
                n < i && !1 !== (r = o[n].visit(e, !0));
                n++
              );
            }
            return r;
          },
          visitAndLoad: function (n, e, t) {
            let i;
            let r;
            let o;
            const s = this;
            return !n || !0 !== e || (!1 !== (r = n(s)) && r !== "skip")
              ? s.children || s.lazy
                ? ((i = new x.Deferred()),
                  (o = []),
                  s.load().done(function () {
                    for (let e = 0, t = s.children.length; e < t; e++) {
                      if (!1 === (r = s.children[e].visitAndLoad(n, !0, !0))) {
                        i.reject();
                        break;
                      }
                      r !== "skip" && o.push(r);
                    }
                    x.when.apply(this, o).then(function () {
                      i.resolve();
                    });
                  }),
                  i.promise())
                : C()
              : t
                ? r
                : C();
          },
          visitParents: function (e, t) {
            if (t && !1 === e(this)) return !1;
            for (let n = this.parent; n; ) {
              if (!1 === e(n)) return !1;
              n = n.parent;
            }
            return !0;
          },
          visitSiblings: function (e, t) {
            let n;
            let i;
            let r;
            const o = this.parent.children;
            for (n = 0, i = o.length; n < i; n++) {
              if (((r = o[n]), (t || r !== this) && !1 === e(r))) return !1;
            }
            return !0;
          },
          warn: function () {
            this.tree.options.debugLevel >= 2 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments));
          },
        }),
        (l.prototype = {
          _makeHookContext: function (e, t, n) {
            let i, r;
            return (
              e.node !== undefined
                ? (t && e.originalEvent !== t && x.error("invalid args"),
                  (i = e))
                : e.tree
                  ? (i = {
                      node: e,
                      tree: (r = e.tree),
                      widget: r.widget,
                      options: r.widget.options,
                      originalEvent: t,
                      typeInfo: r.types[e.type] || {},
                    })
                  : e.widget
                    ? (i = {
                        node: null,
                        tree: e,
                        widget: e.widget,
                        options: e.widget.options,
                        originalEvent: t,
                      })
                    : x.error("invalid args"),
              n && x.extend(i, n),
              i
            );
          },
          _callHook: function (e, t) {
            const n = this._makeHookContext(t);
            const i = this[e];
            const r = Array.prototype.slice.call(arguments, 2);
            return (
              f(i) || x.error("_callHook('" + e + "') is not a function"),
              r.unshift(n),
              i.apply(this, r)
            );
          },
          _setExpiringValue: function (e, t, n) {
            this._tempCache[e] = { value: t, expire: Date.now() + (+n || 50) };
          },
          _getExpiringValue: function (e) {
            const t = this._tempCache[e];
            return t && t.expire > Date.now()
              ? t.value
              : (delete this._tempCache[e], null);
          },
          _usesExtension: function (e) {
            return x.inArray(e, this.options.extensions) >= 0;
          },
          _requireExtension: function (e, t, n, i) {
            n != null && (n = !!n);
            const r = this._local.name;
            const o = this.options.extensions;
            const s = x.inArray(e, o) < x.inArray(r, o);
            const a = t && this.ext[e] == null;
            const l = !a && n != null && n !== s;
            return (
              w(
                r && r !== e,
                "invalid or same name '" + r + "' (require yourself?)",
              ),
              (!a && !l) ||
                (i ||
                  (a || t
                    ? ((i = "'" + r + "' extension requires '" + e + "'"),
                      l &&
                        (i +=
                          " to be registered " +
                          (n ? "before" : "after") +
                          " itself"))
                    : (i =
                        "If used together, `" +
                        e +
                        "` must be registered " +
                        (n ? "before" : "after") +
                        " `" +
                        r +
                        "`")),
                x.error(i),
                !1)
            );
          },
          activateKey: function (e, t) {
            const n = this.getNodeByKey(e);
            return (
              n
                ? n.setActive(!0, t)
                : this.activeNode && this.activeNode.setActive(!1, t),
              n
            );
          },
          addPagingNode: function (e, t) {
            return this.rootNode.addPagingNode(e, t);
          },
          applyCommand: function (e, t) {
            let n;
            switch (((t = t || this.getActiveNode()), e)) {
              case "moveUp":
                (n = t.getPrevSibling()) &&
                  (t.moveTo(n, "before"), t.setActive());
                break;
              case "moveDown":
                (n = t.getNextSibling()) &&
                  (t.moveTo(n, "after"), t.setActive());
                break;
              case "indent":
                (n = t.getPrevSibling()) &&
                  (t.moveTo(n, "child"), n.setExpanded(), t.setActive());
                break;
              case "outdent":
                t.isTopLevel() ||
                  (t.moveTo(t.getParent(), "after"), t.setActive());
                break;
              case "remove":
                (n = t.getPrevSibling() || t.getParent()),
                  t.remove(),
                  n && n.setActive();
                break;
              case "addChild":
                t.editCreateNode("child", "");
                break;
              case "addSibling":
                t.editCreateNode("after", "");
                break;
              case "rename":
                t.editStart();
                break;
              case "down":
              case "first":
              case "last":
              case "left":
              case "parent":
              case "right":
              case "up":
                return t.navigate(e);
              default:
                x.error("Unhandled command: '" + e + "'");
            }
          },
          applyPatch: function (e) {
            let t;
            let n;
            let i;
            let r;
            let o;
            let s;
            const a = e.length;
            const l = [];
            for (n = 0; n < a; n++) {
              w(
                (i = e[n]).length === 2,
                "patchList must be an array of length-2-arrays",
              ),
                (r = i[0]),
                (o = i[1]),
                (s = r === null ? this.rootNode : this.getNodeByKey(r))
                  ? ((t = new x.Deferred()),
                    l.push(t),
                    s.applyPatch(o).always(y(t, s)))
                  : this.warn("could not find node with key '" + r + "'");
            }
            return x.when.apply(x, l).promise();
          },
          clear: function () {
            this._callHook("treeClear", this);
          },
          count: function () {
            return this.rootNode.countChildren();
          },
          debug: function () {
            this.options.debugLevel >= 4 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("log", arguments));
          },
          destroy: function () {
            this.widget.destroy();
          },
          enable: function (e) {
            !1 === e ? this.widget.disable() : this.widget.enable();
          },
          enableUpdate: function (e) {
            return (
              (e = !1 !== e),
              !!this._enableUpdate == !!e
                ? e
                : ((this._enableUpdate = e)
                    ? (this.debug("enableUpdate(true): redraw "),
                      this._callHook(
                        "treeStructureChanged",
                        this,
                        "enableUpdate",
                      ),
                      this.render())
                    : this.debug("enableUpdate(false)..."),
                  !e)
            );
          },
          error: function () {
            this.options.debugLevel >= 1 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("error", arguments));
          },
          expandAll: function (t, n) {
            const e = this.enableUpdate(!1);
            (t = !1 !== t),
              this.visit(function (e) {
                !1 !== e.hasChildren() &&
                  e.isExpanded() !== t &&
                  e.setExpanded(t, n);
              }),
              this.enableUpdate(e);
          },
          findAll: function (e) {
            return this.rootNode.findAll(e);
          },
          findFirst: function (e) {
            return this.rootNode.findFirst(e);
          },
          findNextNode: function (t, n) {
            function e(e) {
              if ((t(e) && (i = e), i || e === n)) return !1;
            }
            var i = null;
            const r = this.getFirstChild();
            return (
              (t = typeof t === "string" ? a(t) : t),
              (n = n || r),
              this.visitRows(e, { start: n, includeSelf: !1 }),
              i || n === r || this.visitRows(e, { start: r, includeSelf: !0 }),
              i
            );
          },
          findRelatedNode: function (e, t) {
            let n = null;
            const i = x.ui.keyCode;
            switch (t) {
              case "parent":
              case i.BACKSPACE:
                e.parent && e.parent.parent && (n = e.parent);
                break;
              case "first":
              case i.HOME:
                this.visit(function (e) {
                  if (e.isVisible()) return (n = e), !1;
                });
                break;
              case "last":
              case i.END:
                this.visit(function (e) {
                  e.isVisible() && (n = e);
                });
                break;
              case "left":
              case i.LEFT:
                e.expanded
                  ? e.setExpanded(!1)
                  : e.parent && e.parent.parent && (n = e.parent);
                break;
              case "right":
              case i.RIGHT:
                e.expanded || (!e.children && !e.lazy)
                  ? e.children && e.children.length && (n = e.children[0])
                  : (e.setExpanded(), (n = e));
                break;
              case "up":
              case i.UP:
                this.visitRows(
                  function (e) {
                    return (n = e), !1;
                  },
                  { start: e, reverse: !0, includeSelf: !1 },
                );
                break;
              case "down":
              case i.DOWN:
                this.visitRows(
                  function (e) {
                    return (n = e), !1;
                  },
                  { start: e, includeSelf: !1 },
                );
                break;
              default:
                this.tree.warn("Unknown relation '" + t + "'.");
            }
            return n;
          },
          generateFormElements: function (e, t, n) {
            function i(e) {
              l.append(
                x("<input>", {
                  type: "checkbox",
                  name: o,
                  value: e.key,
                  checked: !0,
                }),
              );
            }
            n = n || {};
            let r;
            var o = typeof e === "string" ? e : "ft_" + this._id + "[]";
            const s = typeof t === "string" ? t : "ft_" + this._id + "_active";
            const a = "fancytree_result_" + this._id;
            var l = x("#" + a);
            const c = this.options.selectMode === 3 && !1 !== n.stopOnParents;
            l.length
              ? l.empty()
              : (l = x("<div>", { id: a }).hide().insertAfter(this.$container)),
              !1 !== t &&
                this.activeNode &&
                l.append(
                  x("<input>", {
                    type: "radio",
                    name: s,
                    value: this.activeNode.key,
                    checked: !0,
                  }),
                ),
              n.filter
                ? this.visit(function (e) {
                    const t = n.filter(e);
                    if (t === "skip") return t;
                    !1 !== t && i(e);
                  })
                : !1 !== e &&
                  ((r = this.getSelectedNodes(c)),
                  x.each(r, function (e, t) {
                    i(t);
                  }));
          },
          getActiveNode: function () {
            return this.activeNode;
          },
          getFirstChild: function () {
            return this.rootNode.getFirstChild();
          },
          getFocusNode: function () {
            return this.focusNode;
          },
          getOption: function (e) {
            return this.widget.option(e);
          },
          getNodeByKey: function (t, e) {
            let n, i;
            return !e &&
              (n = document.getElementById(this.options.idPrefix + t))
              ? n.ftnode
                ? n.ftnode
                : null
              : ((e = e || this.rootNode),
                (i = null),
                (t = "" + t),
                e.visit(function (e) {
                  if (e.key === t) return (i = e), !1;
                }, !0),
                i);
          },
          getRootNode: function () {
            return this.rootNode;
          },
          getSelectedNodes: function (e) {
            return this.rootNode.getSelectedNodes(e);
          },
          hasFocus: function () {
            return !!this._hasFocus;
          },
          info: function () {
            this.options.debugLevel >= 3 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("info", arguments));
          },
          isLoading: function () {
            let t = !1;
            return (
              this.rootNode.visit(function (e) {
                if (e._isLoading || e._requestId) return !(t = !0);
              }, !0),
              t
            );
          },
          loadKeyPath: function (e, t) {
            let i;
            let n;
            let r;
            const o = this;
            const s = new x.Deferred();
            const a = this.getRootNode();
            const l = this.options.keyPathSeparator;
            const c = [];
            const u = x.extend({}, t);
            for (
              typeof t === "function"
                ? (i = t)
                : t && t.callback && (i = t.callback),
                u.callback = function (e, t, n) {
                  i && i.call(e, t, n),
                    s.notifyWith(e, [{ node: t, status: n }]);
                },
                u.matchKey == null &&
                  (u.matchKey = function (e, t) {
                    return e.key === t;
                  }),
                $(e) || (e = [e]),
                n = 0;
              n < e.length;
              n++
            ) {
              (r = e[n]).charAt(0) === l && (r = r.substr(1)),
                c.push(r.split(l));
            }
            return (
              setTimeout(function () {
                o._loadKeyPathImpl(s, u, a, c).done(function () {
                  s.resolve();
                });
              }, 0),
              s.promise()
            );
          },
          _loadKeyPathImpl: function (e, o, t, n) {
            function i(e, t) {
              let n;
              let i;
              const r = e.children;
              if (r) {
                for (n = 0, i = r.length; n < i; n++) {
                  if (o.matchKey(r[n], t)) return r[n];
                }
              }
              return null;
            }
            function r(e, t, n) {
              o.callback(m, t, "loading"),
                t
                  .load()
                  .done(function () {
                    m._loadKeyPathImpl.call(m, e, o, t, n).always(y(e, m));
                  })
                  .fail(function () {
                    m.warn("loadKeyPath: error loading lazy " + t),
                      o.callback(m, c, "error"),
                      e.rejectWith(m);
                  });
            }
            let s;
            let a;
            let l;
            let c;
            let u;
            let d;
            let h;
            let p;
            let f;
            let g;
            var m = this;
            for (h = {}, a = 0; a < n.length; a++) {
              for (f = n[a], p = t; f.length; ) {
                if (((l = f.shift()), !(c = i(p, l)))) {
                  this.warn(
                    "loadKeyPath: key not found: " + l + " (parent: " + p + ")",
                  ),
                    o.callback(this, l, "error");
                  break;
                }
                if (f.length === 0) {
                  o.callback(this, c, "ok");
                  break;
                }
                if (c.lazy && c.hasChildren() === undefined) {
                  o.callback(this, c, "loaded"),
                    h[(l = c.key)]
                      ? h[l].pathSegList.push(f)
                      : (h[l] = { parent: c, pathSegList: [f] });
                  break;
                }
                o.callback(this, c, "loaded"), (p = c);
              }
            }
            for (u in ((s = []), h)) {
              v(h, u) &&
                ((d = h[u]),
                (g = new x.Deferred()),
                s.push(g),
                r(g, d.parent, d.pathSegList));
            }
            return x.when.apply(x, s).promise();
          },
          reactivate: function (e) {
            let t;
            const n = this.activeNode;
            return n
              ? ((this.activeNode = null),
                (t = n.setActive(!0, { noFocus: !0 })),
                e && n.setFocus(),
                t)
              : C();
          },
          reload: function (e) {
            return (
              this._callHook("treeClear", this),
              this._callHook("treeLoad", this, e)
            );
          },
          render: function (e, t) {
            return this.rootNode.render(e, t);
          },
          selectAll: function (t) {
            this.visit(function (e) {
              e.setSelected(t);
            });
          },
          setFocus: function (e) {
            return this._callHook("treeSetFocus", this, e);
          },
          setOption: function (e, t) {
            return this.widget.option(e, t);
          },
          debugTime: function (e) {
            this.options.debugLevel >= 4 &&
              window.console.time(this + " - " + e);
          },
          debugTimeEnd: function (e) {
            this.options.debugLevel >= 4 &&
              window.console.timeEnd(this + " - " + e);
          },
          toDict: function (e, t) {
            const n = this.rootNode.toDict(!0, t);
            return e ? n : n.children;
          },
          toString: function () {
            return "Fancytree@" + this._id;
          },
          _triggerNodeEvent: function (e, t, n, i) {
            const r = this._makeHookContext(t, n, i);
            const o = this.widget._trigger(e, n, r);
            return !1 !== o && r.result !== undefined ? r.result : o;
          },
          _triggerTreeEvent: function (e, t, n) {
            const i = this._makeHookContext(this, t, n);
            const r = this.widget._trigger(e, t, i);
            return !1 !== r && i.result !== undefined ? i.result : r;
          },
          visit: function (e) {
            return this.rootNode.visit(e, !1);
          },
          visitRows: function (t, e) {
            if (!this.rootNode.hasChildren()) return !1;
            if (e && e.reverse) {
              return delete e.reverse, this._visitRowsUp(t, e);
            }
            let n;
            let i;
            let r;
            let o;
            let s = 0;
            let a = !1 === (e = e || {}).includeSelf;
            const l = !!e.includeHidden;
            const c = !l && this.enableFilter;
            let u = e.start || this.rootNode.children[0];
            for (r = u.parent; r; ) {
              for (
                w(
                  (i = (o = r.children).indexOf(u) + s) >= 0,
                  "Could not find " + u + " in parent's children: " + r,
                ),
                  n = i;
                n < o.length;
                n++
              ) {
                if (((u = o[n]), !c || u.match || u.subMatchCount)) {
                  if (!a && !1 === t(u)) return !1;
                  if (
                    ((a = !1),
                    u.children &&
                      u.children.length &&
                      (l || u.expanded) &&
                      !1 ===
                        u.visit(function (e) {
                          return !c || e.match || e.subMatchCount
                            ? !1 !== t(e) &&
                                (l || !e.children || e.expanded
                                  ? void 0
                                  : "skip")
                            : "skip";
                        }, !1))
                  ) {
                    return !1;
                  }
                }
              }
              (r = (u = r).parent), (s = 1);
            }
            return !0;
          },
          _visitRowsUp: function (e, t) {
            for (
              var n,
                i,
                r,
                o = !!t.includeHidden,
                s = t.start || this.rootNode.children[0];
              ;

            ) {
              if ((n = (r = s.parent).children)[0] === s) {
                if (!(s = r).parent) break;
                n = r.children;
              } else {
                for (
                  i = n.indexOf(s), s = n[i - 1];
                  (o || s.expanded) && s.children && s.children.length;

                ) {
                  s = (n = (r = s).children)[n.length - 1];
                }
              }
              if ((o || s.isVisible()) && !1 === e(s)) return !1;
            }
          },
          warn: function () {
            this.options.debugLevel >= 2 &&
              (Array.prototype.unshift.call(arguments, this.toString()),
              e("warn", arguments));
          },
        }),
        x.extend(l.prototype, {
          nodeClick: function (e) {
            let t;
            let n;
            const i = e.targetType;
            const r = e.node;
            if (i === "expander") {
              if (r.isLoading()) {
                return void r.debug("Got 2nd click while loading: ignored");
              }
              this._callHook("nodeToggleExpanded", e);
            } else if (i === "checkbox") {
              this._callHook("nodeToggleSelected", e),
                e.options.focusOnSelect &&
                  this._callHook("nodeSetFocus", e, !0);
            } else {
              if (((t = !(n = !1)), r.folder)) {
                switch (e.options.clickFolderMode) {
                  case 2:
                    t = !(n = !0);
                    break;
                  case 3:
                    n = t = !0;
                }
              }
              t &&
                (this.nodeSetFocus(e), this._callHook("nodeSetActive", e, !0)),
                n && this._callHook("nodeToggleExpanded", e);
            }
          },
          nodeCollapseSiblings: function (e, t) {
            let n;
            let i;
            let r;
            const o = e.node;
            if (o.parent) {
              for (i = 0, r = (n = o.parent.children).length; i < r; i++) {
                n[i] !== o &&
                  n[i].expanded &&
                  this._callHook("nodeSetExpanded", n[i], !1, t);
              }
            }
          },
          nodeDblclick: function (e) {
            e.targetType === "title" &&
              e.options.clickFolderMode === 4 &&
              this._callHook("nodeToggleExpanded", e),
              e.targetType === "title" && e.originalEvent.preventDefault();
          },
          nodeKeydown: function (e) {
            let t;
            let n;
            let i;
            const r = e.originalEvent;
            let o = e.node;
            const s = e.tree;
            const a = e.options;
            const l = r.which;
            const c = r.key || String.fromCharCode(l);
            const u = !!(r.altKey || r.ctrlKey || r.metaKey);
            const d = !I[l] && !E[l] && !u;
            const h = x(r.target);
            let p = !0;
            const f = !(r.ctrlKey || !a.autoActivate);
            if (
              (o ||
                ((i = this.getActiveNode() || this.getFirstChild()) &&
                  (i.setFocus(),
                  (o = e.node = this.focusNode).debug(
                    "Keydown force focus on active node",
                  ))),
              a.quicksearch && d && !h.is(":input:enabled"))
            ) {
              return (
                (n = Date.now()) - s.lastQuicksearchTime > 500 &&
                  (s.lastQuicksearchTerm = ""),
                (s.lastQuicksearchTime = n),
                (s.lastQuicksearchTerm += c),
                (t = s.findNextNode(
                  s.lastQuicksearchTerm,
                  s.getActiveNode(),
                )) && t.setActive(),
                void r.preventDefault()
              );
            }
            switch (S.eventToString(r)) {
              case "+":
              case "=":
                s.nodeSetExpanded(e, !0);
                break;
              case "-":
                s.nodeSetExpanded(e, !1);
                break;
              case "space":
                o.isPagingNode()
                  ? s._triggerNodeEvent("clickPaging", e, r)
                  : S.evalOption("checkbox", o, o, a, !1)
                    ? s.nodeToggleSelected(e)
                    : s.nodeSetActive(e, !0);
                break;
              case "return":
                s.nodeSetActive(e, !0);
                break;
              case "home":
              case "end":
              case "backspace":
              case "left":
              case "right":
              case "up":
              case "down":
                o.navigate(r.which, f);
                break;
              default:
                p = !1;
            }
            p && r.preventDefault();
          },
          nodeLoadChildren: function (r, o) {
            let t;
            let n;
            let s;
            let e = null;
            let i = !0;
            const a = r.tree;
            const l = r.node;
            const c = l.parent;
            const u = "nodeLoadChildren";
            const d = Date.now();
            return (
              f(o) &&
                w(
                  !f((o = o.call(a, { type: "source" }, r))),
                  "source callback must not return another function",
                ),
              f(o.then)
                ? (e = o)
                : o.url
                  ? (t = x.extend({}, r.options.ajax, o)).debugDelay
                    ? ((n = t.debugDelay),
                      delete t.debugDelay,
                      $(n) && (n = n[0] + Math.random() * (n[1] - n[0])),
                      l.warn(
                        "nodeLoadChildren waiting debugDelay " +
                          Math.round(n) +
                          " ms ...",
                      ),
                      (e = x.Deferred(function (e) {
                        setTimeout(function () {
                          x.ajax(t)
                            .done(function () {
                              e.resolveWith(this, arguments);
                            })
                            .fail(function () {
                              e.rejectWith(this, arguments);
                            });
                        }, n);
                      })))
                    : (e = x.ajax(t))
                  : x.isPlainObject(o) || $(o)
                    ? (i = !(e = {
                        then: function (e) {
                          e(o, null, null);
                        },
                      }))
                    : x.error("Invalid source type: " + o),
              l._requestId &&
                (l.warn(
                  "Recursive load request #" +
                    d +
                    " while #" +
                    l._requestId +
                    " is pending.",
                ),
                (l._requestId = d)),
              i && (a.debugTime(u), a.nodeSetStatus(r, "loading")),
              (s = new x.Deferred()),
              e.then(
                function (e) {
                  let t, n;
                  if (
                    ((o.dataType !== "json" && o.dataType !== "jsonp") ||
                      typeof e !== "string" ||
                      x.error(
                        "Ajax request returned a string (did you get the JSON dataType wrong?).",
                      ),
                    l._requestId && l._requestId > d)
                  ) {
                    s.rejectWith(this, [p]);
                  } else if (l.parent !== null || c === null) {
                    if (r.options.postProcess) {
                      try {
                        (n = a._triggerNodeEvent(
                          "postProcess",
                          r,
                          r.originalEvent,
                          { response: e, error: null, dataType: o.dataType },
                        )).error && a.warn("postProcess returned error:", n);
                      } catch (i) {
                        n = {
                          error: i,
                          message: "" + i,
                          details: "postProcess failed",
                        };
                      }
                      if (n.error) {
                        return (
                          (t = x.isPlainObject(n.error)
                            ? n.error
                            : { message: n.error }),
                          (t = a._makeHookContext(l, null, t)),
                          void s.rejectWith(this, [t])
                        );
                      }
                      ($(n) || (x.isPlainObject(n) && $(n.children))) &&
                        (e = n);
                    } else {
                      e &&
                        v(e, "d") &&
                        r.options.enableAspx &&
                        (r.options.enableAspx === 42 &&
                          a.warn(
                            "The default for enableAspx will change to `false` in the fututure. Pass `enableAspx: true` or implement postProcess to silence this warning.",
                          ),
                        (e = typeof e.d === "string" ? x.parseJSON(e.d) : e.d));
                    }
                    s.resolveWith(this, [e]);
                  } else s.rejectWith(this, [D]);
                },
                function (e, t, n) {
                  const i = a._makeHookContext(l, null, {
                    error: e,
                    args: Array.prototype.slice.call(arguments),
                    message: n,
                    details: e.status + ": " + n,
                  });
                  s.rejectWith(this, [i]);
                },
              ),
              s
                .done(function (e) {
                  let t, n, i;
                  a.nodeSetStatus(r, "ok"),
                    x.isPlainObject(e)
                      ? (w(
                          l.isRootNode(),
                          "source may only be an object for root nodes (expecting an array of child objects otherwise)",
                        ),
                        w(
                          $(e.children),
                          "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')",
                        ),
                        (t = (n = e).children),
                        delete n.children,
                        x.each(P, function (e, t) {
                          n[t] !== undefined && ((a[t] = n[t]), delete n[t]);
                        }),
                        x.extend(a.data, n))
                      : (t = e),
                    w($(t), "expected array of children"),
                    l._setChildren(t),
                    a.options.nodata &&
                      t.length === 0 &&
                      (f(a.options.nodata)
                        ? (i = a.options.nodata.call(a, { type: "nodata" }, r))
                        : !0 === a.options.nodata && l.isRootNode()
                          ? (i = a.options.strings.noData)
                          : typeof a.options.nodata === "string" &&
                            l.isRootNode() &&
                            (i = a.options.nodata),
                      i && l.setStatus("nodata", i)),
                    a._triggerNodeEvent("loadChildren", l);
                })
                .fail(function (e) {
                  let t;
                  e !== p
                    ? e !== D
                      ? (e.node && e.error && e.message
                          ? (t = e)
                          : (t = a._makeHookContext(l, null, {
                              error: e,
                              args: Array.prototype.slice.call(arguments),
                              message: e ? e.message || e.toString() : "",
                            })).message === "[object Object]" &&
                            (t.message = ""),
                        l.warn("Load children failed (" + t.message + ")", t),
                        !1 !== a._triggerNodeEvent("loadError", t, null) &&
                          a.nodeSetStatus(r, "error", t.message, t.details))
                      : l.warn(
                          "Lazy parent node was removed while loading: discarding response.",
                        )
                    : l.warn(
                        "Ignored response for obsolete load request #" +
                          d +
                          " (expected #" +
                          l._requestId +
                          ")",
                      );
                })
                .always(function () {
                  (l._requestId = null), i && a.debugTimeEnd(u);
                }),
              s.promise()
            );
          },
          nodeLoadKeyPath: function () {},
          nodeRemoveChild: function (e, t) {
            let n;
            const i = e.node;
            const r = x.extend({}, e, { node: t });
            const o = i.children;
            if (o.length === 1) {
              return (
                w(t === o[0], "invalid single child"),
                this.nodeRemoveChildren(e)
              );
            }
            this.activeNode &&
              (t === this.activeNode || this.activeNode.isDescendantOf(t)) &&
              this.activeNode.setActive(!1),
              this.focusNode &&
                (t === this.focusNode || this.focusNode.isDescendantOf(t)) &&
                (this.focusNode = null),
              this.nodeRemoveMarkup(r),
              this.nodeRemoveChildren(r),
              w((n = x.inArray(t, o)) >= 0, "invalid child"),
              i.triggerModifyChild("remove", t),
              t.visit(function (e) {
                e.parent = null;
              }, !0),
              this._callHook("treeRegisterNode", this, !1, t),
              o.splice(n, 1);
          },
          nodeRemoveChildMarkup: function (e) {
            const t = e.node;
            t.ul &&
              (t.isRootNode()
                ? x(t.ul).empty()
                : (x(t.ul).remove(), (t.ul = null)),
              t.visit(function (e) {
                e.li = e.ul = null;
              }));
          },
          nodeRemoveChildren: function (e) {
            const t = e.tree;
            const n = e.node;
            n.children &&
              (this.activeNode &&
                this.activeNode.isDescendantOf(n) &&
                this.activeNode.setActive(!1),
              this.focusNode &&
                this.focusNode.isDescendantOf(n) &&
                (this.focusNode = null),
              this.nodeRemoveChildMarkup(e),
              n.triggerModifyChild("remove", null),
              n.visit(function (e) {
                (e.parent = null), t._callHook("treeRegisterNode", t, !1, e);
              }),
              n.lazy ? (n.children = []) : (n.children = null),
              n.isRootNode() || (n.expanded = !1),
              this.nodeRenderStatus(e));
          },
          nodeRemoveMarkup: function (e) {
            const t = e.node;
            t.li && (x(t.li).remove(), (t.li = null)),
              this.nodeRemoveChildMarkup(e);
          },
          nodeRender: function (e, t, n, i, r) {
            let o;
            let s;
            let a;
            let l;
            let c;
            let u;
            let d;
            const h = e.node;
            const p = e.tree;
            const f = e.options;
            const g = f.aria;
            let m = !1;
            const v = h.parent;
            const y = !v;
            const b = h.children;
            let _ = null;
            if (!1 !== p._enableUpdate && (y || v.ul)) {
              if (
                (w(y || v.ul, "parent UL must exist"),
                y ||
                  (h.li &&
                    (t || h.li.parentNode !== h.parent.ul) &&
                    (h.li.parentNode === h.parent.ul
                      ? (_ = h.li.nextSibling)
                      : this.debug(
                          "Unlinking " +
                            h +
                            " (must be child of " +
                            h.parent +
                            ")",
                        ),
                    this.nodeRemoveMarkup(e)),
                  h.li
                    ? this.nodeRenderStatus(e)
                    : ((m = !0),
                      (h.li = document.createElement("li")),
                      (h.li.ftnode = h).key &&
                        f.generateIds &&
                        (h.li.id = f.idPrefix + h.key),
                      (h.span = document.createElement("span")),
                      (h.span.className = "fancytree-node"),
                      g && !h.tr && x(h.li).attr("role", "treeitem"),
                      h.li.appendChild(h.span),
                      this.nodeRenderTitle(e),
                      f.createNode &&
                        f.createNode.call(p, { type: "createNode" }, e)),
                  f.renderNode &&
                    f.renderNode.call(p, { type: "renderNode" }, e)),
                b)
              ) {
                if (y || h.expanded || !0 === n) {
                  for (
                    h.ul ||
                      ((h.ul = document.createElement("ul")),
                      ((!0 !== i || r) && h.expanded) ||
                        (h.ul.style.display = "none"),
                      g && x(h.ul).attr("role", "group"),
                      h.li ? h.li.appendChild(h.ul) : h.tree.$div.append(h.ul)),
                      l = 0,
                      c = b.length;
                    l < c;
                    l++
                  ) {
                    (d = x.extend({}, e, { node: b[l] })),
                      this.nodeRender(d, t, n, !1, !0);
                  }
                  for (o = h.ul.firstChild; o; ) {
                    (a = o.ftnode) && a.parent !== h
                      ? (h.debug("_fixParent: remove missing " + a, o),
                        (u = o.nextSibling),
                        o.parentNode.removeChild(o),
                        (o = u))
                      : (o = o.nextSibling);
                  }
                  for (
                    o = h.ul.firstChild, l = 0, c = b.length - 1;
                    l < c;
                    l++
                  ) {
                    (s = b[l]) === (a = o.ftnode)
                      ? (o = o.nextSibling)
                      : h.ul.insertBefore(s.li, a.li);
                  }
                }
              } else {
                h.ul &&
                  (this.warn("remove child markup for " + h),
                  this.nodeRemoveChildMarkup(e));
              }
              y || (m && v.ul.insertBefore(h.li, _));
            }
          },
          nodeRenderTitle: function (e, t) {
            let n;
            let i;
            let r;
            let o;
            let s;
            let a;
            let l;
            const c = e.node;
            const u = e.tree;
            const d = e.options;
            const h = d.aria;
            const p = c.getLevel();
            const f = [];
            t !== undefined && (c.title = t),
              c.span &&
                !1 !== u._enableUpdate &&
                ((s = h && !1 !== c.hasChildren() ? " role='button'" : ""),
                p < d.minExpandLevel
                  ? (c.lazy || (c.expanded = !0),
                    p > 1 &&
                      f.push(
                        "<span " +
                          s +
                          " class='fancytree-expander fancytree-expander-fixed'></span>",
                      ))
                  : f.push(
                      "<span " + s + " class='fancytree-expander'></span>",
                    ),
                (n = S.evalOption("checkbox", c, c, d, !1)) &&
                  !c.isStatusNode() &&
                  ((s = h ? " role='checkbox'" : ""),
                  (i = "fancytree-checkbox"),
                  (n === "radio" || (c.parent && c.parent.radiogroup)) &&
                    (i += " fancytree-radio"),
                  f.push("<span " + s + " class='" + i + "'></span>")),
                c.data.iconClass !== undefined &&
                  (c.icon
                    ? x.error(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead",
                      )
                    : (c.warn(
                        "'iconClass' node option is deprecated since v2.14.0: use 'icon' instead",
                      ),
                      (c.icon = c.data.iconClass))),
                !1 !== (r = S.evalOption("icon", c, c, d, !0)) &&
                  ((s = h ? " role='presentation'" : ""),
                  (l = (l = S.evalOption("iconTooltip", c, c, d, null))
                    ? " title='" + k(l) + "'"
                    : ""),
                  typeof r === "string"
                    ? T.test(r)
                      ? ((r =
                          r.charAt(0) === "/" ? r : (d.imagePath || "") + r),
                        f.push(
                          "<img src='" +
                            r +
                            "' class='fancytree-icon'" +
                            l +
                            " alt='' />",
                        ))
                      : f.push(
                          "<span " +
                            s +
                            " class='fancytree-custom-icon " +
                            r +
                            "'" +
                            l +
                            "></span>",
                        )
                    : r.text
                      ? f.push(
                          "<span " +
                            s +
                            " class='fancytree-custom-icon " +
                            (r.addClass || "") +
                            "'" +
                            l +
                            ">" +
                            S.escapeHtml(r.text) +
                            "</span>",
                        )
                      : r.html
                        ? f.push(
                            "<span " +
                              s +
                              " class='fancytree-custom-icon " +
                              (r.addClass || "") +
                              "'" +
                              l +
                              ">" +
                              r.html +
                              "</span>",
                          )
                        : f.push(
                            "<span " +
                              s +
                              " class='fancytree-icon'" +
                              l +
                              "></span>",
                          )),
                (o = ""),
                d.renderTitle &&
                  (o = d.renderTitle.call(u, { type: "renderTitle" }, e) || ""),
                o ||
                  (!0 === (a = S.evalOption("tooltip", c, c, d, null)) &&
                    (a = c.title),
                  (o =
                    "<span class='fancytree-title'" +
                    (a = a ? " title='" + k(a) + "'" : "") +
                    (d.titlesTabbable ? " tabindex='0'" : "") +
                    ">" +
                    (d.escapeTitles ? S.escapeHtml(c.title) : c.title) +
                    "</span>")),
                f.push(o),
                (c.span.innerHTML = f.join("")),
                this.nodeRenderStatus(e),
                d.enhanceTitle &&
                  ((e.$title = x(">span.fancytree-title", c.span)),
                  (o =
                    d.enhanceTitle.call(u, { type: "enhanceTitle" }, e) ||
                    "")));
          },
          nodeRenderStatus: function (e) {
            let t;
            const n = e.node;
            const i = e.tree;
            const r = e.options;
            const o = n.hasChildren();
            const s = n.isLastSibling();
            const a = r.aria;
            const l = r._classNames;
            const c = [];
            const u = n[i.statusClassPropName];
            u &&
              !1 !== i._enableUpdate &&
              (a && (t = x(n.tr || n.li)),
              c.push(l.node),
              i.activeNode === n && c.push(l.active),
              i.focusNode === n && c.push(l.focused),
              n.expanded && c.push(l.expanded),
              a &&
                (!1 === o
                  ? t.removeAttr("aria-expanded")
                  : t.attr("aria-expanded", Boolean(n.expanded))),
              n.folder && c.push(l.folder),
              !1 !== o && c.push(l.hasChildren),
              s && c.push(l.lastsib),
              n.lazy && n.children == null && c.push(l.lazy),
              n.partload && c.push(l.partload),
              n.partsel && c.push(l.partsel),
              S.evalOption("unselectable", n, n, r, !1) &&
                c.push(l.unselectable),
              n._isLoading && c.push(l.loading),
              n._error && c.push(l.error),
              n.statusNodeType && c.push(l.statusNodePrefix + n.statusNodeType),
              n.selected
                ? (c.push(l.selected), a && t.attr("aria-selected", !0))
                : a && t.attr("aria-selected", !1),
              n.extraClasses && c.push(n.extraClasses),
              !1 === o
                ? c.push(l.combinedExpanderPrefix + "n" + (s ? "l" : ""))
                : c.push(
                    l.combinedExpanderPrefix +
                      (n.expanded ? "e" : "c") +
                      (n.lazy && n.children == null ? "d" : "") +
                      (s ? "l" : ""),
                  ),
              c.push(
                l.combinedIconPrefix +
                  (n.expanded ? "e" : "c") +
                  (n.folder ? "f" : ""),
              ),
              (u.className = c.join(" ")),
              n.li && x(n.li).toggleClass(l.lastsib, s));
          },
          nodeSetActive: function (e, t, n) {
            n = n || {};
            let i;
            const r = e.node;
            const o = e.tree;
            const s = e.options;
            const a = !0 === n.noEvents;
            const l = !0 === n.noFocus;
            let c = !1 !== n.scrollIntoView;
            return (r === o.activeNode) === (t = !1 !== t)
              ? C(r)
              : (c &&
                  e.originalEvent &&
                  x(e.originalEvent.target).is("a,:checkbox") &&
                  (r.info("Not scrolling while clicking an embedded link."),
                  (c = !1)),
                t &&
                !a &&
                !1 ===
                  this._triggerNodeEvent("beforeActivate", r, e.originalEvent)
                  ? g(r, ["rejected"])
                  : (t
                      ? (o.activeNode &&
                          (w(
                            o.activeNode !== r,
                            "node was active (inconsistency)",
                          ),
                          (i = x.extend({}, e, { node: o.activeNode })),
                          o.nodeSetActive(i, !1),
                          w(
                            o.activeNode === null,
                            "deactivate was out of sync?",
                          )),
                        s.activeVisible && r.makeVisible({ scrollIntoView: c }),
                        (o.activeNode = r),
                        o.nodeRenderStatus(e),
                        l || o.nodeSetFocus(e),
                        a ||
                          o._triggerNodeEvent("activate", r, e.originalEvent))
                      : (w(
                          o.activeNode === r,
                          "node was not active (inconsistency)",
                        ),
                        (o.activeNode = null),
                        this.nodeRenderStatus(e),
                        a ||
                          e.tree._triggerNodeEvent(
                            "deactivate",
                            r,
                            e.originalEvent,
                          )),
                    C(r)));
          },
          nodeSetExpanded: function (i, r, e) {
            e = e || {};
            let t;
            let n;
            let o;
            let s;
            let a;
            let l;
            const c = i.node;
            const u = i.tree;
            const d = i.options;
            let h = !0 === e.noAnimation;
            const p = !0 === e.noEvents;
            if (((r = !1 !== r), x(c.li).hasClass(d._classNames.animating))) {
              return (
                c.warn("setExpanded(" + r + ") while animating: ignored."),
                g(c, ["recursion"])
              );
            }
            if ((c.expanded && r) || (!c.expanded && !r)) return C(c);
            if (r && !c.lazy && !c.hasChildren()) return C(c);
            if (!r && c.getLevel() < d.minExpandLevel) return g(c, ["locked"]);
            if (
              !p &&
              !1 === this._triggerNodeEvent("beforeExpand", c, i.originalEvent)
            ) {
              return g(c, ["rejected"]);
            }
            if (
              (h || c.isVisible() || (h = e.noAnimation = !0),
              (n = new x.Deferred()),
              r && !c.expanded && d.autoCollapse)
            ) {
              (a = c.getParentList(!1, !0)), (l = d.autoCollapse);
              try {
                for (d.autoCollapse = !1, o = 0, s = a.length; o < s; o++) {
                  this._callHook("nodeCollapseSiblings", a[o], e);
                }
              } finally {
                d.autoCollapse = l;
              }
            }
            return (
              n.done(function () {
                const e = c.getLastChild();
                r && d.autoScroll && !h && e && u._enableUpdate
                  ? e.scrollIntoView(!0, { topNode: c }).always(function () {
                      p ||
                        i.tree._triggerNodeEvent(r ? "expand" : "collapse", i);
                    })
                  : p || i.tree._triggerNodeEvent(r ? "expand" : "collapse", i);
              }),
              (t = function (e) {
                const t = d._classNames;
                const n = d.toggleEffect;
                if (
                  ((c.expanded = r),
                  u._callHook(
                    "treeStructureChanged",
                    i,
                    r ? "expand" : "collapse",
                  ),
                  u._callHook("nodeRender", i, !1, !1, !0),
                  c.ul)
                ) {
                  if ((c.ul.style.display !== "none") === !!c.expanded) {
                    c.warn("nodeSetExpanded: UL.style.display already set");
                  } else {
                    if (n && !h) {
                      return (
                        x(c.li).addClass(t.animating),
                        void (f(x(c.ul)[n.effect])
                          ? x(c.ul)[n.effect]({
                              duration: n.duration,
                              always: function () {
                                x(this).removeClass(t.animating),
                                  x(c.li).removeClass(t.animating),
                                  e();
                              },
                            })
                          : (x(c.ul).stop(!0, !0),
                            x(c.ul)
                              .parent()
                              .find(".ui-effects-placeholder")
                              .remove(),
                            x(c.ul).toggle(
                              n.effect,
                              n.options,
                              n.duration,
                              function () {
                                x(this).removeClass(t.animating),
                                  x(c.li).removeClass(t.animating),
                                  e();
                              },
                            )))
                      );
                    }
                    c.ul.style.display = c.expanded || !parent ? "" : "none";
                  }
                }
                e();
              }),
              r && c.lazy && c.hasChildren() === undefined
                ? c
                    .load()
                    .done(function () {
                      n.notifyWith && n.notifyWith(c, ["loaded"]),
                        t(function () {
                          n.resolveWith(c);
                        });
                    })
                    .fail(function (e) {
                      t(function () {
                        n.rejectWith(c, ["load failed (" + e + ")"]);
                      });
                    })
                : t(function () {
                    n.resolveWith(c);
                  }),
              n.promise()
            );
          },
          nodeSetFocus: function (e, t) {
            let n;
            const i = e.tree;
            const r = e.node;
            const o = i.options;
            const s =
              !!e.originalEvent && x(e.originalEvent.target).is(":input");
            if (((t = !1 !== t), i.focusNode)) {
              if (i.focusNode === r && t) return;
              (n = x.extend({}, e, { node: i.focusNode })),
                (i.focusNode = null),
                this._triggerNodeEvent("blur", n),
                this._callHook("nodeRenderStatus", n);
            }
            t &&
              (this.hasFocus() ||
                (r.debug("nodeSetFocus: forcing container focus"),
                this._callHook("treeSetFocus", e, !0, { calledByNode: !0 })),
              r.makeVisible({ scrollIntoView: !1 }),
              (i.focusNode = r),
              o.titlesTabbable &&
                (s || x(r.span).find(".fancytree-title").focus()),
              o.aria &&
                x(i.$container).attr(
                  "aria-activedescendant",
                  x(r.tr || r.li)
                    .uniqueId()
                    .attr("id"),
                ),
              this._triggerNodeEvent("focus", e),
              document.activeElement === i.$container.get(0) ||
                x(document.activeElement, i.$container).length >= 1 ||
                x(i.$container).focus(),
              o.autoScroll && r.scrollIntoView(),
              this._callHook("nodeRenderStatus", e));
          },
          nodeSetSelected: function (e, t, n) {
            n = n || {};
            const i = e.node;
            const r = e.tree;
            const o = e.options;
            const s = !0 === n.noEvents;
            const a = i.parent;
            if (((t = !1 !== t), !S.evalOption("unselectable", i, i, o, !1))) {
              if (
                ((i._lastSelectIntent = t),
                !!i.selected === t && (o.selectMode !== 3 || !i.partsel || t))
              ) {
                return t;
              }
              if (
                !s &&
                !1 ===
                  this._triggerNodeEvent("beforeSelect", i, e.originalEvent)
              ) {
                return !!i.selected;
              }
              t && o.selectMode === 1
                ? (r.lastSelectedNode && r.lastSelectedNode.setSelected(!1),
                  (i.selected = t))
                : o.selectMode !== 3 || !a || a.radiogroup || i.radiogroup
                  ? a && a.radiogroup
                    ? i.visitSiblings(function (e) {
                        e._changeSelectStatusAttrs(t && e === i);
                      }, !0)
                    : (i.selected = t)
                  : ((i.selected = t), i.fixSelection3AfterClick(n)),
                this.nodeRenderStatus(e),
                (r.lastSelectedNode = t ? i : null),
                s || r._triggerNodeEvent("select", e);
            }
          },
          nodeSetStatus: function (i, e, t, n) {
            function r() {
              const e = s.children ? s.children[0] : null;
              if (e && e.isStatusNode()) {
                try {
                  s.ul && (s.ul.removeChild(e.li), (e.li = null));
                } catch (t) {}
                s.children.length === 1
                  ? (s.children = [])
                  : s.children.shift(),
                  a._callHook("treeStructureChanged", i, "clearStatusNode");
              }
            }
            function o(e, t) {
              const n = s.children ? s.children[0] : null;
              return (
                n && n.isStatusNode()
                  ? (x.extend(n, e),
                    (n.statusNodeType = t),
                    a._callHook("nodeRenderTitle", n))
                  : (s._setChildren([e]),
                    a._callHook("treeStructureChanged", i, "setStatusNode"),
                    (s.children[0].statusNodeType = t),
                    a.render()),
                s.children[0]
              );
            }
            var s = i.node;
            var a = i.tree;
            switch (e) {
              case "ok":
                r(), (s._isLoading = !1), (s._error = null), s.renderStatus();
                break;
              case "loading":
                s.parent ||
                  o(
                    {
                      title:
                        a.options.strings.loading + (t ? " (" + t + ")" : ""),
                      checkbox: !1,
                      tooltip: n,
                    },
                    e,
                  ),
                  (s._isLoading = !0),
                  (s._error = null),
                  s.renderStatus();
                break;
              case "error":
                o(
                  {
                    title:
                      a.options.strings.loadError + (t ? " (" + t + ")" : ""),
                    checkbox: !1,
                    tooltip: n,
                  },
                  e,
                ),
                  (s._isLoading = !1),
                  (s._error = { message: t, details: n }),
                  s.renderStatus();
                break;
              case "nodata":
                o(
                  {
                    title: t || a.options.strings.noData,
                    checkbox: !1,
                    tooltip: n,
                  },
                  e,
                ),
                  (s._isLoading = !1),
                  (s._error = null),
                  s.renderStatus();
                break;
              default:
                x.error("invalid node status " + e);
            }
          },
          nodeToggleExpanded: function (e) {
            return this.nodeSetExpanded(e, !e.node.expanded);
          },
          nodeToggleSelected: function (e) {
            const t = e.node;
            let n = !t.selected;
            return (
              t.partsel &&
                !t.selected &&
                !0 === t._lastSelectIntent &&
                ((n = !1), (t.selected = !0)),
              (t._lastSelectIntent = n),
              this.nodeSetSelected(e, n)
            );
          },
          treeClear: function (e) {
            const t = e.tree;
            (t.activeNode = null),
              (t.focusNode = null),
              t.$div.find(">ul.fancytree-container").empty(),
              (t.rootNode.children = null),
              t._callHook("treeStructureChanged", e, "clear");
          },
          treeCreate: function () {},
          treeDestroy: function () {
            this.$div.find(">ul.fancytree-container").remove(),
              this.$source &&
                this.$source.removeClass("fancytree-helper-hidden");
          },
          treeInit: function (e) {
            const n = e.tree;
            const i = n.options;
            n.$container.attr("tabindex", i.tabindex),
              x.each(P, function (e, t) {
                i[t] !== undefined &&
                  (n.info("Move option " + t + " to tree"),
                  (n[t] = i[t]),
                  delete i[t]);
              }),
              i.checkboxAutoHide &&
                n.$container.addClass("fancytree-checkbox-auto-hide"),
              i.rtl
                ? n.$container.attr("DIR", "RTL").addClass("fancytree-rtl")
                : n.$container.removeAttr("DIR").removeClass("fancytree-rtl"),
              i.aria &&
                (n.$container.attr("role", "tree"),
                i.selectMode !== 1 &&
                  n.$container.attr("aria-multiselectable", !0)),
              this.treeLoad(e);
          },
          treeLoad: function (e, t) {
            let n;
            let i;
            let r;
            const o = e.tree;
            const s = e.widget.element;
            const a = x.extend({}, e, { node: this.rootNode });
            if (
              (o.rootNode.children && this.treeClear(e),
              (t = t || this.options.source))
            ) {
              typeof t === "string" && x.error("Not implemented");
            } else {
              switch ((i = s.data("type") || "html")) {
                case "html":
                  (r = s.find(">ul").not(".fancytree-container").first()).length
                    ? (r.addClass(
                        "ui-fancytree-source fancytree-helper-hidden",
                      ),
                      (t = x.ui.fancytree.parseHtml(r)),
                      (this.data = x.extend(this.data, b(r))))
                    : (S.warn(
                        "No `source` option was passed and container does not contain `<ul>`: assuming `source: []`.",
                      ),
                      (t = []));
                  break;
                case "json":
                  (t = x.parseJSON(s.text())),
                    s
                      .contents()
                      .filter(function () {
                        return this.nodeType === 3;
                      })
                      .remove(),
                    x.isPlainObject(t) &&
                      (w(
                        $(t.children),
                        "if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')",
                      ),
                      (t = (n = t).children),
                      delete n.children,
                      x.each(P, function (e, t) {
                        n[t] !== undefined && ((o[t] = n[t]), delete n[t]);
                      }),
                      x.extend(o.data, n));
                  break;
                default:
                  x.error("Invalid data-type: " + i);
              }
            }
            return (
              o._triggerTreeEvent("preInit", null),
              this.nodeLoadChildren(a, t)
                .done(function () {
                  o._callHook("treeStructureChanged", e, "loadChildren"),
                    o.render(),
                    e.options.selectMode === 3 &&
                      o.rootNode.fixSelection3FromEndNodes(),
                    o.activeNode &&
                      o.options.activeVisible &&
                      o.activeNode.makeVisible(),
                    o._triggerTreeEvent("init", null, { status: !0 });
                })
                .fail(function () {
                  o.render(), o._triggerTreeEvent("init", null, { status: !1 });
                })
            );
          },
          treeRegisterNode: function (e, t) {
            e.tree._callHook(
              "treeStructureChanged",
              e,
              t ? "addNode" : "removeNode",
            );
          },
          treeSetFocus: function (e, t, n) {
            let i;
            (t = !1 !== t) !== this.hasFocus() &&
              (!(this._hasFocus = t) && this.focusNode
                ? this.focusNode.setFocus(!1)
                : !t || (n && n.calledByNode) || x(this.$container).focus(),
              this.$container.toggleClass("fancytree-treefocus", t),
              this._triggerTreeEvent(t ? "focusTree" : "blurTree"),
              t &&
                !this.activeNode &&
                (i = this._lastMousedownNode || this.getFirstChild()) &&
                i.setFocus());
          },
          treeSetOption: function (e, t, n) {
            const i = e.tree;
            let r = !0;
            let o = !1;
            let s = !1;
            switch (t) {
              case "aria":
              case "checkbox":
              case "icon":
              case "minExpandLevel":
              case "tabindex":
                s = o = !0;
                break;
              case "checkboxAutoHide":
                i.$container.toggleClass("fancytree-checkbox-auto-hide", !!n);
                break;
              case "escapeTitles":
              case "tooltip":
                s = !0;
                break;
              case "rtl":
                !1 === n
                  ? i.$container.removeAttr("DIR").removeClass("fancytree-rtl")
                  : i.$container.attr("DIR", "RTL").addClass("fancytree-rtl"),
                  (s = !0);
                break;
              case "source":
                (r = !1), i._callHook("treeLoad", i, n), (s = !0);
            }
            i.debug("set option " + t + "=" + n + " <" + typeof n + ">"),
              r &&
                (this.widget._super
                  ? this.widget._super.call(this.widget, t, n)
                  : x.Widget.prototype._setOption.call(this.widget, t, n)),
              o && i._callHook("treeCreate", i),
              s && i.render(!0, !1);
          },
          treeStructureChanged: function () {},
        }),
        x.widget("ui.fancytree", {
          options: {
            activeVisible: !0,
            ajax: { type: "GET", cache: !1, dataType: "json" },
            aria: !0,
            autoActivate: !0,
            autoCollapse: !1,
            autoScroll: !1,
            checkbox: !1,
            clickFolderMode: 4,
            copyFunctionsToData: !1,
            debugLevel: null,
            disabled: !1,
            enableAspx: 42,
            escapeTitles: !1,
            extensions: [],
            focusOnSelect: !1,
            generateIds: !1,
            icon: !0,
            idPrefix: "ft_",
            keyboard: !0,
            keyPathSeparator: "/",
            minExpandLevel: 1,
            nodata: !0,
            quicksearch: !1,
            rtl: !1,
            scrollOfs: { top: 0, bottom: 0 },
            scrollParent: null,
            selectMode: 2,
            strings: {
              loading: "Loading...",
              loadError: "Load error!",
              moreData: "More...",
              noData: "No data.",
            },
            tabindex: "0",
            titlesTabbable: !1,
            toggleEffect: { effect: "slideToggle", duration: 200 },
            tooltip: !1,
            treeId: null,
            _classNames: {
              active: "fancytree-active",
              animating: "fancytree-animating",
              combinedExpanderPrefix: "fancytree-exp-",
              combinedIconPrefix: "fancytree-ico-",
              error: "fancytree-error",
              expanded: "fancytree-expanded",
              focused: "fancytree-focused",
              folder: "fancytree-folder",
              hasChildren: "fancytree-has-children",
              lastsib: "fancytree-lastsib",
              lazy: "fancytree-lazy",
              loading: "fancytree-loading",
              node: "fancytree-node",
              partload: "fancytree-partload",
              partsel: "fancytree-partsel",
              radio: "fancytree-radio",
              selected: "fancytree-selected",
              statusNodePrefix: "fancytree-statusnode-",
              unselectable: "fancytree-unselectable",
            },
            lazyLoad: null,
            postProcess: null,
          },
          _deprecationWarning: function (e) {
            const t = this.tree;
            t &&
              t.options.debugLevel >= 3 &&
              t.warn(
                "$().fancytree('" +
                  e +
                  "') is deprecated (see https://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Widget.html",
              );
          },
          _create: function () {
            (this.tree = new l(this)),
              (this.$source =
                this.source || this.element.data("type") === "json"
                  ? this.element
                  : this.element.find(">ul").first());
            let e;
            let t;
            let n;
            const i = this.options;
            const r = i.extensions;
            let o = this.tree;
            for (n = 0; n < r.length; n++) {
              (t = r[n]),
                (e = x.ui.fancytree._extensions[t]) ||
                  x.error(
                    "Could not apply extension '" +
                      t +
                      "' (it is not registered, did you forget to include it?)",
                  ),
                (this.tree.options[t] = c({}, e.options, this.tree.options[t])),
                w(
                  this.tree.ext[t] === undefined,
                  "Extension name must not exist as Fancytree.ext attribute: '" +
                    t +
                    "'",
                ),
                (this.tree.ext[t] = {}),
                s(this.tree, o, e, t),
                (o = e);
            }
            i.icons !== undefined &&
              (!0 === i.icon
                ? (this.tree.warn(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' instead",
                  ),
                  (i.icon = i.icons))
                : x.error(
                    "'icons' tree option is deprecated since v2.14.0: use 'icon' only instead",
                  )),
              i.iconClass !== undefined &&
                (i.icon
                  ? x.error(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead",
                    )
                  : (this.tree.warn(
                      "'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead",
                    ),
                    (i.icon = i.iconClass))),
              i.tabbable !== undefined &&
                ((i.tabindex = i.tabbable ? "0" : "-1"),
                this.tree.warn(
                  "'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='" +
                    i.tabindex +
                    "' instead",
                )),
              this.tree._callHook("treeCreate", this.tree);
          },
          _init: function () {
            this.tree._callHook("treeInit", this.tree), this._bind();
          },
          _setOption: function (e, t) {
            return this.tree._callHook("treeSetOption", this.tree, e, t);
          },
          _destroy: function () {
            this._unbind(), this.tree._callHook("treeDestroy", this.tree);
          },
          _unbind: function () {
            const e = this.tree._ns;
            this.element.off(e),
              this.tree.$container.off(e),
              x(document).off(e);
          },
          _bind: function () {
            const s = this;
            const a = this.options;
            const o = this.tree;
            const e = o._ns;
            this._unbind(),
              o.$container
                .on("focusin" + e + " focusout" + e, function (e) {
                  let t = S.getNode(e);
                  const n = e.type === "focusin";
                  if (!n && t && x(e.target).is("a")) {
                    t.debug("Ignored focusout on embedded <a> element.");
                  } else {
                    if (n) {
                      if (o._getExpiringValue("focusin")) {
                        return void o.debug("Ignored double focusin.");
                      }
                      o._setExpiringValue("focusin", !0, 50),
                        t ||
                          ((t = o._getExpiringValue("mouseDownNode")) &&
                            o.debug(
                              "Reconstruct mouse target for focusin from recent event.",
                            ));
                    }
                    t
                      ? o._callHook("nodeSetFocus", o._makeHookContext(t, e), n)
                      : o.tbody &&
                          x(e.target).parents(
                            "table.fancytree-container > thead",
                          ).length
                        ? o.debug("Ignore focus event outside table body.", e)
                        : o._callHook("treeSetFocus", o, n);
                  }
                })
                .on("selectstart" + e, "span.fancytree-title", function (e) {
                  e.preventDefault();
                })
                .on("keydown" + e, function (e) {
                  if (a.disabled || !1 === a.keyboard) return !0;
                  let t;
                  const n = o.focusNode;
                  const i = o._makeHookContext(n || o, e);
                  const r = o.phase;
                  try {
                    return (
                      (o.phase = "userEvent"),
                      (t = n
                        ? o._triggerNodeEvent("keydown", n, e)
                        : o._triggerTreeEvent("keydown", e)) === "preventNav"
                        ? (t = !0)
                        : !1 !== t && (t = o._callHook("nodeKeydown", i)),
                      t
                    );
                  } finally {
                    o.phase = r;
                  }
                })
                .on("mousedown" + e, function (e) {
                  const t = S.getEventTarget(e);
                  (o._lastMousedownNode = t ? t.node : null),
                    o._setExpiringValue("mouseDownNode", o._lastMousedownNode);
                })
                .on("click" + e + " dblclick" + e, function (e) {
                  if (a.disabled) return !0;
                  let t;
                  const n = S.getEventTarget(e);
                  const i = n.node;
                  const r = s.tree;
                  const o = r.phase;
                  if (!i) return !0;
                  t = r._makeHookContext(i, e);
                  try {
                    switch (((r.phase = "userEvent"), e.type)) {
                      case "click":
                        return (
                          (t.targetType = n.type),
                          i.isPagingNode()
                            ? !0 === r._triggerNodeEvent("clickPaging", t, e)
                            : !1 !== r._triggerNodeEvent("click", t, e) &&
                              r._callHook("nodeClick", t)
                        );
                      case "dblclick":
                        return (
                          (t.targetType = n.type),
                          !1 !== r._triggerNodeEvent("dblclick", t, e) &&
                            r._callHook("nodeDblclick", t)
                        );
                    }
                  } finally {
                    r.phase = o;
                  }
                });
          },
          getActiveNode: function () {
            return (
              this._deprecationWarning("getActiveNode"), this.tree.activeNode
            );
          },
          getNodeByKey: function (e) {
            return (
              this._deprecationWarning("getNodeByKey"),
              this.tree.getNodeByKey(e)
            );
          },
          getRootNode: function () {
            return this._deprecationWarning("getRootNode"), this.tree.rootNode;
          },
          getTree: function () {
            return this._deprecationWarning("getTree"), this.tree;
          },
        }),
        (S = x.ui.fancytree),
        x.extend(x.ui.fancytree, {
          version: "2.38.1",
          buildType: "production",
          debugLevel: 3,
          _nextId: 1,
          _nextNodeKey: 1,
          _extensions: {},
          _FancytreeClass: l,
          _FancytreeNodeClass: u,
          jquerySupports: { positionMyOfs: t(x.ui.version, 1, 9) },
          assert: function (e, t) {
            return w(e, t);
          },
          createTree: function (e, t) {
            const n = x(e).fancytree(t);
            return S.getTree(n);
          },
          debounce: function (t, n, i, r) {
            let o;
            return (
              arguments.length === 3 &&
                typeof i !== "boolean" &&
                ((r = i), (i = !1)),
              function () {
                const e = arguments;
                (r = r || this),
                  i && !o && n.apply(r, e),
                  clearTimeout(o),
                  (o = setTimeout(function () {
                    i || n.apply(r, e), (o = null);
                  }, t));
              }
            );
          },
          debug: function () {
            x.ui.fancytree.debugLevel >= 4 && e("log", arguments);
          },
          error: function () {
            x.ui.fancytree.debugLevel >= 1 && e("error", arguments);
          },
          escapeHtml: function (e) {
            return ("" + e).replace(r, function (e) {
              return j[e];
            });
          },
          fixPositionOptions: function (e) {
            if (
              ((e.offset || ("" + e.my + e.at).indexOf("%") >= 0) &&
                x.error(
                  "expected new position syntax (but '%' is not supported)",
                ),
              !x.ui.fancytree.jquerySupports.positionMyOfs)
            ) {
              const t = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(e.my);
              const n = /(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(e.at);
              const i = (t[2] ? +t[2] : 0) + (n[2] ? +n[2] : 0);
              const r = (t[4] ? +t[4] : 0) + (n[4] ? +n[4] : 0);
              (e = x.extend({}, e, {
                my: t[1] + " " + t[3],
                at: n[1] + " " + n[3],
              })),
                (i || r) && (e.offset = i + " " + r);
            }
            return e;
          },
          getEventTarget: function (e) {
            let t;
            const n = e && e.target ? e.target.className : "";
            const i = { node: this.getNode(e.target), type: undefined };
            return (
              /\bfancytree-title\b/.test(n)
                ? (i.type = "title")
                : /\bfancytree-expander\b/.test(n)
                  ? (i.type =
                      !1 === i.node.hasChildren() ? "prefix" : "expander")
                  : /\bfancytree-checkbox\b/.test(n)
                    ? (i.type = "checkbox")
                    : /\bfancytree(-custom)?-icon\b/.test(n)
                      ? (i.type = "icon")
                      : /\bfancytree-node\b/.test(n)
                        ? (i.type = "title")
                        : e &&
                          e.target &&
                          ((t = x(e.target)).is("ul[role=group]")
                            ? (((i.node && i.node.tree) || S).debug(
                                "Ignoring click on outer UL.",
                              ),
                              (i.node = null))
                            : t.closest(".fancytree-title").length
                              ? (i.type = "title")
                              : t.closest(".fancytree-checkbox").length
                                ? (i.type = "checkbox")
                                : t.closest(".fancytree-expander").length &&
                                  (i.type = "expander")),
              i
            );
          },
          getEventTargetType: function (e) {
            return this.getEventTarget(e).type;
          },
          getNode: function (e) {
            if (e instanceof u) return e;
            for (
              e instanceof x
                ? (e = e[0])
                : e.originalEvent !== undefined && (e = e.target);
              e;

            ) {
              if (e.ftnode) return e.ftnode;
              e = e.parentNode;
            }
            return null;
          },
          getTree: function (e) {
            let t;
            const n = e;
            return e instanceof l
              ? e
              : (e === undefined && (e = 0),
                typeof e === "number"
                  ? (e = x(".fancytree-container").eq(e))
                  : typeof e === "string"
                    ? (e = x("#ft-id-" + n).eq(0)).length || (e = x(n).eq(0))
                    : e instanceof Element || e instanceof HTMLDocument
                      ? (e = x(e))
                      : e instanceof x
                        ? (e = e.eq(0))
                        : e.originalEvent !== undefined && (e = x(e.target)),
                (t =
                  (e = e.closest(":ui-fancytree")).data("ui-fancytree") ||
                  e.data("fancytree"))
                  ? t.tree
                  : null);
          },
          evalOption: function (e, t, n, i, r) {
            let o;
            let s;
            const a = t.tree;
            const l = i[e];
            const c = n[e];
            return (
              f(l)
                ? ((o = {
                    node: t,
                    tree: a,
                    widget: a.widget,
                    options: a.widget.options,
                    typeInfo: a.types[t.type] || {},
                  }),
                  (s = l.call(a, { type: e }, o)) == null && (s = c))
                : (s = c == null ? l : c),
              s == null && (s = r),
              s
            );
          },
          setSpanIcon: function (e, t, n) {
            const i = x(e);
            typeof n === "string"
              ? i.attr("class", t + " " + n)
              : (n.text
                  ? i.text("" + n.text)
                  : n.html && (e.innerHTML = n.html),
                i.attr("class", t + " " + (n.addClass || "")));
          },
          eventToString: function (e) {
            const t = e.which;
            const n = e.type;
            const i = [];
            return (
              e.altKey && i.push("alt"),
              e.ctrlKey && i.push("ctrl"),
              e.metaKey && i.push("meta"),
              e.shiftKey && i.push("shift"),
              n === "click" || n === "dblclick"
                ? i.push(A[e.button] + n)
                : n === "wheel"
                  ? i.push(n)
                  : N[t] ||
                    i.push(E[t] || String.fromCharCode(t).toLowerCase()),
              i.join("+")
            );
          },
          info: function () {
            x.ui.fancytree.debugLevel >= 3 && e("info", arguments);
          },
          keyEventToString: function (e) {
            return (
              this.warn(
                "keyEventToString() is deprecated: use eventToString()",
              ),
              this.eventToString(e)
            );
          },
          overrideMethod: function (e, t, n, i) {
            let r;
            const o = e[t] || x.noop;
            e[t] = function () {
              const e = i || this;
              try {
                return (r = e._super), (e._super = o), n.apply(e, arguments);
              } finally {
                e._super = r;
              }
            };
          },
          parseHtml: function (s) {
            let a;
            let l;
            let c;
            let u;
            let d;
            let h;
            let p;
            let f;
            const e = s.find(">li");
            const g = [];
            return (
              e.each(function () {
                let e;
                let t;
                const n = x(this);
                const i = n.find(">span", this).first();
                const r = i.length ? null : n.find(">a").first();
                const o = { tooltip: null, data: {} };
                for (
                  i.length
                    ? (o.title = i.html())
                    : r && r.length
                      ? ((o.title = r.html()),
                        (o.data.href = r.attr("href")),
                        (o.data.target = r.attr("target")),
                        (o.tooltip = r.attr("title")))
                      : ((o.title = n.html()),
                        (d = o.title.search(/<ul/i)) >= 0 &&
                          (o.title = o.title.substring(0, d))),
                    o.title = m(o.title),
                    u = 0,
                    h = M.length;
                  u < h;
                  u++
                ) {
                  o[M[u]] = undefined;
                }
                for (
                  a = this.className.split(" "), c = [], u = 0, h = a.length;
                  u < h;
                  u++
                ) {
                  (l = a[u]), O[l] ? (o[l] = !0) : c.push(l);
                }
                if (
                  ((o.extraClasses = c.join(" ")),
                  (p = n.attr("title")) && (o.tooltip = p),
                  (p = n.attr("id")) && (o.key = p),
                  n.attr("hideCheckbox") && (o.checkbox = !1),
                  (e = b(n)) && !x.isEmptyObject(e))
                ) {
                  for (t in H) v(e, t) && ((e[H[t]] = e[t]), delete e[t]);
                  for (u = 0, h = F.length; u < h; u++) {
                    (p = F[u]), (f = e[p]) != null && (delete e[p], (o[p] = f));
                  }
                  x.extend(o.data, e);
                }
                (s = n.find(">ul").first()).length
                  ? (o.children = x.ui.fancytree.parseHtml(s))
                  : (o.children = o.lazy ? undefined : null),
                  g.push(o);
              }),
              g
            );
          },
          registerExtension: function (e) {
            w(e.name != null, "extensions must have a `name` property."),
              w(
                e.version != null,
                "extensions must have a `version` property.",
              ),
              (x.ui.fancytree._extensions[e.name] = e);
          },
          trim: m,
          unescapeHtml: function (e) {
            const t = document.createElement("div");
            return (
              (t.innerHTML = e),
              t.childNodes.length === 0 ? "" : t.childNodes[0].nodeValue
            );
          },
          warn: function () {
            x.ui.fancytree.debugLevel >= 2 && e("warn", arguments);
          },
        }),
        x.ui.fancytree
      );
    }
    x.ui.fancytree.warn("Fancytree: ignored duplicate include");
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (c) {
    "use strict";
    function t() {
      let e;
      const t = navigator.appName;
      const n = navigator.userAgent;
      let i = n.match(
        /(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i,
      );
      return (
        i && (e = n.match(/version\/([.\d]+)/i)) !== null && (i[2] = e[1]),
        (i = i ? [i[1], i[2]] : [t, navigator.appVersion, "-?"]).join(", ")
      );
    }
    function o(e, t) {
      let n;
      const i = this;
      const r = t.options.logger;
      const o = t.tree;
      const s = t.node || o;
      const a = u + "event." + e.type + " (" + s + ")";
      return !r.traceEvents ||
        (!0 !== r.traceEvents && c.inArray(name, r.traceEvents) < 0)
        ? i._super.apply(i, arguments)
        : ((i._super && !0 === r.timings) ||
          (r.timings && c.inArray(name, r.timings) >= 0)
            ? (window.console.time(a),
              (n = i._super.apply(i, arguments)),
              window.console.timeEnd(a))
            : (d(a, e, t), (n = i._super.apply(i, arguments))),
          n);
    }
    function s(e, t, n, i) {
      let r;
      const o = n[0];
      const s = o.options.logger;
      const a = o.node || o.tree;
      const l = u + "hook." + e + " (" + a + ")";
      return !s.traceHooks ||
        (!0 !== s.traceHooks && c.inArray(e, s.traceHooks) < 0)
        ? t._superApply.call(t, n)
        : (!0 === s.timings || (s.timings && c.inArray(e, s.timings) >= 0)
            ? (window.console.time(l),
              (r = t._superApply.call(t, n)),
              window.console.timeEnd(l))
            : (i ? d(l, i, o) : d(l, o), (r = t._superApply.call(t, n))),
          r);
    }
    let e;
    const n = c.ui.fancytree;
    var u = "ft-logger: ";
    var d = window.console.log;
    const i =
      "beforeRestore beforeUpdateViewport blurTree create init focusTree preInit restore updateViewport".split(
        " ",
      );
    const r =
      "activate activateCell beforeActivate beforeExpand beforeSelect blur click collapse createNode dblclick deactivate defaultGridAction expand enhanceTitle focus keydown keypress lazyLoad loadChildren loadError modifyChild postProcess renderNode renderTitle select".split(
        " ",
      );
    const a = i.concat(r);
    const l = {};
    for (e = 0; e < a.length; e++) l[a[e]] = !0;
    return (
      c.ui.fancytree.registerExtension({
        name: "logger",
        version: "2.38.1",
        options: {
          logTarget: null,
          traceEvents: !0,
          traceUnhandledEvents: !1,
          traceHooks: !1,
          timings: !1,
        },
        treeCreate: function (n) {
          function i(e, t) {
            d(u + "event." + e.type + " (unhandled)", e, t);
          }
          const e = n.tree;
          const r = n.options;
          if (
            this.options.extensions[this.options.extensions.length - 1] !==
            "logger"
          ) {
            throw Error(
              "Fancytree 'logger' extension must be listed as last entry.",
            );
          }
          return (
            e.warn(
              "Fancytree logger extension is enabled (this may be slow).",
              r.logger,
            ),
            e.debug(
              "Fancytree v" +
                c.ui.fancytree.version +
                ", buildType='" +
                c.ui.fancytree.buildType +
                "'",
            ),
            e.debug(
              "jQuery UI " +
                jQuery.ui.version +
                " (uiBackCompat=" +
                c.uiBackCompat +
                ")",
            ),
            e.debug("jQuery " + jQuery.fn.jquery),
            e.debug("Browser: " + t()),
            c.each(a, function (e, t) {
              typeof r[t] === "function"
                ? c.ui.fancytree.overrideMethod(r, t, o, n.widget)
                : r.logger.traceUnhandledEvents && (r[t] = i);
            }),
            s("treeCreate", this, arguments)
          );
        },
        nodeClick: function (e) {
          return s(
            "nodeClick",
            this,
            arguments,
            n.eventToString(e.originalEvent),
          );
        },
        nodeCollapseSiblings: function () {
          return s("nodeCollapseSiblings", this, arguments);
        },
        nodeDblclick: function () {
          return s("nodeDblclick", this, arguments);
        },
        nodeKeydown: function (e) {
          return s(
            "nodeKeydown",
            this,
            arguments,
            n.eventToString(e.originalEvent),
          );
        },
        nodeLoadChildren: function () {
          return s("nodeLoadChildren", this, arguments);
        },
        nodeRemoveChildMarkup: function () {
          return s("nodeRemoveChildMarkup", this, arguments);
        },
        nodeRemoveMarkup: function () {
          return s("nodeRemoveMarkup", this, arguments);
        },
        nodeRender: function () {
          return s("nodeRender", this, arguments);
        },
        nodeRenderStatus: function () {
          return s("nodeRenderStatus", this, arguments);
        },
        nodeRenderTitle: function () {
          return s("nodeRenderTitle", this, arguments);
        },
        nodeSetActive: function () {
          return s("nodeSetActive", this, arguments);
        },
        nodeSetExpanded: function () {
          return s("nodeSetExpanded", this, arguments);
        },
        nodeSetFocus: function () {
          return s("nodeSetFocus", this, arguments);
        },
        nodeSetSelected: function () {
          return s("nodeSetSelected", this, arguments);
        },
        nodeSetStatus: function () {
          return s("nodeSetStatus", this, arguments);
        },
        nodeToggleExpanded: function () {
          return s("nodeToggleExpanded", this, arguments);
        },
        nodeToggleSelected: function () {
          return s("nodeToggleSelected", this, arguments);
        },
        treeClear: function () {
          return s("treeClear", this, arguments);
        },
        treeDestroy: function () {
          return s("treeDestroy", this, arguments);
        },
        treeInit: function () {
          return s("treeInit", this, arguments);
        },
        treeLoad: function () {
          return s("treeLoad", this, arguments);
        },
        treeRegisterNode: function () {
          return s("treeRegisterNode", this, arguments);
        },
        treeSetFocus: function () {
          return s("treeSetFocus", this, arguments);
        },
        treeSetOption: function () {
          return s("treeSetOption", this, arguments);
        },
        treeStructureChanged: function () {
          return s("treeStructureChanged", this, arguments);
        },
      }),
      c.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (s) {
    "use strict";
    return (
      s.ui.fancytree.registerExtension({
        name: "menu",
        version: "2.38.1",
        options: {
          enable: !0,
          selector: null,
          position: {},
          create: s.noop,
          beforeOpen: s.noop,
          open: s.noop,
          focus: s.noop,
          select: s.noop,
          close: s.noop,
        },
        treeInit: function (i) {
          const r = i.options;
          const o = i.tree;
          this._superApply(arguments),
            (o.ext.menu.data = {
              tree: o,
              node: null,
              $menu: null,
              menuId: null,
            }),
            o.$container.on("contextmenu", "span.fancytree-node", function (e) {
              const t = s.ui.fancytree.getNode(e);
              const n = {
                node: t,
                tree: t.tree,
                originalEvent: e,
                options: o.options,
              };
              return o.ext.menu._openMenu(n), !1;
            }),
            s(r.menu.selector)
              .menu({
                create: function (e) {
                  o.ext.menu.data.$menu = s(this).menu("widget");
                  const t = s.extend({}, o.ext.menu.data);
                  r.menu.create.call(o, e, t);
                },
                focus: function (e, t) {
                  const n = s.extend({}, o.ext.menu.data, {
                    menuItem: t.item,
                    menuId: t.item.find(">a").attr("href"),
                  });
                  r.menu.focus.call(o, e, n);
                },
                select: function (e, t) {
                  const n = s.extend({}, o.ext.menu.data, {
                    menuItem: t.item,
                    menuId: t.item.find(">a").attr("href"),
                  });
                  !1 !== r.menu.select.call(o, e, n) &&
                    o.ext.menu._closeMenu(i);
                },
              })
              .hide();
        },
        treeDestroy: function () {
          this._superApply(arguments);
        },
        _openMenu: function (t) {
          let e;
          const n = t.tree;
          const i = t.options;
          const r = s(i.menu.selector);
          (n.ext.menu.data.node = t.node),
            (e = s.extend({}, n.ext.menu.data)),
            !1 !== i.menu.beforeOpen.call(n, t.originalEvent, e) &&
              (s(document)
                .on("keydown.fancytree", function (e) {
                  e.which === s.ui.keyCode.ESCAPE && n.ext.menu._closeMenu(t);
                })
                .on("mousedown.fancytree", function (e) {
                  s(e.target).closest(".ui-menu-item").length === 0 &&
                    n.ext.menu._closeMenu(t);
                }),
              r
                .css("position", "absolute")
                .show()
                .position({
                  my: "left top",
                  at: "right top",
                  of: t.originalEvent,
                  collision: "fit",
                })
                .focus(),
              i.menu.open.call(n, t.originalEvent, e));
        },
        _closeMenu: function (e) {
          let t;
          const n = e.tree;
          const i = e.options;
          const r = s.extend({}, n.ext.menu.data);
          !1 !== i.menu.close.call(n, e.originalEvent, r) &&
            ((t = s(i.menu.selector)),
            s(document).off("keydown.fancytree, mousedown.fancytree"),
            t.hide(),
            (n.ext.menu.data.node = null));
        },
      }),
      s.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (s) {
    "use strict";
    return (
      s.ui.fancytree.registerExtension({
        name: "multi",
        version: "2.38.1",
        options: { allowNoSelect: !1, mode: "sameParent" },
        treeInit: function (e) {
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-multi"),
            e.options.selectMode === 1 &&
              s.error(
                "Fancytree ext-multi: selectMode: 1 (single) is not compatible.",
              );
        },
        nodeClick: function (e) {
          const t = e.tree;
          const n = e.node;
          const i = t.getActiveNode() || t.getFirstChild();
          const r = e.targetType === "checkbox";
          const o = e.targetType === "expander";
          switch (s.ui.fancytree.eventToString(e.originalEvent)) {
            case "click":
              if (o) break;
              r || (t.selectAll(!1), n.setSelected());
              break;
            case "shift+click":
              t.visitRows(
                function (e) {
                  if ((e.setSelected(), e === n)) return !1;
                },
                { start: i, reverse: i.isBelowOf(n) },
              );
              break;
            case "ctrl+click":
            case "meta+click":
              return void n.toggleSelected();
          }
          return this._superApply(arguments);
        },
        nodeKeydown: function (e) {
          const t = e.tree;
          const n = e.node;
          const i = e.originalEvent;
          switch (s.ui.fancytree.eventToString(i)) {
            case "up":
            case "down":
              t.selectAll(!1),
                n.navigate(i.which, !0),
                t.getActiveNode().setSelected();
              break;
            case "shift+up":
            case "shift+down":
              n.navigate(i.which, !0), t.getActiveNode().setSelected();
          }
          return this._superApply(arguments);
        },
      }),
      s.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (p) {
    "use strict";
    function f(e, t, n, i, r) {
      let o;
      let s;
      let a;
      let l;
      let c = !1;
      const u = e.options.persist.expandOpts;
      const d = [];
      const h = [];
      for (
        n = n || [], r = r || p.Deferred(), o = 0, a = n.length;
        o < a;
        o++
      ) {
        (s = n[o]),
          (l = e.getNodeByKey(s))
            ? i && l.isUndefined()
              ? ((c = !0),
                e.debug("_loadLazyNodes: " + l + " is lazy: loading..."),
                i === "expand"
                  ? d.push(l.setExpanded(!0, u))
                  : d.push(l.load()))
              : (e.debug("_loadLazyNodes: " + l + " already loaded."),
                l.setExpanded(!0, u))
            : (h.push(s),
              e.debug("_loadLazyNodes: " + l + " was not yet found."));
      }
      return (
        p.when.apply(p, d).always(function () {
          if (c && h.length > 0) f(e, t, h, i, r);
          else {
            if (h.length) {
              for (
                e.warn("_loadLazyNodes: could not load those keys: ", h),
                  o = 0,
                  a = h.length;
                o < a;
                o++
              ) {
                (s = n[o]), t._appendKey(g, n[o], !1);
              }
            }
            r.resolve();
          }
        }),
        r
      );
    }
    let t = null;
    let n = null;
    let i = null;
    const r = p.ui.fancytree.assert;
    const u = "active";
    var g = "expanded";
    const d = "focus";
    const h = "selected";
    try {
      r(window.localStorage && window.localStorage.getItem),
        (n = {
          get: function (e) {
            return window.localStorage.getItem(e);
          },
          set: function (e, t) {
            window.localStorage.setItem(e, t);
          },
          remove: function (e) {
            window.localStorage.removeItem(e);
          },
        });
    } catch (e) {
      p.ui.fancytree.warn("Could not access window.localStorage", e);
    }
    try {
      r(window.sessionStorage && window.sessionStorage.getItem),
        (i = {
          get: function (e) {
            return window.sessionStorage.getItem(e);
          },
          set: function (e, t) {
            window.sessionStorage.setItem(e, t);
          },
          remove: function (e) {
            window.sessionStorage.removeItem(e);
          },
        });
    } catch (e) {
      p.ui.fancytree.warn("Could not access window.sessionStorage", e);
    }
    return (
      typeof Cookies === "function"
        ? (t = {
            get: Cookies.get,
            set: function (e, t) {
              Cookies.set(e, t, this.options.persist.cookie);
            },
            remove: Cookies.remove,
          })
        : p &&
          typeof p.cookie === "function" &&
          (t = {
            get: p.cookie,
            set: function (e, t) {
              p.cookie.set(e, t, this.options.persist.cookie);
            },
            remove: p.removeCookie,
          }),
      (p.ui.fancytree._FancytreeClass.prototype.clearPersistData = function (
        e,
      ) {
        const t = this.ext.persist;
        const n = t.cookiePrefix;
        (e = e || "active expanded focus selected").indexOf(u) >= 0 &&
          t._data(n + u, null),
          e.indexOf(g) >= 0 && t._data(n + g, null),
          e.indexOf(d) >= 0 && t._data(n + d, null),
          e.indexOf(h) >= 0 && t._data(n + h, null);
      }),
      (p.ui.fancytree._FancytreeClass.prototype.clearCookies = function (e) {
        return (
          this.warn(
            "'tree.clearCookies()' is deprecated since v2.27.0: use 'clearPersistData()' instead.",
          ),
          this.clearPersistData(e)
        );
      }),
      (p.ui.fancytree._FancytreeClass.prototype.getPersistData = function () {
        const e = this.ext.persist;
        const t = e.cookiePrefix;
        const n = e.cookieDelimiter;
        const i = {};
        return (
          (i[u] = e._data(t + u)),
          (i[g] = (e._data(t + g) || "").split(n)),
          (i[h] = (e._data(t + h) || "").split(n)),
          (i[d] = e._data(t + d)),
          i
        );
      }),
      p.ui.fancytree.registerExtension({
        name: "persist",
        version: "2.38.1",
        options: {
          cookieDelimiter: "~",
          cookiePrefix: undefined,
          cookie: { raw: !1, expires: "", path: "", domain: "", secure: !1 },
          expandLazy: !1,
          expandOpts: undefined,
          fireActivate: !0,
          overrideSource: !0,
          store: "auto",
          types: "active expanded focus selected",
        },
        _data: function (e, t) {
          const n = this._local.store;
          if (t === undefined) return n.get.call(this, e);
          t === null ? n.remove.call(this, e) : n.set.call(this, e, t);
        },
        _appendKey: function (e, t, n) {
          t = "" + t;
          const i = this._local;
          const r = this.options.persist.cookieDelimiter;
          const o = i.cookiePrefix + e;
          const s = i._data(o);
          const a = s ? s.split(r) : [];
          const l = p.inArray(t, a);
          l >= 0 && a.splice(l, 1), n && a.push(t), i._data(o, a.join(r));
        },
        treeInit: function (e) {
          const s = e.tree;
          const a = e.options;
          const l = this._local;
          const c = this.options.persist;
          return (
            (l.cookiePrefix = c.cookiePrefix || "fancytree-" + s._id + "-"),
            (l.storeActive = c.types.indexOf(u) >= 0),
            (l.storeExpanded = c.types.indexOf(g) >= 0),
            (l.storeSelected = c.types.indexOf(h) >= 0),
            (l.storeFocus = c.types.indexOf(d) >= 0),
            (l.store = null),
            c.store === "auto" && (c.store = n ? "local" : "cookie"),
            p.isPlainObject(c.store)
              ? (l.store = c.store)
              : c.store === "cookie"
                ? (l.store = t)
                : c.store === "local"
                  ? (l.store = c.store === "local" ? n : i)
                  : c.store === "session" &&
                    (l.store = c.store === "local" ? n : i),
            r(l.store, "Need a valid store."),
            s.$div.on("fancytreeinit", function () {
              if (!1 !== s._triggerTreeEvent("beforeRestore", null, {})) {
                let e;
                let t;
                let n;
                let i;
                const r = l._data(l.cookiePrefix + d);
                const o = !1 === c.fireActivate;
                (e = l._data(l.cookiePrefix + g)),
                  (n = e && e.split(c.cookieDelimiter)),
                  (l.storeExpanded
                    ? f(s, l, n, !!c.expandLazy && "expand", null)
                    : new p.Deferred().resolve()
                  ).done(function () {
                    if (l.storeSelected) {
                      if ((e = l._data(l.cookiePrefix + h))) {
                        for (
                          n = e.split(c.cookieDelimiter), t = 0;
                          t < n.length;
                          t++
                        ) {
                          (i = s.getNodeByKey(n[t]))
                            ? (i.selected === undefined ||
                                (c.overrideSource && !1 === i.selected)) &&
                              ((i.selected = !0), i.renderStatus())
                            : l._appendKey(h, n[t], !1);
                        }
                      }
                      s.options.selectMode === 3 &&
                        s.visit(function (e) {
                          if (e.selected) {
                            return e.fixSelection3AfterClick(), "skip";
                          }
                        });
                    }
                    l.storeActive &&
                      (!(e = l._data(l.cookiePrefix + u)) ||
                        (!a.persist.overrideSource && s.activeNode) ||
                        ((i = s.getNodeByKey(e)) &&
                          (i.debug("persist: set active", e),
                          i.setActive(!0, { noFocus: !0, noEvents: o })))),
                      l.storeFocus &&
                        r &&
                        (i = s.getNodeByKey(r)) &&
                        (s.options.titlesTabbable
                          ? p(i.span).find(".fancytree-title").focus()
                          : p(s.$container).focus()),
                      s._triggerTreeEvent("restore", null, {});
                  });
              }
            }),
            this._superApply(arguments)
          );
        },
        nodeSetActive: function (e, t) {
          let n;
          const i = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            i.storeActive &&
              i._data(
                i.cookiePrefix + u,
                this.activeNode ? this.activeNode.key : null,
              ),
            n
          );
        },
        nodeSetExpanded: function (e, t) {
          let n;
          const i = e.node;
          const r = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            r.storeExpanded && r._appendKey(g, i.key, t),
            n
          );
        },
        nodeSetFocus: function (e, t) {
          let n;
          const i = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            i.storeFocus &&
              i._data(
                i.cookiePrefix + d,
                this.focusNode ? this.focusNode.key : null,
              ),
            n
          );
        },
        nodeSetSelected: function (e, t) {
          let n;
          let i;
          const r = e.tree;
          const o = e.node;
          const s = this._local;
          return (
            (t = !1 !== t),
            (n = this._superApply(arguments)),
            s.storeSelected &&
              (r.options.selectMode === 3
                ? ((i = (i = p.map(r.getSelectedNodes(!0), function (e) {
                    return e.key;
                  })).join(e.options.persist.cookieDelimiter)),
                  s._data(s.cookiePrefix + h, i))
                : s._appendKey(h, o.key, o.selected)),
            n
          );
        },
      }),
      p.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (v) {
    "use strict";
    function y(e, t) {
      e.insertBefore(t, e.firstChild);
    }
    function b(e, t) {
      e.parentNode.insertBefore(t, e.nextSibling);
    }
    function _(e, n) {
      e.visit(function (e) {
        const t = e.tr;
        if (
          (t && (t.style.display = e.hide || !n ? "none" : ""), !e.expanded)
        ) {
          return "skip";
        }
      });
    }
    function x(e) {
      let t;
      let n;
      const i = e.parent;
      const r = i ? i.children : null;
      if (r && r.length > 1 && r[0] !== e) {
        for (
          n = r[v.inArray(e, r) - 1], w(n.tr);
          n.children &&
          n.children.length &&
          (t = n.children[n.children.length - 1]).tr;

        ) {
          n = t;
        }
      } else n = i;
      return n;
    }
    var w = v.ui.fancytree.assert;
    return (
      v.ui.fancytree.registerExtension({
        name: "table",
        version: "2.38.1",
        options: {
          checkboxColumnIdx: null,
          indentation: 16,
          mergeStatusColumns: !0,
          nodeColumnIdx: 0,
        },
        treeInit: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = e.tree;
          const s = e.options;
          const a = s.table;
          const l = o.widget.element;
          if (
            (a.customStatus != null &&
              (s.renderStatusColumns == null
                ? (o.warn(
                    "The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' instead.",
                  ),
                  (s.renderStatusColumns = a.customStatus))
                : v.error(
                    "The 'customStatus' option is deprecated since v2.15.0. Use 'renderStatusColumns' only instead.",
                  )),
            s.renderStatusColumns &&
              !0 === s.renderStatusColumns &&
              (s.renderStatusColumns = s.renderColumns),
            l.addClass("fancytree-container fancytree-ext-table"),
            (r = l.find(">tbody")).length ||
              (l.find(">tr").length &&
                v.error(
                  "Expected table > tbody > tr. If you see this please open an issue.",
                ),
              (r = v("<tbody>").appendTo(l))),
            (o.tbody = r[0]),
            (o.columnCount = v("thead >tr", l).last().find(">th", l).length),
            (i = r.children("tr").first()).length)
          ) {
            (n = i.children("td").length),
              o.columnCount &&
                n !== o.columnCount &&
                (o.warn(
                  "Column count mismatch between thead (" +
                    o.columnCount +
                    ") and tbody (" +
                    n +
                    "): using tbody.",
                ),
                (o.columnCount = n)),
              (i = i.clone());
          } else {
            for (
              w(
                o.columnCount >= 1,
                "Need either <thead> or <tbody> with <td> elements to determine column count.",
              ),
                i = v("<tr />"),
                t = 0;
              t < o.columnCount;
              t++
            ) {
              i.append("<td />");
            }
          }
          i
            .find(">td")
            .eq(a.nodeColumnIdx)
            .html("<span class='fancytree-node' />"),
            s.aria &&
              (i.attr("role", "row"), i.find("td").attr("role", "gridcell")),
            (o.rowFragment = document.createDocumentFragment()),
            o.rowFragment.appendChild(i.get(0)),
            r.empty(),
            (o.statusClassPropName = "tr"),
            (o.ariaPropName = "tr"),
            (this.nodeContainerAttrName = "tr"),
            (o.$container = l),
            this._superApply(arguments),
            v(o.rootNode.ul).remove(),
            (o.rootNode.ul = null),
            this.$container.attr("tabindex", s.tabindex),
            s.aria &&
              o.$container.attr("role", "treegrid").attr("aria-readonly", !0);
        },
        nodeRemoveChildMarkup: function (e) {
          e.node.visit(function (e) {
            e.tr && (v(e.tr).remove(), (e.tr = null));
          });
        },
        nodeRemoveMarkup: function (e) {
          const t = e.node;
          t.tr && (v(t.tr).remove(), (t.tr = null)),
            this.nodeRemoveChildMarkup(e);
        },
        nodeRender: function (e, t, n, i, r) {
          let o;
          let s;
          let a;
          let l;
          let c;
          let u;
          let d;
          let h;
          const p = e.tree;
          const f = e.node;
          const g = e.options;
          const m = !f.parent;
          if (!1 !== p._enableUpdate) {
            if (
              (r || (e.hasCollapsedParents = f.parent && !f.parent.expanded),
              !m)
            ) {
              if ((f.tr && t && this.nodeRemoveMarkup(e), f.tr)) {
                t ? this.nodeRenderTitle(e) : this.nodeRenderStatus(e);
              } else {
                if (e.hasCollapsedParents && !n) return;
                (c = p.rowFragment.firstChild.cloneNode(!0)),
                  (u = x(f)),
                  w(u),
                  !0 === i && r
                    ? (c.style.display = "none")
                    : n && e.hasCollapsedParents && (c.style.display = "none"),
                  u.tr
                    ? b(u.tr, c)
                    : (w(
                        !u.parent,
                        "prev. row must have a tr, or be system root",
                      ),
                      y(p.tbody, c)),
                  (f.tr = c),
                  f.key && g.generateIds && (f.tr.id = g.idPrefix + f.key),
                  ((f.tr.ftnode = f).span = v("span.fancytree-node", f.tr).get(
                    0,
                  )),
                  this.nodeRenderTitle(e),
                  g.createNode &&
                    g.createNode.call(p, { type: "createNode" }, e);
              }
            }
            if (
              (g.renderNode && g.renderNode.call(p, { type: "renderNode" }, e),
              (o = f.children) && (m || n || f.expanded))
            ) {
              for (a = 0, l = o.length; a < l; a++) {
                ((h = v.extend({}, e, { node: o[a] })).hasCollapsedParents =
                  h.hasCollapsedParents || !f.expanded),
                  this.nodeRender(h, t, n, i, !0);
              }
            }
            o &&
              !r &&
              ((d = f.tr || null),
              (s = p.tbody.firstChild),
              f.visit(function (e) {
                if (e.tr) {
                  if (
                    (e.parent.expanded ||
                      e.tr.style.display === "none" ||
                      ((e.tr.style.display = "none"), _(e, !1)),
                    e.tr.previousSibling !== d)
                  ) {
                    f.debug("_fixOrder: mismatch at node: " + e);
                    const t = d ? d.nextSibling : s;
                    p.tbody.insertBefore(e.tr, t);
                  }
                  d = e.tr;
                }
              }));
          }
        },
        nodeRenderTitle: function (e, t) {
          let n;
          let i;
          const r = e.tree;
          const o = e.node;
          const s = e.options;
          const a = o.isStatusNode();
          return (
            (i = this._super(e, t)),
            o.isRootNode() ||
              (s.checkbox &&
                !a &&
                s.table.checkboxColumnIdx != null &&
                ((n = v("span.fancytree-checkbox", o.span)),
                v(o.tr).find("td").eq(+s.table.checkboxColumnIdx).html(n)),
              this.nodeRenderStatus(e),
              a
                ? s.renderStatusColumns
                  ? s.renderStatusColumns.call(
                      r,
                      { type: "renderStatusColumns" },
                      e,
                    )
                  : s.table.mergeStatusColumns &&
                    o.isTopLevel() &&
                    v(o.tr)
                      .find(">td")
                      .eq(0)
                      .prop("colspan", r.columnCount)
                      .text(o.title)
                      .addClass("fancytree-status-merged")
                      .nextAll()
                      .remove()
                : s.renderColumns &&
                  s.renderColumns.call(r, { type: "renderColumns" }, e)),
            i
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          const n = e.node;
          const i = e.options;
          this._super(e),
            v(n.tr).removeClass("fancytree-node"),
            (t = (n.getLevel() - 1) * i.table.indentation),
            i.rtl
              ? v(n.span).css({ paddingRight: t + "px" })
              : v(n.span).css({ paddingLeft: t + "px" });
        },
        nodeSetExpanded: function (t, n, i) {
          function e(e) {
            _(t.node, n),
              e
                ? n &&
                  t.options.autoScroll &&
                  !i.noAnimation &&
                  t.node.hasChildren()
                  ? t.node
                      .getLastChild()
                      .scrollIntoView(!0, { topNode: t.node })
                      .always(function () {
                        i.noEvents ||
                          t.tree._triggerNodeEvent(
                            n ? "expand" : "collapse",
                            t,
                          ),
                          r.resolveWith(t.node);
                      })
                  : (i.noEvents ||
                      t.tree._triggerNodeEvent(n ? "expand" : "collapse", t),
                    r.resolveWith(t.node))
                : (i.noEvents ||
                    t.tree._triggerNodeEvent(n ? "expand" : "collapse", t),
                  r.rejectWith(t.node));
          }
          if (
            ((n = !1 !== n), (t.node.expanded && n) || (!t.node.expanded && !n))
          ) {
            return this._superApply(arguments);
          }
          var r = new v.Deferred();
          const o = v.extend({}, i, { noEvents: !0, noAnimation: !0 });
          return (
            (i = i || {}),
            this._super(t, n, o)
              .done(function () {
                e(!0);
              })
              .fail(function () {
                e(!1);
              }),
            r.promise()
          );
        },
        nodeSetStatus: function (e, t) {
          if (t === "ok") {
            const n = e.node;
            const i = n.children ? n.children[0] : null;
            i && i.isStatusNode() && v(i.tr).remove();
          }
          return this._superApply(arguments);
        },
        treeClear: function () {
          return (
            this.nodeRemoveChildMarkup(this._makeHookContext(this.rootNode)),
            this._superApply(arguments)
          );
        },
        treeDestroy: function () {
          return (
            this.$container.find("tbody").empty(),
            this.$source && this.$source.removeClass("fancytree-helper-hidden"),
            this._superApply(arguments)
          );
        },
      }),
      v.ui.fancytree
    );
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (o) {
    "use strict";
    return (
      o.ui.fancytree.registerExtension({
        name: "themeroller",
        version: "2.38.1",
        options: {
          activeClass: "ui-state-active",
          addClass: "ui-corner-all",
          focusClass: "ui-state-focus",
          hoverClass: "ui-state-hover",
          selectedClass: "ui-state-highlight",
        },
        treeInit: function (e) {
          const t = e.widget.element;
          const i = e.options.themeroller;
          this._superApply(arguments),
            t[0].nodeName === "TABLE"
              ? (t.addClass("ui-widget ui-corner-all"),
                t.find(">thead tr").addClass("ui-widget-header"),
                t.find(">tbody").addClass("ui-widget-conent"))
              : t.addClass("ui-widget ui-widget-content ui-corner-all"),
            t.on("mouseenter mouseleave", ".fancytree-node", function (e) {
              const t = o.ui.fancytree.getNode(e.target);
              const n = e.type === "mouseenter";
              o(t.tr ? t.tr : t.span).toggleClass(
                i.hoverClass + " " + i.addClass,
                n,
              );
            });
        },
        treeDestroy: function (e) {
          this._superApply(arguments),
            e.widget.element.removeClass(
              "ui-widget ui-widget-content ui-corner-all",
            );
        },
        nodeRenderStatus: function (e) {
          const t = {};
          const n = e.node;
          const i = o(n.tr ? n.tr : n.span);
          const r = e.options.themeroller;
          this._super(e),
            (t[r.activeClass] = !1),
            (t[r.focusClass] = !1),
            (t[r.selectedClass] = !1),
            n.isActive() && (t[r.activeClass] = !0),
            n.hasFocus() && (t[r.focusClass] = !0),
            n.isSelected() && !n.isActive() && (t[r.selectedClass] = !0),
            i.toggleClass(r.activeClass, t[r.activeClass]),
            i.toggleClass(r.focusClass, t[r.focusClass]),
            i.toggleClass(r.selectedClass, t[r.selectedClass]),
            i.addClass(r.addClass);
        },
      }),
      o.ui.fancytree
    );
  }),
  (function (e) {
    "use strict";
    typeof define === "function" && define.amd
      ? define(["jquery"], e)
      : e(jQuery);
  })(function (T) {
    "use strict";
    T.ui = T.ui || {};
    T.ui.version = "1.13.0";
    let r;
    let n = 0;
    const s = Array.prototype.hasOwnProperty;
    const a = Array.prototype.slice;
    (T.cleanData =
      T.cleanData ||
      ((r = T.cleanData),
      function (e) {
        let t, n, i;
        for (i = 0; (n = e[i]) != null; i++) {
          (t = T._data(n, "events")) &&
            t.remove &&
            T(n).triggerHandler("remove");
        }
        r(e);
      })),
      (T.widget =
        T.widget ||
        function (e, n, t) {
          let i;
          let r;
          let o;
          const s = {};
          const a = e.split(".")[0];
          const l = a + "-" + (e = e.split(".")[1]);
          return (
            t || ((t = n), (n = T.Widget)),
            Array.isArray(t) && (t = T.extend.apply(null, [{}].concat(t))),
            (T.expr.pseudos[l.toLowerCase()] = function (e) {
              return !!T.data(e, l);
            }),
            (T[a] = T[a] || {}),
            (i = T[a][e]),
            (r = T[a][e] =
              function (e, t) {
                if (!this._createWidget) return new r(e, t);
                arguments.length && this._createWidget(e, t);
              }),
            T.extend(r, i, {
              version: t.version,
              _proto: T.extend({}, t),
              _childConstructors: [],
            }),
            ((o = new n()).options = T.widget.extend({}, o.options)),
            T.each(t, function (t, o) {
              s[t] =
                typeof o === "function"
                  ? (function () {
                      function i() {
                        return n.prototype[t].apply(this, arguments);
                      }
                      function r(e) {
                        return n.prototype[t].apply(this, e);
                      }
                      return function () {
                        let e;
                        const t = this._super;
                        const n = this._superApply;
                        return (
                          (this._super = i),
                          (this._superApply = r),
                          (e = o.apply(this, arguments)),
                          (this._super = t),
                          (this._superApply = n),
                          e
                        );
                      };
                    })()
                  : o;
            }),
            (r.prototype = T.widget.extend(
              o,
              { widgetEventPrefix: (i && o.widgetEventPrefix) || e },
              s,
              {
                constructor: r,
                namespace: a,
                widgetName: e,
                widgetFullName: l,
              },
            )),
            i
              ? (T.each(i._childConstructors, function (e, t) {
                  const n = t.prototype;
                  T.widget(n.namespace + "." + n.widgetName, r, t._proto);
                }),
                delete i._childConstructors)
              : n._childConstructors.push(r),
            T.widget.bridge(e, r),
            r
          );
        }),
      (T.widget.extend = function (e) {
        for (
          var t, n, i = a.call(arguments, 1), r = 0, o = i.length;
          r < o;
          r++
        ) {
          for (t in i[r]) {
            (n = i[r][t]),
              s.call(i[r], t) &&
                n !== undefined &&
                (T.isPlainObject(n)
                  ? (e[t] = T.isPlainObject(e[t])
                      ? T.widget.extend({}, e[t], n)
                      : T.widget.extend({}, n))
                  : (e[t] = n));
          }
        }
        return e;
      }),
      (T.widget.bridge = function (o, t) {
        const s = t.prototype.widgetFullName || o;
        T.fn[o] = function (n) {
          const e = typeof n === "string";
          const i = a.call(arguments, 1);
          let r = this;
          return (
            e
              ? this.length || n !== "instance"
                ? this.each(function () {
                    let e;
                    const t = T.data(this, s);
                    return n === "instance"
                      ? ((r = t), !1)
                      : t
                        ? typeof t[n] !== "function" || n.charAt(0) === "_"
                          ? T.error(
                              "no such method '" +
                                n +
                                "' for " +
                                o +
                                " widget instance",
                            )
                          : (e = t[n].apply(t, i)) !== t && e !== undefined
                            ? ((r = e && e.jquery ? r.pushStack(e.get()) : e),
                              !1)
                            : void 0
                        : T.error(
                            "cannot call methods on " +
                              o +
                              " prior to initialization; attempted to call method '" +
                              n +
                              "'",
                          );
                  })
                : (r = undefined)
              : (i.length && (n = T.widget.extend.apply(null, [n].concat(i))),
                this.each(function () {
                  const e = T.data(this, s);
                  e
                    ? (e.option(n || {}), e._init && e._init())
                    : T.data(this, s, new t(n, this));
                })),
            r
          );
        };
      }),
      (T.Widget = T.Widget || function () {}),
      (T.Widget._childConstructors = []),
      (T.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: { classes: {}, disabled: !1, create: null },
        _createWidget: function (e, t) {
          (t = T(t || this.defaultElement || this)[0]),
            (this.element = T(t)),
            (this.uuid = n++),
            (this.eventNamespace = "." + this.widgetName + this.uuid),
            (this.bindings = T()),
            (this.hoverable = T()),
            (this.focusable = T()),
            (this.classesElementLookup = {}),
            t !== this &&
              (T.data(t, this.widgetFullName, this),
              this._on(!0, this.element, {
                remove: function (e) {
                  e.target === t && this.destroy();
                },
              }),
              (this.document = T(t.style ? t.ownerDocument : t.document || t)),
              (this.window = T(
                this.document[0].defaultView || this.document[0].parentWindow,
              ))),
            (this.options = T.widget.extend(
              {},
              this.options,
              this._getCreateOptions(),
              e,
            )),
            this._create(),
            this.options.disabled &&
              this._setOptionDisabled(this.options.disabled),
            this._trigger("create", null, this._getCreateEventData()),
            this._init();
        },
        _getCreateOptions: function () {
          return {};
        },
        _getCreateEventData: T.noop,
        _create: T.noop,
        _init: T.noop,
        destroy: function () {
          const n = this;
          this._destroy(),
            T.each(this.classesElementLookup, function (e, t) {
              n._removeClass(t, e);
            }),
            this.element
              .off(this.eventNamespace)
              .removeData(this.widgetFullName),
            this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
            this.bindings.off(this.eventNamespace);
        },
        _destroy: T.noop,
        widget: function () {
          return this.element;
        },
        option: function (e, t) {
          let n;
          let i;
          let r;
          let o = e;
          if (arguments.length === 0) return T.widget.extend({}, this.options);
          if (typeof e === "string") {
            if (((o = {}), (e = (n = e.split(".")).shift()), n.length)) {
              for (
                i = o[e] = T.widget.extend({}, this.options[e]), r = 0;
                r < n.length - 1;
                r++
              ) {
                (i[n[r]] = i[n[r]] || {}), (i = i[n[r]]);
              }
              if (((e = n.pop()), arguments.length === 1)) {
                return i[e] === undefined ? null : i[e];
              }
              i[e] = t;
            } else {
              if (arguments.length === 1) {
                return this.options[e] === undefined ? null : this.options[e];
              }
              o[e] = t;
            }
          }
          return this._setOptions(o), this;
        },
        _setOptions: function (e) {
          let t;
          for (t in e) this._setOption(t, e[t]);
          return this;
        },
        _setOption: function (e, t) {
          return (
            e === "classes" && this._setOptionClasses(t),
            (this.options[e] = t),
            e === "disabled" && this._setOptionDisabled(t),
            this
          );
        },
        _setOptionClasses: function (e) {
          let t, n, i;
          for (t in e) {
            (i = this.classesElementLookup[t]),
              e[t] !== this.options.classes[t] &&
                i &&
                i.length &&
                ((n = T(i.get())),
                this._removeClass(i, t),
                n.addClass(
                  this._classes({ element: n, keys: t, classes: e, add: !0 }),
                ));
          }
        },
        _setOptionDisabled: function (e) {
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !!e,
          ),
            e &&
              (this._removeClass(this.hoverable, null, "ui-state-hover"),
              this._removeClass(this.focusable, null, "ui-state-focus"));
        },
        enable: function () {
          return this._setOptions({ disabled: !1 });
        },
        disable: function () {
          return this._setOptions({ disabled: !0 });
        },
        _classes: function (r) {
          function o() {
            r.element.each(function (e, t) {
              T.map(a.classesElementLookup, function (e) {
                return e;
              }).some(function (e) {
                return e.is(t);
              }) || a._on(T(t), { remove: "_untrackClassesElement" });
            });
          }
          function e(e, t) {
            let n, i;
            for (i = 0; i < e.length; i++) {
              (n = a.classesElementLookup[e[i]] || T()),
                r.add
                  ? (o(),
                    (n = T(T.uniqueSort(n.get().concat(r.element.get())))))
                  : (n = T(n.not(r.element).get())),
                (a.classesElementLookup[e[i]] = n),
                s.push(e[i]),
                t && r.classes[e[i]] && s.push(r.classes[e[i]]);
            }
          }
          var s = [];
          var a = this;
          return (
            (r = T.extend(
              { element: this.element, classes: this.options.classes || {} },
              r,
            )).keys && e(r.keys.match(/\S+/g) || [], !0),
            r.extra && e(r.extra.match(/\S+/g) || []),
            s.join(" ")
          );
        },
        _untrackClassesElement: function (n) {
          const i = this;
          T.each(i.classesElementLookup, function (e, t) {
            T.inArray(n.target, t) !== -1 &&
              (i.classesElementLookup[e] = T(t.not(n.target).get()));
          }),
            this._off(T(n.target));
        },
        _removeClass: function (e, t, n) {
          return this._toggleClass(e, t, n, !1);
        },
        _addClass: function (e, t, n) {
          return this._toggleClass(e, t, n, !0);
        },
        _toggleClass: function (e, t, n, i) {
          i = typeof i === "boolean" ? i : n;
          const r = typeof e === "string" || e === null;
          const o = {
            extra: r ? t : n,
            keys: r ? e : t,
            element: r ? this.element : e,
            add: i,
          };
          return o.element.toggleClass(this._classes(o), i), this;
        },
        _on: function (s, a, e) {
          let l;
          const c = this;
          typeof s !== "boolean" && ((e = a), (a = s), (s = !1)),
            e
              ? ((a = l = T(a)), (this.bindings = this.bindings.add(a)))
              : ((e = a), (a = this.element), (l = this.widget())),
            T.each(e, function (e, t) {
              function n() {
                if (
                  s ||
                  (!0 !== c.options.disabled &&
                    !T(this).hasClass("ui-state-disabled"))
                ) {
                  return (typeof t === "string" ? c[t] : t).apply(c, arguments);
                }
              }
              typeof t !== "string" &&
                (n.guid = t.guid = t.guid || n.guid || T.guid++);
              const i = e.match(/^([\w:-]*)\s*(.*)$/);
              const r = i[1] + c.eventNamespace;
              const o = i[2];
              o ? l.on(r, o, n) : a.on(r, n);
            });
        },
        _off: function (e, t) {
          (t =
            (t || "").split(" ").join(this.eventNamespace + " ") +
            this.eventNamespace),
            e.off(t),
            (this.bindings = T(this.bindings.not(e).get())),
            (this.focusable = T(this.focusable.not(e).get())),
            (this.hoverable = T(this.hoverable.not(e).get()));
        },
        _delay: function (e, t) {
          function n() {
            return (typeof e === "string" ? i[e] : e).apply(i, arguments);
          }
          var i = this;
          return setTimeout(n, t || 0);
        },
        _hoverable: function (e) {
          (this.hoverable = this.hoverable.add(e)),
            this._on(e, {
              mouseenter: function (e) {
                this._addClass(T(e.currentTarget), null, "ui-state-hover");
              },
              mouseleave: function (e) {
                this._removeClass(T(e.currentTarget), null, "ui-state-hover");
              },
            });
        },
        _focusable: function (e) {
          (this.focusable = this.focusable.add(e)),
            this._on(e, {
              focusin: function (e) {
                this._addClass(T(e.currentTarget), null, "ui-state-focus");
              },
              focusout: function (e) {
                this._removeClass(T(e.currentTarget), null, "ui-state-focus");
              },
            });
        },
        _trigger: function (e, t, n) {
          let i;
          let r;
          const o = this.options[e];
          if (
            ((n = n || {}),
            ((t = T.Event(t)).type = (
              e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e
            ).toLowerCase()),
            (t.target = this.element[0]),
            (r = t.originalEvent))
          ) {
            for (i in r) i in t || (t[i] = r[i]);
          }
          return (
            this.element.trigger(t, n),
            !(
              (typeof o === "function" &&
                !1 === o.apply(this.element[0], [t].concat(n))) ||
              t.isDefaultPrevented()
            )
          );
        },
      }),
      T.each({ show: "fadeIn", hide: "fadeOut" }, function (o, s) {
        T.Widget.prototype["_" + o] = function (t, e, n) {
          let i;
          typeof e === "string" && (e = { effect: e });
          const r = e
            ? !0 === e || typeof e === "number"
              ? s
              : e.effect || s
            : o;
          typeof (e = e || {}) === "number"
            ? (e = { duration: e })
            : !0 === e && (e = {}),
            (i = !T.isEmptyObject(e)),
            (e.complete = n),
            e.delay && t.delay(e.delay),
            i && T.effects && T.effects.effect[r]
              ? t[o](e)
              : r !== o && t[r]
                ? t[r](e.duration, e.easing, n)
                : t.queue(function (e) {
                    T(this)[o](), n && n.call(t[0]), e();
                  });
        };
      });
    T.widget;
    !(function () {
      function w(e, t, n) {
        return [
          parseFloat(e[0]) * (c.test(e[0]) ? t / 100 : 1),
          parseFloat(e[1]) * (c.test(e[1]) ? n / 100 : 1),
        ];
      }
      function C(e, t) {
        return parseInt(T.css(e, t), 10) || 0;
      }
      function r(e) {
        return e != null && e === e.window;
      }
      function t(e) {
        const t = e[0];
        return t.nodeType === 9
          ? {
              width: e.width(),
              height: e.height(),
              offset: { top: 0, left: 0 },
            }
          : r(t)
            ? {
                width: e.width(),
                height: e.height(),
                offset: { top: e.scrollTop(), left: e.scrollLeft() },
              }
            : t.preventDefault
              ? { width: 0, height: 0, offset: { top: t.pageY, left: t.pageX } }
              : {
                  width: e.outerWidth(),
                  height: e.outerHeight(),
                  offset: e.offset(),
                };
      }
      let o;
      const k = Math.max;
      const S = Math.abs;
      const i = /left|center|right/;
      const s = /top|center|bottom/;
      const a = /[\+\-]\d+(\.[\d]+)?%?/;
      const l = /^\w+/;
      var c = /%$/;
      const n = T.fn.position;
      (T.position = T.position || {
        scrollbarWidth: function () {
          if (o !== undefined) return o;
          let e;
          let t;
          const n = T(
            "<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>",
          );
          const i = n.children()[0];
          return (
            T("body").append(n),
            (e = i.offsetWidth),
            n.css("overflow", "scroll"),
            e === (t = i.offsetWidth) && (t = n[0].clientWidth),
            n.remove(),
            (o = e - t)
          );
        },
        getScrollInfo: function (e) {
          const t =
            e.isWindow || e.isDocument ? "" : e.element.css("overflow-x");
          const n =
            e.isWindow || e.isDocument ? "" : e.element.css("overflow-y");
          const i =
            t === "scroll" ||
            (t === "auto" && e.width < e.element[0].scrollWidth);
          return {
            width:
              n === "scroll" ||
              (n === "auto" && e.height < e.element[0].scrollHeight)
                ? T.position.scrollbarWidth()
                : 0,
            height: i ? T.position.scrollbarWidth() : 0,
          };
        },
        getWithinInfo: function (e) {
          const t = T(e || window);
          const n = r(t[0]);
          const i = !!t[0] && t[0].nodeType === 9;
          return {
            element: t,
            isWindow: n,
            isDocument: i,
            offset: !n && !i ? T(e).offset() : { left: 0, top: 0 },
            scrollLeft: t.scrollLeft(),
            scrollTop: t.scrollTop(),
            width: t.outerWidth(),
            height: t.outerHeight(),
          };
        },
      }),
        (T.fn.position = function (d) {
          if (!d || !d.of) return n.apply(this, arguments);
          let h;
          let p;
          let f;
          let g;
          let m;
          let e;
          const v =
            typeof (d = T.extend({}, d)).of === "string"
              ? T(document).find(d.of)
              : T(d.of);
          const y = T.position.getWithinInfo(d.within);
          const b = T.position.getScrollInfo(y);
          const _ = (d.collision || "flip").split(" ");
          const x = {};
          return (
            (e = t(v)),
            v[0].preventDefault && (d.at = "left top"),
            (p = e.width),
            (f = e.height),
            (g = e.offset),
            (m = T.extend({}, g)),
            T.each(["my", "at"], function () {
              let e;
              let t;
              let n = (d[this] || "").split(" ");
              n.length === 1 &&
                (n = i.test(n[0])
                  ? n.concat(["center"])
                  : s.test(n[0])
                    ? ["center"].concat(n)
                    : ["center", "center"]),
                (n[0] = i.test(n[0]) ? n[0] : "center"),
                (n[1] = s.test(n[1]) ? n[1] : "center"),
                (e = a.exec(n[0])),
                (t = a.exec(n[1])),
                (x[this] = [e ? e[0] : 0, t ? t[0] : 0]),
                (d[this] = [l.exec(n[0])[0], l.exec(n[1])[0]]);
            }),
            _.length === 1 && (_[1] = _[0]),
            d.at[0] === "right"
              ? (m.left += p)
              : d.at[0] === "center" && (m.left += p / 2),
            d.at[1] === "bottom"
              ? (m.top += f)
              : d.at[1] === "center" && (m.top += f / 2),
            (h = w(x.at, p, f)),
            (m.left += h[0]),
            (m.top += h[1]),
            this.each(function () {
              let n;
              let e;
              const s = T(this);
              const a = s.outerWidth();
              const l = s.outerHeight();
              const t = C(this, "marginLeft");
              const i = C(this, "marginTop");
              const r = a + t + C(this, "marginRight") + b.width;
              const o = l + i + C(this, "marginBottom") + b.height;
              const c = T.extend({}, m);
              const u = w(x.my, s.outerWidth(), s.outerHeight());
              d.my[0] === "right"
                ? (c.left -= a)
                : d.my[0] === "center" && (c.left -= a / 2),
                d.my[1] === "bottom"
                  ? (c.top -= l)
                  : d.my[1] === "center" && (c.top -= l / 2),
                (c.left += u[0]),
                (c.top += u[1]),
                (n = { marginLeft: t, marginTop: i }),
                T.each(["left", "top"], function (e, t) {
                  T.ui.position[_[e]] &&
                    T.ui.position[_[e]][t](c, {
                      targetWidth: p,
                      targetHeight: f,
                      elemWidth: a,
                      elemHeight: l,
                      collisionPosition: n,
                      collisionWidth: r,
                      collisionHeight: o,
                      offset: [h[0] + u[0], h[1] + u[1]],
                      my: d.my,
                      at: d.at,
                      within: y,
                      elem: s,
                    });
                }),
                d.using &&
                  (e = function (e) {
                    const t = g.left - c.left;
                    const n = t + p - a;
                    const i = g.top - c.top;
                    const r = i + f - l;
                    const o = {
                      target: {
                        element: v,
                        left: g.left,
                        top: g.top,
                        width: p,
                        height: f,
                      },
                      element: {
                        element: s,
                        left: c.left,
                        top: c.top,
                        width: a,
                        height: l,
                      },
                      horizontal: n < 0 ? "left" : t > 0 ? "right" : "center",
                      vertical: r < 0 ? "top" : i > 0 ? "bottom" : "middle",
                    };
                    p < a && S(t + n) < p && (o.horizontal = "center"),
                      f < l && S(i + r) < f && (o.vertical = "middle"),
                      k(S(t), S(n)) > k(S(i), S(r))
                        ? (o.important = "horizontal")
                        : (o.important = "vertical"),
                      d.using.call(this, e, o);
                  }),
                s.offset(T.extend(c, { using: e }));
            })
          );
        }),
        (T.ui.position = {
          fit: {
            left: function (e, t) {
              let n;
              const i = t.within;
              const r = i.isWindow ? i.scrollLeft : i.offset.left;
              const o = i.width;
              const s = e.left - t.collisionPosition.marginLeft;
              const a = r - s;
              const l = s + t.collisionWidth - o - r;
              t.collisionWidth > o
                ? a > 0 && l <= 0
                  ? ((n = e.left + a + t.collisionWidth - o - r),
                    (e.left += a - n))
                  : (e.left =
                      l > 0 && a <= 0
                        ? r
                        : l < a
                          ? r + o - t.collisionWidth
                          : r)
                : a > 0
                  ? (e.left += a)
                  : l > 0
                    ? (e.left -= l)
                    : (e.left = k(e.left - s, e.left));
            },
            top: function (e, t) {
              let n;
              const i = t.within;
              const r = i.isWindow ? i.scrollTop : i.offset.top;
              const o = t.within.height;
              const s = e.top - t.collisionPosition.marginTop;
              const a = r - s;
              const l = s + t.collisionHeight - o - r;
              t.collisionHeight > o
                ? a > 0 && l <= 0
                  ? ((n = e.top + a + t.collisionHeight - o - r),
                    (e.top += a - n))
                  : (e.top =
                      l > 0 && a <= 0
                        ? r
                        : l < a
                          ? r + o - t.collisionHeight
                          : r)
                : a > 0
                  ? (e.top += a)
                  : l > 0
                    ? (e.top -= l)
                    : (e.top = k(e.top - s, e.top));
            },
          },
          flip: {
            left: function (e, t) {
              let n;
              let i;
              const r = t.within;
              const o = r.offset.left + r.scrollLeft;
              const s = r.width;
              const a = r.isWindow ? r.scrollLeft : r.offset.left;
              const l = e.left - t.collisionPosition.marginLeft;
              const c = l - a;
              const u = l + t.collisionWidth - s - a;
              const d =
                t.my[0] === "left"
                  ? -t.elemWidth
                  : t.my[0] === "right"
                    ? t.elemWidth
                    : 0;
              const h =
                t.at[0] === "left"
                  ? t.targetWidth
                  : t.at[0] === "right"
                    ? -t.targetWidth
                    : 0;
              const p = -2 * t.offset[0];
              c < 0
                ? ((n = e.left + d + h + p + t.collisionWidth - s - o) < 0 ||
                    n < S(c)) &&
                  (e.left += d + h + p)
                : u > 0 &&
                  ((i =
                    e.left - t.collisionPosition.marginLeft + d + h + p - a) >
                    0 ||
                    S(i) < u) &&
                  (e.left += d + h + p);
            },
            top: function (e, t) {
              let n;
              let i;
              const r = t.within;
              const o = r.offset.top + r.scrollTop;
              const s = r.height;
              const a = r.isWindow ? r.scrollTop : r.offset.top;
              const l = e.top - t.collisionPosition.marginTop;
              const c = l - a;
              const u = l + t.collisionHeight - s - a;
              const d =
                t.my[1] === "top"
                  ? -t.elemHeight
                  : t.my[1] === "bottom"
                    ? t.elemHeight
                    : 0;
              const h =
                t.at[1] === "top"
                  ? t.targetHeight
                  : t.at[1] === "bottom"
                    ? -t.targetHeight
                    : 0;
              const p = -2 * t.offset[1];
              c < 0
                ? ((i = e.top + d + h + p + t.collisionHeight - s - o) < 0 ||
                    i < S(c)) &&
                  (e.top += d + h + p)
                : u > 0 &&
                  ((n = e.top - t.collisionPosition.marginTop + d + h + p - a) >
                    0 ||
                    S(n) < u) &&
                  (e.top += d + h + p);
            },
          },
          flipfit: {
            left: function () {
              T.ui.position.flip.left.apply(this, arguments),
                T.ui.position.fit.left.apply(this, arguments);
            },
            top: function () {
              T.ui.position.flip.top.apply(this, arguments),
                T.ui.position.fit.top.apply(this, arguments);
            },
          },
        });
    })();
    T.ui.position;
    if (
      (T.expr.pseudos || (T.expr.pseudos = T.expr[":"]),
      T.uniqueSort || (T.uniqueSort = T.unique),
      !T.escapeSelector)
    ) {
      const t = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      const i = function (e, t) {
        return t
          ? e === "\0"
            ? "\ufffd"
            : e.slice(0, -1) +
              "\\" +
              e.charCodeAt(e.length - 1).toString(16) +
              " "
          : "\\" + e;
      };
      T.escapeSelector = function (e) {
        return (e + "").replace(t, i);
      };
    }
    (T.fn.even && T.fn.odd) ||
      T.fn.extend({
        even: function () {
          return this.filter(function (e) {
            return e % 2 == 0;
          });
        },
        odd: function () {
          return this.filter(function (e) {
            return e % 2 == 1;
          });
        },
      });
    let e;
    (T.ui.keyCode = {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38,
    }),
      (T.fn.scrollParent = function (e) {
        const t = this.css("position");
        const n = t === "absolute";
        const i = e ? /(auto|scroll|hidden)/ : /(auto|scroll)/;
        const r = this.parents()
          .filter(function () {
            const e = T(this);
            return (
              (!n || e.css("position") !== "static") &&
              i.test(
                e.css("overflow") + e.css("overflow-y") + e.css("overflow-x"),
              )
            );
          })
          .eq(0);
        return t !== "fixed" && r.length
          ? r
          : T(this[0].ownerDocument || document);
      }),
      T.fn.extend({
        uniqueId:
          ((e = 0),
          function () {
            return this.each(function () {
              this.id || (this.id = "ui-id-" + ++e);
            });
          }),
        removeUniqueId: function () {
          return this.each(function () {
            /^ui-id-\d+$/.test(this.id) && T(this).removeAttr("id");
          });
        },
      });
  }),
  (function (e) {
    typeof define === "function" && define.amd
      ? define(["jquery", "./jquery.fancytree"], e)
      : typeof module === "object" && module.exports
        ? (require("./jquery.fancytree"),
          (module.exports = e(require("jquery"))))
        : e(jQuery);
  })(function (f) {
    "use strict";
    function g(e, t) {
      let n = f("#" + (e = "fancytree-style-" + e));
      if (!t) return n.remove(), null;
      n.length ||
        (n = f("<style />")
          .attr("id", e)
          .addClass("fancytree-style")
          .prop("type", "text/css")
          .appendTo("head"));
      try {
        n.html(t);
      } catch (i) {
        n[0].styleSheet.cssText = t;
      }
      return n;
    }
    function m(e, t, n, i, r, o) {
      let s;
      const a = "#" + e + " span.fancytree-level-";
      const l = [];
      for (s = 0; s < t; s++) {
        l.push(
          a +
            (s + 1) +
            " span.fancytree-title { padding-left: " +
            (s * n + i) +
            o +
            "; }",
        );
      }
      return (
        l.push(
          "#" +
            e +
            " div.ui-effects-wrapper ul li span.fancytree-title, #" +
            e +
            " li.fancytree-animating span.fancytree-title { padding-left: " +
            r +
            o +
            "; position: static; width: auto; }",
        ),
        l.join("\n")
      );
    }
    const v = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
    return (
      f.ui.fancytree.registerExtension({
        name: "wide",
        version: "2.38.1",
        options: {
          iconWidth: null,
          iconSpacing: null,
          labelSpacing: null,
          levelOfs: null,
        },
        treeCreate: function (e) {
          this._superApply(arguments),
            this.$container.addClass("fancytree-ext-wide");
          let t;
          let n;
          let i;
          let r;
          let o;
          const s = e.options.wide;
          const a = f(
            "<li id='fancytreeTemp'><span class='fancytree-node'><span class='fancytree-icon' /><span class='fancytree-title' /></span><ul />",
          ).appendTo(e.tree.$container);
          const l = a.find(".fancytree-icon");
          const c = a.find("ul");
          let u = s.iconSpacing || l.css("margin-left");
          let d = s.iconWidth || l.css("width");
          let h = s.labelSpacing || "3px";
          const p = s.levelOfs || c.css("padding-left");
          a.remove(),
            (n = u.match(v)[2]),
            (u = parseFloat(u, 10)),
            (i = h.match(v)[2]),
            (h = parseFloat(h, 10)),
            (r = d.match(v)[2]),
            (d = parseFloat(d, 10)),
            (o = p.match(v)[2]),
            (n === r && o === r && i === r) ||
              f.error(
                "iconWidth, iconSpacing, and levelOfs must have the same css measure unit",
              ),
            (this._local.measureUnit = r),
            (this._local.levelOfs = parseFloat(p)),
            (this._local.lineOfs =
              (1 +
                (e.options.checkbox ? 1 : 0) +
                (!1 === e.options.icon ? 0 : 1)) *
                (d + u) +
              u),
            (this._local.labelOfs = h),
            (this._local.maxDepth = 10),
            g(
              (t = this.$container.uniqueId().attr("id")),
              m(
                t,
                this._local.maxDepth,
                this._local.levelOfs,
                this._local.lineOfs,
                this._local.labelOfs,
                this._local.measureUnit,
              ),
            );
        },
        treeDestroy: function () {
          return (
            g(this.$container.attr("id"), null), this._superApply(arguments)
          );
        },
        nodeRenderStatus: function (e) {
          let t;
          let n;
          const i = e.node;
          const r = i.getLevel();
          return (
            (n = this._super(e)),
            r > this._local.maxDepth &&
              ((t = this.$container.attr("id")),
              (this._local.maxDepth *= 2),
              i.debug(
                "Define global ext-wide css up to level " +
                  this._local.maxDepth,
              ),
              g(
                t,
                m(
                  t,
                  this._local.maxDepth,
                  this._local.levelOfs,
                  this._local.lineOfs,
                  this._local.labelSpacing,
                  this._local.measureUnit,
                ),
              )),
            f(i.span).addClass("fancytree-level-" + r),
            n
          );
        },
      }),
      f.ui.fancytree
    );
  }),
  window.googleLT_ || (window.googleLT_ = new Date().getTime()),
  window.google || (window.google = {}),
  window.google.loader ||
    ((window.google.loader = {}),
    (google.loader.ServiceBase = "https://www.google.com/uds"),
    (google.loader.GoogleApisBase = "https://ajax.googleapis.com/ajax"),
    (google.loader.ApiKey = "notsupplied"),
    (google.loader.KeyVerified = !0),
    (google.loader.LoadFailure = !1),
    (google.loader.Secure = !0),
    (google.loader.GoogleLocale = "www.google.com"),
    (google.loader.ClientLocation = null),
    (google.loader.AdditionalParams = ""),
    (function () {
      function n(e) {
        return e in f
          ? f[e]
          : (f[e] = navigator.userAgent.toLowerCase().indexOf(e) != -1);
      }
      function e(e, t) {
        const n = function () {};
        (n.prototype = t.prototype),
          (e.ca = t.prototype),
          (e.prototype = new n());
      }
      function i(e, t, n) {
        const i = Array.prototype.slice.call(arguments, 2) || [];
        return function () {
          return e.apply(t, i.concat(Array.prototype.slice.call(arguments)));
        };
      }
      function s(e) {
        return (
          ((e = Error(e)).toString = function () {
            return this.message;
          }),
          e
        );
      }
      function t(e, t) {
        for (var n = e.split(/\./), i = window, r = 0; r < n.length - 1; r++) {
          i[n[r]] || (i[n[r]] = {}), (i = i[n[r]]);
        }
        i[n[n.length - 1]] = t;
      }
      function r(e, t, n) {
        e[t] = n;
      }
      function o(e, t, n) {
        if (e.addEventListener) e.addEventListener(t, n, !1);
        else if (e.attachEvent) e.attachEvent("on" + t, n);
        else {
          const i = e["on" + t];
          e["on" + t] = i != null ? a([n, i]) : n;
        }
      }
      function a(t) {
        return function () {
          for (let e = 0; e < t.length; e++) t[e]();
        };
      }
      function l() {
        _[document.readyState] ? c() : b.length > 0 && window.setTimeout(l, 10);
      }
      function c() {
        for (let e = 0; e < b.length; e++) b[e]();
        b.length = 0;
      }
      function u(e) {
        (this.b = e),
          (this.B = []),
          (this.A = {}),
          (this.l = {}),
          (this.g = {}),
          (this.s = !0),
          (this.c = -1);
      }
      function d(e) {
        (this.T = e), (this.v = {}), (this.C = 0);
      }
      function h(e, t, n) {
        (this.name = e),
          (this.S = t),
          (this.w = n),
          (this.G = this.j = !1),
          (this.m = []),
          (google.loader.F[this.name] = i(this.o, this));
      }
      function p(e, t) {
        (this.b = e), (this.h = t), (this.j = !1);
      }
      var f = {};
      if (!g) var g = t;
      if (!m) var m = r;
      (google.loader.F = {}), g("google.loader.callbacks", google.loader.F);
      const v = {};
      let y = {};
      (google.loader.eval = {}),
        g("google.loader.eval", google.loader.eval),
        (google.load = function (e, t, n) {
          function i(e) {
            const t = e.split(".");
            if (t.length > 2) throw s("Module: '" + e + "' not found!");
            typeof t[1] !== "undefined" &&
              ((r = t[0]),
              (n.packages = n.packages || []),
              n.packages.push(t[1]));
          }
          var r = e;
          if (
            ((n = n || {}),
            e instanceof Array ||
              (e &&
                typeof e === "object" &&
                typeof e.join === "function" &&
                typeof e.reverse === "function"))
          ) {
            for (var o = 0; o < e.length; o++) i(e[o]);
          } else i(e);
          if (!(e = v[":" + r])) throw s("Module: '" + r + "' not found!");
          if (
            (n && !n.language && n.locale && (n.language = n.locale),
            n &&
              typeof n.callback === "string" &&
              (o = n.callback).match(/^[[\]A-Za-z0-9._]+$/) &&
              ((o = window.eval(o)), (n.callback = o)),
            (o = n && n.callback != null) && !e.D(t))
          ) {
            throw s("Module: '" + r + "' must be loaded before DOM onLoad!");
          }
          o
            ? e.u(t, n)
              ? window.setTimeout(n.callback, 0)
              : e.load(t, n)
            : e.u(t, n) || e.load(t, n);
        }),
        g("google.load", google.load),
        (google.ba = function (e, t) {
          t
            ? (b.length == 0 &&
                (o(window, "load", c),
                (!n("msie") &&
                  !n("safari") &&
                  !n("konqueror") &&
                  n("mozilla")) ||
                window.opera
                  ? window.addEventListener("DOMContentLoaded", c, !1)
                  : n("msie")
                    ? document.write(
                        "<script defer onreadystatechange='google.loader.domReady()' src=//:></script>",
                      )
                    : (n("safari") || n("konqueror")) &&
                      window.setTimeout(l, 10)),
              b.push(e))
            : o(window, "load", e);
        }),
        g("google.setOnLoadCallback", google.ba);
      var b = [];
      (google.loader.W = function () {
        const e = window.event.srcElement;
        e.readyState == "complete" &&
          ((e.onreadystatechange = null), e.parentNode.removeChild(e), c());
      }),
        g("google.loader.domReady", google.loader.W);
      var _ = { loaded: !0, complete: !0 };
      (google.loader.f = function (e, t, n) {
        let i;
        n
          ? (e == "script"
              ? (((i = document.createElement("script")).type =
                  "text/javascript"),
                (i.src = t))
              : e == "css" &&
                (((i = document.createElement("link")).type = "text/css"),
                (i.href = t),
                (i.rel = "stylesheet")),
            (e = document.getElementsByTagName("head")[0]) ||
              (e = document.body.parentNode.appendChild(
                document.createElement("head"),
              )),
            e.appendChild(i))
          : e == "script"
            ? document.write(
                '<script src="' + t + '" type="text/javascript"></script>',
              )
            : e == "css" &&
              document.write(
                '<link href="' +
                  t +
                  '" type="text/css" rel="stylesheet"></link>',
              );
      }),
        g("google.loader.writeLoadTag", google.loader.f),
        (google.loader.Z = function (e) {
          y = e;
        }),
        g("google.loader.rfm", google.loader.Z),
        (google.loader.aa = function (e) {
          for (const t in e) {
            typeof t === "string" &&
              t &&
              t.charAt(0) == ":" &&
              !v[t] &&
              (v[t] = new p(t.substring(1), e[t]));
          }
        }),
        g("google.loader.rpl", google.loader.aa),
        (google.loader.$ = function (e) {
          if ((e = e.specs) && e.length) {
            for (let t = 0; t < e.length; ++t) {
              let n = e[t];
              typeof n === "string"
                ? (v[":" + n] = new u(n))
                : ((n = new h(n.name, n.baseSpec, n.customSpecs)),
                  (v[":" + n.name] = n));
            }
          }
        }),
        g("google.loader.rm", google.loader.$),
        (google.loader.loaded = function (e) {
          v[":" + e.module].o(e);
        }),
        g("google.loader.loaded", google.loader.loaded),
        (google.loader.V = function () {
          return (
            "qid=" +
            (new Date().getTime().toString(16) +
              Math.floor(1e7 * Math.random()).toString(16))
          );
        }),
        g("google.loader.createGuidArg_", google.loader.V),
        t("google_exportSymbol", t),
        t("google_exportProperty", r),
        (google.loader.a = {}),
        g("google.loader.themes", google.loader.a),
        (google.loader.a.K = "//www.google.com/cse/style/look/bubblegum.css"),
        m(google.loader.a, "BUBBLEGUM", google.loader.a.K),
        (google.loader.a.M = "//www.google.com/cse/style/look/greensky.css"),
        m(google.loader.a, "GREENSKY", google.loader.a.M),
        (google.loader.a.L = "//www.google.com/cse/style/look/espresso.css"),
        m(google.loader.a, "ESPRESSO", google.loader.a.L),
        (google.loader.a.O = "//www.google.com/cse/style/look/shiny.css"),
        m(google.loader.a, "SHINY", google.loader.a.O),
        (google.loader.a.N = "//www.google.com/cse/style/look/minimalist.css"),
        m(google.loader.a, "MINIMALIST", google.loader.a.N),
        (google.loader.a.P = "//www.google.com/cse/style/look/v2/default.css"),
        m(google.loader.a, "V2_DEFAULT", google.loader.a.P),
        (u.prototype.i = function (e, t) {
          let n = "";
          if (
            (t != null &&
              (t.language != null &&
                (n += "&hl=" + encodeURIComponent(t.language)),
              t.nocss != null &&
                (n += "&output=" + encodeURIComponent("nocss=" + t.nocss)),
              t.nooldnames != null &&
                (n += "&nooldnames=" + encodeURIComponent(t.nooldnames)),
              t.packages != null &&
                (n += "&packages=" + encodeURIComponent(t.packages)),
              t.callback != null && (n += "&async=2"),
              t.style != null && (n += "&style=" + encodeURIComponent(t.style)),
              t.noexp != null && (n += "&noexp=true"),
              t.other_params != null && (n += "&" + t.other_params)),
            !this.s)
          ) {
            google[this.b] &&
              google[this.b].JSHash &&
              (n += "&sig=" + encodeURIComponent(google[this.b].JSHash));
            let i;
            const r = [];
            for (i in this.A) i.charAt(0) == ":" && r.push(i.substring(1));
            for (i in this.l) {
              i.charAt(0) == ":" && this.l[i] && r.push(i.substring(1));
            }
            n += "&have=" + encodeURIComponent(r.join(","));
          }
          return (
            google.loader.ServiceBase +
            "/?file=" +
            this.b +
            "&v=" +
            e +
            google.loader.AdditionalParams +
            n
          );
        }),
        (u.prototype.H = function (e) {
          let t = null;
          e && (t = e.packages);
          let n = null;
          if (t) {
            if (typeof t === "string") n = [e.packages];
            else if (t.length) {
              for (n = [], e = 0; e < t.length; e++) {
                typeof t[e] === "string" &&
                  n.push(t[e].replace(/^\s*|\s*$/, "").toLowerCase());
              }
            }
          }
          for (n || (n = ["default"]), t = [], e = 0; e < n.length; e++) {
            this.A[":" + n[e]] || t.push(n[e]);
          }
          return t;
        }),
        (u.prototype.load = function (e, t) {
          let n = this.H(t);
          const i = t && t.callback != null;
          if (i) var r = new d(t.callback);
          for (var o = [], s = n.length - 1; s >= 0; s--) {
            var a = n[s];
            i && r.R(a),
              this.l[":" + a]
                ? (n.splice(s, 1), i && this.g[":" + a].push(r))
                : o.push(a);
          }
          if (n.length) {
            for (
              t && t.packages && (t.packages = n.sort().join(",")), s = 0;
              s < o.length;
              s++
            ) {
              (a = o[s]), (this.g[":" + a] = []), i && this.g[":" + a].push(r);
            }
            if (
              t ||
              y[":" + this.b] == null ||
              y[":" + this.b].versions[":" + e] == null ||
              google.loader.AdditionalParams ||
              !this.s
            ) {
              (t && t.autoloaded) || google.loader.f("script", this.i(e, t), i);
            } else {
              for (const l in ((n = y[":" + this.b]),
              (google[this.b] = google[this.b] || {}),
              n.properties)) {
                l &&
                  l.charAt(0) == ":" &&
                  (google[this.b][l.substring(1)] = n.properties[l]);
              }
              google.loader.f(
                "script",
                google.loader.ServiceBase + n.path + n.js,
                i,
              ),
                n.css &&
                  google.loader.f(
                    "css",
                    google.loader.ServiceBase + n.path + n.css,
                    i,
                  );
            }
            for (
              this.s &&
                ((this.s = !1),
                (this.c = new Date().getTime()),
                this.c % 100 != 1 && (this.c = -1)),
                s = 0;
              s < o.length;
              s++
            ) {
              (a = o[s]), (this.l[":" + a] = !0);
            }
          }
        }),
        (u.prototype.o = function (e) {
          this.c != -1 &&
            (D("al_" + this.b, "jl." + (new Date().getTime() - this.c), !0),
            (this.c = -1)),
            (this.B = this.B.concat(e.components)),
            google.loader[this.b] || (google.loader[this.b] = {}),
            (google.loader[this.b].packages = this.B.slice(0));
          for (let t = 0; t < e.components.length; t++) {
            (this.A[":" + e.components[t]] = !0),
              (this.l[":" + e.components[t]] = !1);
            const n = this.g[":" + e.components[t]];
            if (n) {
              for (let i = 0; i < n.length; i++) n[i].U(e.components[t]);
              delete this.g[":" + e.components[t]];
            }
          }
        }),
        (u.prototype.u = function (e, t) {
          return this.H(t).length == 0;
        }),
        (u.prototype.D = function () {
          return !0;
        }),
        (d.prototype.R = function (e) {
          this.C++, (this.v[":" + e] = !0);
        }),
        (d.prototype.U = function (e) {
          this.v[":" + e] &&
            ((this.v[":" + e] = !1),
            this.C--,
            this.C == 0 && window.setTimeout(this.T, 0));
        }),
        e(h, u),
        (h.prototype.load = function (e, t) {
          const n = t && t.callback != null;
          n
            ? (this.m.push(t.callback),
              (t.callback = "google.loader.callbacks." + this.name))
            : (this.j = !0),
            (t && t.autoloaded) || google.loader.f("script", this.i(e, t), n);
        }),
        (h.prototype.u = function (e, t) {
          return t && t.callback != null ? this.G : this.j;
        }),
        (h.prototype.o = function () {
          this.G = !0;
          for (let e = 0; e < this.m.length; e++) {
            window.setTimeout(this.m[e], 0);
          }
          this.m = [];
        });
      const x = function (e, t) {
        return e.string
          ? encodeURIComponent(e.string) + "=" + encodeURIComponent(t)
          : e.regex
            ? t.replace(/(^.*$)/, e.regex)
            : "";
      };
      (h.prototype.i = function (e, t) {
        return this.X(this.I(e), e, t);
      }),
        (h.prototype.X = function (e, t, n) {
          let i = "";
          if (
            (e.key && (i += "&" + x(e.key, google.loader.ApiKey)),
            e.version && (i += "&" + x(e.version, t)),
            (t = google.loader.Secure && e.ssl ? e.ssl : e.uri),
            n != null)
          ) {
            for (const r in n) {
              e.params[r]
                ? (i += "&" + x(e.params[r], n[r]))
                : r == "other_params"
                  ? (i += "&" + n[r])
                  : r == "base_domain" &&
                    (t =
                      "http://" +
                      n[r] +
                      e.uri.substring(e.uri.indexOf("/", 7)));
            }
          }
          return (
            (google[this.name] = {}),
            t.indexOf("?") == -1 && i && (i = "?" + i.substring(1)),
            t + i
          );
        }),
        (h.prototype.D = function (e) {
          return this.I(e).deferred;
        }),
        (h.prototype.I = function (e) {
          if (this.w) {
            for (let t = 0; t < this.w.length; ++t) {
              const n = this.w[t];
              if (new RegExp(n.pattern).test(e)) return n;
            }
          }
          return this.S;
        }),
        e(p, u),
        (p.prototype.load = function (e, t) {
          (this.j = !0), google.loader.f("script", this.i(e, t), !1);
        }),
        (p.prototype.u = function () {
          return this.j;
        }),
        (p.prototype.o = function () {}),
        (p.prototype.i = function (e, t) {
          if (!this.h.versions[":" + e]) {
            if (this.h.aliases) {
              const n = this.h.aliases[":" + e];
              n && (e = n);
            }
            if (!this.h.versions[":" + e]) {
              throw s(
                "Module: '" + this.b + "' with version '" + e + "' not found!",
              );
            }
          }
          return (
            google.loader.GoogleApisBase +
            "/libs/" +
            this.b +
            "/" +
            e +
            "/" +
            this.h.versions[":" + e][
              t && t.uncompressed ? "uncompressed" : "compressed"
            ]
          );
        });
      let w = !(p.prototype.D = function () {
        return !1;
      });
      const C = [];
      const k = new Date().getTime();
      const S = function () {
        w || (o(window, "unload", j), (w = !0));
      };
      const T = function (e, t) {
        if (
          (S(),
          !(
            google.loader.Secure ||
            (google.loader.Options && !1 !== google.loader.Options.csi)
          ))
        ) {
          for (var n = 0; n < e.length; n++) {
            e[n] = encodeURIComponent(
              e[n].toLowerCase().replace(/[^a-z0-9_.]+/g, "_"),
            );
          }
          for (n = 0; n < t.length; n++) {
            t[n] = encodeURIComponent(
              t[n].toLowerCase().replace(/[^a-z0-9_.]+/g, "_"),
            );
          }
          window.setTimeout(
            i(
              N,
              null,
              "//gg.google.com/csi?s=uds&v=2&action=" +
                e.join(",") +
                "&it=" +
                t.join(","),
            ),
            1e4,
          );
        }
      };
      var D = function (e, t, n) {
        n
          ? T([e], [t])
          : (S(),
            C.push(
              "r" + C.length + "=" + encodeURIComponent(e + (t ? "|" + t : "")),
            ),
            window.setTimeout(j, C.length > 5 ? 0 : 15e3));
      };
      var j = function () {
        if (C.length) {
          let e = google.loader.ServiceBase;
          e.indexOf("http:") == 0 && (e = e.replace(/^http:/, "https:")),
            N(
              e +
                "/stats?" +
                C.join("&") +
                "&nc=" +
                new Date().getTime() +
                "_" +
                (new Date().getTime() - k),
            ),
            (C.length = 0);
        }
      };
      var N = function (e) {
        let t = new Image();
        const n = N.Y++;
        ((N.J[n] = t).onload = t.onerror =
          function () {
            delete N.J[n];
          }),
          (t.src = e),
          (t = null);
      };
      (N.J = {}),
        (N.Y = 0),
        t("google.loader.recordCsiStat", T),
        t("google.loader.recordStat", D),
        t("google.loader.createImageForLogging", N);
    })(),
    google.loader.rm({
      specs: [
        "visualization",
        "payments",
        {
          name: "annotations",
          baseSpec: {
            uri: "http://www.google.com/reviews/scripts/annotations_bootstrap.js",
            ssl: null,
            key: { string: "key" },
            version: { string: "v" },
            deferred: !0,
            params: {
              country: { string: "gl" },
              callback: { string: "callback" },
              language: { string: "hl" },
            },
          },
        },
        "language",
        "gdata",
        "wave",
        "spreadsheets",
        "search",
        "orkut",
        "feeds",
        "annotations_v2",
        "picker",
        "identitytoolkit",
        {
          name: "maps",
          baseSpec: {
            uri: "http://maps.google.com/maps?file=googleapi",
            ssl: "https://maps-api-ssl.google.com/maps?file=googleapi",
            key: { string: "key" },
            version: { string: "v" },
            deferred: !0,
            params: {
              callback: { regex: "callback=$1&async=2" },
              language: { string: "hl" },
            },
          },
          customSpecs: [
            {
              uri: "http://maps.googleapis.com/maps/api/js",
              ssl: "https://maps.googleapis.com/maps/api/js",
              version: { string: "v" },
              deferred: !0,
              params: {
                callback: { string: "callback" },
                language: { string: "hl" },
              },
              pattern: "^(3|3..*)$",
            },
          ],
        },
        {
          name: "friendconnect",
          baseSpec: {
            uri: "http://www.google.com/friendconnect/script/friendconnect.js",
            ssl: "https://www.google.com/friendconnect/script/friendconnect.js",
            key: { string: "key" },
            version: { string: "v" },
            deferred: !1,
            params: {},
          },
        },
        {
          name: "sharing",
          baseSpec: {
            uri: "http://www.google.com/s2/sharing/js",
            ssl: null,
            key: { string: "key" },
            version: { string: "v" },
            deferred: !1,
            params: { language: { string: "hl" } },
          },
        },
        "ads",
        {
          name: "books",
          baseSpec: {
            uri: "http://books.google.com/books/api.js",
            ssl: "https://encrypted.google.com/books/api.js",
            key: { string: "key" },
            version: { string: "v" },
            deferred: !0,
            params: {
              callback: { string: "callback" },
              language: { string: "hl" },
            },
          },
        },
        "elements",
        "earth",
        "ima",
      ],
    }),
    google.loader.rfm({
      ":search": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/search/1.0/432dd570d1a386253361f581254f9ca1/",
        js: "default+en.I.js",
        css: "default+en.css",
        properties: {
          ":Version": "1.0",
          ":NoOldNames": !1,
          ":JSHash": "432dd570d1a386253361f581254f9ca1",
        },
      },
      ":language": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/language/1.0/6b1de1a1a3e9141f53c9ad23b2b4e1b3/",
        js: "default+en.I.js",
        properties: {
          ":Version": "1.0",
          ":JSHash": "6b1de1a1a3e9141f53c9ad23b2b4e1b3",
        },
      },
      ":annotations": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/annotations/1.0/3b0f18d6e7bf8cf053640179ef6d98d1/",
        js: "default+en.I.js",
        properties: {
          ":Version": "1.0",
          ":JSHash": "3b0f18d6e7bf8cf053640179ef6d98d1",
        },
      },
      ":wave": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/wave/1.0/3b6f7573ff78da6602dda5e09c9025bf/",
        js: "default.I.js",
        properties: {
          ":Version": "1.0",
          ":JSHash": "3b6f7573ff78da6602dda5e09c9025bf",
        },
      },
      ":earth": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/earth/1.0/db22e5693e0a8de1f62f3536f5a8d7d3/",
        js: "default.I.js",
        properties: {
          ":Version": "1.0",
          ":JSHash": "db22e5693e0a8de1f62f3536f5a8d7d3",
        },
      },
      ":feeds": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/feeds/1.0/482f2817cdf8982edf2e5669f9e3a627/",
        js: "default+en.I.js",
        css: "default+en.css",
        properties: {
          ":Version": "1.0",
          ":JSHash": "482f2817cdf8982edf2e5669f9e3a627",
        },
      },
      ":picker": {
        versions: { ":1": "1", ":1.0": "1" },
        path: "/api/picker/1.0/1c635e91b9d0c082c660a42091913907/",
        js: "default.I.js",
        css: "default.css",
        properties: {
          ":Version": "1.0",
          ":JSHash": "1c635e91b9d0c082c660a42091913907",
        },
      },
      ":ima": {
        versions: { ":3": "1", ":3.0": "1" },
        path: "/api/ima/3.0/28a914332232c9a8ac0ae8da68b1006e/",
        js: "default.I.js",
        properties: {
          ":Version": "3.0",
          ":JSHash": "28a914332232c9a8ac0ae8da68b1006e",
        },
      },
    }),
    google.loader.rpl({
      ":chrome-frame": {
        versions: {
          ":1.0.0": {
            uncompressed: "CFInstall.js",
            compressed: "CFInstall.min.js",
          },
          ":1.0.1": {
            uncompressed: "CFInstall.js",
            compressed: "CFInstall.min.js",
          },
          ":1.0.2": {
            uncompressed: "CFInstall.js",
            compressed: "CFInstall.min.js",
          },
        },
        aliases: { ":1": "1.0.2", ":1.0": "1.0.2" },
      },
      ":swfobject": {
        versions: {
          ":2.1": {
            uncompressed: "swfobject_src.js",
            compressed: "swfobject.js",
          },
          ":2.2": {
            uncompressed: "swfobject_src.js",
            compressed: "swfobject.js",
          },
        },
        aliases: { ":2": "2.2" },
      },
      ":ext-core": {
        versions: {
          ":3.1.0": {
            uncompressed: "ext-core-debug.js",
            compressed: "ext-core.js",
          },
          ":3.0.0": {
            uncompressed: "ext-core-debug.js",
            compressed: "ext-core.js",
          },
        },
        aliases: { ":3": "3.1.0", ":3.0": "3.0.0", ":3.1": "3.1.0" },
      },
      ":scriptaculous": {
        versions: {
          ":1.8.3": {
            uncompressed: "scriptaculous.js",
            compressed: "scriptaculous.js",
          },
          ":1.9.0": {
            uncompressed: "scriptaculous.js",
            compressed: "scriptaculous.js",
          },
          ":1.8.1": {
            uncompressed: "scriptaculous.js",
            compressed: "scriptaculous.js",
          },
          ":1.8.2": {
            uncompressed: "scriptaculous.js",
            compressed: "scriptaculous.js",
          },
        },
        aliases: { ":1": "1.9.0", ":1.8": "1.8.3", ":1.9": "1.9.0" },
      },
      ":webfont": {
        versions: {
          ":1.0.12": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.13": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.14": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.15": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.10": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.11": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.27": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.28": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.29": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.23": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.24": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.25": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.26": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.21": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.22": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.3": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.4": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.5": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.6": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.9": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.16": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.17": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.0": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.18": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.1": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.19": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
          ":1.0.2": {
            uncompressed: "webfont_debug.js",
            compressed: "webfont.js",
          },
        },
        aliases: { ":1": "1.0.29", ":1.0": "1.0.29" },
      },
      ":jqueryui": {
        versions: {
          ":1.8.17": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.16": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.15": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.14": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.4": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.13": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.5": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.12": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.6": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.11": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.7": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.10": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.8": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.9": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.6.0": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.7.0": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.5.2": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.0": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.7.1": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.5.3": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.1": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.7.2": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.8.2": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
          ":1.7.3": {
            uncompressed: "jquery-ui.js",
            compressed: "jquery-ui.min.js",
          },
        },
        aliases: {
          ":1": "1.8.17",
          ":1.8.3": "1.8.4",
          ":1.5": "1.5.3",
          ":1.6": "1.6.0",
          ":1.7": "1.7.3",
          ":1.8": "1.8.17",
        },
      },
      ":mootools": {
        versions: {
          ":1.3.0": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.2.1": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.1.2": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.4.0": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.3.1": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.2.2": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.4.1": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.3.2": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.2.3": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.4.2": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.2.4": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.2.5": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
          ":1.1.1": {
            uncompressed: "mootools.js",
            compressed: "mootools-yui-compressed.js",
          },
        },
        aliases: {
          ":1": "1.1.2",
          ":1.1": "1.1.2",
          ":1.2": "1.2.5",
          ":1.3": "1.3.2",
          ":1.4": "1.4.2",
          ":1.11": "1.1.1",
        },
      },
      ":yui": {
        versions: {
          ":2.8.0r4": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
          ":2.9.0": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
          ":2.8.1": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
          ":2.6.0": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
          ":2.7.0": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
          ":3.3.0": {
            uncompressed: "build/yui/yui.js",
            compressed: "build/yui/yui-min.js",
          },
          ":2.8.2r1": {
            uncompressed: "build/yuiloader/yuiloader.js",
            compressed: "build/yuiloader/yuiloader-min.js",
          },
        },
        aliases: {
          ":2": "2.9.0",
          ":3": "3.3.0",
          ":2.8.2": "2.8.2r1",
          ":2.8.0": "2.8.0r4",
          ":3.3": "3.3.0",
          ":2.6": "2.6.0",
          ":2.7": "2.7.0",
          ":2.8": "2.8.2r1",
          ":2.9": "2.9.0",
        },
      },
      ":prototype": {
        versions: {
          ":1.6.1.0": {
            uncompressed: "prototype.js",
            compressed: "prototype.js",
          },
          ":1.6.0.2": {
            uncompressed: "prototype.js",
            compressed: "prototype.js",
          },
          ":1.7.0.0": {
            uncompressed: "prototype.js",
            compressed: "prototype.js",
          },
          ":1.6.0.3": {
            uncompressed: "prototype.js",
            compressed: "prototype.js",
          },
        },
        aliases: {
          ":1": "1.7.0.0",
          ":1.6.0": "1.6.0.3",
          ":1.6.1": "1.6.1.0",
          ":1.7.0": "1.7.0.0",
          ":1.6": "1.6.1.0",
          ":1.7": "1.7.0.0",
        },
      },
      ":jquery": {
        versions: {
          ":1.3.0": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.4.0": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.3.1": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.5.0": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.4.1": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.3.2": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.2.3": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.6.0": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.5.1": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.4.2": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.7.0": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.6.1": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.5.2": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.4.3": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.7.1": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.6.2": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.4.4": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.2.6": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.6.3": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
          ":1.6.4": { uncompressed: "jquery.js", compressed: "jquery.min.js" },
        },
        aliases: {
          ":1": "1.7.1",
          ":1.2": "1.2.6",
          ":1.3": "1.3.2",
          ":1.4": "1.4.4",
          ":1.5": "1.5.2",
          ":1.6": "1.6.4",
          ":1.7": "1.7.1",
        },
      },
      ":dojo": {
        versions: {
          ":1.3.0": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.4.0": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.3.1": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.5.0": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.4.1": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.3.2": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.2.3": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.6.0": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.5.1": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.7.0": {
            uncompressed: "dojo/dojo.js.uncompressed.js",
            compressed: "dojo/dojo.js",
          },
          ":1.6.1": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.4.3": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.7.1": {
            uncompressed: "dojo/dojo.js.uncompressed.js",
            compressed: "dojo/dojo.js",
          },
          ":1.7.2": {
            uncompressed: "dojo/dojo.js.uncompressed.js",
            compressed: "dojo/dojo.js",
          },
          ":1.2.0": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
          ":1.1.1": {
            uncompressed: "dojo/dojo.xd.js.uncompressed.js",
            compressed: "dojo/dojo.xd.js",
          },
        },
        aliases: {
          ":1": "1.6.1",
          ":1.1": "1.1.1",
          ":1.2": "1.2.3",
          ":1.3": "1.3.2",
          ":1.4": "1.4.3",
          ":1.5": "1.5.1",
          ":1.6": "1.6.1",
          ":1.7": "1.7.2",
        },
      },
    })),
  function () {
    $(document).on("ready", function () {
      return $("#gov_datatable").DataTable({
        paging: !1,
        searching: !1,
        ordering: !1,
        scrollX: !0,
        scrollY: "600px",
        scrollCollapse: !0,
        info: !1,
        columns: [
          null,
          null,
          null,
          { width: "20em" },
          null,
          null,
          null,
          { width: "10em" },
          { width: "10em" },
          { width: "10em" },
          null,
          null,
          { width: "50em" },
        ],
      });
    });
  }.call(this),
  function () {
    "use strict";
    function r(e) {
      let t = 0;
      return function () {
        return t < e.length ? { done: !1, value: e[t++] } : { done: !0 };
      };
    }
    function e(e) {
      e = [
        typeof globalThis === "object" && globalThis,
        e,
        typeof window === "object" && window,
        typeof self === "object" && self,
        typeof global === "object" && global,
      ];
      for (let t = 0; t < e.length; ++t) {
        const n = e[t];
        if (n && n.Math == Math) return n;
      }
      throw Error("Cannot find global object");
    }
    function t(e, t) {
      if (t) {
        e: {
          let n = yt;
          e = e.split(".");
          for (var i = 0; i < e.length - 1; i++) {
            const r = e[i];
            if (!(r in n)) break e;
            n = n[r];
          }
          (t = t((i = n[(e = e[e.length - 1])]))) != i &&
            t != null &&
            vt(n, e, { configurable: !0, writable: !0, value: t });
        }
      }
    }
    function l(e) {
      return (
        ((e = { next: e })[Symbol.iterator] = function () {
          return this;
        }),
        e
      );
    }
    function c(e) {
      const t =
        typeof Symbol !== "undefined" && Symbol.iterator && e[Symbol.iterator];
      return t ? t.call(e) : { next: r(e) };
    }
    function n(e) {
      if (!(e instanceof Array)) {
        e = c(e);
        for (var t, n = []; !(t = e.next()).done; ) n.push(t.value);
        e = n;
      }
      return e;
    }
    function i(e, t) {
      if (
        ((e.prototype = _t(t.prototype)), (e.prototype.constructor = e), St)
      ) {
        St(e, t);
      } else {
        for (const n in t) {
          if (n != "prototype") {
            if (Object.defineProperties) {
              const i = Object.getOwnPropertyDescriptor(t, n);
              i && Object.defineProperty(e, n, i);
            } else e[n] = t[n];
          }
        }
      }
      e.ma = t.prototype;
    }
    function u(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    function s(e, t, n) {
      if (e == null) {
        throw new TypeError(
          "The 'this' value for String.prototype." +
            n +
            " must not be null or undefined",
        );
      }
      if (t instanceof RegExp) {
        throw new TypeError(
          "First argument to String.prototype." +
            n +
            " must not be a regular expression",
        );
      }
      return e + "";
    }
    function o(e, t, n) {
      e instanceof String && (e = String(e));
      for (let i = e.length, r = 0; r < i; r++) {
        const o = e[r];
        if (t.call(n, o, r, e)) return { S: r, X: o };
      }
      return { S: -1, X: void 0 };
    }
    function a(t, n) {
      t instanceof String && (t += "");
      let i = 0;
      let r = !1;
      const e = {
        next: function () {
          if (!r && i < t.length) {
            const e = i++;
            return { value: n(e, t[e]), done: !1 };
          }
          return { done: (r = !0), value: void 0 };
        },
      };
      return (
        (e[Symbol.iterator] = function () {
          return e;
        }),
        e
      );
    }
    function d(e, t) {
      for (; e; ) {
        const n = Reflect.getOwnPropertyDescriptor(e, t);
        if (n) return n;
        e = Reflect.getPrototypeOf(e);
      }
    }
    function h(e, t) {
      return (
        (e = void 0 !== e ? String(e) : " "),
        t > 0 && e ? e.repeat(Math.ceil(t / e.length)).substring(0, t) : ""
      );
    }
    function p(e) {
      return e || Array.prototype.copyWithin;
    }
    function f(e) {
      return e || Array.prototype.fill;
    }
    function g(e) {
      e = e.split(".");
      for (var t = Dt, n = 0; n < e.length; n++) {
        if ((t = t[e[n]]) == null) return null;
      }
      return t;
    }
    function m() {}
    function v(e) {
      const t = typeof e;
      return (t == "object" && e != null) || t == "function";
    }
    function y(e) {
      return e.call.apply(e.bind, arguments);
    }
    function b(t, n) {
      if (!t) throw Error();
      if (arguments.length > 2) {
        const i = Array.prototype.slice.call(arguments, 2);
        return function () {
          const e = Array.prototype.slice.call(arguments);
          return Array.prototype.unshift.apply(e, i), t.apply(n, e);
        };
      }
      return function () {
        return t.apply(n, arguments);
      };
    }
    function _() {
      return (_ =
        Function.prototype.bind &&
        Function.prototype.bind.toString().indexOf("native code") != -1
          ? y
          : b).apply(null, arguments);
    }
    function x(e, t) {
      e = e.split(".");
      let n;
      let i = Dt;
      e[0] in i ||
        typeof i.execScript === "undefined" ||
        i.execScript("var " + e[0]);
      for (; e.length && (n = e.shift()); ) {
        e.length || void 0 === t
          ? (i = i[n] && i[n] !== Object.prototype[n] ? i[n] : (i[n] = {}))
          : (i[n] = t);
      }
    }
    function w(e, o) {
      function t() {}
      (t.prototype = o.prototype),
        (e.ma = o.prototype),
        (e.prototype = new t()),
        ((e.prototype.constructor = e).na = function (e, t, n) {
          for (
            var i = Array(arguments.length - 2), r = 2;
            r < arguments.length;
            r++
          ) {
            i[r - 2] = arguments[r];
          }
          return o.prototype[t].apply(e, i);
        });
    }
    function C(e) {
      return e;
    }
    function k(e) {
      if (Error.captureStackTrace) Error.captureStackTrace(this, k);
      else {
        const t = Error().stack;
        t && (this.stack = t);
      }
      e && (this.message = String(e));
    }
    function S(e, t) {
      (this.g = (e === Et && t) || ""), (this.h = Nt);
    }
    function T(e) {
      return e instanceof S && e.constructor === S && e.h === Nt
        ? e.g
        : "type_error:Const";
    }
    function D(e) {
      return new S(Et, e);
    }
    function j(e, t) {
      this.g = t === Ft ? e : "";
    }
    function N(e) {
      return e instanceof j && e.constructor === j
        ? e.g
        : "type_error:TrustedResourceUrl";
    }
    function E(e, n) {
      const i = T(e);
      if (!Ot.test(i)) throw Error("Invalid TrustedResourceUrl format: " + i);
      return A(
        (e = i.replace(Mt, function (e, t) {
          if (!Object.prototype.hasOwnProperty.call(n, t)) {
            throw Error(
              'Found marker, "' +
                t +
                '", in format string, "' +
                i +
                '", but no valid label mapping found in args: ' +
                JSON.stringify(n),
            );
          }
          return (e = n[t]) instanceof S ? T(e) : encodeURIComponent(String(e));
        })),
      );
    }
    function I(e, t, n) {
      return (
        (e = E(e, t)),
        (t = (e = Pt.exec(N(e).toString()))[3] || ""),
        A(e[1] + M("?", e[2] || "", n) + M("#", t, void 0))
      );
    }
    function A(e) {
      if (void 0 === jt) {
        var t = null;
        const n = Dt.trustedTypes;
        if (n && n.createPolicy) {
          try {
            t = n.createPolicy("goog#html", {
              createHTML: C,
              createScript: C,
              createScriptURL: C,
            });
          } catch (i) {
            Dt.console && Dt.console.error(i.message);
          }
          jt = t;
        } else jt = t;
      }
      return new j((e = (t = jt) ? t.createScriptURL(e) : e), Ft);
    }
    function M(e, t, n) {
      if (n == null) return t;
      if (typeof n === "string") return n ? e + encodeURIComponent(n) : "";
      for (const i in n) {
        if (Object.prototype.hasOwnProperty.call(n, i)) {
          let r = n[i];
          r = Array.isArray(r) ? r : [r];
          for (let o = 0; o < r.length; o++) {
            const s = r[o];
            s != null &&
              (t || (t = e),
              (t +=
                (t.length > e.length ? "&" : "") +
                encodeURIComponent(i) +
                "=" +
                encodeURIComponent(String(s))));
          }
        }
      }
      return t;
    }
    function O(e, t) {
      for (const n in e) t.call(void 0, e[n], n, e);
    }
    function P(e) {
      for (var t, n, i = 1; i < arguments.length; i++) {
        for (t in (n = arguments[i])) e[t] = n[t];
        for (let r = 0; r < Ht.length; r++) {
          (t = Ht[r]),
            Object.prototype.hasOwnProperty.call(n, t) && (e[t] = n[t]);
        }
      }
    }
    function F(e) {
      let t = ((e.ownerDocument && e.ownerDocument.defaultView) || Dt).document;
      (t.querySelector &&
        (t = t.querySelector("script[nonce]")) &&
        (t = t.nonce || t.getAttribute("nonce")) &&
        qt.test(t)) ||
        (t = ""),
        t && e.setAttribute("nonce", t);
    }
    function L(e, t) {
      (this.g = e[Dt.Symbol.iterator]()), (this.h = t), (this.i = 0);
    }
    function H(e, t) {
      return new L(e, t);
    }
    function R() {}
    function $(e) {
      if (e instanceof z || e instanceof W || e instanceof B) return e;
      if (typeof e.next === "function") {
        return new z(function () {
          return q(e);
        });
      }
      if (typeof e[Symbol.iterator] === "function") {
        return new z(function () {
          return e[Symbol.iterator]();
        });
      }
      if (typeof e.F === "function") {
        return new z(function () {
          return q(e.F());
        });
      }
      throw Error("Not an iterator or iterable.");
    }
    function q(n) {
      if (!(n instanceof R)) return n;
      let i = !1;
      return {
        next: function () {
          for (var e; !i; ) {
            try {
              e = n.next();
              break;
            } catch (t) {
              if (t !== zt) throw t;
              i = !0;
            }
          }
          return { value: e, done: i };
        },
      };
    }
    function z(e) {
      this.g = e;
    }
    function W(e) {
      this.h = e;
    }
    function B(e) {
      z.call(this, function () {
        return e;
      }),
        (this.h = e);
    }
    function U(e) {
      (this.h = {}), (this.g = []), (this.i = this.size = 0);
      let t = arguments.length;
      if (t > 1) {
        if (t % 2) throw Error("Uneven number of arguments");
        for (var n = 0; n < t; n += 2) this.set(arguments[n], arguments[n + 1]);
      } else if (e) {
        if (e instanceof U) {
          for (t = e.G(), n = 0; n < t.length; n++) this.set(t[n], e.get(t[n]));
        } else for (n in e) this.set(n, e[n]);
      }
    }
    function V(e) {
      if (e.size != e.g.length) {
        for (var t = 0, n = 0; t < e.g.length; ) {
          var i = e.g[t];
          K(e.h, i) && (e.g[n++] = i), t++;
        }
        e.g.length = n;
      }
      if (e.size != e.g.length) {
        const r = {};
        for (n = t = 0; t < e.g.length; ) {
          K(r, (i = e.g[t])) || (r[(e.g[n++] = i)] = 1), t++;
        }
        e.g.length = n;
      }
    }
    function K(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    function Y(e, t) {
      if (e) {
        e = e.split("&");
        for (let n = 0; n < e.length; n++) {
          const i = e[n].indexOf("=");
          let r = null;
          if (i >= 0) {
            var o = e[n].substring(0, i);
            r = e[n].substring(i + 1);
          } else o = e[n];
          t(o, r ? decodeURIComponent(r.replace(/\+/g, " ")) : "");
        }
      }
    }
    function X(e) {
      let t;
      (this.g = this.s = this.j = ""),
        (this.v = null),
        (this.o = this.h = ""),
        (this.l = !1),
        e instanceof X
          ? ((this.l = e.l),
            G(this, e.j),
            (this.s = e.s),
            (this.g = e.g),
            Q(this, e.v),
            (this.h = e.h),
            J(this, se(e.i)),
            (this.o = e.o))
          : e && (t = String(e).match(Wt))
            ? ((this.l = !1),
              G(this, t[1] || "", !0),
              (this.s = Z(t[2] || "")),
              (this.g = Z(t[3] || "", !0)),
              Q(this, t[4]),
              (this.h = Z(t[5] || "", !0)),
              J(this, t[6] || "", !0),
              (this.o = Z(t[7] || "")))
            : ((this.l = !1), (this.i = new ne(null, this.l)));
    }
    function G(e, t, n) {
      (e.j = n ? Z(t, !0) : t), e.j && (e.j = e.j.replace(/:$/, ""));
    }
    function Q(e, t) {
      if (t) {
        if (((t = Number(t)), isNaN(t) || t < 0)) {
          throw Error("Bad port number " + t);
        }
        e.v = t;
      } else e.v = null;
    }
    function J(e, t, n) {
      t instanceof ne
        ? ((e.i = t), le(e.i, e.l))
        : (n || (t = ee(t, Kt)), (e.i = new ne(t, e.l)));
    }
    function Z(e, t) {
      return e
        ? t
          ? decodeURI(e.replace(/%25/g, "%2525"))
          : decodeURIComponent(e)
        : "";
    }
    function ee(e, t, n) {
      return typeof e === "string"
        ? ((e = encodeURI(e).replace(t, te)),
          n && (e = e.replace(/%25([0-9a-fA-F]{2})/g, "%$1")),
          e)
        : null;
    }
    function te(e) {
      return (
        "%" +
        (((e = e.charCodeAt(0)) >> 4) & 15).toString(16) +
        (15 & e).toString(16)
      );
    }
    function ne(e, t) {
      (this.h = this.g = null), (this.i = e || null), (this.j = !!t);
    }
    function ie(n) {
      n.g ||
        ((n.g = new U()),
        (n.h = 0),
        n.i &&
          Y(n.i, function (e, t) {
            n.add(decodeURIComponent(e.replace(/\+/g, " ")), t);
          }));
    }
    function re(e, t) {
      ie(e),
        (t = ae(e, t)),
        e.g.has(t) &&
          ((e.i = null),
          (e.h -= e.g.get(t).length),
          K((e = e.g).h, t) &&
            (delete e.h[t], --e.size, e.i++, e.g.length > 2 * e.size && V(e)));
    }
    function oe(e, t) {
      return ie(e), (t = ae(e, t)), e.g.has(t);
    }
    function se(e) {
      const t = new ne();
      return (t.i = e.i), e.g && ((t.g = new U(e.g)), (t.h = e.h)), t;
    }
    function ae(e, t) {
      return (t = String(t)), e.j && (t = t.toLowerCase()), t;
    }
    function le(e, t) {
      t &&
        !e.j &&
        (ie(e),
        (e.i = null),
        e.g.forEach(function (e, t) {
          let n = t.toLowerCase();
          if (t != n && (re(this, t), re(this, n), e.length > 0)) {
            this.i = null;
            const i = (t = this.g).set;
            n = ae(this, n);
            let r = e.length;
            if (r > 0) {
              for (var o = Array(r), s = 0; s < r; s++) o[s] = e[s];
              r = o;
            } else r = [];
            i.call(t, n, r), (this.h += e.length);
          }
        }, e)),
        (e.j = t);
    }
    function ce(n, e) {
      O(e, function (e, t) {
        e && typeof e === "object" && e.T && (e = e.R()),
          t == "style"
            ? (n.style.cssText = e)
            : t == "class"
              ? (n.className = e)
              : t == "for"
                ? (n.htmlFor = e)
                : Gt.hasOwnProperty(t)
                  ? n.setAttribute(Gt[t], e)
                  : t.lastIndexOf("aria-", 0) == 0 ||
                      t.lastIndexOf("data-", 0) == 0
                    ? n.setAttribute(t, e)
                    : (n[t] = e);
      });
    }
    function ue(e, t) {
      return (
        (t = String(t)),
        e.contentType === "application/xhtml+xml" && (t = t.toLowerCase()),
        e.createElement(t)
      );
    }
    function de(e) {
      this.g = e || Dt.document || document;
    }
    function he(e, t) {
      (this.i = e), (this.j = t), (this.h = 0), (this.g = null);
    }
    function pe(e, t) {
      e.j(t), e.h < 100 && (e.h++, (t.next = e.g), (e.g = t));
    }
    function fe() {
      let e = Dt.MessageChannel;
      if (
        (void 0 === e &&
          typeof window !== "undefined" &&
          window.postMessage &&
          window.addEventListener &&
          At.indexOf("Presto") == -1 &&
          (e = function () {
            let e = ue(document, "IFRAME");
            (e.style.display = "none"), document.documentElement.appendChild(e);
            const t = e.contentWindow;
            (e = t.document).open(), e.close();
            const n = "callImmediate" + Math.random();
            const i =
              t.location.protocol == "file:"
                ? "*"
                : t.location.protocol + "//" + t.location.host;
            (e = _(function (e) {
              (i != "*" && e.origin != i) ||
                e.data != n ||
                this.port1.onmessage();
            }, this)),
              t.addEventListener("message", e, !1),
              (this.port1 = {}),
              (this.port2 = {
                postMessage: function () {
                  t.postMessage(n, i);
                },
              });
          }),
        void 0 === e || At.indexOf("Trident") != -1 || At.indexOf("MSIE") != -1)
      ) {
        return function (e) {
          Dt.setTimeout(e, 0);
        };
      }
      const t = new e();
      let n = {};
      let i = n;
      return (
        (t.port1.onmessage = function () {
          if (void 0 !== n.next) {
            const e = (n = n.next).P;
            (n.P = null), e();
          }
        }),
        function (e) {
          (i.next = { P: e }), (i = i.next), t.port2.postMessage(0);
        }
      );
    }
    function ge(e) {
      Dt.setTimeout(function () {
        throw e;
      }, 0);
    }
    function me() {
      this.h = this.g = null;
    }
    function ve() {
      const e = en;
      let t = null;
      return (
        e.g &&
          ((t = e.g), (e.g = e.g.next), e.g || (e.h = null), (t.next = null)),
        t
      );
    }
    function ye() {
      this.next = this.g = this.h = null;
    }
    function be(e, t) {
      Qt || _e(), Zt || (Qt(), (Zt = !0)), en.add(e, t);
    }
    function _e() {
      if (Dt.Promise && Dt.Promise.resolve) {
        const e = Dt.Promise.resolve(void 0);
        Qt = function () {
          e.then(xe);
        };
      } else {
        Qt = function () {
          const e = xe;
          typeof Dt.setImmediate !== "function" ||
          (Dt.Window &&
            Dt.Window.prototype &&
            At.indexOf("Edge") == -1 &&
            Dt.Window.prototype.setImmediate == Dt.setImmediate)
            ? (Xt || (Xt = fe()), Xt(e))
            : Dt.setImmediate(e);
        };
      }
    }
    function xe() {
      for (var e; (e = ve()); ) {
        try {
          e.h.call(e.g);
        } catch (t) {
          ge(t);
        }
        pe(Jt, e);
      }
      Zt = !1;
    }
    function we(e) {
      if (!e) return !1;
      try {
        return !!e.$goog_Thenable;
      } catch (t) {
        return !1;
      }
    }
    function Ce(e) {
      if (
        ((this.g = 0),
        (this.s = void 0),
        (this.j = this.h = this.i = null),
        (this.l = this.o = !1),
        e != m)
      ) {
        try {
          const t = this;
          e.call(
            void 0,
            function (e) {
              Ne(t, 2, e);
            },
            function (e) {
              Ne(t, 3, e);
            },
          );
        } catch (n) {
          Ne(this, 3, n);
        }
      }
    }
    function ke() {
      (this.next = this.i = this.h = this.j = this.g = null), (this.l = !1);
    }
    function Se(e, t, n) {
      const i = tn.get();
      return (i.j = e), (i.h = t), (i.i = n), i;
    }
    function Te(e, t) {
      if (e.g == 0) {
        if (e.i) {
          const n = e.i;
          if (n.h) {
            for (
              var i = 0, r = null, o = null, s = n.h;
              s && (s.l || (i++, s.g == e && (r = s), !(r && i > 1)));
              s = s.next
            ) {
              r || (o = s);
            }
            r &&
              (n.g == 0 && i == 1
                ? Te(n, t)
                : (o
                    ? ((i = o).next == n.j && (n.j = i), (i.next = i.next.next))
                    : Ae(n),
                  Me(n, r, 3, t)));
          }
          e.i = null;
        } else Ne(e, 3, t);
      }
    }
    function De(e, t) {
      e.h || (e.g != 2 && e.g != 3) || Ie(e),
        e.j ? (e.j.next = t) : (e.h = t),
        (e.j = t);
    }
    function je(e, o, s, a) {
      const t = Se(null, null, null);
      return (
        (t.g = new Ce(function (i, r) {
          (t.j = o
            ? function (e) {
                try {
                  const t = o.call(a, e);
                  i(t);
                } catch (n) {
                  r(n);
                }
              }
            : i),
            (t.h = s
              ? function (e) {
                  try {
                    const t = s.call(a, e);
                    void 0 === t && e instanceof Fe ? r(e) : i(t);
                  } catch (n) {
                    r(n);
                  }
                }
              : r);
        })),
        De((t.g.i = e), t),
        t.g
      );
    }
    function Ne(e, t, n) {
      if (e.g == 0) {
        e === n &&
          ((t = 3), (n = new TypeError("Promise cannot resolve to itself"))),
          (e.g = 1);
        e: {
          const i = n;
          const r = e.C;
          const o = e.D;
          if (i instanceof Ce) {
            De(i, Se(r || m, o || null, e));
            var s = !0;
          } else if (we(i)) i.then(r, o, e), (s = !0);
          else {
            if (v(i)) {
              try {
                const a = i.then;
                if (typeof a === "function") {
                  Ee(i, a, r, o, e), (s = !0);
                  break e;
                }
              } catch (l) {
                o.call(e, l), (s = !0);
                break e;
              }
            }
            s = !1;
          }
        }
        s ||
          ((e.s = n),
          (e.g = t),
          (e.i = null),
          Ie(e),
          t != 3 || n instanceof Fe || Pe(e, n));
      }
    }
    function Ee(e, t, n, i, r) {
      function o(e) {
        a || ((a = !0), i.call(r, e));
      }
      function s(e) {
        a || ((a = !0), n.call(r, e));
      }
      var a = !1;
      try {
        t.call(e, s, o);
      } catch (l) {
        o(l);
      }
    }
    function Ie(e) {
      e.o || ((e.o = !0), be(e.v, e));
    }
    function Ae(e) {
      let t = null;
      return (
        e.h && ((t = e.h), (e.h = t.next), (t.next = null)),
        e.h || (e.j = null),
        t
      );
    }
    function Me(e, t, n, i) {
      if (n == 3 && t.h && !t.l) for (; e && e.l; e = e.i) e.l = !1;
      if (t.g) (t.g.i = null), Oe(t, n, i);
      else {
        try {
          t.l ? t.j.call(t.i) : Oe(t, n, i);
        } catch (r) {
          nn.call(null, r);
        }
      }
      pe(tn, t);
    }
    function Oe(e, t, n) {
      t == 2 ? e.j.call(e.i, n) : e.h && e.h.call(e.i, n);
    }
    function Pe(e, t) {
      (e.l = !0),
        be(function () {
          e.l && nn.call(null, t);
        });
    }
    function Fe(e) {
      k.call(this, e);
    }
    function Le(e) {
      const t = Ke;
      (this.l = []),
        (this.J = t),
        (this.I = e || null),
        (this.j = this.i = !1),
        (this.h = void 0),
        (this.C = this.L = this.s = !1),
        (this.o = 0),
        (this.g = null),
        (this.v = 0);
    }
    function He(e, t, n) {
      (e.i = !0), (e.h = n), (e.j = !t), ze(e);
    }
    function Re(e) {
      if (e.i) {
        if (!e.C) throw new We(e);
        e.C = !1;
      }
    }
    function $e(e, t, n, i) {
      e.l.push([t, n, i]), e.i && ze(e);
    }
    function qe(e) {
      return Lt(e.l, function (e) {
        return typeof e[1] === "function";
      });
    }
    function ze(e) {
      if (e.o && e.i && qe(e)) {
        var t = e.o;
        var n = rn[t];
        n && (Dt.clearTimeout(n.g), delete rn[t]), (e.o = 0);
      }
      e.g && (e.g.v--, delete e.g), (t = e.h);
      for (var i = (n = !1); e.l.length && !e.s; ) {
        let r = e.l.shift();
        let o = r[0];
        const s = r[1];
        if (((r = r[2]), (o = e.j ? s : o))) {
          try {
            var a = o.call(r || e.I, t);
            void 0 !== a &&
              ((e.j = e.j && (a == t || a instanceof Error)), (e.h = t = a)),
              (we(t) ||
                (typeof Dt.Promise === "function" &&
                  t instanceof Dt.Promise)) &&
                ((i = !0), (e.s = !0));
          } catch (l) {
            (t = l), (e.j = !0), qe(e) || (n = !0);
          }
        }
      }
      (e.h = t),
        i &&
          ((a = _(e.D, e, !0)),
          (i = _(e.D, e, !1)),
          t instanceof Le ? ($e(t, a, i), (t.L = !0)) : t.then(a, i)),
        n && ((t = new Ue(t)), (rn[t.g] = t), (e.o = t.g));
    }
    function We() {
      k.call(this);
    }
    function Be() {
      k.call(this);
    }
    function Ue(e) {
      (this.g = Dt.setTimeout(_(this.i, this), 0)), (this.h = e);
    }
    function Ve(e) {
      let t;
      return (t = (e || document).getElementsByTagName("HEAD")) &&
        t.length !== 0
        ? t[0]
        : e.documentElement;
    }
    function Ke() {
      if (this && this.U) {
        const e = this.U;
        e && e.tagName == "SCRIPT" && Ye(e, !0, this.W);
      }
    }
    function Ye(e, t, n) {
      n != null && Dt.clearTimeout(n),
        (e.onload = m),
        (e.onerror = m),
        (e.onreadystatechange = m),
        t &&
          window.setTimeout(function () {
            e && e.parentNode && e.parentNode.removeChild(e);
          }, 0);
    }
    function Xe(e, t) {
      let n = "Jsloader error (code #" + e + ")";
      t && (n += ": " + t), k.call(this, n), (this.code = e);
    }
    function Ge(e) {
      return I(e.format, e.ba, e.ya || {});
    }
    function Qe(e) {
      const t = { timeout: 3e4, attributes: { async: !1, defer: !1 } };
      const n = t.document || document;
      const i = N(e).toString();
      const r = ue(new de(n).g, "SCRIPT");
      let o = { U: r, W: void 0 };
      const s = new Le(o);
      let a = null;
      const l = t.timeout != null ? t.timeout : 5e3;
      return (
        l > 0 &&
          ((a = window.setTimeout(function () {
            Ye(r, !0);
            const e = new Xe(1, "Timeout reached for loading script " + i);
            Re(s), He(s, !1, e);
          }, l)),
          (o.W = a)),
        (r.onload = r.onreadystatechange =
          function () {
            (r.readyState &&
              r.readyState != "loaded" &&
              r.readyState != "complete") ||
              (Ye(r, t.oa || !1, a), Re(s), He(s, !0, null));
          }),
        (r.onerror = function () {
          Ye(r, !0, a);
          const e = new Xe(0, "Error while loading script " + i);
          Re(s), He(s, !1, e);
        }),
        P((o = t.attributes || {}), {
          type: "text/javascript",
          charset: "UTF-8",
        }),
        ce(r, o),
        (r.src = N(e)),
        F(r),
        Ve(n).appendChild(r),
        s
      );
    }
    function Je(e, t, n) {
      const i = Qe((e = I(e, t, (n = n || {}))));
      return new Promise(function (e) {
        $e(i, e, null, void 0);
      });
    }
    function Ze() {
      return new Promise(function (t) {
        typeof window === "undefined" || document.readyState === "complete"
          ? t()
          : window.addEventListener
            ? (document.addEventListener("DOMContentLoaded", t, !0),
              window.addEventListener("load", t, !0))
            : window.attachEvent
              ? window.attachEvent("onload", t)
              : typeof window.onload !== "function"
                ? (window.onload = t)
                : (window.onload = function (e) {
                    window.onload && window.onload(e), t();
                  });
      });
    }
    function et() {
      (cn = ln = ""),
        (un = sn = on = null),
        g("google.load") ||
          (x("google.load", gt), x("google.setOnLoadCallback", It.V));
      let e = document.getElementsByTagName("script");
      let t = (e = new X(
        (e = (document.currentScript || e[e.length - 1]).getAttribute("src")),
      )).g;
      (an = t = t.match(/^www\.gstatic\.cn/) ? "gstatic.cn" : "gstatic.com"),
        tt(e);
    }
    function tt(e) {
      let t = (e = new ne(e.i.toString())).get("callback");
      if (
        (typeof t === "string" && ((t = ft(t)), Ze().then(t)),
        typeof (e = e.get("autoload")) === "string")
      ) {
        try {
          if (e !== "") {
            const n = JSON.parse(e).modules;
            for (e = 0; e < n.length; e++) {
              const i = n[e];
              gt(i.name, i.version, i);
            }
          }
        } catch (r) {
          throw Error("Autoload failed with: " + r);
        }
      }
    }
    function nt(e) {
      let t;
      let n = e;
      const i = e.match(/^testing-/);
      i && (n = n.replace(/^testing-/, "")), (e = n);
      do {
        if (n === It.m.M.O[n]) {
          throw Error("Infinite loop in version mapping: " + n);
        }
        (t = It.m.M.O[n]) && (n = t);
      } while (t);
      return (
        (t = (i ? "testing-" : "") + n),
        { version: n == "pre-45" ? e : t, ha: t }
      );
    }
    function it(e) {
      const t = It.m.N.ia[an].loader;
      const i = nt(e);
      return Je(t, { version: i.ha }).then(function () {
        const n =
          g("google.charts.loader.VersionSpecific.load") ||
          g("google.charts.loader.publicLoad") ||
          g("google.charts.versionSpecific.load");
        if (!n) throw Error("Bad version: " + e);
        un = function (e) {
          if ((e = n(i.version, e)) == null || e.then == null) {
            const t =
              g("google.charts.loader.publicSetOnLoadCallback") ||
              g("google.charts.versionSpecific.setOnLoadCallback");
            (e = new Promise(function (e) {
              t(e);
            })).then = t;
          }
          return e;
        };
      });
    }
    function rt(e) {
      typeof e === "string" && (e = [e]),
        (Array.isArray(e) && e.length !== 0) || (e = It.m.N.ea);
      let t = [];
      return (
        e.forEach(function (e) {
          (e = e.toLowerCase()), (t = t.concat(e.split(/[\s,]+\s*/)));
        }),
        t
      );
    }
    function ot(e) {
      for (
        var t = (e = e || "").replace(/-/g, "_").toLowerCase();
        typeof t === "string";

      ) {
        (e = t), (t = It.m.aa[t]) === e && (t = !1);
      }
      return (
        t ||
          (e.match(/_[^_]+$/)
            ? (e = ot((e = e.replace(/_[^_]+$/, ""))))
            : (e = "en")),
        e
      );
    }
    function st(e) {
      return (
        (e = e || ""),
        ln !== "" &&
          ln !== e &&
          (console.warn(
            " Attempting to load version '" +
              e +
              "' of Google Charts, but the previously loaded '" +
              ln +
              "' will be used instead.",
          ),
          (e = ln)),
        (ln = e || "")
      );
    }
    function at(e) {
      return (
        (e = e || ""),
        cn !== "" &&
          cn !== e &&
          (console.warn(
            " Attempting to load Google Charts for language '" +
              e +
              "', but the previously loaded '" +
              cn +
              "' will be used instead.",
          ),
          (e = cn)),
        e === "en" && (e = ""),
        (cn = e || "")
      );
    }
    function lt(e) {
      let t;
      const n = {};
      for (t in e) n[t] = e[t];
      return n;
    }
    function ct(e, t) {
      ((t = lt(t)).domain = an), (t.callback = ft(t.callback)), (e = st(e));
      let n = t.language;
      if (((n = at(ot(n))), (t.language = n), !on)) {
        if (t.enableUrlSettings && window.URLSearchParams) {
          try {
            e =
              new URLSearchParams(top.location.search).get("charts-version") ||
              e;
          } catch (i) {
            console.info("Failed to get charts-version from top URL", i);
          }
        }
        on = it(e);
      }
      return (
        (t.packages = rt(t.packages)),
        (sn = on.then(function () {
          return un(t);
        }))
      );
    }
    function ut(e, t, n) {
      console.warn("Loading Maps API with the jsapi loader is deprecated."),
        (e = (n = n || {}).key || n.client);
      const i = n.libraries;
      const r = (function (e) {
        for (var t = {}, n = 0; n < e.length; n++) {
          const i = e[n];
          t[i[0]] = i[1];
        }
        return t;
      })(
        n.other_params
          ? n.other_params.split("&").map(function (e) {
              return e.split("=");
            })
          : [],
      );
      const o = Object.assign({}, { key: e, ua: i }, r);
      const s = t === "2" ? hn : dn;
      sn = new Promise(function (e) {
        const t = ft(n && n.callback);
        Je(s, {}, o).then(t).then(e);
      });
    }
    function dt(e, t, n) {
      v(n) && n.packages
        ? (Array.isArray(n.packages) ? n.packages : [n.packages]).includes(
            "inputtools",
          )
          ? (console.warn(
              'Loading "elements" with the jsapi loader is deprecated.\nPlease load ' +
                pn +
                " directly.",
            ),
            (sn = new Promise(function (e) {
              const t = ft(n && n.callback);
              Je(pn, {}, {}).then(t).then(e);
            })))
          : console.error(
              'Loading "elements" other than "inputtools" is unsupported.',
            )
        : console.error(
            "google.load of elements was invoked without specifying packages",
          );
    }
    function ht(e, t) {
      let n;
      do {
        if (e === t[e]) {
          throw Error("Infinite loop in version mapping for version " + e);
        }
        (n = t[e]) && (e = n);
      } while (n);
      return e;
    }
    function pt(e, t, n) {
      let i = It.m.$.ga[e];
      if (i) {
        if (((t = ht(t, i.aliases)), !(i = i.versions[t]))) {
          throw Error("Unknown version, " + t + ", of " + e + ".");
        }
        const r = { module: e, version: t || "", file: i.compressed };
        (t = N(Ge({ format: fn, ba: r })).toString()),
          console.warn(
            "Loading modules with the jsapi loader is deprecated.\nPlease load " +
              e +
              " directly from " +
              t +
              ".",
          ),
          (sn = new Promise(function (e) {
            const t = ft(n && n.callback);
            Je(fn, r).then(t).then(e);
          }));
      } else {
        setTimeout(function () {
          throw Error('Module "' + e + '" is not supported.');
        }, 0);
      }
    }
    function ft(n) {
      return function () {
        if (typeof n === "function") n();
        else if (typeof n === "string" && n !== "") {
          try {
            const e = g(n);
            if (typeof e !== "function") {
              throw Error("Type of '" + n + "' is " + typeof e + ".");
            }
            e();
          } catch (t) {
            throw Error("Callback of " + n + " failed with: " + t);
          }
        }
      };
    }
    function gt() {
      for (var e = [], t = 0; t < arguments.length; ++t) e[t] = arguments[t];
      switch (e[0]) {
        case "maps":
          ut.apply(null, n(e));
          break;
        case "elements":
          dt.apply(null, n(e));
          break;
        case "visualization":
          It.load.apply(It, n(e));
          break;
        default:
          pt.apply(null, n(e));
      }
    }
    let mt;
    var vt =
      typeof Object.defineProperties === "function"
        ? Object.defineProperty
        : function (e, t, n) {
            return (
              e == Array.prototype || e == Object.prototype || (e[t] = n.value),
              e
            );
          };
    var yt = e(this);
    t("Symbol", function (e) {
      function t(e) {
        if (this instanceof t) {
          throw new TypeError("Symbol is not a constructor");
        }
        return new n(i + (e || "") + "_" + r++, e);
      }
      function n(e, t) {
        (this.g = e),
          vt(this, "description", { configurable: !0, writable: !0, value: t });
      }
      if (e) return e;
      n.prototype.toString = function () {
        return this.g;
      };
      var i = "jscomp_symbol_" + ((1e9 * Math.random()) >>> 0) + "_";
      var r = 0;
      return t;
    }),
      t("Symbol.iterator", function (e) {
        if (e) return e;
        e = Symbol("Symbol.iterator");
        for (
          let t =
              "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(
                " ",
              ),
            n = 0;
          n < t.length;
          n++
        ) {
          const i = yt[t[n]];
          typeof i === "function" &&
            typeof i.prototype[e] !== "function" &&
            vt(i.prototype, e, {
              configurable: !0,
              writable: !0,
              value: function () {
                return l(r(this));
              },
            });
        }
        return e;
      }),
      t("Symbol.asyncIterator", function (e) {
        return e || Symbol("Symbol.asyncIterator");
      });
    let bt;
    var _t =
      typeof Object.create === "function"
        ? Object.create
        : function (e) {
            function t() {}
            return (t.prototype = e), new t();
          };
    const xt = (function () {
      function e() {
        function e() {}
        return (
          new e(),
          Reflect.construct(e, [], function () {}),
          new e() instanceof e
        );
      }
      if (typeof Reflect !== "undefined" && Reflect.construct) {
        if (e()) return Reflect.construct;
        const i = Reflect.construct;
        return function (e, t, n) {
          return (e = i(e, t)), n && Reflect.setPrototypeOf(e, n.prototype), e;
        };
      }
      return function (e, t, n) {
        return (
          void 0 === n && (n = e),
          (n = _t(n.prototype || Object.prototype)),
          Function.prototype.apply.call(e, n, t) || n
        );
      };
    })();
    if (typeof Object.setPrototypeOf === "function") bt = Object.setPrototypeOf;
    else {
      let wt;
      e: {
        const Ct = { a: !0 };
        const kt = {};
        try {
          (kt.__proto__ = Ct), (wt = kt.a);
          break e;
        } catch (gn) {}
        wt = !1;
      }
      bt = wt
        ? function (e, t) {
            if (((e.__proto__ = t), e.__proto__ !== t)) {
              throw new TypeError(e + " is not extensible");
            }
            return e;
          }
        : null;
    }
    var St = bt;
    t("Reflect", function (e) {
      return e || {};
    }),
      t("Reflect.construct", function () {
        return xt;
      }),
      t("Reflect.setPrototypeOf", function (e) {
        return (
          e ||
          (St
            ? function (e, t) {
                try {
                  return St(e, t), !0;
                } catch (n) {
                  return !1;
                }
              }
            : null)
        );
      }),
      t("WeakMap", function (r) {
        function e(e) {
          if (((this.g = (a += Math.random() + 1).toString()), e)) {
            e = c(e);
            for (var t; !(t = e.next()).done; ) {
              (t = t.value), this.set(t[0], t[1]);
            }
          }
        }
        function n() {}
        function i(e) {
          const t = typeof e;
          return (t === "object" && e !== null) || t === "function";
        }
        function o(e) {
          if (!u(e, s)) {
            const t = new n();
            vt(e, s, { value: t });
          }
        }
        function t(e) {
          const t = Object[e];
          t &&
            (Object[e] = function (e) {
              return e instanceof n
                ? e
                : (Object.isExtensible(e) && o(e), t(e));
            });
        }
        if (
          (function () {
            if (!r || !Object.seal) return !1;
            try {
              const e = Object.seal({});
              const t = Object.seal({});
              const n = new r([
                [e, 2],
                [t, 3],
              ]);
              return (
                n.get(e) == 2 &&
                n.get(t) == 3 &&
                (n.delete(e), n.set(t, 4), !n.has(e) && n.get(t) == 4)
              );
            } catch (i) {
              return !1;
            }
          })()
        ) {
          return r;
        }
        var s = "$jscomp_hidden_" + Math.random();
        t("freeze"), t("preventExtensions"), t("seal");
        var a = 0;
        return (
          (e.prototype.set = function (e, t) {
            if (!i(e)) throw Error("Invalid WeakMap key");
            if ((o(e), !u(e, s))) throw Error("WeakMap key fail: " + e);
            return (e[s][this.g] = t), this;
          }),
          (e.prototype.get = function (e) {
            return i(e) && u(e, s) ? e[s][this.g] : void 0;
          }),
          (e.prototype.has = function (e) {
            return i(e) && u(e, s) && u(e[s], this.g);
          }),
          (e.prototype.delete = function (e) {
            return (
              !!(i(e) && u(e, s) && u(e[s], this.g)) && delete e[s][this.g]
            );
          }),
          e
        );
      }),
      t("Map", function (o) {
        function n() {
          const e = {};
          return (e.A = e.next = e.head = e);
        }
        function e(e, t) {
          let n = e.g;
          return l(function () {
            if (n) {
              for (; n.head != e.g; ) n = n.A;
              for (; n.next != n.head; ) {
                return (n = n.next), { done: !1, value: t(n) };
              }
              n = null;
            }
            return { done: !0, value: void 0 };
          });
        }
        function i(e, t) {
          let n = t && typeof t;
          n == "object" || n == "function"
            ? s.has(t)
              ? (n = s.get(t))
              : ((n = "" + ++a), s.set(t, n))
            : (n = "p_" + t);
          const i = e.h[n];
          if (i && u(e.h, n)) {
            for (e = 0; e < i.length; e++) {
              const r = i[e];
              if ((t != t && r.key != r.key) || t === r.key) {
                return { id: n, list: i, index: e, u: r };
              }
            }
          }
          return { id: n, list: i, index: -1, u: void 0 };
        }
        function t(e) {
          if (((this.h = {}), (this.g = n()), (this.size = 0), e)) {
            e = c(e);
            for (var t; !(t = e.next()).done; ) {
              (t = t.value), this.set(t[0], t[1]);
            }
          }
        }
        if (
          (function () {
            if (
              !o ||
              typeof o !== "function" ||
              !o.prototype.entries ||
              typeof Object.seal !== "function"
            ) {
              return !1;
            }
            try {
              const e = Object.seal({ x: 4 });
              const t = new o(c([[e, "s"]]));
              if (
                t.get(e) != "s" ||
                t.size != 1 ||
                t.get({ x: 4 }) ||
                t.set({ x: 4 }, "t") != t ||
                t.size != 2
              ) {
                return !1;
              }
              const n = t.entries();
              let i = n.next();
              return (
                !i.done &&
                i.value[0] == e &&
                i.value[1] == "s" &&
                !(
                  (i = n.next()).done ||
                  i.value[0].x != 4 ||
                  i.value[1] != "t" ||
                  !n.next().done
                )
              );
            } catch (r) {
              return !1;
            }
          })()
        ) {
          return o;
        }
        var s = new WeakMap();
        (t.prototype.set = function (e, t) {
          const n = i(this, (e = e === 0 ? 0 : e));
          return (
            n.list || (n.list = this.h[n.id] = []),
            n.u
              ? (n.u.value = t)
              : ((n.u = {
                  next: this.g,
                  A: this.g.A,
                  head: this.g,
                  key: e,
                  value: t,
                }),
                n.list.push(n.u),
                (this.g.A.next = n.u),
                (this.g.A = n.u),
                this.size++),
            this
          );
        }),
          (t.prototype.delete = function (e) {
            return (
              !(!(e = i(this, e)).u || !e.list) &&
              (e.list.splice(e.index, 1),
              e.list.length || delete this.h[e.id],
              (e.u.A.next = e.u.next),
              (e.u.next.A = e.u.A),
              (e.u.head = null),
              this.size--,
              !0)
            );
          }),
          (t.prototype.clear = function () {
            (this.h = {}), (this.g = this.g.A = n()), (this.size = 0);
          }),
          (t.prototype.has = function (e) {
            return !!i(this, e).u;
          }),
          (t.prototype.get = function (e) {
            return (e = i(this, e).u) && e.value;
          }),
          (t.prototype.entries = function () {
            return e(this, function (e) {
              return [e.key, e.value];
            });
          }),
          (t.prototype.keys = function () {
            return e(this, function (e) {
              return e.key;
            });
          }),
          (t.prototype.values = function () {
            return e(this, function (e) {
              return e.value;
            });
          }),
          (t.prototype.forEach = function (e, t) {
            for (var n, i = this.entries(); !(n = i.next()).done; ) {
              (n = n.value), e.call(t, n[1], n[0], this);
            }
          }),
          (t.prototype[Symbol.iterator] = t.prototype.entries);
        var a = 0;
        return t;
      }),
      t("String.prototype.endsWith", function (e) {
        return (
          e ||
          function (e, t) {
            const n = s(this, e, "endsWith");
            void 0 === t && (t = n.length),
              (t = Math.max(0, Math.min(0 | t, n.length)));
            for (var i = e.length; i > 0 && t > 0; ) {
              if (n[--t] != e[--i]) return !1;
            }
            return i <= 0;
          }
        );
      }),
      t("Array.prototype.find", function (e) {
        return (
          e ||
          function (e, t) {
            return o(this, e, t).X;
          }
        );
      }),
      t("String.prototype.startsWith", function (e) {
        return (
          e ||
          function (e, t) {
            const n = s(this, e, "startsWith");
            const i = n.length;
            const r = e.length;
            t = Math.max(0, Math.min(0 | t, n.length));
            for (var o = 0; o < r && t < i; ) if (n[t++] != e[o++]) return !1;
            return r <= o;
          }
        );
      }),
      t("String.prototype.repeat", function (e) {
        return (
          e ||
          function (e) {
            let t = s(this, null, "repeat");
            if (e < 0 || e > 1342177279) {
              throw new RangeError("Invalid count value");
            }
            e |= 0;
            for (var n = ""; e; ) 1 & e && (n += t), (e >>>= 1) && (t += t);
            return n;
          }
        );
      }),
      t("Array.prototype.keys", function (e) {
        return (
          e ||
          function () {
            return a(this, function (e) {
              return e;
            });
          }
        );
      }),
      t("Array.from", function (e) {
        return (
          e ||
          function (e, t, n) {
            t =
              t != null
                ? t
                : function (e) {
                    return e;
                  };
            const i = [];
            let r =
              typeof Symbol !== "undefined" &&
              Symbol.iterator &&
              e[Symbol.iterator];
            if (typeof r === "function") {
              e = r.call(e);
              for (var o = 0; !(r = e.next()).done; ) {
                i.push(t.call(n, r.value, o++));
              }
            } else {
              for (r = e.length, o = 0; o < r; o++) i.push(t.call(n, e[o], o));
            }
            return i;
          }
        );
      }),
      t("Array.prototype.values", function (e) {
        return (
          e ||
          function () {
            return a(this, function (e, t) {
              return t;
            });
          }
        );
      }),
      t("String.prototype.trimLeft", function (e) {
        function t() {
          return this.replace(/^[\s\xa0]+/, "");
        }
        return e || t;
      }),
      t("String.prototype.trimStart", function (e) {
        return e || String.prototype.trimLeft;
      }),
      t("Object.setPrototypeOf", function (e) {
        return e || St;
      });
    const Tt =
      typeof Object.assign === "function"
        ? Object.assign
        : function (e) {
            for (let t = 1; t < arguments.length; t++) {
              const n = arguments[t];
              if (n) for (const i in n) u(n, i) && (e[i] = n[i]);
            }
            return e;
          };
    t("Object.assign", function (e) {
      return e || Tt;
    }),
      t("Promise", function (e) {
        function a(e) {
          (this.g = 0), (this.i = void 0), (this.h = []), (this.s = !1);
          const t = this.j();
          try {
            e(t.resolve, t.reject);
          } catch (n) {
            t.reject(n);
          }
        }
        function t() {
          this.g = null;
        }
        function l(t) {
          return t instanceof a
            ? t
            : new a(function (e) {
                e(t);
              });
        }
        if (e) return e;
        t.prototype.h = function (e) {
          if (this.g == null) {
            this.g = [];
            const t = this;
            this.i(function () {
              t.l();
            });
          }
          this.g.push(e);
        };
        const n = yt.setTimeout;
        (t.prototype.i = function (e) {
          n(e, 0);
        }),
          (t.prototype.l = function () {
            for (; this.g && this.g.length; ) {
              const e = this.g;
              this.g = [];
              for (let t = 0; t < e.length; ++t) {
                const n = e[t];
                e[t] = null;
                try {
                  n();
                } catch (i) {
                  this.j(i);
                }
              }
            }
            this.g = null;
          }),
          (t.prototype.j = function (e) {
            this.i(function () {
              throw e;
            });
          }),
          (a.prototype.j = function () {
            function e(t) {
              return function (e) {
                i || ((i = !0), t.call(n, e));
              };
            }
            var n = this;
            var i = !1;
            return { resolve: e(this.J), reject: e(this.l) };
          }),
          (a.prototype.J = function (e) {
            if (e === this) {
              this.l(new TypeError("A Promise cannot resolve to itself"));
            } else if (e instanceof a) this.Y(e);
            else {
              e: switch (typeof e) {
                case "object":
                  var t = e != null;
                  break e;
                case "function":
                  t = !0;
                  break e;
                default:
                  t = !1;
              }
              t ? this.I(e) : this.o(e);
            }
          }),
          (a.prototype.I = function (e) {
            let t = void 0;
            try {
              t = e.then;
            } catch (n) {
              return void this.l(n);
            }
            typeof t === "function" ? this.Z(t, e) : this.o(e);
          }),
          (a.prototype.l = function (e) {
            this.v(2, e);
          }),
          (a.prototype.o = function (e) {
            this.v(1, e);
          }),
          (a.prototype.v = function (e, t) {
            if (this.g != 0) {
              throw Error(
                "Cannot settle(" +
                  e +
                  ", " +
                  t +
                  "): Promise already settled in state" +
                  this.g,
              );
            }
            (this.g = e), (this.i = t), this.g === 2 && this.L(), this.C();
          }),
          (a.prototype.L = function () {
            const t = this;
            n(function () {
              if (t.D()) {
                const e = yt.console;
                void 0 !== e && e.error(t.i);
              }
            }, 1);
          }),
          (a.prototype.D = function () {
            if (this.s) return !1;
            let e = yt.CustomEvent;
            const t = yt.Event;
            const n = yt.dispatchEvent;
            return (
              void 0 === n ||
              (typeof e === "function"
                ? (e = new e("unhandledrejection", { cancelable: !0 }))
                : typeof t === "function"
                  ? (e = new t("unhandledrejection", { cancelable: !0 }))
                  : (e =
                      yt.document.createEvent("CustomEvent")).initCustomEvent(
                      "unhandledrejection",
                      !1,
                      !0,
                      e,
                    ),
              (e.promise = this),
              (e.reason = this.i),
              n(e))
            );
          }),
          (a.prototype.C = function () {
            if (this.h != null) {
              for (let e = 0; e < this.h.length; ++e) r.h(this.h[e]);
              this.h = null;
            }
          });
        var r = new t();
        return (
          (a.prototype.Y = function (e) {
            const t = this.j();
            e.K(t.resolve, t.reject);
          }),
          (a.prototype.Z = function (e, t) {
            const n = this.j();
            try {
              e.call(t, n.resolve, n.reject);
            } catch (i) {
              n.reject(i);
            }
          }),
          (a.prototype.then = function (e, t) {
            function n(n, e) {
              return typeof n === "function"
                ? function (e) {
                    try {
                      i(n(e));
                    } catch (t) {
                      r(t);
                    }
                  }
                : e;
            }
            let i;
            let r;
            const o = new a(function (e, t) {
              (i = e), (r = t);
            });
            return this.K(n(e, i), n(t, r)), o;
          }),
          (a.prototype.catch = function (e) {
            return this.then(void 0, e);
          }),
          (a.prototype.K = function (e, t) {
            function n() {
              switch (i.g) {
                case 1:
                  e(i.i);
                  break;
                case 2:
                  t(i.i);
                  break;
                default:
                  throw Error("Unexpected state: " + i.g);
              }
            }
            var i = this;
            this.h == null ? r.h(n) : this.h.push(n), (this.s = !0);
          }),
          (a.resolve = l),
          (a.reject = function (n) {
            return new a(function (e, t) {
              t(n);
            });
          }),
          (a.race = function (r) {
            return new a(function (e, t) {
              for (let n = c(r), i = n.next(); !i.done; i = n.next()) {
                l(i.value).K(e, t);
              }
            });
          }),
          (a.all = function (e) {
            const o = c(e);
            let s = o.next();
            return s.done
              ? l([])
              : new a(function (n, e) {
                  function t(t) {
                    return function (e) {
                      (i[t] = e), --r == 0 && n(i);
                    };
                  }
                  for (
                    var i = [], r = 0;
                    i.push(void 0),
                      r++,
                      l(s.value).K(t(i.length - 1), e),
                      !(s = o.next()).done;

                  );
                });
          }),
          a
        );
      }),
      t("Object.is", function (e) {
        return (
          e ||
          function (e, t) {
            return e === t ? e !== 0 || 1 / e == 1 / t : e != e && t != t;
          }
        );
      }),
      t("Array.prototype.includes", function (e) {
        return (
          e ||
          function (e, t) {
            let n = this;
            n instanceof String && (n = String(n));
            const i = n.length;
            for ((t = t || 0) < 0 && (t = Math.max(t + i, 0)); t < i; t++) {
              const r = n[t];
              if (r === e || Object.is(r, e)) return !0;
            }
            return !1;
          }
        );
      }),
      t("String.prototype.includes", function (e) {
        return (
          e ||
          function (e, t) {
            return s(this, e, "includes").indexOf(e, t || 0) !== -1;
          }
        );
      }),
      t("Array.prototype.copyWithin", function (e) {
        function r(e) {
          return (e = Number(e)), Infinity === e || -Infinity === e ? e : 0 | e;
        }
        return (
          e ||
          function (e, t, n) {
            const i = this.length;
            if (
              ((e = r(e)),
              (t = r(t)),
              (n = void 0 === n ? i : r(n)),
              (e = e < 0 ? Math.max(i + e, 0) : Math.min(e, i)),
              (t = t < 0 ? Math.max(i + t, 0) : Math.min(t, i)),
              (n = n < 0 ? Math.max(i + n, 0) : Math.min(n, i)),
              e < t)
            ) {
              for (; t < n; ) {
                t in this ? (this[e++] = this[t++]) : (delete this[e++], t++);
              }
            } else {
              for (e += (n = Math.min(n, i + t - e)) - t; t < n; ) {
                --n in this ? (this[--e] = this[n]) : delete this[--e];
              }
            }
            return this;
          }
        );
      }),
      t("Array.prototype.entries", function (e) {
        return (
          e ||
          function () {
            return a(this, function (e, t) {
              return [e, t];
            });
          }
        );
      }),
      t("Array.prototype.fill", function (e) {
        return (
          e ||
          function (e, t, n) {
            const i = this.length || 0;
            for (
              t < 0 && (t = Math.max(0, i + t)),
                (n == null || i < n) && (n = i),
                (n = Number(n)) < 0 && (n = Math.max(0, i + n)),
                t = Number(t || 0);
              t < n;
              t++
            ) {
              this[t] = e;
            }
            return this;
          }
        );
      }),
      t("Array.prototype.findIndex", function (e) {
        return (
          e ||
          function (e, t) {
            return o(this, e, t).S;
          }
        );
      }),
      t("Array.prototype.flat", function (e) {
        return (
          e ||
          function (e) {
            e = void 0 === e ? 1 : e;
            for (var t = [], n = 0; n < this.length; n++) {
              let i = this[n];
              Array.isArray(i) && e > 0
                ? ((i = Array.prototype.flat.call(i, e - 1)),
                  t.push.apply(t, i))
                : t.push(i);
            }
            return t;
          }
        );
      }),
      t("Array.prototype.flatMap", function (e) {
        return (
          e ||
          function (e, t) {
            for (var n = [], i = 0; i < this.length; i++) {
              const r = e.call(t, this[i], i, this);
              Array.isArray(r) ? n.push.apply(n, r) : n.push(r);
            }
            return n;
          }
        );
      }),
      t("Array.of", function (e) {
        return (
          e ||
          function (e) {
            return Array.from(arguments);
          }
        );
      }),
      t("globalThis", function (e) {
        return e || yt;
      }),
      t("Math.acosh", function (e) {
        return (
          e ||
          function (e) {
            return (e = Number(e)), Math.log(e + Math.sqrt(e * e - 1));
          }
        );
      }),
      t("Math.asinh", function (e) {
        return (
          e ||
          function (e) {
            if ((e = Number(e)) === 0) return e;
            const t = Math.log(Math.abs(e) + Math.sqrt(e * e + 1));
            return e < 0 ? -t : t;
          }
        );
      }),
      t("Math.log1p", function (e) {
        return (
          e ||
          function (e) {
            if ((e = Number(e)) < 0.25 && e > -0.25) {
              for (var t = e, n = 1, i = e, r = 0, o = 1; r != i; ) {
                i = (r = i) + ((o *= -1) * (t *= e)) / ++n;
              }
              return i;
            }
            return Math.log(1 + e);
          }
        );
      }),
      t("Math.atanh", function (e) {
        if (e) return e;
        const t = Math.log1p;
        return function (e) {
          return (e = Number(e)), (t(e) - t(-e)) / 2;
        };
      }),
      t("Math.cbrt", function (e) {
        return (
          e ||
          function (e) {
            if (e === 0) return e;
            e = Number(e);
            const t = Math.pow(Math.abs(e), 1 / 3);
            return e < 0 ? -t : t;
          }
        );
      }),
      t("Math.clz32", function (e) {
        return (
          e ||
          function (e) {
            if ((e = Number(e) >>> 0) === 0) return 32;
            let t = 0;
            return (
              (4294901760 & e) == 0 && ((e <<= 16), (t += 16)),
              (4278190080 & e) == 0 && ((e <<= 8), (t += 8)),
              (4026531840 & e) == 0 && ((e <<= 4), (t += 4)),
              (3221225472 & e) == 0 && ((e <<= 2), (t += 2)),
              (2147483648 & e) == 0 && t++,
              t
            );
          }
        );
      }),
      t("Math.cosh", function (e) {
        if (e) return e;
        const t = Math.exp;
        return function (e) {
          return (e = Number(e)), (t(e) + t(-e)) / 2;
        };
      }),
      t("Math.expm1", function (e) {
        return (
          e ||
          function (e) {
            if ((e = Number(e)) < 0.25 && e > -0.25) {
              for (var t = e, n = 1, i = e, r = 0; r != i; ) {
                i = (r = i) + (t *= e / ++n);
              }
              return i;
            }
            return Math.exp(e) - 1;
          }
        );
      }),
      t("Math.fround", function (e) {
        if (e) return e;
        if (typeof Float32Array !== "function") {
          return function (e) {
            return e;
          };
        }
        const t = new Float32Array(1);
        return function (e) {
          return (t[0] = e), t[0];
        };
      }),
      t("Math.hypot", function (e) {
        return (
          e ||
          function (e) {
            if (arguments.length < 2) {
              return arguments.length ? Math.abs(arguments[0]) : 0;
            }
            let t, n, i;
            for (t = i = 0; t < arguments.length; t++) {
              i = Math.max(i, Math.abs(arguments[t]));
            }
            if (i > 1e100 || i < 1e-100) {
              if (!i) return i;
              for (t = n = 0; t < arguments.length; t++) {
                var r = Number(arguments[t]) / i;
                n += r * r;
              }
              return Math.sqrt(n) * i;
            }
            for (t = n = 0; t < arguments.length; t++) {
              n += (r = Number(arguments[t])) * r;
            }
            return Math.sqrt(n);
          }
        );
      }),
      t("Math.imul", function (e) {
        return (
          e ||
          function (e, t) {
            const n = 65535 & (e = Number(e));
            const i = 65535 & (t = Number(t));
            return (
              (n * i +
                (((((e >>> 16) & 65535) * i + n * ((t >>> 16) & 65535)) <<
                  16) >>>
                  0)) |
              0
            );
          }
        );
      }),
      t("Math.log10", function (e) {
        return (
          e ||
          function (e) {
            return Math.log(e) / Math.LN10;
          }
        );
      }),
      t("Math.log2", function (e) {
        return (
          e ||
          function (e) {
            return Math.log(e) / Math.LN2;
          }
        );
      }),
      t("Math.sign", function (e) {
        return (
          e ||
          function (e) {
            return (e = Number(e)) === 0 || isNaN(e) ? e : e > 0 ? 1 : -1;
          }
        );
      }),
      t("Math.sinh", function (e) {
        if (e) return e;
        const t = Math.exp;
        return function (e) {
          return (e = Number(e)) === 0 ? e : (t(e) - t(-e)) / 2;
        };
      }),
      t("Math.tanh", function (e) {
        return (
          e ||
          function (e) {
            if ((e = Number(e)) === 0) return e;
            let t = Math.exp(-2 * Math.abs(e));
            return (t = (1 - t) / (1 + t)), e < 0 ? -t : t;
          }
        );
      }),
      t("Math.trunc", function (e) {
        return (
          e ||
          function (e) {
            if (
              ((e = Number(e)),
              isNaN(e) || Infinity === e || -Infinity === e || e === 0)
            ) {
              return e;
            }
            const t = Math.floor(Math.abs(e));
            return e < 0 ? -t : t;
          }
        );
      }),
      t("Number.EPSILON", function () {
        return Math.pow(2, -52);
      }),
      t("Number.MAX_SAFE_INTEGER", function () {
        return 9007199254740991;
      }),
      t("Number.MIN_SAFE_INTEGER", function () {
        return -9007199254740991;
      }),
      t("Number.isFinite", function (e) {
        return (
          e ||
          function (e) {
            return (
              typeof e === "number" &&
              !isNaN(e) &&
              Infinity !== e &&
              -Infinity !== e
            );
          }
        );
      }),
      t("Number.isInteger", function (e) {
        return (
          e ||
          function (e) {
            return !!Number.isFinite(e) && e === Math.floor(e);
          }
        );
      }),
      t("Number.isNaN", function (e) {
        return (
          e ||
          function (e) {
            return typeof e === "number" && isNaN(e);
          }
        );
      }),
      t("Number.isSafeInteger", function (e) {
        return (
          e ||
          function (e) {
            return (
              Number.isInteger(e) && Math.abs(e) <= Number.MAX_SAFE_INTEGER
            );
          }
        );
      }),
      t("Number.parseFloat", function (e) {
        return e || parseFloat;
      }),
      t("Number.parseInt", function (e) {
        return e || parseInt;
      }),
      t("Object.entries", function (e) {
        return (
          e ||
          function (e) {
            let t;
            const n = [];
            for (t in e) u(e, t) && n.push([t, e[t]]);
            return n;
          }
        );
      }),
      t("Object.fromEntries", function (e) {
        return (
          e ||
          function (e) {
            const t = {};
            if (!(Symbol.iterator in e)) {
              throw new TypeError(e + " is not iterable");
            }
            for (
              let n = (e = e[Symbol.iterator].call(e)).next();
              !n.done;
              n = e.next()
            ) {
              if (((n = n.value), Object(n) !== n)) {
                throw new TypeError(
                  "iterable for fromEntries should yield objects",
                );
              }
              t[n[0]] = n[1];
            }
            return t;
          }
        );
      }),
      t("Object.getOwnPropertySymbols", function (e) {
        return (
          e ||
          function () {
            return [];
          }
        );
      }),
      t("Reflect.ownKeys", function (e) {
        return (
          e ||
          function (e) {
            const t = [];
            const n = Object.getOwnPropertyNames(e);
            e = Object.getOwnPropertySymbols(e);
            for (let i = 0; i < n.length; i++) {
              (n[i].substring(0, 14) == "jscomp_symbol_" ? e : t).push(n[i]);
            }
            return t.concat(e);
          }
        );
      }),
      t("Object.getOwnPropertyDescriptors", function (e) {
        return (
          e ||
          function (e) {
            for (var t = {}, n = Reflect.ownKeys(e), i = 0; i < n.length; i++) {
              t[n[i]] = Object.getOwnPropertyDescriptor(e, n[i]);
            }
            return t;
          }
        );
      }),
      t("Object.values", function (e) {
        return (
          e ||
          function (e) {
            let t;
            const n = [];
            for (t in e) u(e, t) && n.push(e[t]);
            return n;
          }
        );
      }),
      t("Promise.allSettled", function (e) {
        function n(e) {
          return { status: "fulfilled", value: e };
        }
        function i(e) {
          return { status: "rejected", reason: e };
        }
        return (
          e ||
          function (e) {
            const t = this;
            return (
              (e = Array.from(e, function (e) {
                return t.resolve(e).then(n, i);
              })),
              t.all(e)
            );
          }
        );
      }),
      t("Promise.prototype.finally", function (e) {
        return (
          e ||
          function (t) {
            return this.then(
              function (e) {
                return Promise.resolve(t()).then(function () {
                  return e;
                });
              },
              function (e) {
                return Promise.resolve(t()).then(function () {
                  throw e;
                });
              },
            );
          }
        );
      }),
      t("AggregateError", function (e) {
        function t(e, t) {
          "stack" in (t = Error(t)) && (this.stack = t.stack),
            (this.errors = e),
            (this.message = t.message);
        }
        return e || (i(t, Error), (t.prototype.name = "AggregateError"), t);
      }),
      t("Promise.any", function (e) {
        return (
          e ||
          function (e) {
            return (
              (e = e instanceof Array ? e : Array.from(e)),
              Promise.all(
                e.map(function (e) {
                  return Promise.resolve(e).then(
                    function (e) {
                      throw e;
                    },
                    function (e) {
                      return e;
                    },
                  );
                }),
              ).then(
                function (e) {
                  throw new AggregateError(e, "All promises were rejected");
                },
                function (e) {
                  return e;
                },
              )
            );
          }
        );
      }),
      t("Reflect.apply", function (e) {
        if (e) return e;
        const i = Function.prototype.apply;
        return function (e, t, n) {
          return i.call(e, t, n);
        };
      }),
      t("Reflect.defineProperty", function (e) {
        return (
          e ||
          function (e, t, n) {
            try {
              Object.defineProperty(e, t, n);
              const i = Object.getOwnPropertyDescriptor(e, t);
              return (
                !!i &&
                i.configurable === (n.configurable || !1) &&
                i.enumerable === (n.enumerable || !1) &&
                ("value" in i
                  ? i.value === n.value && i.writable === (n.writable || !1)
                  : i.get === n.get && i.set === n.set)
              );
            } catch (r) {
              return !1;
            }
          }
        );
      }),
      t("Reflect.deleteProperty", function (e) {
        return (
          e ||
          function (e, t) {
            if (!u(e, t)) return !0;
            try {
              return delete e[t];
            } catch (n) {
              return !1;
            }
          }
        );
      }),
      t("Reflect.getOwnPropertyDescriptor", function (e) {
        return e || Object.getOwnPropertyDescriptor;
      }),
      t("Reflect.getPrototypeOf", function (e) {
        return e || Object.getPrototypeOf;
      }),
      t("Reflect.get", function (e) {
        return (
          e ||
          function (e, t, n) {
            if (arguments.length <= 2) return e[t];
            const i = d(e, t);
            return i ? (i.get ? i.get.call(n) : i.value) : void 0;
          }
        );
      }),
      t("Reflect.has", function (e) {
        return (
          e ||
          function (e, t) {
            return t in e;
          }
        );
      }),
      t("Reflect.isExtensible", function (e) {
        return (
          e ||
          (typeof Object.isExtensible === "function"
            ? Object.isExtensible
            : function () {
                return !0;
              })
        );
      }),
      t("Reflect.preventExtensions", function (e) {
        return (
          e ||
          (typeof Object.preventExtensions !== "function"
            ? function () {
                return !1;
              }
            : function (e) {
                return Object.preventExtensions(e), !Object.isExtensible(e);
              })
        );
      }),
      t("Reflect.set", function (e) {
        return (
          e ||
          function (e, t, n, i) {
            const r = d(e, t);
            return r
              ? r.set
                ? (r.set.call(arguments.length > 3 ? i : e, n), !0)
                : !(!r.writable || Object.isFrozen(e)) && ((e[t] = n), !0)
              : !!Reflect.isExtensible(e) && ((e[t] = n), !0);
          }
        );
      }),
      t("Set", function (o) {
        function e(e) {
          if (((this.g = new Map()), e)) {
            e = c(e);
            for (var t; !(t = e.next()).done; ) this.add(t.value);
          }
          this.size = this.g.size;
        }
        return (function () {
          if (
            !o ||
            typeof o !== "function" ||
            !o.prototype.entries ||
            typeof Object.seal !== "function"
          ) {
            return !1;
          }
          try {
            const e = Object.seal({ x: 4 });
            const t = new o(c([e]));
            if (
              !t.has(e) ||
              t.size != 1 ||
              t.add(e) != t ||
              t.size != 1 ||
              t.add({ x: 4 }) != t ||
              t.size != 2
            ) {
              return !1;
            }
            const n = t.entries();
            let i = n.next();
            return (
              !i.done &&
              i.value[0] == e &&
              i.value[1] == e &&
              !(i = n.next()).done &&
              i.value[0] != e &&
              i.value[0].x == 4 &&
              i.value[1] == i.value[0] &&
              n.next().done
            );
          } catch (r) {
            return !1;
          }
        })()
          ? o
          : ((e.prototype.add = function (e) {
              return (
                (e = e === 0 ? 0 : e),
                this.g.set(e, e),
                (this.size = this.g.size),
                this
              );
            }),
            (e.prototype.delete = function (e) {
              return (e = this.g.delete(e)), (this.size = this.g.size), e;
            }),
            (e.prototype.clear = function () {
              this.g.clear(), (this.size = 0);
            }),
            (e.prototype.has = function (e) {
              return this.g.has(e);
            }),
            (e.prototype.entries = function () {
              return this.g.entries();
            }),
            (e.prototype.values = function () {
              return this.g.values();
            }),
            (e.prototype.keys = e.prototype.values),
            (e.prototype[Symbol.iterator] = e.prototype.values),
            (e.prototype.forEach = function (t, n) {
              const i = this;
              this.g.forEach(function (e) {
                return t.call(n, e, e, i);
              });
            }),
            e);
      }),
      t("String.prototype.codePointAt", function (e) {
        return (
          e ||
          function (e) {
            const t = s(this, null, "codePointAt");
            const n = t.length;
            if ((e = Number(e) || 0) >= 0 && e < n) {
              e |= 0;
              const i = t.charCodeAt(e);
              return i < 55296 || i > 56319 || e + 1 === n
                ? i
                : (e = t.charCodeAt(e + 1)) < 56320 || e > 57343
                  ? i
                  : 1024 * (i - 55296) + e + 9216;
            }
          }
        );
      }),
      t("String.fromCodePoint", function (e) {
        return (
          e ||
          function (e) {
            for (var t = "", n = 0; n < arguments.length; n++) {
              let i = Number(arguments[n]);
              if (i < 0 || i > 1114111 || i !== Math.floor(i)) {
                throw new RangeError("invalid_code_point " + i);
              }
              i <= 65535
                ? (t += String.fromCharCode(i))
                : ((i -= 65536),
                  (t += String.fromCharCode(((i >>> 10) & 1023) | 55296)),
                  (t += String.fromCharCode((1023 & i) | 56320)));
            }
            return t;
          }
        );
      }),
      t("String.prototype.matchAll", function (e) {
        return (
          e ||
          function (e) {
            if (e instanceof RegExp && !e.global) {
              throw new TypeError(
                "RegExp passed into String.prototype.matchAll() must have global tag.",
              );
            }
            const t = new RegExp(e, e instanceof RegExp ? void 0 : "g");
            const n = this;
            let i = !1;
            const r = {
              next: function () {
                if (i) return { value: void 0, done: !0 };
                const e = t.exec(n);
                return e
                  ? (e[0] === "" && (t.lastIndex += 1), { value: e, done: !1 })
                  : { value: void 0, done: (i = !0) };
              },
            };
            return (
              (r[Symbol.iterator] = function () {
                return r;
              }),
              r
            );
          }
        );
      }),
      t("String.prototype.padEnd", function (e) {
        return (
          e ||
          function (e, t) {
            const n = s(this, null, "padStart");
            return n + h(t, e - n.length);
          }
        );
      }),
      t("String.prototype.padStart", function (e) {
        return (
          e ||
          function (e, t) {
            const n = s(this, null, "padStart");
            return h(t, e - n.length) + n;
          }
        );
      }),
      t("String.prototype.replaceAll", function (e) {
        return (
          e ||
          function (e, t) {
            if (e instanceof RegExp && !e.global) {
              throw new TypeError(
                "String.prototype.replaceAll called with a non-global RegExp argument.",
              );
            }
            return e instanceof RegExp
              ? this.replace(e, t)
              : this.replace(
                  new RegExp(
                    String(e)
                      .replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1")
                      .replace(/\x08/g, "\\x08"),
                    "g",
                  ),
                  t,
                );
          }
        );
      }),
      t("String.prototype.trimRight", function (e) {
        function t() {
          return this.replace(/[\s\xa0]+$/, "");
        }
        return e || t;
      }),
      t("String.prototype.trimEnd", function (e) {
        return e || String.prototype.trimRight;
      }),
      t("Int8Array.prototype.copyWithin", p),
      t("Uint8Array.prototype.copyWithin", p),
      t("Uint8ClampedArray.prototype.copyWithin", p),
      t("Int16Array.prototype.copyWithin", p),
      t("Uint16Array.prototype.copyWithin", p),
      t("Int32Array.prototype.copyWithin", p),
      t("Uint32Array.prototype.copyWithin", p),
      t("Float32Array.prototype.copyWithin", p),
      t("Float64Array.prototype.copyWithin", p),
      t("Int8Array.prototype.fill", f),
      t("Uint8Array.prototype.fill", f),
      t("Uint8ClampedArray.prototype.fill", f),
      t("Int16Array.prototype.fill", f),
      t("Uint16Array.prototype.fill", f),
      t("Int32Array.prototype.fill", f),
      t("Uint32Array.prototype.fill", f),
      t("Float32Array.prototype.fill", f),
      t("Float64Array.prototype.fill", f),
      t("WeakSet", function (r) {
        function e(e) {
          if (((this.g = new WeakMap()), e)) {
            e = c(e);
            for (var t; !(t = e.next()).done; ) this.add(t.value);
          }
        }
        return (function () {
          if (!r || !Object.seal) return !1;
          try {
            const e = Object.seal({});
            const t = Object.seal({});
            const n = new r([e]);
            return (
              !(!n.has(e) || n.has(t)) &&
              (n.delete(e), n.add(t), !n.has(e) && n.has(t))
            );
          } catch (i) {
            return !1;
          }
        })()
          ? r
          : ((e.prototype.add = function (e) {
              return this.g.set(e, !0), this;
            }),
            (e.prototype.has = function (e) {
              return this.g.has(e);
            }),
            (e.prototype.delete = function (e) {
              return this.g.delete(e);
            }),
            e);
      });
    var Dt = this || self;
    w(k, Error),
      (k.prototype.name = "CustomError"),
      (S.prototype.T = !0),
      (S.prototype.R = function () {
        return this.g;
      });
    let jt;
    var Nt = {};
    var Et = {};
    var It = { m: {} };
    (It.m.N = {
      ia: {
        "gstatic.com": {
          loader: D("https://www.gstatic.com/charts/%{version}/loader.js"),
          debug: D(
            "https://www.gstatic.com/charts/debug/%{version}/js/jsapi_debug_%{package}_module.js",
          ),
          debug_i18n: D(
            "https://www.gstatic.com/charts/debug/%{version}/i18n/jsapi_debug_i18n_%{package}_module__%{language}.js",
          ),
          compiled: D(
            "https://www.gstatic.com/charts/%{version}/js/jsapi_compiled_%{package}_module.js",
          ),
          compiled_i18n: D(
            "https://www.gstatic.com/charts/%{version}/i18n/jsapi_compiled_i18n_%{package}_module__%{language}.js",
          ),
          css: D(
            "https://www.gstatic.com/charts/%{version}/css/%{subdir}/%{filename}",
          ),
          css2: D(
            "https://www.gstatic.com/charts/%{version}/css/%{subdir1}/%{subdir2}/%{filename}",
          ),
          third_party: D(
            "https://www.gstatic.com/charts/%{version}/third_party/%{subdir}/%{filename}",
          ),
          third_party2: D(
            "https://www.gstatic.com/charts/%{version}/third_party/%{subdir1}/%{subdir2}/%{filename}",
          ),
          third_party_gen: D(
            "https://www.gstatic.com/charts/%{version}/third_party/%{subdir}/%{filename}",
          ),
        },
        "gstatic.cn": {
          loader: D("https://www.gstatic.cn/charts/%{version}/loader.js"),
          debug: D(
            "https://www.gstatic.cn/charts/debug/%{version}/js/jsapi_debug_%{package}_module.js",
          ),
          debug_i18n: D(
            "https://www.gstatic.cn/charts/debug/%{version}/i18n/jsapi_debug_i18n_%{package}_module__%{language}.js",
          ),
          compiled: D(
            "https://www.gstatic.cn/charts/%{version}/js/jsapi_compiled_%{package}_module.js",
          ),
          compiled_i18n: D(
            "https://www.gstatic.cn/charts/%{version}/i18n/jsapi_compiled_i18n_%{package}_module__%{language}.js",
          ),
          css: D(
            "https://www.gstatic.cn/charts/%{version}/css/%{subdir}/%{filename}",
          ),
          css2: D(
            "https://www.gstatic.cn/charts/%{version}/css/%{subdir1}/%{subdir2}/%{filename}",
          ),
          third_party: D(
            "https://www.gstatic.cn/charts/%{version}/third_party/%{subdir}/%{filename}",
          ),
          third_party2: D(
            "https://www.gstatic.cn/charts/%{version}/third_party/%{subdir1}/%{subdir2}/%{filename}",
          ),
          third_party_gen: D(
            "https://www.gstatic.cn/charts/%{version}/third_party/%{subdir}/%{filename}",
          ),
        },
      },
      ea: ["default"],
      qa: {
        default: [],
        graphics: ["default"],
        ui: ["graphics"],
        ui_base: ["graphics"],
        flashui: ["ui"],
        fw: ["ui"],
        geo: ["ui"],
        annotatedtimeline: ["annotationchart"],
        annotationchart: ["ui", "controls", "corechart", "table"],
        areachart: "browserchart",
        bar: ["fw", "dygraph", "webfontloader"],
        barchart: "browserchart",
        browserchart: ["ui"],
        bubbles: ["fw", "d3"],
        calendar: ["fw"],
        charteditor:
          "ui corechart imagechart annotatedtimeline gauge geochart motionchart orgchart table".split(
            " ",
          ),
        charteditor_base:
          "ui_base corechart imagechart annotatedtimeline gauge geochart motionchart orgchart table_base".split(
            " ",
          ),
        circles: ["fw", "d3"],
        clusterchart: ["corechart", "d3"],
        columnchart: "browserchart",
        controls: ["ui"],
        controls_base: ["ui_base"],
        corechart: ["ui"],
        gantt: ["fw", "dygraph"],
        gauge: ["ui"],
        geochart: ["geo"],
        geomap: ["flashui", "geo"],
        geomap_base: ["ui_base"],
        helloworld: ["fw"],
        imagechart: ["ui"],
        imageareachart: "imagechart",
        imagebarchart: "imagechart",
        imagelinechart: "imagechart",
        imagepiechart: "imagechart",
        imagesparkline: "imagechart",
        line: ["fw", "dygraph", "webfontloader"],
        linechart: "browserchart",
        map: ["geo"],
        matrix: ["vegachart"],
        motionchart: ["flashui"],
        orgchart: ["ui"],
        overtimecharts: ["ui", "corechart"],
        piechart: "browserchart",
        sankey: ["fw", "d3", "d3.sankey"],
        scatter: ["fw", "dygraph", "webfontloader"],
        scatterchart: "browserchart",
        sunburst: ["fw", "d3"],
        streamgraph: ["fw", "d3"],
        table: ["ui"],
        table_base: ["ui_base"],
        timeline: ["fw", "ui", "dygraph"],
        treemap: ["ui"],
        vegachart: ["graphics"],
        wordtree: ["ui"],
      },
      Ba: {
        d3: { subdir1: "d3", subdir2: "v5", filename: "d3.js" },
        "d3.sankey": {
          subdir1: "d3_sankey",
          subdir2: "v4",
          filename: "d3.sankey.js",
        },
        webfontloader: { subdir: "webfontloader", filename: "webfont.js" },
      },
      Aa: {
        dygraph: {
          subdir: "dygraphs",
          filename: "dygraph-tickers-combined.js",
        },
      },
      pa: {
        default: [{ subdir: "core", filename: "tooltip.css" }],
        annotationchart: [
          { subdir: "annotationchart", filename: "annotationchart.css" },
        ],
        charteditor: [{ subdir: "charteditor", filename: "charteditor.css" }],
        charteditor_base: [
          { subdir: "charteditor_base", filename: "charteditor_base.css" },
        ],
        controls: [{ subdir: "controls", filename: "controls.css" }],
        imagesparkline: [
          { subdir: "imagechart", filename: "imagesparkline.css" },
        ],
        orgchart: [{ subdir: "orgchart", filename: "orgchart.css" }],
        table: [
          { subdir: "table", filename: "table.css" },
          { subdir: "util", filename: "format.css" },
        ],
        table_base: [
          { subdir: "util", filename: "format.css" },
          { subdir: "table", filename: "table_base.css" },
        ],
        ui: [{ subdir: "util", filename: "util.css" }],
        ui_base: [{ subdir: "util", filename: "util_base.css" }],
      },
    }),
      (It.m.$ = {
        ga: {
          "chrome-frame": {
            versions: {
              "1.0.0": {
                uncompressed: "CFInstall.js",
                compressed: "CFInstall.min.js",
              },
              "1.0.1": {
                uncompressed: "CFInstall.js",
                compressed: "CFInstall.min.js",
              },
              "1.0.2": {
                uncompressed: "CFInstall.js",
                compressed: "CFInstall.min.js",
              },
            },
            aliases: { 1: "1.0.2", "1.0": "1.0.2" },
          },
          swfobject: {
            versions: {
              2.1: {
                uncompressed: "swfobject_src.js",
                compressed: "swfobject.js",
              },
              2.2: {
                uncompressed: "swfobject_src.js",
                compressed: "swfobject.js",
              },
            },
            aliases: { 2: "2.2" },
          },
          "ext-core": {
            versions: {
              "3.1.0": {
                uncompressed: "ext-core-debug.js",
                compressed: "ext-core.js",
              },
              "3.0.0": {
                uncompressed: "ext-core-debug.js",
                compressed: "ext-core.js",
              },
            },
            aliases: { 3: "3.1.0", "3.0": "3.0.0", 3.1: "3.1.0" },
          },
          scriptaculous: {
            versions: {
              "1.8.3": {
                uncompressed: "scriptaculous.js",
                compressed: "scriptaculous.js",
              },
              "1.9.0": {
                uncompressed: "scriptaculous.js",
                compressed: "scriptaculous.js",
              },
              "1.8.1": {
                uncompressed: "scriptaculous.js",
                compressed: "scriptaculous.js",
              },
              "1.8.2": {
                uncompressed: "scriptaculous.js",
                compressed: "scriptaculous.js",
              },
            },
            aliases: { 1: "1.9.0", 1.8: "1.8.3", 1.9: "1.9.0" },
          },
          webfont: {
            versions: {
              "1.0.12": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.13": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.14": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.15": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.10": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.11": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.27": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.28": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.29": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.23": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.24": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.25": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.26": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.21": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.22": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.3": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.4": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.5": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.6": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.9": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.16": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.17": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.0": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.18": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.1": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.19": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
              "1.0.2": {
                uncompressed: "webfont_debug.js",
                compressed: "webfont.js",
              },
            },
            aliases: { 1: "1.0.29", "1.0": "1.0.29" },
          },
          jqueryui: {
            versions: {
              "1.8.17": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.16": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.15": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.14": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.4": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.13": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.5": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.12": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.6": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.11": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.7": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.10": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.8": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.9": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.6.0": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.7.0": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.5.2": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.0": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.7.1": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.5.3": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.1": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.7.2": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.8.2": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
              "1.7.3": {
                uncompressed: "jquery-ui.js",
                compressed: "jquery-ui.min.js",
              },
            },
            aliases: {
              1: "1.8.17",
              1.5: "1.5.3",
              1.6: "1.6.0",
              1.7: "1.7.3",
              1.8: "1.8.17",
              "1.8.3": "1.8.4",
            },
          },
          mootools: {
            versions: {
              "1.3.0": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.2.1": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.1.2": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.4.0": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.3.1": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.2.2": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.4.1": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.3.2": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.2.3": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.4.2": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.2.4": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.2.5": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
              "1.1.1": {
                uncompressed: "mootools.js",
                compressed: "mootools-yui-compressed.js",
              },
            },
            aliases: {
              1: "1.1.2",
              1.1: "1.1.2",
              1.2: "1.2.5",
              1.3: "1.3.2",
              1.4: "1.4.2",
              1.11: "1.1.1",
            },
          },
          yui: {
            versions: {
              "2.8.0r4": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
              "2.9.0": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
              "2.8.1": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
              "2.6.0": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
              "2.7.0": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
              "3.3.0": {
                uncompressed: "build/yui/yui.js",
                compressed: "build/yui/yui-min.js",
              },
              "2.8.2r1": {
                uncompressed: "build/yuiloader/yuiloader.js",
                compressed: "build/yuiloader/yuiloader-min.js",
              },
            },
            aliases: {
              2: "2.9.0",
              2.6: "2.6.0",
              2.7: "2.7.0",
              2.8: "2.8.2r1",
              "2.8.0": "2.8.0r4",
              "2.8.2": "2.8.2r1",
              2.9: "2.9.0",
              3: "3.3.0",
              3.3: "3.3.0",
            },
          },
          prototype: {
            versions: {
              "1.6.1.0": {
                uncompressed: "prototype.js",
                compressed: "prototype.js",
              },
              "1.6.0.2": {
                uncompressed: "prototype.js",
                compressed: "prototype.js",
              },
              "1.7.0.0": {
                uncompressed: "prototype.js",
                compressed: "prototype.js",
              },
              "1.6.0.3": {
                uncompressed: "prototype.js",
                compressed: "prototype.js",
              },
            },
            aliases: {
              1: "1.7.0.0",
              1.6: "1.6.1.0",
              "1.6.0": "1.6.0.3",
              "1.6.1": "1.6.1.0",
              1.7: "1.7.0.0",
              "1.7.0": "1.7.0.0",
            },
          },
          jquery: {
            versions: {
              "1.2.3": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.2.6": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.3.0": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.3.1": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.3.2": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.4.0": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.4.1": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.4.2": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.4.3": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.4.4": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.5.0": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.5.1": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.5.2": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.6.0": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.6.1": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.6.2": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.6.3": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.6.4": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.7.0": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
              "1.7.1": {
                uncompressed: "jquery.js",
                compressed: "jquery.min.js",
              },
            },
            aliases: {
              1: "1.7.1",
              1.2: "1.2.6",
              1.3: "1.3.2",
              1.4: "1.4.4",
              1.5: "1.5.2",
              1.6: "1.6.4",
              1.7: "1.7.1",
            },
          },
          dojo: {
            versions: {
              "1.3.0": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.4.0": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.3.1": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.5.0": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.4.1": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.3.2": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.2.3": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.6.0": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.5.1": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.7.0": {
                uncompressed: "dojo/dojo.js.uncompressed.js",
                compressed: "dojo/dojo.js",
              },
              "1.6.1": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.4.3": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.7.1": {
                uncompressed: "dojo/dojo.js.uncompressed.js",
                compressed: "dojo/dojo.js",
              },
              "1.7.2": {
                uncompressed: "dojo/dojo.js.uncompressed.js",
                compressed: "dojo/dojo.js",
              },
              "1.2.0": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
              "1.1.1": {
                uncompressed: "dojo/dojo.xd.js.uncompressed.js",
                compressed: "dojo/dojo.xd.js",
              },
            },
            aliases: {
              1: "1.6.1",
              1.1: "1.1.1",
              1.2: "1.2.3",
              1.3: "1.3.2",
              1.4: "1.4.3",
              1.5: "1.5.1",
              1.6: "1.6.1",
              1.7: "1.7.2",
            },
          },
        },
      }),
      (It.m.aa = {
        af: !0,
        am: !0,
        az: !0,
        ar: !0,
        arb: "ar",
        bg: !0,
        bn: !0,
        ca: !0,
        cs: !0,
        cmn: "zh",
        da: !0,
        de: !0,
        el: !0,
        en: !0,
        en_gb: !0,
        es: !0,
        es_419: !0,
        et: !0,
        eu: !0,
        fa: !0,
        fi: !0,
        fil: !0,
        fr: !0,
        fr_ca: !0,
        gl: !0,
        ka: !0,
        gu: !0,
        he: "iw",
        hi: !0,
        hr: !0,
        hu: !0,
        hy: !0,
        id: !0,
        in: "id",
        is: !0,
        it: !0,
        iw: !0,
        ja: !0,
        ji: "yi",
        jv: !1,
        jw: "jv",
        km: !0,
        kn: !0,
        ko: !0,
        lo: !0,
        lt: !0,
        lv: !0,
        ml: !0,
        mn: !0,
        mo: "ro",
        mr: !0,
        ms: !0,
        nb: "no",
        ne: !0,
        nl: !0,
        no: !0,
        pl: !0,
        pt: "pt_br",
        pt_br: !0,
        pt_pt: !0,
        ro: !0,
        ru: !0,
        si: !0,
        sk: !0,
        sl: !0,
        sr: !0,
        sv: !0,
        sw: !0,
        swh: "sw",
        ta: !0,
        te: !0,
        th: !0,
        tl: "fil",
        tr: !0,
        uk: !0,
        ur: !0,
        vi: !0,
        yi: !1,
        zh: "zh_cn",
        zh_cn: !0,
        zh_hk: !0,
        zh_tw: !0,
        zsm: "ms",
        zu: !0,
      }),
      (It.m.M = {}),
      (It.m.M.O = {
        1: "1.0",
        "1.0": "current",
        1.1: "upcoming",
        1.2: "testing",
        41: "pre-45",
        42: "pre-45",
        43: "pre-45",
        44: "pre-45",
        46: "46.1",
        46.1: "46.2",
        48: "48.1",
        current: "51",
        upcoming: "51",
      }),
      (j.prototype.T = !0),
      (j.prototype.R = function () {
        return this.g.toString();
      }),
      (j.prototype.toString = function () {
        return this.g + "";
      });
    let At;
    var Mt = /%{(\w+)}/g;
    var Ot =
      /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;
    var Pt = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
    var Ft = {};
    var Lt = Array.prototype.some
      ? function (e, t) {
          return Array.prototype.some.call(e, t, void 0);
        }
      : function (e, t) {
          for (
            let n = e.length,
              i = typeof e === "string" ? e.split("") : e,
              r = 0;
            r < n;
            r++
          ) {
            if (r in i && t.call(void 0, i[r], r, e)) return !0;
          }
          return !1;
        };
    var Ht =
      "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(
        " ",
      );
    e: {
      const Rt = Dt.navigator;
      if (Rt) {
        const $t = Rt.userAgent;
        if ($t) {
          At = $t;
          break e;
        }
      }
      At = "";
    }
    var qt = /^[\w+/_-]+[=]{0,2}$/;
    (L.prototype[Symbol.iterator] = function () {
      return this;
    }),
      (L.prototype.next = function () {
        const e = this.g.next();
        return {
          value: e.done ? void 0 : this.h.call(void 0, e.value, this.i++),
          done: e.done,
        };
      });
    var zt =
      "StopIteration" in Dt
        ? Dt.StopIteration
        : { message: "StopIteration", stack: "" };
    (R.prototype.next = function () {
      return R.prototype.g.call(this);
    }),
      (R.prototype.g = function () {
        throw zt;
      }),
      (R.prototype.F = function () {
        return this;
      }),
      (z.prototype.F = function () {
        return new W(this.g());
      }),
      (z.prototype[Symbol.iterator] = function () {
        return new B(this.g());
      }),
      (z.prototype.i = function () {
        return new B(this.g());
      }),
      i(W, R),
      (W.prototype.g = function () {
        const e = this.h.next();
        if (e.done) throw zt;
        return e.value;
      }),
      (W.prototype.next = function () {
        return W.prototype.g.call(this);
      }),
      (W.prototype[Symbol.iterator] = function () {
        return new B(this.h);
      }),
      (W.prototype.i = function () {
        return new B(this.h);
      }),
      i(B, z),
      (B.prototype.next = function () {
        return this.h.next();
      }),
      ((mt = U.prototype).H = function () {
        V(this);
        for (var e = [], t = 0; t < this.g.length; t++) {
          e.push(this.h[this.g[t]]);
        }
        return e;
      }),
      (mt.G = function () {
        return V(this), this.g.concat();
      }),
      (mt.has = function (e) {
        return K(this.h, e);
      }),
      (mt.get = function (e, t) {
        return K(this.h, e) ? this.h[e] : t;
      }),
      (mt.set = function (e, t) {
        K(this.h, e) || ((this.size += 1), this.g.push(e), this.i++),
          (this.h[e] = t);
      }),
      (mt.forEach = function (e, t) {
        for (let n = this.G(), i = 0; i < n.length; i++) {
          const r = n[i];
          const o = this.get(r);
          e.call(t, o, r, this);
        }
      }),
      (mt.keys = function () {
        return $(this.F(!0)).i();
      }),
      (mt.values = function () {
        return $(this.F(!1)).i();
      }),
      (mt.entries = function () {
        const t = this;
        return H(this.keys(), function (e) {
          return [e, t.get(e)];
        });
      }),
      (mt.F = function (t) {
        V(this);
        let n = 0;
        const i = this.i;
        const r = this;
        const e = new R();
        return (
          (e.g = function () {
            if (i != r.i) {
              throw Error("The map has changed since the iterator was created");
            }
            if (n >= r.g.length) throw zt;
            const e = r.g[n++];
            return t ? e : r.h[e];
          }),
          (e.next = e.g.bind(e)),
          e
        );
      });
    var Wt =
      /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
    (X.prototype.toString = function () {
      const e = [];
      let t = this.j;
      t && e.push(ee(t, Bt, !0), ":");
      let n = this.g;
      return (
        (n || t == "file") &&
          (e.push("//"),
          (t = this.s) && e.push(ee(t, Bt, !0), "@"),
          e.push(
            encodeURIComponent(String(n)).replace(
              /%25([0-9a-fA-F]{2})/g,
              "%$1",
            ),
          ),
          (n = this.v) != null && e.push(":", String(n))),
        (n = this.h) &&
          (this.g && n.charAt(0) != "/" && e.push("/"),
          e.push(ee(n, n.charAt(0) == "/" ? Vt : Ut, !0))),
        (n = this.i.toString()) && e.push("?", n),
        (n = this.o) && e.push("#", ee(n, Yt)),
        e.join("")
      );
    }),
      (X.prototype.resolve = function (e) {
        const t = new X(this);
        let n = !!e.j;
        n ? G(t, e.j) : (n = !!e.s),
          n ? (t.s = e.s) : (n = !!e.g),
          n ? (t.g = e.g) : (n = e.v != null);
        let i = e.h;
        if (n) Q(t, e.v);
        else if ((n = !!e.h)) {
          if (i.charAt(0) != "/") {
            if (this.g && !this.h) i = "/" + i;
            else {
              var r = t.h.lastIndexOf("/");
              r != -1 && (i = t.h.substr(0, r + 1) + i);
            }
          }
          if ((r = i) == ".." || r == ".") i = "";
          else if (r.indexOf("./") != -1 || r.indexOf("/.") != -1) {
            (i = r.lastIndexOf("/", 0) == 0), (r = r.split("/"));
            for (var o = [], s = 0; s < r.length; ) {
              const a = r[s++];
              a == "."
                ? i && s == r.length && o.push("")
                : a == ".."
                  ? ((o.length > 1 || (o.length == 1 && o[0] != "")) && o.pop(),
                    i && s == r.length && o.push(""))
                  : (o.push(a), (i = !0));
            }
            i = o.join("/");
          } else i = r;
        }
        return (
          n ? (t.h = i) : (n = e.i.toString() !== ""),
          n ? J(t, se(e.i)) : (n = !!e.o),
          n && (t.o = e.o),
          t
        );
      });
    var Bt = /[#\/\?@]/g;
    var Ut = /[#\?:]/g;
    var Vt = /[#\?]/g;
    var Kt = /[#\?@]/g;
    var Yt = /#/g;
    ((mt = ne.prototype).add = function (e, t) {
      ie(this), (this.i = null), (e = ae(this, e));
      let n = this.g.get(e);
      return n || this.g.set(e, (n = [])), n.push(t), (this.h += 1), this;
    }),
      (mt.forEach = function (n, i) {
        ie(this),
          this.g.forEach(function (e, t) {
            e.forEach(function (e) {
              n.call(i, e, t, this);
            }, this);
          }, this);
      }),
      (mt.G = function () {
        ie(this);
        for (
          var e = this.g.H(), t = this.g.G(), n = [], i = 0;
          i < t.length;
          i++
        ) {
          for (let r = e[i], o = 0; o < r.length; o++) n.push(t[i]);
        }
        return n;
      }),
      (mt.H = function (e) {
        ie(this);
        let t = [];
        if (typeof e === "string") {
          oe(this, e) && (t = t.concat(this.g.get(ae(this, e))));
        } else {
          e = this.g.H();
          for (let n = 0; n < e.length; n++) t = t.concat(e[n]);
        }
        return t;
      }),
      (mt.set = function (e, t) {
        return (
          ie(this),
          (this.i = null),
          oe(this, (e = ae(this, e))) && (this.h -= this.g.get(e).length),
          this.g.set(e, [t]),
          (this.h += 1),
          this
        );
      }),
      (mt.get = function (e, t) {
        return e && (e = this.H(e)).length > 0 ? String(e[0]) : t;
      }),
      (mt.toString = function () {
        if (this.i) return this.i;
        if (!this.g) return "";
        for (var e = [], t = this.g.G(), n = 0; n < t.length; n++) {
          let i = t[n];
          const r = encodeURIComponent(String(i));
          i = this.H(i);
          for (let o = 0; o < i.length; o++) {
            let s = r;
            i[o] !== "" && (s += "=" + encodeURIComponent(String(i[o]))),
              e.push(s);
          }
        }
        return (this.i = e.join("&"));
      });
    let Xt;
    var Gt = {
      cellpadding: "cellPadding",
      cellspacing: "cellSpacing",
      colspan: "colSpan",
      frameborder: "frameBorder",
      height: "height",
      maxlength: "maxLength",
      nonce: "nonce",
      role: "role",
      rowspan: "rowSpan",
      type: "type",
      usemap: "useMap",
      valign: "vAlign",
      width: "width",
    };
    (he.prototype.get = function () {
      if (this.h > 0) {
        this.h--;
        var e = this.g;
        (this.g = e.next), (e.next = null);
      } else e = this.i();
      return e;
    }),
      (me.prototype.add = function (e, t) {
        const n = Jt.get();
        n.set(e, t), this.h ? (this.h.next = n) : (this.g = n), (this.h = n);
      });
    let Qt;
    var Jt = new he(
      function () {
        return new ye();
      },
      function (e) {
        return e.reset();
      },
    );
    ye.prototype.set = function (e, t) {
      (this.h = e), (this.g = t), (this.next = null);
    };
    var Zt = !(ye.prototype.reset = function () {
      this.next = this.g = this.h = null;
    });
    var en = new me();
    ke.prototype.reset = function () {
      (this.i = this.h = this.j = this.g = null), (this.l = !1);
    };
    var tn = new he(
      function () {
        return new ke();
      },
      function (e) {
        e.reset();
      },
    );
    (Ce.prototype.then = function (e, t, n) {
      return je(
        this,
        typeof e === "function" ? e : null,
        typeof t === "function" ? t : null,
        n,
      );
    }),
      (Ce.prototype.$goog_Thenable = !0),
      (Ce.prototype.cancel = function (e) {
        if (this.g == 0) {
          const t = new Fe(e);
          be(function () {
            Te(this, t);
          }, this);
        }
      }),
      (Ce.prototype.C = function (e) {
        (this.g = 0), Ne(this, 2, e);
      }),
      (Ce.prototype.D = function (e) {
        (this.g = 0), Ne(this, 3, e);
      }),
      (Ce.prototype.v = function () {
        for (var e; (e = Ae(this)); ) Me(this, e, this.g, this.s);
        this.o = !1;
      });
    var nn = ge;
    w(Fe, k),
      (Fe.prototype.name = "cancel"),
      (Le.prototype.cancel = function (e) {
        if (this.i) this.h instanceof Le && this.h.cancel();
        else {
          if (this.g) {
            const t = this.g;
            delete this.g, e ? t.cancel(e) : (t.v--, t.v <= 0 && t.cancel());
          }
          this.J ? this.J.call(this.I, this) : (this.C = !0),
            this.i || ((e = new Be(this)), Re(this), He(this, !1, e));
        }
      }),
      (Le.prototype.D = function (e, t) {
        (this.s = !1), He(this, e, t);
      }),
      (Le.prototype.then = function (e, t, n) {
        let i;
        let r;
        const o = new Ce(function (e, t) {
          (r = e), (i = t);
        });
        return (
          $e(this, r, function (e) {
            e instanceof Be ? o.cancel() : i(e);
          }),
          o.then(e, t, n)
        );
      }),
      (Le.prototype.$goog_Thenable = !0),
      w(We, k),
      (We.prototype.message = "Deferred has already fired"),
      (We.prototype.name = "AlreadyCalledError"),
      w(Be, k),
      (Be.prototype.message = "Deferred was canceled"),
      (Be.prototype.name = "CanceledError"),
      (Ue.prototype.i = function () {
        throw (delete rn[this.g], this.h);
      });
    var rn = {};
    w(Xe, k), (It.m.B = {});
    let on;
    let sn;
    let an;
    var ln = "";
    var cn = "";
    var un = null;
    (It.la = function (e) {
      return It.load(Object.assign({}, e, { safeMode: !0 }));
    }),
      x("google.charts.safeLoad", It.la),
      (It.load = function () {
        for (var e = [], t = 0; t < arguments.length; ++t) e[t] = arguments[t];
        e[(t = 0)] === "visualization" && t++;
        let n = "current";
        (typeof e[t] !== "string" && typeof e[t] !== "number") ||
          ((n = String(e[t])), t++);
        let i = {};
        return v(e[t]) && (i = e[t]), ct(n, i);
      }),
      x("google.charts.load", It.load),
      (It.V = function (e) {
        if (!sn) {
          throw Error(
            "Must call google.charts.load before google.charts.setOnLoadCallback",
          );
        }
        return e ? sn.then(e) : sn;
      }),
      x("google.charts.setOnLoadCallback", It.V);
    var dn = D("https://maps.googleapis.com/maps/api/js?jsapiRedirect=true");
    var hn = D(
      "https://maps-api-ssl.google.com/maps?jsapiRedirect=true&file=googleapi",
    );
    var pn = D("https://www.gstatic.com/inputtools/js/ita/inputtools_3.js");
    var fn = D(
      "https://ajax.googleapis.com/ajax/libs/%{module}/%{version}/%{file}",
    );
    x("google.loader.LoadFailure", !1),
      an
        ? console.warn("Google Charts loader.js should only be loaded once.")
        : et(),
      (It.m.B.sa = et),
      (It.m.B.va = nt),
      (It.m.B.wa = ot),
      (It.m.B.xa = rt),
      (It.m.B.Da = st),
      (It.m.B.Ca = at),
      (It.m.B.za = tt),
      (It.m.B.ra = function () {
        return un;
      });
  }.call(this),
  function () {
    $(document).on("ready", function () {
      return (
        $("#daily_changes").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          info: !0,
        }),
        $("#datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "10em" },
            { width: "10em" },
            { width: "10em" },
            null,
            null,
            null,
            { width: "50em" },
            { width: "50em" },
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#data_loads").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 3 },
          info: !0,
        }),
        $("#trails").ready(function () {
          return $("#trails_button").click(function () {
            return $("#trails").stop(), $("#trails").toggle("slow");
          });
        })
      );
    });
  }.call(this),
  function () {
    $(document).on("ready", function () {
      return $("#nr_tr_datatable").DataTable({
        paging: !1,
        searching: !1,
        ordering: !1,
        scrollX: !0,
        scrollY: "600px",
        scrollCollapse: !0,
        info: !1,
        columns: [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          { width: "20em" },
          { width: "20em" },
          { width: "20em" },
          { width: "20em" },
          null,
          null,
          { width: "50em" },
          { width: "50em" },
          null,
        ],
      });
    });
  }.call(this),
  function () {}.call(this),
  function () {
    $(document).on("ready", function () {
      return $("#lfdif")
        .on("ajax:success", function (e, t, n, i) {
          return $("#lfdif").append(i.responseText);
        })
        .on("ajax:error", function () {
          return $("#lfdif").append("<p>ERROR</p>");
        });
    });
  }.call(this),
  function () {
    $(document).on("ready", function () {
      return $("#pj_datatable").DataTable({
        paging: !1,
        searching: !1,
        ordering: !1,
        scrollX: !0,
        scrollY: "600px",
        scrollCollapse: !0,
        info: !1,
        columns: [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          { width: "50em" },
        ],
      });
    });
  }.call(this),
  function () {}.call(this),
  function () {
    $(document).on("ready", function () {
      let e;
      return (
        $("#reno_tasks").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedHeader: !1,
          info: !0,
        }),
        (e = function (e) {
          let t, n;
          (n = e.getValue()),
            (t = { id: e.$input[0].id, area_item: n }),
            console.log("updateAreaItem: params: ", t),
            $.ajax({
              method: "PATCH",
              url: "update_area_item",
              data: t,
              success: function () {},
              error: function () {},
            });
        }),
        $(".select_area_item").selectize({
          plugins: ["remove_button"],
          persist: !1,
          maxItems: null,
          hideSelected: !0,
          closeAfterSelect: !1,
          allowEmptyOption: !0,
          dataAttr: "data",
          valueField: "Area_Item",
          labelField: "Area/Item",
          searchField: ["Area_Item"],
          onBlur: function () {
            e(this);
          },
        })
      );
    });
  }.call(this),
  function () {
    $(document).on("ready", function () {
      return (
        $("#tote_records_collapsed_test").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !0,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_projects").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedHeader: !0,
          info: !0,
        }),
        $("#speed_test_report").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          fixedColumns: { leftColumns: 2 },
          info: !1,
          scrollY: "480px",
          scrollCollapse: !0,
        }),
        $("#speed_test_report_2").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          fixedColumns: { leftColumns: 2 },
          info: !1,
          scrollY: "480px",
          scrollCollapse: !0,
        }),
        $("#scope_comparison_report").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          info: !1,
          scrollY: "480px",
          scrollCollapse: !0,
        })
      );
    });
  }.call(this),
  $(document).ready(function () {
    console.log("select_template_group.js:  document.ready()"),
      $("#template_tree").fancytree({
        extensions: ["glyph"],
        activeVisible: !0,
        aria: !1,
        autoActivate: !0,
        autoScroll: !0,
        checkbox: !0,
        selectMode: 3,
        glyph: {
          map: {
            doc: "fa fa-file-o",
            docOpen: "fa fa-file-o",
            checkbox: "fa fa-square-o",
            checkboxSelected: "fa fa-check-square-o",
            checkboxUnknown: "fa fa-square",
            dragHelper: "fa arrow-right",
            dropMarker: "fa long-arrow-right",
            error: "fa fa-warning",
            expanderClosed: "fa fa-caret-right",
            expanderLazy: "fa fa-angle-right",
            expanderOpen: "fa fa-caret-down",
            folder: "fa fa-folder-o",
            folderOpen: "fa fa-folder-open-o",
            loading: "fa fa-spinner fa-pulse",
          },
        },
        clickFolderMode: 3,
        debugLevel: 1,
        disabled: !1,
        source: { url: "get_template_group_data" },
        idPrefix: "rtt_",
        icons: !0,
        keyboard: !0,
        keyPathSeparator: "/",
        minExpandLevel: 1,
        tabbable: !0,
        titlesTabbable: !0,
        strings: {
          loading: "Loading Task Templates...",
          loadError: "*** Error Loading Templates",
        },
        activate: function (e, t) {
          $("#statusLine").text(t.node.title),
            t.node.url && window.open(t.node.url, t.node.target);
        },
        deactivate: function () {
          $("#echoSelected").text("-");
        },
        focus: function (e, t) {
          $("#echoFocused").text(t.node.title);
        },
        blur: function () {
          $("#echoFocused").text("-");
        },
        select: function (e, t) {
          $("#statusLine").text(
            e.type + ": " + t.node.isSelected() + " " + t.node,
          ),
            console.log(
              "template_tree selection:  ",
              $("#statusLine").text(
                e.type + ": " + t.node.isSelected() + " " + t.node,
              ),
            );
          const n = $("#template_tree").fancytree("getTree").getSelectedNodes();
          const i = [];
          for (nIndex = 0; nIndex < n.length; nIndex++) {
            n[nIndex].isFolder() ||
              (i.push(n[nIndex].key),
              console.log("node.data.key:  ", n[nIndex].key));
          }
          $("#selected_templates").val(i),
            console.log("selnodes:        ", n),
            console.log("Selected Nodes:  ", $("#selected_templates").val());
        },
      });
  }),
  function () {
    $(document).on("ready", function () {
      return (
        $("#filter_details").ready(function () {
          return $("#filter_button").click(function () {
            return (
              $("#filter_details").stop(), $("#filter_details").toggle("slow")
            );
          });
        }),
        $("#tr_details").ready(function () {
          return $("#tr_button").click(function () {
            return $("#tr_details").stop(), $("#tr_details").toggle("slow");
          });
        }),
        $("#filter_details_caas").ready(function () {
          return $("#filter_button_caas").click(function () {
            return (
              $("#filter_details_caas").stop(),
              $("#filter_details_caas").toggle("slow")
            );
          });
        }),
        $("#timeline_chart").ready(function () {
          return $("#timeline_chart_button").click(function () {
            return (
              $("#timeline_chart").stop(), $("#timeline_chart").toggle("slow")
            );
          });
        }),
        $("#filter_details_calendar").ready(function () {
          return $("#filter_button_calendar").click(function () {
            return (
              $("#filter_details_calendar").stop(),
              $("#filter_details_calendar").toggle("slow")
            );
          });
        }),
        $("#services_circuits").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 1 },
          info: !0,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "40em" },
            null,
            null,
          ],
        }),
        $("#services_tote_collapsed").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !0,
        }),
        $("#services_a_gng").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !0,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#services_telco_jeopardies").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !0,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "40em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#dt_checklist_records").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          fixedHeader: !0,
          info: !0,
        }),
        $("#service_sans").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 1 },
          info: !0,
        }),
        $("[id='services_BTC Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_BT Cleanup Phase 2 MOP']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_BT Cleanup MOP']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_TCR']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 1 },
          colReorder: { realtime: !1, fixedColumnsLeft: 1 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_BTC Tracker_v2']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          info: !0,
        }),
        $("[id='services_Change Management Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_CPE Installation Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          order: [[22, "asc"]],
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_Engineering Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_FSM Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_Master Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_GNG Tracker']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='batch_deltas']").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 2 },
          colReorder: { realtime: !1, fixedColumnsLeft: 2 },
          fixedHeader: !0,
          info: !0,
        }),
        $("[id='services_Data Tracker_v2']")
          .DataTable()
          .on("column-reorder", function () {
            let t;
            (t = []),
              setTimeout(function () {
                let e;
                (e = $("[id='services_Data Tracker_v2'] th ")),
                  $.each(e, function () {
                    t.push($.trim($(this).attr("data-attribute")));
                  }),
                  $.ajax({
                    method: "POST",
                    url: "/services/save_user_caas_columns",
                    data: { cols: t, action_new: "caas_service_list" },
                  });
              }, 2e3);
          }),
        $(document).on("change", ".toggle-vis", function () {
          let e, t;
          (e = $("[id='services_Data Tracker_v2']")
            .DataTable()
            .column($(this).attr("data-column"))).visible(!e.visible()),
            (t = []),
            $("input[type=checkbox]").each(function () {
              this.checked && t.push($(this).attr("data-attribute"));
            }),
            $.ajax({
              method: "POST",
              url: "/services/save_user_caas_columns",
              data: { cols: t, action_new: "caas_service_list" },
            });
        }),
        $("input[type=checkbox]").each(function () {
          let e;
          (e = $("[id='services_Data Tracker_v2']")
            .DataTable()
            .column($(this).attr("data-column"))),
            this.checked ? e.visible(!0) : e.visible(!1);
        })
      );
    });
  }.call(this),
  function () {}.call(this),
  function () {
    $(document).ready(function () {
      return $("#site_load").DataTable({
        paging: !1,
        searching: !0,
        ordering: !0,
        scrollX: !0,
        scrollY: "480px",
        scrollCollapse: !0,
        info: !0,
        columns: [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          { width: "45em" },
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
        ],
      });
    });
  }.call(this),
  function () {
    $("#secondary_services_transport_tracker").DataTable({
      paging: !1,
      searching: !0,
      ordering: !0,
      scrollX: !0,
      scrollY: "480px",
      scrollCollapse: !0,
      fixedColumns: { leftColumns: 1 },
    }),
      $(document).ready(function () {
        $("#site_filter").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "480px",
          scrollCollapse: !0,
          fixedColumns: { leftColumns: 1 },
        }),
          $("#parent_select").click(function () {
            $("#parent_div").toggle();
          });
      });
  }.call(this),
  function () {}.call(this),
  function () {
    $(document).on("ready", function () {
      return $("#edc_details").ready(function () {
        return $("#edc_toggle_button").click(function () {
          return $("#edc_details").stop(), $("#edc_details").toggle("slow");
        });
      });
    }),
      $(document).on("ready", function () {
        return $("#bau_contacts_details").ready(function () {
          return $("#bau_contacts_toggle").click(function () {
            return (
              $("#bau_contacts_details").stop(),
              $("#bau_contacts_details").toggle("slow")
            );
          });
        });
      });
  }.call(this),
  function () {
    $(document).ready(function () {
      return $("#site_search_list").DataTable({
        paging: !1,
        searching: !0,
        ordering: !0,
        scrollX: !0,
        scrollY: "480px",
        scrollCollapse: !0,
        info: !0,
      });
    });
  }.call(this),
  google.charts.load("current", { packages: ["gauge"] }),
  function () {
    $(document).on("ready", function () {
      return (
        $("#tr_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "20em" },
            { width: "20em" },
            { width: "20em" },
            { width: "20em" },
            { width: "20em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "50em" },
            { width: "50em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_sites_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            { width: "20em" },
            { width: "20em" },
            { width: "50em" },
            { width: "50em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_store_impact_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "50em" },
            { width: "50em" },
            null,
            null,
            null,
          ],
        }),
        $("#tr_voice_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "50em" },
            { width: "50em" },
          ],
        }),
        $("#tr_broadband_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            { width: "30em" },
          ],
        }),
        $("#tr_hardware_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            { width: "30em" },
            { width: "30em" },
          ],
        }),
        $("#tr_circuit_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            { width: "30em" },
          ],
        }),
        $("#tr_schedule_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "50em" },
            { width: "50em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            { width: "30em" },
            { width: "30em" },
            { width: "30em" },
          ],
        }),
        $("#tr_pots_datatable").DataTable({
          paging: !1,
          searching: !1,
          ordering: !1,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_b_gng").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_a_gng").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_a_readiness").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_a_telco_jeopardies").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_telco_sip_jeopardies").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_a_pots_jeopardies").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
          ],
        }),
        $("#tr_event_b_readiness").DataTable({
          paging: !1,
          searching: !0,
          ordering: !0,
          scrollX: !0,
          scrollY: "600px",
          scrollCollapse: !0,
          info: !1,
          columns: [
            null,
            null,
            null,
            null,
            null,
            { width: "30em" },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
        })
      );
    });
  }.call(this),
  (function (e, t) {
    typeof define === "function" && define.amd
      ? define("sifter", t)
      : typeof exports === "object"
        ? (module.exports = t())
        : (e.Sifter = t());
  })(this, function () {
    const e = function (e, t) {
      (this.items = e), (this.settings = t || { diacritics: !0 });
    };
    (e.prototype.tokenize = function (e) {
      if (!(e = a(String(e || "").toLowerCase())) || !e.length) return [];
      let t;
      let n;
      let i;
      let r;
      const o = [];
      const s = e.split(/ +/);
      for (t = 0, n = s.length; t < n; t++) {
        if (((i = l(s[t])), this.settings.diacritics)) {
          for (r in c) {
            c.hasOwnProperty(r) && (i = i.replace(new RegExp(r, "g"), c[r]));
          }
        }
        o.push({ string: s[t], regex: new RegExp(i, "i") });
      }
      return o;
    }),
      (e.prototype.iterator = function (e, t) {
        (s(e)
          ? Array.prototype.forEach ||
            function (e) {
              for (let t = 0, n = this.length; t < n; t++) e(this[t], t, this);
            }
          : function (e) {
              for (const t in this) {
                this.hasOwnProperty(t) && e(this[t], t, this);
              }
            }
        ).apply(e, [t]);
      }),
      (e.prototype.getScoreFunction = function (e, t) {
        let r, o, s, a;
        (e = this.prepareSearch(e, t)),
          (o = e.tokens),
          (r = e.options.fields),
          (s = o.length),
          (a = e.options.nesting);
        let l;
        const c = function (e, t) {
          let n, i;
          return e
            ? (i = (e = String(e || "")).search(t.regex)) === -1
              ? 0
              : ((n = t.string.length / e.length), i === 0 && (n += 0.5), n)
            : 0;
        };
        const u = (l = r.length)
          ? l === 1
            ? function (e, t) {
                return c(f(t, r[0], a), e);
              }
            : function (e, t) {
                for (var n = 0, i = 0; n < l; n++) i += c(f(t, r[n], a), e);
                return i / l;
              }
          : function () {
              return 0;
            };
        return s
          ? s === 1
            ? function (e) {
                return u(o[0], e);
              }
            : e.options.conjunction === "and"
              ? function (e) {
                  for (var t, n = 0, i = 0; n < s; n++) {
                    if ((t = u(o[n], e)) <= 0) return 0;
                    i += t;
                  }
                  return i / s;
                }
              : function (e) {
                  for (var t = 0, n = 0; t < s; t++) n += u(o[t], e);
                  return n / s;
                }
          : function () {
              return 0;
            };
      }),
      (e.prototype.getSortFunction = function (e, n) {
        let t, i, r, o, s, a, l, c, u, d, h;
        if (
          ((h =
            (!(e = (r = this).prepareSearch(e, n)).query && n.sort_empty) ||
            n.sort),
          (u = function (e, t) {
            return e === "$score" ? t.score : f(r.items[t.id], e, n.nesting);
          }),
          (s = []),
          h)
        ) {
          for (t = 0, i = h.length; t < i; t++) {
            (e.query || h[t].field !== "$score") && s.push(h[t]);
          }
        }
        if (e.query) {
          for (d = !0, t = 0, i = s.length; t < i; t++) {
            if (s[t].field === "$score") {
              d = !1;
              break;
            }
          }
          d && s.unshift({ field: "$score", direction: "desc" });
        } else {
          for (t = 0, i = s.length; t < i; t++) {
            if (s[t].field === "$score") {
              s.splice(t, 1);
              break;
            }
          }
        }
        for (c = [], t = 0, i = s.length; t < i; t++) {
          c.push(s[t].direction === "desc" ? -1 : 1);
        }
        return (a = s.length)
          ? a === 1
            ? ((o = s[0].field),
              (l = c[0]),
              function (e, t) {
                return l * p(u(o, e), u(o, t));
              })
            : function (e, t) {
                let n, i, r;
                for (n = 0; n < a; n++) {
                  if (((r = s[n].field), (i = c[n] * p(u(r, e), u(r, t))))) {
                    return i;
                  }
                }
                return 0;
              }
          : null;
      }),
      (e.prototype.prepareSearch = function (e, t) {
        if (typeof e === "object") return e;
        const n = (t = o({}, t)).fields;
        const i = t.sort;
        const r = t.sort_empty;
        return (
          n && !s(n) && (t.fields = [n]),
          i && !s(i) && (t.sort = [i]),
          r && !s(r) && (t.sort_empty = [r]),
          {
            options: t,
            query: String(e || "").toLowerCase(),
            tokens: this.tokenize(e),
            total: 0,
            items: [],
          }
        );
      }),
      (e.prototype.search = function (e, n) {
        let i;
        let r;
        let t;
        let o;
        const s = this;
        return (
          (r = this.prepareSearch(e, n)),
          (n = r.options),
          (e = r.query),
          (o = n.score || s.getScoreFunction(r)),
          e.length
            ? s.iterator(s.items, function (e, t) {
                (i = o(e)),
                  (!1 === n.filter || i > 0) &&
                    r.items.push({ score: i, id: t });
              })
            : s.iterator(s.items, function (e, t) {
                r.items.push({ score: 1, id: t });
              }),
          (t = s.getSortFunction(r, n)) && r.items.sort(t),
          (r.total = r.items.length),
          typeof n.limit === "number" && (r.items = r.items.slice(0, n.limit)),
          r
        );
      });
    var p = function (e, t) {
      return typeof e === "number" && typeof t === "number"
        ? t < e
          ? 1
          : e < t
            ? -1
            : 0
        : ((e = n(String(e || ""))),
          (t = n(String(t || ""))) < e ? 1 : e < t ? -1 : 0);
    };
    var o = function (e) {
      let t, n, i, r;
      for (t = 1, n = arguments.length; t < n; t++) {
        if ((r = arguments[t])) {
          for (i in r) r.hasOwnProperty(i) && (e[i] = r[i]);
        }
      }
      return e;
    };
    var f = function (e, t, n) {
      if (e && t) {
        if (!n) return e[t];
        for (let i = t.split("."); i.length && (e = e[i.shift()]); );
        return e;
      }
    };
    var a = function (e) {
      return (e + "").replace(/^\s+|\s+$|/g, "");
    };
    var l = function (e) {
      return (e + "").replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1");
    };
    var s =
      Array.isArray ||
      (typeof $ !== "undefined" && $.isArray) ||
      function (e) {
        return Object.prototype.toString.call(e) === "[object Array]";
      };
    var c = {
      a: "[a\u1e00\u1e01\u0102\u0103\xc2\xe2\u01cd\u01ce\u023a\u2c65\u0226\u0227\u1ea0\u1ea1\xc4\xe4\xc0\xe0\xc1\xe1\u0100\u0101\xc3\xe3\xc5\xe5\u0105\u0104\xc3\u0105\u0104]",
      b: "[b\u2422\u03b2\u0392B\u0e3f\ud800\udf01\u16d2]",
      c: "[c\u0106\u0107\u0108\u0109\u010c\u010d\u010a\u010bC\u0304c\u0304\xc7\xe7\u1e08\u1e09\u023b\u023c\u0187\u0188\u0255\u1d04\uff23\uff43]",
      d: "[d\u010e\u010f\u1e0a\u1e0b\u1e10\u1e11\u1e0c\u1e0d\u1e12\u1e13\u1e0e\u1e0f\u0110\u0111D\u0326d\u0326\u0189\u0256\u018a\u0257\u018b\u018c\u1d6d\u1d81\u1d91\u0221\u1d05\uff24\uff44\xf0]",
      e: "[e\xc9\xe9\xc8\xe8\xca\xea\u1e18\u1e19\u011a\u011b\u0114\u0115\u1ebc\u1ebd\u1e1a\u1e1b\u1eba\u1ebb\u0116\u0117\xcb\xeb\u0112\u0113\u0228\u0229\u0118\u0119\u1d92\u0246\u0247\u0204\u0205\u1ebe\u1ebf\u1ec0\u1ec1\u1ec4\u1ec5\u1ec2\u1ec3\u1e1c\u1e1d\u1e16\u1e17\u1e14\u1e15\u0206\u0207\u1eb8\u1eb9\u1ec6\u1ec7\u2c78\u1d07\uff25\uff45\u0258\u01dd\u018f\u0190\u03b5]",
      f: "[f\u0191\u0192\u1e1e\u1e1f]",
      g: "[g\u0262\u20b2\u01e4\u01e5\u011c\u011d\u011e\u011f\u0122\u0123\u0193\u0260\u0120\u0121]",
      h: "[h\u0124\u0125\u0126\u0127\u1e28\u1e29\u1e96\u1e96\u1e24\u1e25\u1e22\u1e23\u0266\u02b0\u01f6\u0195]",
      i: "[i\xcd\xed\xcc\xec\u012c\u012d\xce\xee\u01cf\u01d0\xcf\xef\u1e2e\u1e2f\u0128\u0129\u012e\u012f\u012a\u012b\u1ec8\u1ec9\u0208\u0209\u020a\u020b\u1eca\u1ecb\u1e2c\u1e2d\u0197\u0268\u0268\u0306\u1d7b\u1d96\u0130iI\u0131\u026a\uff29\uff49]",
      j: "[j\u0237\u0134\u0135\u0248\u0249\u029d\u025f\u02b2]",
      k: "[k\u0198\u0199\ua740\ua741\u1e30\u1e31\u01e8\u01e9\u1e32\u1e33\u1e34\u1e35\u03ba\u03f0\u20ad]",
      l: "[l\u0141\u0142\u013d\u013e\u013b\u013c\u0139\u013a\u1e36\u1e37\u1e38\u1e39\u1e3c\u1e3d\u1e3a\u1e3b\u013f\u0140\u023d\u019a\u2c60\u2c61\u2c62\u026b\u026c\u1d85\u026d\u0234\u029f\uff2c\uff4c]",
      n: "[n\u0143\u0144\u01f8\u01f9\u0147\u0148\xd1\xf1\u1e44\u1e45\u0145\u0146\u1e46\u1e47\u1e4a\u1e4b\u1e48\u1e49N\u0308n\u0308\u019d\u0272\u0220\u019e\u1d70\u1d87\u0273\u0235\u0274\uff2e\uff4e\u014a\u014b]",
      o: "[o\xd8\xf8\xd6\xf6\xd3\xf3\xd2\xf2\xd4\xf4\u01d1\u01d2\u0150\u0151\u014e\u014f\u022e\u022f\u1ecc\u1ecd\u019f\u0275\u01a0\u01a1\u1ece\u1ecf\u014c\u014d\xd5\xf5\u01ea\u01eb\u020c\u020d\u0555\u0585]",
      p: "[p\u1e54\u1e55\u1e56\u1e57\u2c63\u1d7d\u01a4\u01a5\u1d71]",
      q: "[q\ua756\ua757\u02a0\u024a\u024b\ua758\ua759q\u0303]",
      r: "[r\u0154\u0155\u024c\u024d\u0158\u0159\u0156\u0157\u1e58\u1e59\u0210\u0211\u0212\u0213\u1e5a\u1e5b\u2c64\u027d]",
      s: "[s\u015a\u015b\u1e60\u1e61\u1e62\u1e63\ua7a8\ua7a9\u015c\u015d\u0160\u0161\u015e\u015f\u0218\u0219S\u0308s\u0308]",
      t: "[t\u0164\u0165\u1e6a\u1e6b\u0162\u0163\u1e6c\u1e6d\u01ae\u0288\u021a\u021b\u1e70\u1e71\u1e6e\u1e6f\u01ac\u01ad]",
      u: "[u\u016c\u016d\u0244\u0289\u1ee4\u1ee5\xdc\xfc\xda\xfa\xd9\xf9\xdb\xfb\u01d3\u01d4\u0170\u0171\u016c\u016d\u01af\u01b0\u1ee6\u1ee7\u016a\u016b\u0168\u0169\u0172\u0173\u0214\u0215\u222a]",
      v: "[v\u1e7c\u1e7d\u1e7e\u1e7f\u01b2\u028b\ua75e\ua75f\u2c71\u028b]",
      w: "[w\u1e82\u1e83\u1e80\u1e81\u0174\u0175\u1e84\u1e85\u1e86\u1e87\u1e88\u1e89]",
      x: "[x\u1e8c\u1e8d\u1e8a\u1e8b\u03c7]",
      y: "[y\xdd\xfd\u1ef2\u1ef3\u0176\u0177\u0178\xff\u1ef8\u1ef9\u1e8e\u1e8f\u1ef4\u1ef5\u024e\u024f\u01b3\u01b4]",
      z: "[z\u0179\u017a\u1e90\u1e91\u017d\u017e\u017b\u017c\u1e92\u1e93\u1e94\u1e95\u01b5\u01b6]",
    };
    var n = (function () {
      let e;
      let t;
      let n;
      let i;
      let r = "";
      const o = {};
      for (n in c) {
        if (c.hasOwnProperty(n)) {
          for (
            r += i = c[n].substring(2, c[n].length - 1), e = 0, t = i.length;
            e < t;
            e++
          ) {
            o[i.charAt(e)] = n;
          }
        }
      }
      const s = new RegExp("[" + r + "]", "g");
      return function (e) {
        return e
          .replace(s, function (e) {
            return o[e];
          })
          .toLowerCase();
      };
    })();
    return e;
  }),
  (function (e, t) {
    typeof define === "function" && define.amd
      ? define("microplugin", t)
      : typeof exports === "object"
        ? (module.exports = t())
        : (e.MicroPlugin = t());
  })(this, function () {
    const e = {
      mixin: function (r) {
        (r.plugins = {}),
          (r.prototype.initializePlugins = function (e) {
            let t;
            let n;
            let i;
            const r = this;
            const o = [];
            if (
              ((r.plugins = {
                names: [],
                settings: {},
                requested: {},
                loaded: {},
              }),
              s.isArray(e))
            ) {
              for (t = 0, n = e.length; t < n; t++) {
                typeof e[t] === "string"
                  ? o.push(e[t])
                  : ((r.plugins.settings[e[t].name] = e[t].options),
                    o.push(e[t].name));
              }
            } else if (e) {
              for (i in e) {
                e.hasOwnProperty(i) &&
                  ((r.plugins.settings[i] = e[i]), o.push(i));
              }
            }
            for (; o.length; ) r.require(o.shift());
          }),
          (r.prototype.loadPlugin = function (e) {
            const t = this;
            const n = t.plugins;
            const i = r.plugins[e];
            if (!r.plugins.hasOwnProperty(e)) {
              throw new Error('Unable to find "' + e + '" plugin');
            }
            (n.requested[e] = !0),
              (n.loaded[e] = i.fn.apply(t, [t.plugins.settings[e] || {}])),
              n.names.push(e);
          }),
          (r.prototype.require = function (e) {
            const t = this;
            const n = t.plugins;
            if (!t.plugins.loaded.hasOwnProperty(e)) {
              if (n.requested[e]) {
                throw new Error('Plugin has circular dependency ("' + e + '")');
              }
              t.loadPlugin(e);
            }
            return n.loaded[e];
          }),
          (r.define = function (e, t) {
            r.plugins[e] = { name: e, fn: t };
          });
      },
    };
    var s = {
      isArray:
        Array.isArray ||
        function (e) {
          return Object.prototype.toString.call(e) === "[object Array]";
        },
    };
    return e;
  }),
  (function (e, t) {
    typeof define === "function" && define.amd
      ? define("selectize", ["jquery", "sifter", "microplugin"], t)
      : typeof exports === "object"
        ? (module.exports = t(
            require("jquery"),
            require("sifter"),
            require("microplugin"),
          ))
        : (e.Selectize = t(e.jQuery, e.Sifter, e.MicroPlugin));
  })(this, function (w, l, e) {
    "use strict";
    const C = function (e, t) {
      if (typeof t !== "string" || t.length) {
        const l = typeof t === "string" ? new RegExp(t, "i") : t;
        const c = function (e) {
          let t = 0;
          if (e.nodeType === 3) {
            const n = e.data.search(l);
            if (n >= 0 && e.data.length > 0) {
              const i = e.data.match(l);
              const r = document.createElement("span");
              r.className = "highlight";
              const o = e.splitText(n);
              const s = (o.splitText(i[0].length), o.cloneNode(!0));
              r.appendChild(s), o.parentNode.replaceChild(r, o), (t = 1);
            }
          } else if (
            e.nodeType === 1 &&
            e.childNodes &&
            !/(script|style)/i.test(e.tagName) &&
            (e.className !== "highlight" || e.tagName !== "SPAN")
          ) {
            for (let a = 0; a < e.childNodes.length; ++a) {
              a += c(e.childNodes[a]);
            }
          }
          return t;
        };
        return e.each(function () {
          c(this);
        });
      }
    };
    w.fn.removeHighlight = function () {
      return this.find("span.highlight")
        .each(function () {
          this.parentNode.firstChild.nodeName;
          const e = this.parentNode;
          e.replaceChild(this.firstChild, this), e.normalize();
        })
        .end();
    };
    const i = function () {};
    (i.prototype = {
      on: function (e, t) {
        (this._events = this._events || {}),
          (this._events[e] = this._events[e] || []),
          this._events[e].push(t);
      },
      off: function (e, t) {
        const n = arguments.length;
        return n === 0
          ? delete this._events
          : n === 1
            ? delete this._events[e]
            : ((this._events = this._events || {}),
              void (
                e in this._events != !1 &&
                this._events[e].splice(this._events[e].indexOf(t), 1)
              ));
      },
      trigger: function (e) {
        if (((this._events = this._events || {}), e in this._events != !1)) {
          for (let t = 0; t < this._events[e].length; t++) {
            this._events[e][t].apply(
              this,
              Array.prototype.slice.call(arguments, 1),
            );
          }
        }
      },
    }),
      (i.mixin = function (e) {
        for (let t = ["on", "off", "trigger"], n = 0; n < t.length; n++) {
          e.prototype[t[n]] = i.prototype[t[n]];
        }
      });
    const v = /Mac/.test(navigator.userAgent);
    const r = 65;
    const o = 13;
    const s = 27;
    const u = 37;
    const a = 38;
    const c = 80;
    const d = 39;
    const h = 40;
    const p = 78;
    const f = 8;
    const g = 46;
    const y = 16;
    const b = v ? 91 : 17;
    const _ = v ? 18 : 17;
    const m = 9;
    const x = 1;
    const k = 2;
    const S =
      !/android/i.test(window.navigator.userAgent) &&
      !!document.createElement("input").validity;
    const T = function (e) {
      return void 0 !== e;
    };
    const D = function (e) {
      return e == null
        ? null
        : typeof e === "boolean"
          ? e
            ? "1"
            : "0"
          : e + "";
    };
    const j = function (e) {
      return (e + "")
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;");
    };
    const t = {
      before: function (e, t, n) {
        const i = e[t];
        e[t] = function () {
          return n.apply(e, arguments), i.apply(e, arguments);
        };
      },
      after: function (t, e, n) {
        const i = t[e];
        t[e] = function () {
          const e = i.apply(t, arguments);
          return n.apply(t, arguments), e;
        };
      },
    };
    const N = function (e) {
      let t = !1;
      return function () {
        t || ((t = !0), e.apply(this, arguments));
      };
    };
    const E = function (n, i) {
      let r;
      return function () {
        const e = this;
        const t = arguments;
        window.clearTimeout(r),
          (r = window.setTimeout(function () {
            n.apply(e, t);
          }, i));
      };
    };
    const n = function (n, i, e) {
      let t;
      const r = n.trigger;
      const o = {};
      for (t in ((n.trigger = function (e) {
        const t = e;
        if (i.indexOf(t) === -1) return r.apply(n, arguments);
        o[t] = arguments;
      }),
      e.apply(n, []),
      (n.trigger = r),
      o)) {
        o.hasOwnProperty(t) && r.apply(n, o[t]);
      }
    };
    const I = function (n, e, t, i) {
      n.on(e, t, function (e) {
        for (var t = e.target; t && t.parentNode !== n[0]; ) t = t.parentNode;
        return (e.currentTarget = t), i.apply(this, [e]);
      });
    };
    const A = function (e) {
      const t = {};
      if ("selectionStart" in e) {
        (t.start = e.selectionStart), (t.length = e.selectionEnd - t.start);
      } else if (document.selection) {
        e.focus();
        const n = document.selection.createRange();
        const i = document.selection.createRange().text.length;
        n.moveStart("character", -e.value.length),
          (t.start = n.text.length - i),
          (t.length = i);
      }
      return t;
    };
    const M = function (e, t, n) {
      let i;
      let r;
      let o = {};
      if (n) for (i = 0, r = n.length; i < r; i++) o[n[i]] = e.css(n[i]);
      else o = e.css();
      t.css(o);
    };
    const O = function (e, t) {
      return e
        ? (H.$testInput ||
            (H.$testInput = w("<span />")
              .css({
                position: "absolute",
                top: -99999,
                left: -99999,
                width: "auto",
                padding: 0,
                whiteSpace: "pre",
              })
              .appendTo("body")),
          H.$testInput.text(e),
          M(t, H.$testInput, [
            "letterSpacing",
            "fontSize",
            "fontFamily",
            "fontWeight",
            "textTransform",
          ]),
          H.$testInput.width())
        : 0;
    };
    const P = function (u) {
      let d = null;
      const e = function (e, t) {
        let n, i, r, o, s, a, l, c;
        (t = t || {}),
          (e = e || window.event || {}).metaKey ||
            e.altKey ||
            ((t.force || !1 !== u.data("grow")) &&
              ((n = u.val()),
              e.type &&
                e.type.toLowerCase() === "keydown" &&
                ((r =
                  ((i = e.keyCode) >= 48 && i <= 57) ||
                  (i >= 65 && i <= 90) ||
                  (i >= 96 && i <= 111) ||
                  (i >= 186 && i <= 222) ||
                  i === 32),
                i === g || i === f
                  ? (c = A(u[0])).length
                    ? (n =
                        n.substring(0, c.start) +
                        n.substring(c.start + c.length))
                    : i === f && c.start
                      ? (n =
                          n.substring(0, c.start - 1) +
                          n.substring(c.start + 1))
                      : i === g &&
                        typeof c.start !== "undefined" &&
                        (n = n.substring(0, c.start) + n.substring(c.start + 1))
                  : r &&
                    ((a = e.shiftKey),
                    (l = String.fromCharCode(e.keyCode)),
                    (n += l = a ? l.toUpperCase() : l.toLowerCase()))),
              (o = u.attr("placeholder")),
              !n && o && (n = o),
              (s = O(n, u) + 4) !== d &&
                ((d = s), u.width(s), u.triggerHandler("resize"))));
      };
      u.on("keydown keyup update blur", e), e();
    };
    const F = function (e) {
      const t = document.createElement("div");
      return t.appendChild(e.cloneNode(!0)), t.innerHTML;
    };
    const L = function (e, t) {
      t || (t = {});
      const n = "Selectize";
      console.error(n + ": " + e),
        t.explanation &&
          (console.group && console.group(),
          console.error(t.explanation),
          console.group && console.groupEnd());
    };
    var H = function (e, t) {
      let n;
      let i;
      let r;
      let o;
      const s = this;
      (o = e[0]).selectize = s;
      const a = window.getComputedStyle && window.getComputedStyle(o, null);
      if (
        ((r =
          (r = a
            ? a.getPropertyValue("direction")
            : o.currentStyle && o.currentStyle.direction) ||
          e.parents("[dir]:first").attr("dir") ||
          ""),
        w.extend(s, {
          order: 0,
          settings: t,
          $input: e,
          tabIndex: e.attr("tabindex") || "",
          tagType: o.tagName.toLowerCase() === "select" ? x : k,
          rtl: /rtl/i.test(r),
          eventNS: ".selectize" + ++H.count,
          highlightedValue: null,
          isBlurring: !1,
          isOpen: !1,
          isDisabled: !1,
          isRequired: e.is("[required]"),
          isInvalid: !1,
          isLocked: !1,
          isFocused: !1,
          isInputHidden: !1,
          isSetup: !1,
          isShiftDown: !1,
          isCmdDown: !1,
          isCtrlDown: !1,
          ignoreFocus: !1,
          ignoreBlur: !1,
          ignoreHover: !1,
          hasOptions: !1,
          currentResults: null,
          lastValue: "",
          caretPos: 0,
          loading: 0,
          loadedSearches: {},
          $activeOption: null,
          $activeItems: [],
          optgroups: {},
          options: {},
          userOptions: {},
          items: [],
          renderCache: {},
          onSearchChange:
            t.loadThrottle === null
              ? s.onSearchChange
              : E(s.onSearchChange, t.loadThrottle),
        }),
        (s.sifter = new l(this.options, { diacritics: t.diacritics })),
        s.settings.options)
      ) {
        for (n = 0, i = s.settings.options.length; n < i; n++) {
          s.registerOption(s.settings.options[n]);
        }
        delete s.settings.options;
      }
      if (s.settings.optgroups) {
        for (n = 0, i = s.settings.optgroups.length; n < i; n++) {
          s.registerOptionGroup(s.settings.optgroups[n]);
        }
        delete s.settings.optgroups;
      }
      (s.settings.mode =
        s.settings.mode || (s.settings.maxItems === 1 ? "single" : "multi")),
        typeof s.settings.hideSelected !== "boolean" &&
          (s.settings.hideSelected = s.settings.mode === "multi"),
        s.initializePlugins(s.settings.plugins),
        s.setupCallbacks(),
        s.setupTemplates(),
        s.setup();
    };
    return (
      i.mixin(H),
      void 0 !== e
        ? e.mixin(H)
        : L("Dependency MicroPlugin is missing", {
            explanation:
              'Make sure you either: (1) are using the "standalone" version of Selectize, or (2) require MicroPlugin before you load Selectize.',
          }),
      w.extend(H.prototype, {
        setup: function () {
          let e;
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          const u = this;
          const d = u.settings;
          const h = u.eventNS;
          const p = w(window);
          const f = w(document);
          const g = u.$input;
          if (
            ((s = u.settings.mode),
            (a = g.attr("class") || ""),
            (e = w("<div>").addClass(d.wrapperClass).addClass(a).addClass(s)),
            (t = w("<div>")
              .addClass(d.inputClass)
              .addClass("items")
              .appendTo(e)),
            (n = w('<input type="text" autocomplete="off" />')
              .appendTo(t)
              .attr("tabindex", g.is(":disabled") ? "-1" : u.tabIndex)),
            (o = w(d.dropdownParent || e)),
            (i = w("<div>")
              .addClass(d.dropdownClass)
              .addClass(s)
              .hide()
              .appendTo(o)),
            (r = w("<div>").addClass(d.dropdownContentClass).appendTo(i)),
            (c = g.attr("id")) &&
              (n.attr("id", c + "-selectized"),
              w("label[for='" + c + "']").attr("for", c + "-selectized")),
            u.settings.copyClassesToDropdown && i.addClass(a),
            e.css({ width: g[0].style.width }),
            u.plugins.names.length &&
              ((l = "plugin-" + u.plugins.names.join(" plugin-")),
              e.addClass(l),
              i.addClass(l)),
            (d.maxItems === null || d.maxItems > 1) &&
              u.tagType === x &&
              g.attr("multiple", "multiple"),
            u.settings.placeholder && n.attr("placeholder", d.placeholder),
            !u.settings.splitOn && u.settings.delimiter)
          ) {
            const m = u.settings.delimiter.replace(
              /[-\/\\^$*+?.()|[\]{}]/g,
              "\\$&",
            );
            u.settings.splitOn = new RegExp("\\s*" + m + "+\\s*");
          }
          g.attr("autocorrect") && n.attr("autocorrect", g.attr("autocorrect")),
            g.attr("autocapitalize") &&
              n.attr("autocapitalize", g.attr("autocapitalize")),
            (n[0].type = g[0].type),
            (u.$wrapper = e),
            (u.$control = t),
            (u.$control_input = n),
            (u.$dropdown = i),
            (u.$dropdown_content = r),
            i.on(
              "mouseenter mousedown click",
              "[data-disabled]>[data-selectable]",
              function (e) {
                e.stopImmediatePropagation();
              },
            ),
            i.on("mouseenter", "[data-selectable]", function () {
              return u.onOptionHover.apply(u, arguments);
            }),
            i.on("mousedown click", "[data-selectable]", function () {
              return u.onOptionSelect.apply(u, arguments);
            }),
            I(t, "mousedown", "*:not(input)", function () {
              return u.onItemSelect.apply(u, arguments);
            }),
            P(n),
            t.on({
              mousedown: function () {
                return u.onMouseDown.apply(u, arguments);
              },
              click: function () {
                return u.onClick.apply(u, arguments);
              },
            }),
            n.on({
              mousedown: function (e) {
                e.stopPropagation();
              },
              keydown: function () {
                return u.onKeyDown.apply(u, arguments);
              },
              keyup: function () {
                return u.onKeyUp.apply(u, arguments);
              },
              keypress: function () {
                return u.onKeyPress.apply(u, arguments);
              },
              resize: function () {
                u.positionDropdown.apply(u, []);
              },
              blur: function () {
                return u.onBlur.apply(u, arguments);
              },
              focus: function () {
                return (u.ignoreBlur = !1), u.onFocus.apply(u, arguments);
              },
              paste: function () {
                return u.onPaste.apply(u, arguments);
              },
            }),
            f.on("keydown" + h, function (e) {
              (u.isCmdDown = e[v ? "metaKey" : "ctrlKey"]),
                (u.isCtrlDown = e[v ? "altKey" : "ctrlKey"]),
                (u.isShiftDown = e.shiftKey);
            }),
            f.on("keyup" + h, function (e) {
              e.keyCode === _ && (u.isCtrlDown = !1),
                e.keyCode === y && (u.isShiftDown = !1),
                e.keyCode === b && (u.isCmdDown = !1);
            }),
            f.on("mousedown" + h, function (e) {
              if (u.isFocused) {
                if (
                  e.target === u.$dropdown[0] ||
                  e.target.parentNode === u.$dropdown[0]
                ) {
                  return !1;
                }
                u.$control.has(e.target).length ||
                  e.target === u.$control[0] ||
                  u.blur(e.target);
              }
            }),
            p.on(["scroll" + h, "resize" + h].join(" "), function () {
              u.isOpen && u.positionDropdown.apply(u, arguments);
            }),
            p.on("mousemove" + h, function () {
              u.ignoreHover = !1;
            }),
            (this.revertSettings = {
              $children: g.children().detach(),
              tabindex: g.attr("tabindex"),
            }),
            g.attr("tabindex", -1).hide().after(u.$wrapper),
            w.isArray(d.items) && (u.setValue(d.items), delete d.items),
            S &&
              g.on("invalid" + h, function (e) {
                e.preventDefault(), (u.isInvalid = !0), u.refreshState();
              }),
            u.updateOriginalInput(),
            u.refreshItems(),
            u.refreshState(),
            u.updatePlaceholder(),
            (u.isSetup = !0),
            g.is(":disabled") && u.disable(),
            u.on("change", this.onChange),
            g.data("selectize", u),
            g.addClass("selectized"),
            u.trigger("initialize"),
            !0 === d.preload && u.onSearchChange("");
        },
        setupTemplates: function () {
          const e = this;
          const n = e.settings.labelField;
          const i = e.settings.optgroupLabelField;
          const t = {
            optgroup: function (e) {
              return '<div class="optgroup">' + e.html + "</div>";
            },
            optgroup_header: function (e, t) {
              return '<div class="optgroup-header">' + t(e[i]) + "</div>";
            },
            option: function (e, t) {
              return '<div class="option">' + t(e[n]) + "</div>";
            },
            item: function (e, t) {
              return '<div class="item">' + t(e[n]) + "</div>";
            },
            option_create: function (e, t) {
              return (
                '<div class="create">Add <strong>' +
                t(e.input) +
                "</strong>&hellip;</div>"
              );
            },
          };
          e.settings.render = w.extend({}, t, e.settings.render);
        },
        setupCallbacks: function () {
          let e;
          let t;
          const n = {
            initialize: "onInitialize",
            change: "onChange",
            item_add: "onItemAdd",
            item_remove: "onItemRemove",
            clear: "onClear",
            option_add: "onOptionAdd",
            option_remove: "onOptionRemove",
            option_clear: "onOptionClear",
            optgroup_add: "onOptionGroupAdd",
            optgroup_remove: "onOptionGroupRemove",
            optgroup_clear: "onOptionGroupClear",
            dropdown_open: "onDropdownOpen",
            dropdown_close: "onDropdownClose",
            type: "onType",
            load: "onLoad",
            focus: "onFocus",
            blur: "onBlur",
          };
          for (e in n) {
            n.hasOwnProperty(e) && (t = this.settings[n[e]]) && this.on(e, t);
          }
        },
        onClick: function (e) {
          const t = this;
          (t.isFocused && t.isOpen) || (t.focus(), e.preventDefault());
        },
        onMouseDown: function (e) {
          const t = this;
          const n = e.isDefaultPrevented();
          w(e.target);
          if (t.isFocused) {
            if (e.target !== t.$control_input[0]) {
              return (
                t.settings.mode === "single"
                  ? t.isOpen
                    ? t.close()
                    : t.open()
                  : n || t.setActiveItem(null),
                !1
              );
            }
          } else {
            n ||
              window.setTimeout(function () {
                t.focus();
              }, 0);
          }
        },
        onChange: function () {
          this.$input.trigger("change");
        },
        onPaste: function (e) {
          const r = this;
          r.isFull() || r.isInputHidden || r.isLocked
            ? e.preventDefault()
            : r.settings.splitOn &&
              setTimeout(function () {
                const e = r.$control_input.val();
                if (e.match(r.settings.splitOn)) {
                  for (
                    let t = w.trim(e).split(r.settings.splitOn),
                      n = 0,
                      i = t.length;
                    n < i;
                    n++
                  ) {
                    r.createItem(t[n]);
                  }
                }
              }, 0);
        },
        onKeyPress: function (e) {
          if (this.isLocked) return e && e.preventDefault();
          const t = String.fromCharCode(e.keyCode || e.which);
          return this.settings.create &&
            this.settings.mode === "multi" &&
            t === this.settings.delimiter
            ? (this.createItem(), e.preventDefault(), !1)
            : void 0;
        },
        onKeyDown: function (e) {
          e.target, this.$control_input[0];
          const t = this;
          if (t.isLocked) e.keyCode !== m && e.preventDefault();
          else {
            switch (e.keyCode) {
              case r:
                if (t.isCmdDown) return void t.selectAll();
                break;
              case s:
                return void (
                  t.isOpen &&
                  (e.preventDefault(), e.stopPropagation(), t.close())
                );
              case p:
                if (!e.ctrlKey || e.altKey) break;
              case h:
                if (!t.isOpen && t.hasOptions) t.open();
                else if (t.$activeOption) {
                  t.ignoreHover = !0;
                  const n = t.getAdjacentOption(t.$activeOption, 1);
                  n.length && t.setActiveOption(n, !0, !0);
                }
                return void e.preventDefault();
              case c:
                if (!e.ctrlKey || e.altKey) break;
              case a:
                if (t.$activeOption) {
                  t.ignoreHover = !0;
                  const i = t.getAdjacentOption(t.$activeOption, -1);
                  i.length && t.setActiveOption(i, !0, !0);
                }
                return void e.preventDefault();
              case o:
                return void (
                  t.isOpen &&
                  t.$activeOption &&
                  (t.onOptionSelect({ currentTarget: t.$activeOption }),
                  e.preventDefault())
                );
              case u:
                return void t.advanceSelection(-1, e);
              case d:
                return void t.advanceSelection(1, e);
              case m:
                return (
                  t.settings.selectOnTab &&
                    t.isOpen &&
                    t.$activeOption &&
                    (t.onOptionSelect({ currentTarget: t.$activeOption }),
                    t.isFull() || e.preventDefault()),
                  void (
                    t.settings.create &&
                    t.createItem() &&
                    e.preventDefault()
                  )
                );
              case f:
              case g:
                return void t.deleteSelection(e);
            }
            (!t.isFull() && !t.isInputHidden) ||
              (v ? e.metaKey : e.ctrlKey) ||
              e.preventDefault();
          }
        },
        onKeyUp: function (e) {
          const t = this;
          if (t.isLocked) return e && e.preventDefault();
          const n = t.$control_input.val() || "";
          t.lastValue !== n &&
            ((t.lastValue = n),
            t.onSearchChange(n),
            t.refreshOptions(),
            t.trigger("type", n));
        },
        onSearchChange: function (t) {
          const n = this;
          const i = n.settings.load;
          i &&
            (n.loadedSearches.hasOwnProperty(t) ||
              ((n.loadedSearches[t] = !0),
              n.load(function (e) {
                i.apply(n, [t, e]);
              })));
        },
        onFocus: function (e) {
          const t = this;
          const n = t.isFocused;
          if (t.isDisabled) return t.blur(), e && e.preventDefault(), !1;
          t.ignoreFocus ||
            ((t.isFocused = !0),
            t.settings.preload === "focus" && t.onSearchChange(""),
            n || t.trigger("focus"),
            t.$activeItems.length ||
              (t.showInput(),
              t.setActiveItem(null),
              t.refreshOptions(!!t.settings.openOnFocus)),
            t.refreshState());
        },
        onBlur: function (e, t) {
          const n = this;
          if (n.isFocused && ((n.isFocused = !1), !n.ignoreFocus)) {
            if (
              !n.ignoreBlur &&
              document.activeElement === n.$dropdown_content[0]
            ) {
              return (n.ignoreBlur = !0), void n.onFocus(e);
            }
            const i = function () {
              n.close(),
                n.setTextboxValue(""),
                n.setActiveItem(null),
                n.setActiveOption(null),
                n.setCaret(n.items.length),
                n.refreshState(),
                t && t.focus && t.focus(),
                (n.isBlurring = !1),
                (n.ignoreFocus = !1),
                n.trigger("blur");
            };
            (n.isBlurring = !0),
              (n.ignoreFocus = !0),
              n.settings.create && n.settings.createOnBlur
                ? n.createItem(null, !1, i)
                : i();
          }
        },
        onOptionHover: function (e) {
          this.ignoreHover || this.setActiveOption(e.currentTarget, !1);
        },
        onOptionSelect: function (e) {
          let t;
          let n;
          const i = this;
          e.preventDefault && (e.preventDefault(), e.stopPropagation()),
            (n = w(e.currentTarget)).hasClass("create")
              ? i.createItem(null, function () {
                  i.settings.closeAfterSelect && i.close();
                })
              : void 0 !== (t = n.attr("data-value")) &&
                ((i.lastQuery = null),
                i.setTextboxValue(""),
                i.addItem(t),
                i.settings.closeAfterSelect
                  ? i.close()
                  : !i.settings.hideSelected &&
                    e.type &&
                    /mouse/.test(e.type) &&
                    i.setActiveOption(i.getOption(t)));
        },
        onItemSelect: function (e) {
          const t = this;
          t.isLocked ||
            (t.settings.mode === "multi" &&
              (e.preventDefault(), t.setActiveItem(e.currentTarget, e)));
        },
        load: function (e) {
          const t = this;
          const n = t.$wrapper.addClass(t.settings.loadingClass);
          t.loading++,
            e.apply(t, [
              function (e) {
                (t.loading = Math.max(t.loading - 1, 0)),
                  e &&
                    e.length &&
                    (t.addOption(e),
                    t.refreshOptions(t.isFocused && !t.isInputHidden)),
                  t.loading || n.removeClass(t.settings.loadingClass),
                  t.trigger("load", e);
              },
            ]);
        },
        setTextboxValue: function (e) {
          const t = this.$control_input;
          t.val() !== e &&
            (t.val(e).triggerHandler("update"), (this.lastValue = e));
        },
        getValue: function () {
          return this.tagType === x && this.$input.attr("multiple")
            ? this.items
            : this.items.join(this.settings.delimiter);
        },
        setValue: function (e, t) {
          n(this, t ? [] : ["change"], function () {
            this.clear(t), this.addItems(e, t);
          });
        },
        setActiveItem: function (e, t) {
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          const u = this;
          if (u.settings.mode !== "single") {
            if (!(e = w(e)).length) {
              return (
                w(u.$activeItems).removeClass("active"),
                (u.$activeItems = []),
                void (u.isFocused && u.showInput())
              );
            }
            if (
              (n = t && t.type.toLowerCase()) === "mousedown" &&
              u.isShiftDown &&
              u.$activeItems.length
            ) {
              for (
                c = u.$control.children(".active:last"),
                  o = Array.prototype.indexOf.apply(u.$control[0].childNodes, [
                    c[0],
                  ]),
                  (s = Array.prototype.indexOf.apply(u.$control[0].childNodes, [
                    e[0],
                  ])) < o && ((l = o), (o = s), (s = l)),
                  i = o;
                i <= s;
                i++
              ) {
                (a = u.$control[0].childNodes[i]),
                  u.$activeItems.indexOf(a) === -1 &&
                    (w(a).addClass("active"), u.$activeItems.push(a));
              }
              t.preventDefault();
            } else {
              (n === "mousedown" && u.isCtrlDown) ||
              (n === "keydown" && this.isShiftDown)
                ? e.hasClass("active")
                  ? ((r = u.$activeItems.indexOf(e[0])),
                    u.$activeItems.splice(r, 1),
                    e.removeClass("active"))
                  : u.$activeItems.push(e.addClass("active")[0])
                : (w(u.$activeItems).removeClass("active"),
                  (u.$activeItems = [e.addClass("active")[0]]));
            }
            u.hideInput(), this.isFocused || u.focus();
          }
        },
        setActiveOption: function (e, t, n) {
          let i;
          let r;
          let o;
          let s;
          let a;
          const l = this;
          l.$activeOption && l.$activeOption.removeClass("active"),
            (l.$activeOption = null),
            (e = w(e)).length &&
              ((l.$activeOption = e.addClass("active")),
              (!t && T(t)) ||
                ((i = l.$dropdown_content.height()),
                (r = l.$activeOption.outerHeight(!0)),
                (t = l.$dropdown_content.scrollTop() || 0),
                (a =
                  (s = o =
                    l.$activeOption.offset().top -
                    l.$dropdown_content.offset().top +
                    t) -
                  i +
                  r),
                i + t < o + r
                  ? l.$dropdown_content
                      .stop()
                      .animate(
                        { scrollTop: a },
                        n ? l.settings.scrollDuration : 0,
                      )
                  : o < t &&
                    l.$dropdown_content
                      .stop()
                      .animate(
                        { scrollTop: s },
                        n ? l.settings.scrollDuration : 0,
                      )));
        },
        selectAll: function () {
          const e = this;
          e.settings.mode !== "single" &&
            ((e.$activeItems = Array.prototype.slice.apply(
              e.$control.children(":not(input)").addClass("active"),
            )),
            e.$activeItems.length && (e.hideInput(), e.close()),
            e.focus());
        },
        hideInput: function () {
          const e = this;
          e.setTextboxValue(""),
            e.$control_input.css({
              opacity: 0,
              position: "absolute",
              left: e.rtl ? 1e4 : -1e4,
            }),
            (e.isInputHidden = !0);
        },
        showInput: function () {
          this.$control_input.css({
            opacity: 1,
            position: "relative",
            left: 0,
          }),
            (this.isInputHidden = !1);
        },
        focus: function () {
          const e = this;
          e.isDisabled ||
            ((e.ignoreFocus = !0),
            e.$control_input[0].focus(),
            window.setTimeout(function () {
              (e.ignoreFocus = !1), e.onFocus();
            }, 0));
        },
        blur: function (e) {
          this.$control_input[0].blur(), this.onBlur(null, e);
        },
        getScoreFunction: function (e) {
          return this.sifter.getScoreFunction(e, this.getSearchOptions());
        },
        getSearchOptions: function () {
          const e = this.settings;
          let t = e.sortField;
          return (
            typeof t === "string" && (t = [{ field: t }]),
            {
              fields: e.searchField,
              conjunction: e.searchConjunction,
              sort: t,
              nesting: e.nesting,
            }
          );
        },
        search: function (e) {
          let t;
          let n;
          let i;
          const r = this;
          const o = r.settings;
          const s = this.getSearchOptions();
          if (
            o.score &&
            typeof (i = r.settings.score.apply(this, [e])) !== "function"
          ) {
            throw new Error(
              'Selectize "score" setting must be a function that returns a function',
            );
          }
          if (
            (e !== r.lastQuery
              ? ((r.lastQuery = e),
                (n = r.sifter.search(e, w.extend(s, { score: i }))),
                (r.currentResults = n))
              : (n = w.extend(!0, {}, r.currentResults)),
            o.hideSelected)
          ) {
            for (t = n.items.length - 1; t >= 0; t--) {
              r.items.indexOf(D(n.items[t].id)) !== -1 && n.items.splice(t, 1);
            }
          }
          return n;
        },
        refreshOptions: function (e) {
          let t, n, i, r, o, s, a, l, c, u, d, h, p, f, g, m;
          void 0 === e && (e = !0);
          const v = this;
          const y = w.trim(v.$control_input.val());
          const b = v.search(y);
          const _ = v.$dropdown_content;
          const x = v.$activeOption && D(v.$activeOption.attr("data-value"));
          for (
            r = b.items.length,
              typeof v.settings.maxOptions === "number" &&
                (r = Math.min(r, v.settings.maxOptions)),
              o = {},
              s = [],
              t = 0;
            t < r;
            t++
          ) {
            for (
              a = v.options[b.items[t].id],
                l = v.render("option", a),
                c = a[v.settings.optgroupField] || "",
                n = 0,
                i = (u = w.isArray(c) ? c : [c]) && u.length;
              n < i;
              n++
            ) {
              (c = u[n]),
                v.optgroups.hasOwnProperty(c) || (c = ""),
                o.hasOwnProperty(c) ||
                  ((o[c] = document.createDocumentFragment()), s.push(c)),
                o[c].appendChild(l);
            }
          }
          for (
            this.settings.lockOptgroupOrder &&
              s.sort(function (e, t) {
                return (
                  (v.optgroups[e].$order || 0) - (v.optgroups[t].$order || 0)
                );
              }),
              d = document.createDocumentFragment(),
              t = 0,
              r = s.length;
            t < r;
            t++
          ) {
            (c = s[t]),
              v.optgroups.hasOwnProperty(c) && o[c].childNodes.length
                ? ((h = document.createDocumentFragment()).appendChild(
                    v.render("optgroup_header", v.optgroups[c]),
                  ),
                  h.appendChild(o[c]),
                  d.appendChild(
                    v.render(
                      "optgroup",
                      w.extend({}, v.optgroups[c], { html: F(h), dom: h }),
                    ),
                  ))
                : d.appendChild(o[c]);
          }
          if (
            (_.html(d),
            v.settings.highlight &&
              (_.removeHighlight(), b.query.length && b.tokens.length))
          ) {
            for (t = 0, r = b.tokens.length; t < r; t++) {
              C(_, b.tokens[t].regex);
            }
          }
          if (!v.settings.hideSelected) {
            for (t = 0, r = v.items.length; t < r; t++) {
              v.getOption(v.items[t]).addClass("selected");
            }
          }
          (p = v.canCreate(y)) &&
            (_.prepend(v.render("option_create", { input: y })),
            (m = w(_[0].childNodes[0]))),
            (v.hasOptions = b.items.length > 0 || p),
            v.hasOptions
              ? (b.items.length > 0
                  ? ((g = x && v.getOption(x)) && g.length
                      ? (f = g)
                      : v.settings.mode === "single" &&
                        v.items.length &&
                        (f = v.getOption(v.items[0])),
                    (f && f.length) ||
                      (f =
                        m && !v.settings.addPrecedence
                          ? v.getAdjacentOption(m, 1)
                          : _.find("[data-selectable]:first")))
                  : (f = m),
                v.setActiveOption(f),
                e && !v.isOpen && v.open())
              : (v.setActiveOption(null), e && v.isOpen && v.close());
        },
        addOption: function (e) {
          let t;
          let n;
          let i;
          const r = this;
          if (w.isArray(e)) {
            for (t = 0, n = e.length; t < n; t++) r.addOption(e[t]);
          } else {
            (i = r.registerOption(e)) &&
              ((r.userOptions[i] = !0),
              (r.lastQuery = null),
              r.trigger("option_add", i, e));
          }
        },
        registerOption: function (e) {
          const t = D(e[this.settings.valueField]);
          return (
            t != null &&
            !this.options.hasOwnProperty(t) &&
            ((e.$order = e.$order || ++this.order), (this.options[t] = e), t)
          );
        },
        registerOptionGroup: function (e) {
          const t = D(e[this.settings.optgroupValueField]);
          return (
            !!t &&
            ((e.$order = e.$order || ++this.order), (this.optgroups[t] = e), t)
          );
        },
        addOptionGroup: function (e, t) {
          (t[this.settings.optgroupValueField] = e),
            (e = this.registerOptionGroup(t)) &&
              this.trigger("optgroup_add", e, t);
        },
        removeOptionGroup: function (e) {
          this.optgroups.hasOwnProperty(e) &&
            (delete this.optgroups[e],
            (this.renderCache = {}),
            this.trigger("optgroup_remove", e));
        },
        clearOptionGroups: function () {
          (this.optgroups = {}),
            (this.renderCache = {}),
            this.trigger("optgroup_clear");
        },
        updateOption: function (e, t) {
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          const c = this;
          if (
            ((e = D(e)),
            (r = D(t[c.settings.valueField])),
            e !== null && c.options.hasOwnProperty(e))
          ) {
            if (typeof r !== "string") {
              throw new Error("Value must be set in option data");
            }
            (l = c.options[e].$order),
              r !== e &&
                (delete c.options[e],
                (o = c.items.indexOf(e)) !== -1 && c.items.splice(o, 1, r)),
              (t.$order = t.$order || l),
              (c.options[r] = t),
              (s = c.renderCache.item),
              (a = c.renderCache.option),
              s && (delete s[e], delete s[r]),
              a && (delete a[e], delete a[r]),
              c.items.indexOf(r) !== -1 &&
                ((n = c.getItem(e)),
                (i = w(c.render("item", t))),
                n.hasClass("active") && i.addClass("active"),
                n.replaceWith(i)),
              (c.lastQuery = null),
              c.isOpen && c.refreshOptions(!1);
          }
        },
        removeOption: function (e, t) {
          const n = this;
          e = D(e);
          const i = n.renderCache.item;
          const r = n.renderCache.option;
          i && delete i[e],
            r && delete r[e],
            delete n.userOptions[e],
            delete n.options[e],
            (n.lastQuery = null),
            n.trigger("option_remove", e),
            n.removeItem(e, t);
        },
        clearOptions: function () {
          const t = this;
          (t.loadedSearches = {}), (t.userOptions = {}), (t.renderCache = {});
          const n = t.options;
          w.each(t.options, function (e) {
            t.items.indexOf(e) == -1 && delete n[e];
          }),
            (t.options = t.sifter.items = n),
            (t.lastQuery = null),
            t.trigger("option_clear");
        },
        getOption: function (e) {
          return this.getElementWithValue(
            e,
            this.$dropdown_content.find("[data-selectable]"),
          );
        },
        getAdjacentOption: function (e, t) {
          const n = this.$dropdown.find("[data-selectable]");
          const i = n.index(e) + t;
          return i >= 0 && i < n.length ? n.eq(i) : w();
        },
        getElementWithValue: function (e, t) {
          if ((e = D(e)) != null) {
            for (let n = 0, i = t.length; n < i; n++) {
              if (t[n].getAttribute("data-value") === e) return w(t[n]);
            }
          }
          return w();
        },
        getItem: function (e) {
          return this.getElementWithValue(e, this.$control.children());
        },
        addItems: function (e, t) {
          this.buffer = document.createDocumentFragment();
          for (var n = this.$control[0].childNodes, i = 0; i < n.length; i++) {
            this.buffer.appendChild(n[i]);
          }
          for (
            let r = w.isArray(e) ? e : [e], o = ((i = 0), r.length);
            i < o;
            i++
          ) {
            (this.isPending = i < o - 1), this.addItem(r[i], t);
          }
          const s = this.$control[0];
          s.insertBefore(this.buffer, s.firstChild), (this.buffer = null);
        },
        addItem: function (a, l) {
          n(this, l ? [] : ["change"], function () {
            let e;
            let t;
            let n;
            let i;
            let r;
            const o = this;
            const s = o.settings.mode;
            (a = D(a)),
              o.items.indexOf(a) === -1
                ? o.options.hasOwnProperty(a) &&
                  (s === "single" && o.clear(l),
                  (s === "multi" && o.isFull()) ||
                    ((e = w(o.render("item", o.options[a]))),
                    (r = o.isFull()),
                    o.items.splice(o.caretPos, 0, a),
                    o.insertAtCaret(e),
                    (!o.isPending || (!r && o.isFull())) && o.refreshState(),
                    o.isSetup &&
                      ((n = o.$dropdown_content.find("[data-selectable]")),
                      o.isPending ||
                        ((t = o.getOption(a)),
                        (i = o.getAdjacentOption(t, 1).attr("data-value")),
                        o.refreshOptions(o.isFocused && s !== "single"),
                        i && o.setActiveOption(o.getOption(i))),
                      !n.length || o.isFull()
                        ? o.close()
                        : o.isPending || o.positionDropdown(),
                      o.updatePlaceholder(),
                      o.trigger("item_add", a, e),
                      o.isPending || o.updateOriginalInput({ silent: l }))))
                : s === "single" && o.close();
          });
        },
        removeItem: function (e, t) {
          let n;
          let i;
          let r;
          const o = this;
          (n = e instanceof w ? e : o.getItem(e)),
            (e = D(n.attr("data-value"))),
            (i = o.items.indexOf(e)) !== -1 &&
              (n.remove(),
              n.hasClass("active") &&
                ((r = o.$activeItems.indexOf(n[0])),
                o.$activeItems.splice(r, 1)),
              o.items.splice(i, 1),
              (o.lastQuery = null),
              !o.settings.persist &&
                o.userOptions.hasOwnProperty(e) &&
                o.removeOption(e, t),
              i < o.caretPos && o.setCaret(o.caretPos - 1),
              o.refreshState(),
              o.updatePlaceholder(),
              o.updateOriginalInput({ silent: t }),
              o.positionDropdown(),
              o.trigger("item_remove", e, n));
        },
        createItem: function (e, n) {
          const i = this;
          const r = i.caretPos;
          e = e || w.trim(i.$control_input.val() || "");
          let o = arguments[arguments.length - 1];
          if (
            (typeof o !== "function" && (o = function () {}),
            typeof n !== "boolean" && (n = !0),
            !i.canCreate(e))
          ) {
            return o(), !1;
          }
          i.lock();
          const t =
            typeof i.settings.create === "function"
              ? this.settings.create
              : function (e) {
                  const t = {};
                  return (
                    (t[i.settings.labelField] = e),
                    (t[i.settings.valueField] = e),
                    t
                  );
                };
          const s = N(function (e) {
            if ((i.unlock(), !e || typeof e !== "object")) return o();
            const t = D(e[i.settings.valueField]);
            if (typeof t !== "string") return o();
            i.setTextboxValue(""),
              i.addOption(e),
              i.setCaret(r),
              i.addItem(t),
              i.refreshOptions(n && i.settings.mode !== "single"),
              o(e);
          });
          const a = t.apply(this, [e, s]);
          return void 0 !== a && s(a), !0;
        },
        refreshItems: function () {
          (this.lastQuery = null),
            this.isSetup && this.addItem(this.items),
            this.refreshState(),
            this.updateOriginalInput();
        },
        refreshState: function () {
          this.refreshValidityState(), this.refreshClasses();
        },
        refreshValidityState: function () {
          if (!this.isRequired) return !1;
          const e = !this.items.length;
          (this.isInvalid = e),
            this.$control_input.prop("required", e),
            this.$input.prop("required", !e);
        },
        refreshClasses: function () {
          const e = this;
          const t = e.isFull();
          const n = e.isLocked;
          e.$wrapper.toggleClass("rtl", e.rtl),
            e.$control
              .toggleClass("focus", e.isFocused)
              .toggleClass("disabled", e.isDisabled)
              .toggleClass("required", e.isRequired)
              .toggleClass("invalid", e.isInvalid)
              .toggleClass("locked", n)
              .toggleClass("full", t)
              .toggleClass("not-full", !t)
              .toggleClass("input-active", e.isFocused && !e.isInputHidden)
              .toggleClass("dropdown-active", e.isOpen)
              .toggleClass("has-options", !w.isEmptyObject(e.options))
              .toggleClass("has-items", e.items.length > 0),
            e.$control_input.data("grow", !t && !n);
        },
        isFull: function () {
          return (
            this.settings.maxItems !== null &&
            this.items.length >= this.settings.maxItems
          );
        },
        updateOriginalInput: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = this;
          if (((e = e || {}), o.tagType === x)) {
            for (i = [], t = 0, n = o.items.length; t < n; t++) {
              (r = o.options[o.items[t]][o.settings.labelField] || ""),
                i.push(
                  '<option value="' +
                    j(o.items[t]) +
                    '" selected="selected">' +
                    j(r) +
                    "</option>",
                );
            }
            i.length ||
              this.$input.attr("multiple") ||
              i.push('<option value="" selected="selected"></option>'),
              o.$input.html(i.join(""));
          } else {
            o.$input.val(o.getValue()), o.$input.attr("value", o.$input.val());
          }
          o.isSetup && (e.silent || o.trigger("change", o.$input.val()));
        },
        updatePlaceholder: function () {
          if (this.settings.placeholder) {
            const e = this.$control_input;
            this.items.length
              ? e.removeAttr("placeholder")
              : e.attr("placeholder", this.settings.placeholder),
              e.triggerHandler("update", { force: !0 });
          }
        },
        open: function () {
          const e = this;
          e.isLocked ||
            e.isOpen ||
            (e.settings.mode === "multi" && e.isFull()) ||
            (e.focus(),
            (e.isOpen = !0),
            e.refreshState(),
            e.$dropdown.css({ visibility: "hidden", display: "block" }),
            e.positionDropdown(),
            e.$dropdown.css({ visibility: "visible" }),
            e.trigger("dropdown_open", e.$dropdown));
        },
        close: function () {
          const e = this;
          const t = e.isOpen;
          e.settings.mode === "single" &&
            e.items.length &&
            (e.hideInput(), e.isBlurring || e.$control_input.blur()),
            (e.isOpen = !1),
            e.$dropdown.hide(),
            e.setActiveOption(null),
            e.refreshState(),
            t && e.trigger("dropdown_close", e.$dropdown);
        },
        positionDropdown: function () {
          const e = this.$control;
          const t =
            this.settings.dropdownParent === "body" ? e.offset() : e.position();
          (t.top += e.outerHeight(!0)),
            this.$dropdown.css({
              width: e[0].getBoundingClientRect().width,
              top: t.top,
              left: t.left,
            });
        },
        clear: function (e) {
          const t = this;
          t.items.length &&
            (t.$control.children(":not(input)").remove(),
            (t.items = []),
            (t.lastQuery = null),
            t.setCaret(0),
            t.setActiveItem(null),
            t.updatePlaceholder(),
            t.updateOriginalInput({ silent: e }),
            t.refreshState(),
            t.showInput(),
            t.trigger("clear"));
        },
        insertAtCaret: function (e) {
          const t = Math.min(this.caretPos, this.items.length);
          const n = e[0];
          const i = this.buffer || this.$control[0];
          t === 0
            ? i.insertBefore(n, i.firstChild)
            : i.insertBefore(n, i.childNodes[t]),
            this.setCaret(t + 1);
        },
        deleteSelection: function (e) {
          let t;
          let n;
          let i;
          let r;
          let o;
          let s;
          let a;
          let l;
          let c;
          const u = this;
          if (
            ((i = e && e.keyCode === f ? -1 : 1),
            (r = A(u.$control_input[0])),
            u.$activeOption &&
              !u.settings.hideSelected &&
              (a = u.getAdjacentOption(u.$activeOption, -1).attr("data-value")),
            (o = []),
            u.$activeItems.length)
          ) {
            for (
              c = u.$control.children(".active:" + (i > 0 ? "last" : "first")),
                s = u.$control.children(":not(input)").index(c),
                i > 0 && s++,
                t = 0,
                n = u.$activeItems.length;
              t < n;
              t++
            ) {
              o.push(w(u.$activeItems[t]).attr("data-value"));
            }
            e && (e.preventDefault(), e.stopPropagation());
          } else {
            (u.isFocused || u.settings.mode === "single") &&
              u.items.length &&
              (i < 0 && r.start === 0 && r.length === 0
                ? o.push(u.items[u.caretPos - 1])
                : i > 0 &&
                  r.start === u.$control_input.val().length &&
                  o.push(u.items[u.caretPos]));
          }
          if (
            !o.length ||
            (typeof u.settings.onDelete === "function" &&
              !1 === u.settings.onDelete.apply(u, [o]))
          ) {
            return !1;
          }
          for (void 0 !== s && u.setCaret(s); o.length; ) u.removeItem(o.pop());
          return (
            u.showInput(),
            u.positionDropdown(),
            u.refreshOptions(!0),
            a && (l = u.getOption(a)).length && u.setActiveOption(l),
            !0
          );
        },
        advanceSelection: function (e, t) {
          let n;
          let i;
          let r;
          let o;
          let s;
          const a = this;
          e !== 0 &&
            (a.rtl && (e *= -1),
            (n = e > 0 ? "last" : "first"),
            (i = A(a.$control_input[0])),
            a.isFocused && !a.isInputHidden
              ? ((o = a.$control_input.val().length),
                (e < 0 ? i.start === 0 && i.length === 0 : i.start === o) &&
                  !o &&
                  a.advanceCaret(e, t))
              : (s = a.$control.children(".active:" + n)).length &&
                ((r = a.$control.children(":not(input)").index(s)),
                a.setActiveItem(null),
                a.setCaret(e > 0 ? r + 1 : r)));
        },
        advanceCaret: function (e, t) {
          let n;
          let i;
          const r = this;
          e !== 0 &&
            ((n = e > 0 ? "next" : "prev"),
            r.isShiftDown
              ? (i = r.$control_input[n]()).length &&
                (r.hideInput(), r.setActiveItem(i), t && t.preventDefault())
              : r.setCaret(r.caretPos + e));
        },
        setCaret: function (e) {
          let t;
          let n;
          let i;
          let r;
          const o = this;
          if (
            ((e =
              o.settings.mode === "single"
                ? o.items.length
                : Math.max(0, Math.min(o.items.length, e))),
            !o.isPending)
          ) {
            for (
              t = 0, n = (i = o.$control.children(":not(input)")).length;
              t < n;
              t++
            ) {
              (r = w(i[t]).detach()),
                t < e ? o.$control_input.before(r) : o.$control.append(r);
            }
          }
          o.caretPos = e;
        },
        lock: function () {
          this.close(), (this.isLocked = !0), this.refreshState();
        },
        unlock: function () {
          (this.isLocked = !1), this.refreshState();
        },
        disable: function () {
          const e = this;
          e.$input.prop("disabled", !0),
            e.$control_input.prop("disabled", !0).prop("tabindex", -1),
            (e.isDisabled = !0),
            e.lock();
        },
        enable: function () {
          const e = this;
          e.$input.prop("disabled", !1),
            e.$control_input.prop("disabled", !1).prop("tabindex", e.tabIndex),
            (e.isDisabled = !1),
            e.unlock();
        },
        destroy: function () {
          const e = this;
          const t = e.eventNS;
          const n = e.revertSettings;
          e.trigger("destroy"),
            e.off(),
            e.$wrapper.remove(),
            e.$dropdown.remove(),
            e.$input
              .html("")
              .append(n.$children)
              .removeAttr("tabindex")
              .removeClass("selectized")
              .attr({ tabindex: n.tabindex })
              .show(),
            e.$control_input.removeData("grow"),
            e.$input.removeData("selectize"),
            --H.count == 0 &&
              H.$testInput &&
              (H.$testInput.remove(), (H.$testInput = undefined)),
            w(window).off(t),
            w(document).off(t),
            w(document.body).off(t),
            delete e.$input[0].selectize;
        },
        render: function (e, t) {
          let n;
          let i;
          let r = "";
          let o = !1;
          const s = this;
          return (
            (e !== "option" && e !== "item") ||
              (o = !!(n = D(t[s.settings.valueField]))),
            o &&
            (T(s.renderCache[e]) || (s.renderCache[e] = {}),
            s.renderCache[e].hasOwnProperty(n))
              ? s.renderCache[e][n]
              : ((r = w(s.settings.render[e].apply(this, [t, j]))),
                e === "option" || e === "option_create"
                  ? t[s.settings.disabledField] || r.attr("data-selectable", "")
                  : e === "optgroup" &&
                    ((i = t[s.settings.optgroupValueField] || ""),
                    r.attr("data-group", i),
                    t[s.settings.disabledField] && r.attr("data-disabled", "")),
                (e !== "option" && e !== "item") ||
                  r.attr("data-value", n || ""),
                o && (s.renderCache[e][n] = r[0]),
                r[0])
          );
        },
        clearCache: function (e) {
          const t = this;
          void 0 === e ? (t.renderCache = {}) : delete t.renderCache[e];
        },
        canCreate: function (e) {
          const t = this;
          if (!t.settings.create) return !1;
          const n = t.settings.createFilter;
          return (
            e.length &&
            (typeof n !== "function" || n.apply(t, [e])) &&
            (typeof n !== "string" || new RegExp(n).test(e)) &&
            (!(n instanceof RegExp) || n.test(e))
          );
        },
      }),
      (H.count = 0),
      (H.defaults = {
        options: [],
        optgroups: [],
        plugins: [],
        delimiter: ",",
        splitOn: null,
        persist: !0,
        diacritics: !0,
        create: !1,
        createOnBlur: !1,
        createFilter: null,
        highlight: !0,
        openOnFocus: !0,
        maxOptions: 1e3,
        maxItems: null,
        hideSelected: null,
        addPrecedence: !1,
        selectOnTab: !1,
        preload: !1,
        allowEmptyOption: !1,
        closeAfterSelect: !1,
        scrollDuration: 60,
        loadThrottle: 300,
        loadingClass: "loading",
        dataAttr: "data-data",
        optgroupField: "optgroup",
        valueField: "value",
        labelField: "text",
        disabledField: "disabled",
        optgroupLabelField: "label",
        optgroupValueField: "value",
        lockOptgroupOrder: !1,
        sortField: "$order",
        searchField: ["text"],
        searchConjunction: "and",
        mode: null,
        wrapperClass: "selectize-control",
        inputClass: "selectize-input",
        dropdownClass: "selectize-dropdown",
        dropdownContentClass: "selectize-dropdown-content",
        dropdownParent: null,
        copyClassesToDropdown: !0,
        render: {},
      }),
      (w.fn.selectize = function (r) {
        const o = w.fn.selectize.defaults;
        const d = w.extend({}, o, r);
        const h = d.dataAttr;
        const p = d.labelField;
        const f = d.valueField;
        const g = d.disabledField;
        const m = d.optgroupField;
        const v = d.optgroupLabelField;
        const y = d.optgroupValueField;
        const s = function (e, t) {
          let n;
          let i;
          let r;
          let o;
          const s = e.attr(h);
          if (s) {
            for (
              t.options = JSON.parse(s), n = 0, i = t.options.length;
              n < i;
              n++
            ) {
              t.items.push(t.options[n][f]);
            }
          } else {
            const a = w.trim(e.val() || "");
            if (!d.allowEmptyOption && !a.length) return;
            for (n = 0, i = (r = a.split(d.delimiter)).length; n < i; n++) {
              ((o = {})[p] = r[n]), (o[f] = r[n]), t.options.push(o);
            }
            t.items = r;
          }
        };
        const a = function (e, s) {
          let t;
          let n;
          let i;
          let r;
          const o = s.options;
          const a = {};
          const l = function (e) {
            const t = h && e.attr(h);
            return typeof t === "string" && t.length ? JSON.parse(t) : null;
          };
          const c = function (e, t) {
            e = w(e);
            const n = D(e.val());
            if (n || d.allowEmptyOption) {
              if (a.hasOwnProperty(n)) {
                if (t) {
                  const i = a[n][m];
                  i
                    ? w.isArray(i)
                      ? i.push(t)
                      : (a[n][m] = [i, t])
                    : (a[n][m] = t);
                }
              } else {
                const r = l(e) || {};
                (r[p] = r[p] || e.text()),
                  (r[f] = r[f] || n),
                  (r[g] = r[g] || e.prop("disabled")),
                  (r[m] = r[m] || t),
                  (a[n] = r),
                  o.push(r),
                  e.is(":selected") && s.items.push(n);
              }
            }
          };
          const u = function (e) {
            let t, n, i, r, o;
            for (
              (i = (e = w(e)).attr("label")) &&
                (((r = l(e) || {})[v] = i),
                (r[y] = i),
                (r[g] = e.prop("disabled")),
                s.optgroups.push(r)),
                t = 0,
                n = (o = w("option", e)).length;
              t < n;
              t++
            ) {
              c(o[t], i);
            }
          };
          for (
            s.maxItems = e.attr("multiple") ? null : 1,
              t = 0,
              n = (r = e.children()).length;
            t < n;
            t++
          ) {
            (i = r[t].tagName.toLowerCase()) === "optgroup"
              ? u(r[t])
              : i === "option" && c(r[t]);
          }
        };
        return this.each(function () {
          if (!this.selectize) {
            const e = w(this);
            const t = this.tagName.toLowerCase();
            let n = e.attr("placeholder") || e.attr("data-placeholder");
            n ||
              d.allowEmptyOption ||
              (n = e.children('option[value=""]').text());
            const i = { placeholder: n, options: [], optgroups: [], items: [] };
            t === "select" ? a(e, i) : s(e, i),
              new H(e, w.extend(!0, {}, o, i, r));
          }
        });
      }),
      (w.fn.selectize.defaults = H.defaults),
      (w.fn.selectize.support = { validity: S }),
      H.define("drag_drop", function () {
        if (!w.fn.sortable) {
          throw new Error(
            'The "drag_drop" plugin requires jQuery UI "sortable".',
          );
        }
        if (this.settings.mode === "multi") {
          let t;
          let n;
          let e;
          const i = this;
          (i.lock =
            ((t = i.lock),
            function () {
              const e = i.$control.data("sortable");
              return e && e.disable(), t.apply(i, arguments);
            })),
            (i.unlock =
              ((n = i.unlock),
              function () {
                const e = i.$control.data("sortable");
                return e && e.enable(), n.apply(i, arguments);
              })),
            (i.setup =
              ((e = i.setup),
              function () {
                e.apply(this, arguments);
                var n = i.$control.sortable({
                  items: "[data-value]",
                  forcePlaceholderSize: !0,
                  disabled: i.isLocked,
                  start: function (e, t) {
                    t.placeholder.css("width", t.helper.css("width")),
                      n.css({ overflow: "visible" });
                  },
                  stop: function () {
                    n.css({ overflow: "hidden" });
                    const e = i.$activeItems ? i.$activeItems.slice() : null;
                    const t = [];
                    n.children("[data-value]").each(function () {
                      t.push(w(this).attr("data-value"));
                    }),
                      i.setValue(t),
                      i.setActiveItem(e);
                  },
                });
              }));
        }
      }),
      H.define("dropdown_header", function (e) {
        let t;
        const n = this;
        (e = w.extend(
          {
            title: "Untitled",
            headerClass: "selectize-dropdown-header",
            titleRowClass: "selectize-dropdown-header-title",
            labelClass: "selectize-dropdown-header-label",
            closeClass: "selectize-dropdown-header-close",
            html: function (e) {
              return (
                '<div class="' +
                e.headerClass +
                '"><div class="' +
                e.titleRowClass +
                '"><span class="' +
                e.labelClass +
                '">' +
                e.title +
                '</span><a href="javascript:void(0)" class="' +
                e.closeClass +
                '">&times;</a></div></div>'
              );
            },
          },
          e,
        )),
          (n.setup =
            ((t = n.setup),
            function () {
              t.apply(n, arguments),
                (n.$dropdown_header = w(e.html(e))),
                n.$dropdown.prepend(n.$dropdown_header);
            }));
      }),
      H.define("optgroup_columns", function (a) {
        let o;
        const l = this;
        (a = w.extend({ equalizeWidth: !0, equalizeHeight: !0 }, a)),
          (this.getAdjacentOption = function (e, t) {
            const n = e.closest("[data-group]").find("[data-selectable]");
            const i = n.index(e) + t;
            return i >= 0 && i < n.length ? n.eq(i) : w();
          }),
          (this.onKeyDown =
            ((o = l.onKeyDown),
            function (e) {
              let t, n, i, r;
              return !this.isOpen || (e.keyCode !== u && e.keyCode !== d)
                ? o.apply(this, arguments)
                : ((l.ignoreHover = !0),
                  (t = (r = this.$activeOption.closest("[data-group]"))
                    .find("[data-selectable]")
                    .index(this.$activeOption)),
                  void (
                    (n = (i = (r =
                      e.keyCode === u
                        ? r.prev("[data-group]")
                        : r.next("[data-group]")).find("[data-selectable]")).eq(
                      Math.min(i.length - 1, t),
                    )).length && this.setActiveOption(n)
                  ));
            }));
        const c = function () {
          let e;
          let t = c.width;
          const n = document;
          return (
            void 0 === t &&
              (((e = n.createElement("div")).innerHTML =
                '<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>'),
              (e = e.firstChild),
              n.body.appendChild(e),
              (t = c.width = e.offsetWidth - e.clientWidth),
              n.body.removeChild(e)),
            t
          );
        };
        const e = function () {
          let e, t, n, i, r, o, s;
          if (
            (t = (s = w("[data-group]", l.$dropdown_content)).length) &&
            l.$dropdown_content.width()
          ) {
            if (a.equalizeHeight) {
              for (e = n = 0; e < t; e++) n = Math.max(n, s.eq(e).height());
              s.css({ height: n });
            }
            a.equalizeWidth &&
              ((o = l.$dropdown_content.innerWidth() - c()),
              (i = Math.round(o / t)),
              s.css({ width: i }),
              t > 1 && ((r = o - i * (t - 1)), s.eq(t - 1).css({ width: r })));
          }
        };
        (a.equalizeHeight || a.equalizeWidth) &&
          (t.after(this, "positionDropdown", e),
          t.after(this, "refreshOptions", e));
      }),
      H.define("remove_button", function (e) {
        e = w.extend(
          {
            label: "&times;",
            title: "Remove",
            className: "remove",
            append: !0,
          },
          e,
        );
        const t = function (n, i) {
          i.className = "remove-single";
          let r;
          const o = n;
          const s =
            '<a href="javascript:void(0)" class="' +
            i.className +
            '" tabindex="-1" title="' +
            j(i.title) +
            '">' +
            i.label +
            "</a>";
          const a = function (e, t) {
            return w("<span>").append(e).append(t);
          };
          n.setup =
            ((r = o.setup),
            function () {
              if (i.append) {
                const e = w(o.$input.context).attr("id");
                const t = (w("#" + e), o.settings.render.item);
                o.settings.render.item = function (e) {
                  return a(t.apply(n, arguments), s);
                };
              }
              r.apply(n, arguments),
                n.$control.on("click", "." + i.className, function (e) {
                  e.preventDefault(), o.isLocked || o.clear();
                });
            });
        };
        const n = function (n, e) {
          let i;
          const r = n;
          const o =
            '<a href="javascript:void(0)" class="' +
            e.className +
            '" tabindex="-1" title="' +
            j(e.title) +
            '">' +
            e.label +
            "</a>";
          const s = function (e, t) {
            const n = e.search(/(<\/[^>]+>\s*)$/);
            return e.substring(0, n) + t + e.substring(n);
          };
          n.setup =
            ((i = r.setup),
            function () {
              if (e.append) {
                const t = r.settings.render.item;
                r.settings.render.item = function (e) {
                  return s(t.apply(n, arguments), o);
                };
              }
              i.apply(n, arguments),
                n.$control.on("click", "." + e.className, function (e) {
                  if ((e.preventDefault(), !r.isLocked)) {
                    const t = w(e.currentTarget).parent();
                    r.setActiveItem(t),
                      r.deleteSelection() && r.setCaret(r.items.length);
                  }
                });
            });
        };
        this.settings.mode !== "single" ? n(this, e) : t(this, e);
      }),
      H.define("restore_on_backspace", function (i) {
        let r;
        const e = this;
        (i.text =
          i.text ||
          function (e) {
            return e[this.settings.labelField];
          }),
          (this.onKeyDown =
            ((r = e.onKeyDown),
            function (e) {
              let t, n;
              return e.keyCode === f &&
                this.$control_input.val() === "" &&
                !this.$activeItems.length &&
                (t = this.caretPos - 1) >= 0 &&
                t < this.items.length
                ? ((n = this.options[this.items[t]]),
                  this.deleteSelection(e) &&
                    (this.setTextboxValue(i.text.apply(this, [n])),
                    this.refreshOptions(!0)),
                  void e.preventDefault())
                : r.apply(this, arguments);
            }));
      }),
      H
    );
  }),
  $(document).on("ready", function () {
    $("#datepicker").datepicker;
  }),
  $(document).on("ready", function () {
    $(".datepicker").datepicker();
  }),
  $(document).on("ready", function () {
    $("#timepicker").datetimepicker();
  }),
  $(document).on("ready", function () {
    $(".timepicker").datetimepicker();
  }),
  $(document).on("ready", function () {
    $("#datetimepicker").datetimepicker({ dateFormat: "yy-mm-dd", ampm: !0 });
  }),
  $(document).on("ready", function () {
    $(".datetimepicker").datetimepicker({ dateFormat: "yy-mm-dd", ampm: !0 });
  }),
  $(document).on("ready", function () {
    $(".pmdatetimepicker").datetimepicker({
      dateFormat: "D yy-mm-dd",
      timeFormat: "hh:mm TT",
      hours12: !0,
    });
  }),
  jQuery(function (e) {
    e.extend(e.fn.datetimepicker.defaults, {
      dateFormat: "D yy-mm-dd",
      timeFormat: "hh:mm TT",
      hours12: !0,
    });
  }),
  jQuery(function (e) {
    e.extend(e.fn.datepicker.defaults, { dateFormat: "mm-dd-yy" });
  }),
  $(document).ready(function () {
    jQuery(".best_in_place").best_in_place();
  });
